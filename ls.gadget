Gadgets information
============================================================
0x0000000000157218 : adc ah, byte ptr [rbp + rbp*8 - 0x125bed01] ; call qword ptr [rdx]
0x0000000000171e4d : adc al, 0 ; add byte ptr [rax + 0x7b], al ; std ; call qword ptr [rcx]
0x000000000012271f : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000044c42 : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x491e
0x0000000000122789 : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000017d500 : adc al, 0 ; add byte ptr [rax], al ; cld ; retf 0
0x000000000017cdf0 : adc al, 0 ; add byte ptr [rax], al ; in al, dx ; ret
0x000000000017d470 : adc al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; retf 0
0x00000000001909c0 : adc al, 0 ; add byte ptr [rax], al ; mov esp, 0xb80001ff ; ret 0xfff8
0x000000000017e910 : adc al, 0 ; add byte ptr [rax], al ; or al, 0xdf ; add byte ptr [rax], al ; pop rax ; retf
0x000000000017e958 : adc al, 0 ; add byte ptr [rax], al ; push rsp ; fild word ptr [rax] ; add al, ah ; retf
0x000000000017d458 : adc al, 0 ; add byte ptr [rax], al ; push rsp ; retf 0
0x0000000000179aa0 : adc al, 0 ; add byte ptr [rax], al ; pushfq ; nop ; add byte ptr [rax], al ; clc ; ret
0x000000000017d4a0 : adc al, 0 ; add byte ptr [rax], al ; pushfq ; retf 0
0x000000000017cc50 : adc al, 0 ; add byte ptr [rax], al ; ret 0
0x000000000017d548 : adc al, 0 ; add byte ptr [rax], al ; retf
0x00000000000e10aa : adc al, 0 ; add byte ptr [rax], al ; syscall
0x0000000000080de8 : adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000001fa70 : adc al, 0 ; mov eax, 2 ; syscall
0x00000000000203e5 : adc al, 0 ; ret
0x000000000016d128 : adc al, 0x10 ; jmp rsp
0x000000000012c0c5 : adc al, 0x13 ; jmp rdx
0x000000000016eb60 : adc al, 0x14 ; clc ; call rsp
0x000000000008f565 : adc al, 0x16 ; sub eax, edx ; ret
0x000000000018241c : adc al, 0x1a ; add dword ptr [rax], eax ; adc byte ptr [rdi], bh ; cmc ; call rdi
0x000000000015dfb0 : adc al, 0x1e ; cmc ; call rsp
0x000000000007a544 : adc al, 0x24 ; call 0x76ff4
0x000000000016fa70 : adc al, 0x24 ; cli ; jmp rsp
0x00000000000d4209 : adc al, 0x24 ; mov rsi, rbx ; call r14
0x000000000015dd88 : adc al, 0x25 ; cmc ; jmp qword ptr [rsi]
0x0000000000035910 : adc al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x00000000000023d0 : adc al, 0x2d ; retf
0x0000000000098583 : adc al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x0000000000076745 : adc al, 0x30 ; ret
0x000000000018441c : adc al, 0x3a ; add dword ptr [rax], eax ; xor al, bl ; cmc ; jmp qword ptr [rcx]
0x0000000000170498 : adc al, 0x3c ; sti ; jmp rsp
0x000000000016cf08 : adc al, 0x3d ; call rsp
0x0000000000184d1c : adc al, 0x43 ; add dword ptr [rax], eax ; sar cl, 0xf5 ; jmp qword ptr [rcx]
0x0000000000095cc0 : adc al, 0x48 ; lea eax, dword ptr [rdi + 0x14] ; ret
0x0000000000096b13 : adc al, 0x48 ; lea eax, dword ptr [rdi + 0x15] ; ret
0x000000000008f11b : adc al, 0x48 ; lea eax, dword ptr [rdi + rax + 0x30] ; ret
0x00000000000202d6 : adc al, 0x48 ; mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000002221d : adc al, 0x48 ; mov esi, ebx ; mov rdi, r15 ; call 0x7ec49
0x000000000017531c : adc al, 0x49 ; add byte ptr [rax], al ; and ah, dh ; in al, dx ; jmp rcx
0x000000000018591c : adc al, 0x4f ; add dword ptr [rax], eax ; nop ; sbb al, 0xf6 ; jmp qword ptr [rcx]
0x000000000016ed68 : adc al, 0x63 ; clc ; call rsp
0x000000000018821c : adc al, 0x78 ; add dword ptr [rax], eax ; sal esi, 1 ; jmp qword ptr [rsi]
0x0000000000051405 : adc al, 0x85 ; add byte ptr [rax], 0 ; add byte ptr [rcx + 0x63], cl ; ret
0x000000000010c220 : adc al, 0x88 ; add rdx, r8 ; jmp rdx
0x000000000002e735 : adc al, 0x89 ; ror dword ptr [rdi], cl ; retf
0x000000000006c26e : adc al, 0x8a ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000010c54b : adc al, 0x8b ; push rbx ; xor byte ptr [rdi], cl ; retf 0x5089
0x00000000000abfc9 : adc al, 0x8f ; add rdx, rdi ; jmp rdx
0x00000000000aeb6a : adc al, 0x90 ; add rdx, r8 ; jmp rdx
0x00000000000664bd : adc al, 0x91 ; add rdx, rcx ; jmp rdx
0x0000000000123bb0 : adc al, 0x91 ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00000000001222de : adc al, 0x91 ; sub eax, edx ; ret
0x000000000003119f : adc al, 0x92 ; add rdx, r10 ; jmp rdx
0x000000000012c0c1 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000000ced3e : adc al, 0x94 ; add rdx, r12 ; jmp rdx
0x000000000016fdc0 : adc al, 0x94 ; cli ; jmp rsp
0x0000000000066400 : adc al, 0x96 ; add rdx, rsi ; jmp rdx
0x0000000000030eb8 : adc al, 0x97 ; add rdx, rdi ; jmp rdx
0x000000000007ecc7 : adc al, 0xa ; jmp r10
0x000000000008f6d3 : adc al, 0xa ; sub eax, edx ; ret
0x000000000016f6a0 : adc al, 0xa8 ; stc ; jmp rsp
0x00000000000ec164 : adc al, 0xb2 ; add eax, dword ptr [rdx + rcx] ; ret
0x00000000000b0c8a : adc al, 0xb8 ; add rdx, r8 ; jmp rdx
0x000000000016bf88 : adc al, 0xb8 ; out dx, eax ; call rsp
0x0000000000170038 : adc al, 0xc3 ; cli ; dec dword ptr [rbp + rax*2 + 2] ; add ah, dl ; ret
0x0000000000033904 : adc al, 0xc7 ; xor eax, eax ; ret
0x000000000017d51c : adc al, 0xcb ; add byte ptr [rax], al ; and bl, ch ; int1 ; call qword ptr [rdx]
0x000000000017d81c : adc al, 0xce ; add byte ptr [rax], al ; loopne 0x17d842 ; call qword ptr [rdx]
0x000000000017d81c : adc al, 0xce ; add byte ptr [rax], al ; loopne 0x17d843 ; call qword ptr [rdx]
0x0000000000083edf : adc al, 0xe ; cmp rdi, rdx ; jb 0x83ef2 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000a7a12 : adc al, 0xe ; jne 0xa7a0d ; ret
0x00000000001203f1 : adc al, 0xe ; sub eax, edx ; ret
0x00000000000dac18 : adc al, 0xe3 ; std ; dec dword ptr [rax - 0x7d] ; retf -0x7601
0x000000000016c0a8 : adc al, 0xe4 ; out dx, eax ; jmp rsp
0x0000000000002b8f : adc al, 0xe7 ; ret
0x00000000001498d1 : adc al, 0xe8 ; test rdx, rdx ; je 0x1498e1 ; call rdx
0x000000000015df1c : adc al, 0xf ; cmc ; call rsp
0x000000000010c3fd : adc al, 0xf ; retf -0x2e77
0x0000000000096689 : adc al, 0xf ; test dword ptr [rax + 7], edx ; add byte ptr [rax], al ; ret
0x0000000000188040 : adc al, 0xf6 ; jmp qword ptr [rsi]
0x000000000006a27b : adc al, 0xf6 ; ret 0x7420
0x000000000018011c : adc al, 0xf7 ; add byte ptr [rax], al ; mov al, 0x90 ; jmp qword ptr [rcx]
0x000000000016eb61 : adc al, 0xf8 ; call rsp
0x0000000000170341 : adc al, 0xfb ; jmp rsp
0x000000000018091c : adc al, 0xff ; add byte ptr [rax], al ; jo 0x18093b ; hlt ; jmp qword ptr [rdx]
0x00000000001494d8 : adc al, 1 ; add byte ptr [rax], al ; ret
0x00000000000e966d : adc al, 1 ; add byte ptr [rax], al ; syscall
0x0000000000190f1c : adc al, 5 ; add al, byte ptr [rax] ; add ch, bl ; clc ; call qword ptr [rdi]
0x00000000000f2e8c : adc al, 7 ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000008eb05 : adc al, 7 ; je 0x8eb05 ; ret
0x000000000008ea32 : adc al, 7 ; test dl, dl ; jne 0x8ea2f ; ret
0x00000000001933e4 : adc al, 8 ; add byte ptr [rax], al ; retf
0x000000000019131c : adc al, 9 ; add al, byte ptr [rax] ; out -8, eax ; call qword ptr [rcx]
0x000000000003ef01 : adc al, 9 ; ret 0x9d74
0x0000000000003cd3 : adc al, bh ; sub al, 0x58 ; mov esi, 0xcf8cb236 ; retf
0x00000000001228c7 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000122931 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000007b20 : adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x26
0x00000000000075f8 : adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 4
0x00000000000085a0 : adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000000d9f3d : adc al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000087dfe : adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000007ba : adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x000000000002c9ff : adc al, byte ptr [rax] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000030eb4 : adc al, byte ptr [rax] ; movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x00000000000e077c : adc al, byte ptr [rbx - 0x7bf0cf1f] ; ret 0xfffe
0x00000000000911b4 : adc al, byte ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x000000000008396a : adc al, byte ptr [rsi] ; or al, 0 ; ret
0x0000000000127d2f : adc al, byte ptr cs:[rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000009e2d7 : adc al, ch ; ret
0x00000000000cca28 : adc al, ch ; ret 0xff68
0x000000000011a380 : adc al, ch ; retf -0x99e
0x000000000011e78c : adc al, dh ; dec dword ptr [rax - 0x77] ; ret
0x000000000011da5a : adc bh, byte ptr [rax + 3] ; syscall
0x0000000000003b0b : adc bh, byte ptr [rax] ; cwde ; ret
0x000000000015e48c : adc bh, byte ptr [rbp + rsi*8 - 0xa43e301] ; jmp qword ptr [rsi]
0x000000000009ad20 : adc bh, byte ptr [rbx] ; ja 0x9ad34 ; cmove rax, rcx ; ret
0x00000000000ccde5 : adc bh, dh ; ret 0x30f
0x00000000000fed57 : adc bh, dh ; ret 0x8080
0x000000000007e43a : adc bh, dh ; ror byte ptr [rax + 0x63], cl ; ror byte ptr [rax + 0x21], cl ; retf 0x3948
0x000000000017cfa0 : adc bh, dl ; int1 ; call rsi
0x000000000007bd7c : adc bl, al ; nop ; xor eax, eax ; ret
0x0000000000032a88 : adc bl, bl ; insb byte ptr [rdi], dx ; and al, 8 ; ret
0x0000000000084675 : adc bl, ch ; call 0xffffffffc3d8cfca
0x000000000007e9a5 : adc bl, ch ; call 0xffffffffc40072fa
0x00000000000801a5 : adc bl, ch ; call 0xffffffffc4008afa
0x0000000000042782 : adc bl, ch ; jno 0x427d8 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000016d129 : adc bl, dh ; jmp rsp
0x00000000000952a6 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x0000000000094616 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000094687 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000945e7 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000002bcfa : adc bl, dh ; ret
0x00000000000952a5 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x0000000000094615 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000171078 : adc bpl, bl ; call rsp
0x0000000000072d36 : adc byte ptr [r11 + 6], r14b ; movzx eax, byte ptr [rax] ; ret
0x000000000014a57d : adc byte ptr [r13 + 0x5b0575c0], r8b ; ret
0x00000000000f55c1 : adc byte ptr [r13 - 0xcf68a40], r8b ; ret
0x000000000007e412 : adc byte ptr [r15], cl ; mov dh, 0xc ; adc dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x00000000000d2057 : adc byte ptr [r15], r9b ; ret 0xfc3
0x00000000000c345c : adc byte ptr [r8 + 0x39], cl ; ret 0xe574
0x000000000011f367 : adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x00000000000f9128 : adc byte ptr [r8 + 1], cl ; retf 0x3948
0x0000000000054ea9 : adc byte ptr [r8 - 0x77], cl ; ret 0x348
0x000000000013e98a : adc byte ptr [r8 - 0x77], cl ; retf -0x7cb8
0x0000000000075faf : adc byte ptr [r8 - 0x77], r9b ; ret 0xf8b
0x00000000000bcfd5 : adc byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000029133 : adc byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x00000000000984fc : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x000000000009851e : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x000000000009855c : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000985de : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x000000000006d4f2 : adc byte ptr [r9 + 0x2b], r9b ; or byte ptr [r8 + 0x29], r9b ; ret
0x0000000000021b38 : adc byte ptr [r9], dil ; adc byte ptr [rax + 0xf], cl ; ret
0x00000000000e9878 : adc byte ptr [rax + 0x130], bh ; syscall
0x00000000000e1048 : adc byte ptr [rax + 0x13], bh ; syscall
0x00000000000e10a8 : adc byte ptr [rax + 0x14], bh ; syscall
0x00000000000e4748 : adc byte ptr [rax + 0x1a], bh ; syscall
0x00000000000b8208 : adc byte ptr [rax + 0x22], bh ; syscall
0x00000000000b8268 : adc byte ptr [rax + 0x23], bh ; syscall
0x000000000009443a : adc byte ptr [rax + 0x29], cl ; retf -0x72b4
0x00000000000e6cdc : adc byte ptr [rax + 0x29], cl ; retf -0x76b8
0x0000000000094c1a : adc byte ptr [rax + 0x29], cl ; retf 0x394c
0x00000000000e9a18 : adc byte ptr [rax + 0x2a], bh ; syscall
0x00000000000e9988 : adc byte ptr [rax + 0x2b], bh ; syscall
0x000000000010dfd7 : adc byte ptr [rax + 0x31], cl ; ret 0xb70f
0x000000000007d10d : adc byte ptr [rax + 0x33], cl ; push rdi ; or byte ptr [rax + 0x39], cl ; ret 0x6174
0x000000000002708a : adc byte ptr [rax + 0x39], cl ; ret 0x8e0f
0x00000000000c345d : adc byte ptr [rax + 0x39], cl ; ret 0xe574
0x000000000007666b : adc byte ptr [rax + 0x39], cl ; ret 0xef75
0x000000000009d75e : adc byte ptr [rax + 0x39], cl ; ret 0xf48
0x000000000006c342 : adc byte ptr [rax + 0x39], cl ; retf -0x48
0x00000000000e1798 : adc byte ptr [rax + 0x4a], bh ; syscall
0x00000000000e1828 : adc byte ptr [rax + 0x4b], bh ; syscall
0x00000000000dc078 : adc byte ptr [rax + 0x55], bh ; syscall
0x000000000011f368 : adc byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x00000000000cee3e : adc byte ptr [rax + 0x63], cl ; ret
0x0000000000021b3c : adc byte ptr [rax + 0xf], cl ; ret
0x000000000010d2b9 : adc byte ptr [rax + 1], bh ; pop rbx ; ret
0x0000000000110416 : adc byte ptr [rax + 1], bh ; ret
0x00000000000db968 : adc byte ptr [rax + 1], bh ; syscall
0x00000000000994ae : adc byte ptr [rax + 1], cl ; clc ; ret
0x0000000000042dee : adc byte ptr [rax + 1], cl ; ret
0x000000000008f116 : adc byte ptr [rax + 1], cl ; ret 0x147c
0x00000000000f9129 : adc byte ptr [rax + 1], cl ; retf 0x3948
0x00000000001135fd : adc byte ptr [rax + 1], dil ; ret
0x00000000000db6e8 : adc byte ptr [rax + 2], bh ; syscall
0x00000000000dbf28 : adc byte ptr [rax + 3], bh ; syscall
0x000000000007d491 : adc byte ptr [rax + 3], cl ; push rax ; sbb byte ptr [rax + 0x31], cl ; retf -0x76b8
0x00000000000df898 : adc byte ptr [rax + 7], bh ; syscall
0x0000000000112b01 : adc byte ptr [rax + rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000008e38c : adc byte ptr [rax + rcx*4 + 0x14], al ; adc dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x0000000000098704 : adc byte ptr [rax - 0x12cfdfb1], cl ; mov byte ptr [rdi + 0x21], ch ; ret
0x0000000000098602 : adc byte ptr [rax - 0x12cfe7b1], cl ; mov byte ptr [rdi + 0x19], ch ; ret
0x0000000000098580 : adc byte ptr [rax - 0x12cfeba9], cl ; mov byte ptr [rdi + 0x15], ch ; ret
0x000000000011c14b : adc byte ptr [rax - 0x39], cl ; ret
0x00000000000e1a83 : adc byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000ec161 : adc byte ptr [rax - 0x73], cl ; adc al, 0xb2 ; add eax, dword ptr [rdx + rcx] ; ret
0x000000000002bcf3 : adc byte ptr [rax - 0x73], cl ; add al, 0xb7 ; mov eax, dword ptr [rax + rdx] ; ret
0x00000000000ec385 : adc byte ptr [rax - 0x73], cl ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x00000000000202d9 : adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x000000000006bc7e : adc byte ptr [rax - 0x75], cl ; or byte ptr [rax + 0x39], cl ; retf -0x7df1
0x000000000010c542 : adc byte ptr [rax - 0x75], cl ; push rbx ; sub byte ptr [rdi], cl ; retf 0x5089
0x0000000000093ffc : adc byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000029292 : adc byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000006b607 : adc byte ptr [rax - 0x77], cl ; jo 0x6b625 ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000010a9fb : adc byte ptr [rax - 0x77], cl ; out dx, eax ; call r14
0x000000000006b5c7 : adc byte ptr [rax - 0x77], cl ; push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000007a799 : adc byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x41], 1 ; pop rsi ; pop r15 ; ret
0x00000000000b384b : adc byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x0000000000022867 : adc byte ptr [rax - 0x77], cl ; ret
0x0000000000054eaa : adc byte ptr [rax - 0x77], cl ; ret 0x348
0x00000000000f5f86 : adc byte ptr [rax - 0x77], cl ; ret 0x8548
0x00000000000a0af0 : adc byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000007996d : adc byte ptr [rax - 0x77], cl ; ret 0x8d4e
0x000000000010e3c4 : adc byte ptr [rax - 0x77], cl ; ret 0x94c
0x0000000000075fb0 : adc byte ptr [rax - 0x77], cl ; ret 0xf8b
0x00000000000e6df7 : adc byte ptr [rax - 0x77], cl ; retf
0x00000000000f1608 : adc byte ptr [rax - 0x77], cl ; retf -0x76b4
0x0000000000089c5b : adc byte ptr [rax - 0x77], cl ; retf -0x76b8
0x000000000013e98b : adc byte ptr [rax - 0x77], cl ; retf -0x7cb8
0x0000000000149cfa : adc byte ptr [rax - 0x7b], cl ; push qword ptr [rbp - 0xe] ; pop rbx ; ret
0x0000000000149cd8 : adc byte ptr [rax - 0x7b], cl ; push qword ptr [rbp - 0xe] ; ret
0x000000000013b347 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x000000000013b383 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x000000000008fda4 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret 0x13
0x0000000000029069 : adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000028059 : adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000008ee73 : adc byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000026aac : adc byte ptr [rax - 0x7d], cl ; ret 0x4902
0x00000000000e2637 : adc byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000000031e : adc byte ptr [rax - 0x80], bl ; retf 0x4244
0x00000000000db1c5 : adc byte ptr [rax - 1], bh ; pop rbx ; ret
0x00000000000d202b : adc byte ptr [rax - 1], bh ; ret
0x000000000016a354 : adc byte ptr [rax - 4], al ; call qword ptr [rax]
0x000000000009e2a6 : adc byte ptr [rax - 9], cl ; fimul dword ptr [rax + 0x39] ; ret 0xf48
0x00000000000e7702 : adc byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x0000000000171ac5 : adc byte ptr [rax], al ; add al, bh ; jne 0x171abc ; call qword ptr [rdx]
0x000000000005f5b6 : adc byte ptr [rax], al ; add al, ch ; retf 3
0x00000000000e04bb : adc byte ptr [rax], al ; add bl, al ; nop ; xor eax, eax ; ret
0x00000000000645bc : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000001261e8 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf -0x6f9a
0x00000000001205e0 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf -0x7cb7
0x0000000000122372 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x1f0f
0x0000000000120440 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x2e66
0x0000000000124b41 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000122ad1 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000008078 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x45
0x00000000000de174 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000029134 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x00000000000f12c6 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000000e0605 : adc byte ptr [rax], al ; add byte ptr [rax], al ; lea rdx, qword ptr [rsp - 0x30] ; syscall
0x00000000000dbce9 : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x48 ; syscall
0x0000000000036a4c : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000010c1ba : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi + 8], rax ; ret
0x000000000010a945 : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000000991c6 : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000064e34 : adc byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000015fa6d : adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x000000000015fa8d : adc byte ptr [rax], al ; add byte ptr [rax], al ; retf 8
0x00000000000e0908 : adc byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x0000000000081268 : adc byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000f5a73 : adc byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000b9a82 : adc byte ptr [rax], al ; add cl, ch ; retf
0x0000000000136f38 : adc byte ptr [rax], al ; add cl, ch ; retf -2
0x00000000000f1773 : adc byte ptr [rax], al ; je 0xf1786 ; xor eax, eax ; ret
0x000000000003f061 : adc byte ptr [rax], al ; mov eax, 0x38 ; syscall
0x0000000000053559 : adc byte ptr [rax], al ; movsxd rax, dword ptr [rax + rdx*4] ; add rax, rdi ; jmp rax
0x000000000003fade : adc byte ptr [rax], al ; ret
0x00000000000db908 : adc byte ptr [rax], bh ; syscall
0x00000000000984fd : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x000000000009851f : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x000000000009855d : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000985df : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000986e1 : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000775ba : adc byte ptr [rbp + 0x39], cl ; ret
0x000000000014a57e : adc byte ptr [rbp + 0x5b0575c0], al ; ret
0x000000000009566d : adc byte ptr [rbp + rcx*4 + 0x1d], cl ; retf
0x000000000015d274 : adc byte ptr [rbp - 0x6a4f000d], 0xf3 ; jmp rax
0x000000000016aab8 : adc byte ptr [rbp - 0x736f0004], cl ; cld ; call qword ptr [rax]
0x0000000000082c89 : adc byte ptr [rbp - 0x77], cl ; fimul word ptr [rax - 0x77] ; retf
0x00000000000f55c2 : adc byte ptr [rbp - 0xcf68a40], al ; ret
0x000000000009ae32 : adc byte ptr [rbp - 0xd], dh ; ret
0x0000000000077b01 : adc byte ptr [rbx + 0x29480fe0], al ; ret 0x14c
0x0000000000079a15 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000f0822 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r14 ; pop r15 ; ret
0x0000000000028c38 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001751a6 : adc byte ptr [rbx + 0xa760202], al ; ret
0x000000000018aeec : adc byte ptr [rbx + 0xa930202], al ; ret
0x0000000000072d37 : adc byte ptr [rbx + 6], dh ; movzx eax, byte ptr [rax] ; ret
0x000000000017e463 : adc byte ptr [rbx - 0x1ff1b8fe], al ; add dword ptr [rdx], eax ; ret
0x0000000000075c32 : adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000006eee7 : adc byte ptr [rbx - 0x3f7a8fb9], cl ; js 0x6ef01 ; ret
0x0000000000098e80 : adc byte ptr [rbx - 0x6bf0fd06], al ; ret 0x8444
0x000000000016a69c : adc byte ptr [rbx - 0x6d590004], dl ; cld ; call qword ptr [rsi]
0x000000000010428b : adc byte ptr [rbx - 0x73], al ; add dword ptr [rdx], r8d ; pop rbx ; ret
0x000000000016aac8 : adc byte ptr [rbx - 0x756f0004], cl ; cld ; call qword ptr [rax]
0x00000000000f5756 : adc byte ptr [rbx - 0x7d], bl ; loopne 0xf576f ; pop rbp ; pop r12 ; ret
0x000000000014a2ac : adc byte ptr [rbx - 0xd], bl ; ret
0x00000000000b9ecf : adc byte ptr [rbx], al ; add cl, ch ; ret
0x0000000000067e3e : adc byte ptr [rbx], dh ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000006d4f3 : adc byte ptr [rcx + 0x2b], cl ; or byte ptr [r8 + 0x29], r9b ; ret
0x000000000010dfe4 : adc byte ptr [rcx + 0x31], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x0000000000077627 : adc byte ptr [rcx + 0x5c], al ; ret
0x00000000000cc67f : adc byte ptr [rcx + 0x63], cl ; retf -0x72b4
0x00000000000cc67e : adc byte ptr [rcx + 0x63], r9b ; retf -0x72b4
0x000000000017a2bc : adc byte ptr [rcx + 0xa], al ; ret
0x0000000000039b22 : adc byte ptr [rcx + 0xf], cl ; ret
0x0000000000078b8a : adc byte ptr [rcx + rcx*4 + 0x44], cl ; and al, 8 ; call rdx
0x0000000000106e8c : adc byte ptr [rcx + rcx*4 - 0x18], al ; syscall
0x000000000006e447 : adc byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x0000000000098662 : adc byte ptr [rcx - 0x12cfe7b1], cl ; mov byte ptr [rdi + 0x1c], ch ; ret
0x0000000000098642 : adc byte ptr [rcx - 0x12cfe8b1], cl ; mov byte ptr [rdi + 0x1b], ch ; ret
0x0000000000047873 : adc byte ptr [rcx - 0x73], al ; dec byte ptr [r15] ; xchg eax, esp ; ret 0xd284
0x000000000010e4b6 : adc byte ptr [rcx - 0x77], al ; retf 0x4d88
0x0000000000024960 : adc byte ptr [rcx - 0x77], cl ; add ecx, dword ptr [rax - 0x77] ; ret 0x3b89
0x00000000000a0bd0 : adc byte ptr [rcx - 0x77], cl ; retf
0x00000000000a5c0b : adc byte ptr [rcx - 0x7cb7e8f4], cl ; ret 0x4804
0x00000000000a5d2b : adc byte ptr [rcx - 0x7cb7e9f4], cl ; ret 0x4804
0x0000000000077567 : adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x000000000008e2e7 : adc byte ptr [rcx - 0x7d], cl ; call 0xffffffffc3422ffa
0x000000000007cd3b : adc byte ptr [rcx - 0x7d], cl ; ret 0x4920
0x0000000000120473 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000124017 : adc byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000181a25 : adc byte ptr [rcx], al ; add byte ptr [rax - 0x33], bh ; hlt ; jmp rbx
0x00000000000e7703 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000000e96c1 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x00000000000a6b74 : adc byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000021b39 : adc byte ptr [rcx], bh ; adc byte ptr [rax + 0xf], cl ; ret
0x00000000000365ee : adc byte ptr [rcx], ch ; ret 0xc269
0x0000000000125cfe : adc byte ptr [rcx], ch ; ret 0xca39
0x0000000000075c35 : adc byte ptr [rcx], ch ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000028c09 : adc byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000e0efd : adc byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], 0xd7 ; ja 0xe0f39 ; ret
0x00000000000f0f83 : adc byte ptr [rdi + 0x2000004], bh ; call rax
0x000000000015e3d0 : adc byte ptr [rdi - 0x486f000b], dh ; cmc ; call qword ptr [rax]
0x000000000015e3c4 : adc byte ptr [rdi - 0x48df000b], dh ; cmc ; call qword ptr [rax]
0x000000000016afd8 : adc byte ptr [rdi - 0x517f0004], ch ; cld ; jmp rax
0x000000000017fa70 : adc byte ptr [rdi - 0xd], dh ; call rsi
0x000000000018a680 : adc byte ptr [rdi - 9], bl ; call qword ptr [rdi]
0x0000000000182420 : adc byte ptr [rdi], bh ; cmc ; call rdi
0x000000000002c0e5 : adc byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x00000000000f9742 : adc byte ptr [rdi], cl ; mov bh, 0xc6 ; or eax, edi ; bswap eax ; ret
0x000000000007e413 : adc byte ptr [rdi], cl ; mov dh, 0xc ; adc dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x00000000000714c8 : adc byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; pop rbx ; ret
0x00000000000eb372 : adc byte ptr [rdi], cl ; ret 0x66c3
0x00000000000d2058 : adc byte ptr [rdi], cl ; ret 0xfc3
0x000000000010c6fc : adc byte ptr [rdi], cl ; retf -0x2877
0x000000000002e725 : adc byte ptr [rdi], cl ; retf -0x2d77
0x000000000010c3b9 : adc byte ptr [rdi], cl ; retf -0x2e77
0x000000000010c51c : adc byte ptr [rdi], cl ; retf 0x5089
0x000000000010c479 : adc byte ptr [rdi], cl ; retf 0x5389
0x000000000013e428 : adc byte ptr [rdi], cl ; test dword ptr [rcx + 5], eax ; add byte ptr [rax], al ; ret
0x0000000000147603 : adc byte ptr [rdi], cl ; test edx, esi ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000121661 : adc byte ptr [rdi], cl ; xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000121751 : adc byte ptr [rdi], cl ; xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000121571 : adc byte ptr [rdi], cl ; xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000128e8b : adc byte ptr [rdi], cl ; xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000012798f : adc byte ptr [rdi], cl ; xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x0000000000128b8f : adc byte ptr [rdi], cl ; xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000012828f : adc byte ptr [rdi], cl ; xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000012858f : adc byte ptr [rdi], cl ; xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000127c87 : adc byte ptr [rdi], cl ; xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000121fb9 : adc byte ptr [rdi], cl ; xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x0000000000121b11 : adc byte ptr [rdi], cl ; xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x00000000001212a1 : adc byte ptr [rdi], cl ; xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x0000000000121cf1 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000121481 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x0000000000121ed1 : adc byte ptr [rdi], cl ; xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000121de1 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000121723 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000121813 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000121633 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000127f34 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000128b34 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000128e34 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000128534 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000128234 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x0000000000127c2c : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000121391 : adc byte ptr [rdi], cl ; xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x00000000001252bd : adc byte ptr [rdi], cl ; xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001250dd : adc byte ptr [rdi], cl ; xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000125ab5 : adc byte ptr [rdi], cl ; xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001249d5 : adc byte ptr [rdi], cl ; xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001258d5 : adc byte ptr [rdi], cl ; xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000121543 : adc byte ptr [rdi], cl ; xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000121363 : adc byte ptr [rdi], cl ; xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000121453 : adc byte ptr [rdi], cl ; xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000121273 : adc byte ptr [rdi], cl ; xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x00000000000337b3 : adc byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5489
0x000000000003df10 : adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8348
0x00000000000d2d16 : adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8948
0x000000000016a300 : adc byte ptr [rdi], dh ; cld ; call rax
0x0000000000003965 : adc byte ptr [rdx + 0x71], bh ; xchg eax, ebx ; and cl, ah ; ret
0x000000000012c5b9 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016a358 : adc byte ptr [rdx - 4], al ; call qword ptr [rax]
0x0000000000087dfd : adc byte ptr [rdx], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000007b6 : adc byte ptr [rdx], ah ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x000000000010778f : adc byte ptr [rdx], al ; je 0x10779c ; ret
0x000000000016a388 : adc byte ptr [rdx], bh ; cld ; push rax ; cmp edi, esp ; call rax
0x0000000000173f10 : adc byte ptr [rdx], ch ; in al, dx ; jmp qword ptr [rdx]
0x00000000000b4291 : adc byte ptr [rdx], cl ; add byte ptr [rax], al ; add bl, ch ; retf -0x76b8
0x00000000000d4732 : adc byte ptr [rdx], cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000144b7b : adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016a3f0 : adc byte ptr [rip + 0x3ee0fffc], bh ; cld ; jmp rax
0x0000000000144a2a : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret
0x0000000000144025 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000144425 : adc byte ptr [rsi + 0xf], ah ; jmp 0x1443f9
0x00000000001444a3 : adc byte ptr [rsi + 0xf], ah ; jmp 0x144477
0x0000000000144935 : adc byte ptr [rsi + 0xf], ah ; jmp 0x144909
0x00000000001449b3 : adc byte ptr [rsi + 0xf], ah ; jmp 0x144987
0x0000000000145a55 : adc byte ptr [rsi + 0xf], ah ; jmp 0x145a29
0x0000000000145ad3 : adc byte ptr [rsi + 0xf], ah ; jmp 0x145aa7
0x0000000000145f65 : adc byte ptr [rsi + 0xf], ah ; jmp 0x145f39
0x0000000000145fe3 : adc byte ptr [rsi + 0xf], ah ; jmp 0x145fb7
0x0000000000144420 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x1443fe
0x000000000014449e : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x14447c
0x0000000000144930 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x14490e
0x00000000001449ae : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x14498c
0x0000000000145a50 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x145a2e
0x0000000000145ace : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x145aac
0x0000000000145f60 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x145f3e
0x0000000000145fde : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x145fbc
0x000000000007ee15 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x0000000000084b3b : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000000947fb : adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000947fa : adc byte ptr [rsi + 0xf], r12b ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x0000000000185ca0 : adc byte ptr [rsi + rsi*8], dh ; jmp qword ptr [rcx]
0x000000000016aab0 : adc byte ptr [rsi - 0x726f0004], cl ; cld ; call qword ptr [rax]
0x0000000000139abd : adc byte ptr [rsi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000003689a : adc byte ptr [rsp + 8], al ; add rsp, 0x18 ; ret
0x0000000000000453 : adc byte ptr [rsp + rcx], bl ; ret 0x4412
0x000000000016aac0 : adc byte ptr [rsp + rdi*8 - 0x3746f01], cl ; call qword ptr [rax]
0x00000000000a7fda : adc byte ptr [rsp - 0x10], al ; ret
0x0000000000043b5f : adc byte ptr [rsp - 4], al ; ret
0x0000000000043ba5 : adc byte ptr [rsp - 8], al ; ret
0x0000000000127f37 : adc byte ptr es:[rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000016b451 : adc ch, ah ; jmp rsp
0x0000000000176459 : adc ch, bh ; call qword ptr [rax]
0x0000000000171079 : adc ch, bl ; call rsp
0x0000000000191040 : adc ch, bl ; clc ; call rcx
0x00000000000eb0ce : adc ch, byte ptr [rbx] ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x0000000000042695 : adc ch, cl ; imul edi, esi, 0x294cffff ; ret 0xc748
0x000000000015df9d : adc ch, dh ; call rsp
0x000000000015e8a0 : adc ch, dh ; cmc ; jmp rsp
0x00000000000c142a : adc cl, byte ptr [r8 - 0x7d] ; ret
0x000000000008f4f5 : adc cl, byte ptr [rax + 0x29] ; ret
0x00000000000a8a5d : adc cl, byte ptr [rax + 0x29] ; ret 0x6948
0x00000000000a89df : adc cl, byte ptr [rax + 0x29] ; ret 0x8948
0x000000000010e1ce : adc cl, byte ptr [rax + 0x31] ; retf 0x314c
0x0000000000098d53 : adc cl, byte ptr [rax - 0x2f] ; call 0xffffffffc30e1aaf
0x00000000000c2e98 : adc cl, byte ptr [rax - 0x75] ; jp 0xc2eac ; call 0x1f93f
0x000000000007d3a6 : adc cl, byte ptr [rax - 0x77] ; ret 0x348
0x00000000000e2348 : adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x00000000000c142b : adc cl, byte ptr [rax - 0x7d] ; ret
0x000000000007e995 : adc cl, byte ptr [rax - 1] ; ret 0x2288
0x00000000000baaa2 : adc cl, byte ptr [rbp + rcx*4 + 0x48] ; adc ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x000000000010e1e6 : adc cl, byte ptr [rcx + 0x31] ; ret 0xc148
0x00000000000709a4 : adc cl, byte ptr [rdi] ; add byte ptr [rax + 2], bh ; syscall
0x0000000000024bc3 : adc cl, ch ; retf -6
0x0000000000180921 : adc dh, ah ; jmp qword ptr [rdx]
0x000000000016c289 : adc dh, al ; jmp rsp
0x000000000015dd41 : adc dh, ch ; dec dword ptr [rbp + rbx - 0xb] ; jmp qword ptr [rsi]
0x000000000010b0f2 : adc dh, dh ; ret 0x7401
0x0000000000106c9b : adc dh, dh ; ret 0x75df
0x00000000000786ce : adc dh, dh ; ret 0xf0f
0x00000000000022e7 : adc dh, dl ; ret
0x00000000000026be : adc dl, bh ; enter -0x1ee6, -0x4c ; hlt ; out -0x21, eax ; syscall
0x00000000000203e4 : adc dword ptr [rax + rax], edx ; ret
0x000000000006d4e4 : adc dword ptr [rax - 0x3f], ecx ; cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x0000000000149e1e : adc dword ptr [rax - 0x75], ecx ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000035dce : adc dword ptr [rax - 0x77], ecx ; ret
0x00000000000d3275 : adc dword ptr [rax - 0x77], ecx ; ret 0x349
0x0000000000075bdc : adc dword ptr [rax - 0x77], ecx ; ret 0x8b48
0x00000000000c6b7e : adc dword ptr [rax - 0x77], ecx ; retf -0x76b8
0x00000000000f581b : adc dword ptr [rax - 0x7b], ecx ; sal byte ptr [rbp - 0x11], cl ; ret
0x0000000000099327 : adc dword ptr [rax - 0x7d], ecx ; ret 0x4504
0x000000000008d4ff : adc dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x00000000000c4d5b : adc dword ptr [rax - 0x7d], ecx ; ret 0x4808
0x000000000008e7d2 : adc dword ptr [rax - 0x7d], ecx ; ret 0x4901
0x000000000007e417 : adc dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x000000000008df73 : adc dword ptr [rax - 0x7d], ecx ; ret 0xb901
0x000000000002d6bf : adc dword ptr [rax - 0x7d], ecx ; ret 0xe901
0x00000000001264db : adc dword ptr [rax], 0x83480000 ; ret 0x4910
0x000000000003f05f : adc dword ptr [rax], eax ; adc byte ptr [rax], al ; mov eax, 0x38 ; syscall
0x0000000000122a67 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001249d9 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000149dbb : adc dword ptr [rax], eax ; add byte ptr [rax], al ; nop ; ret
0x00000000000d9edd : adc dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x0000000000171b15 : adc dword ptr [rax], eax ; add byte ptr [rax], ch ; jge 0x171b1e ; jmp qword ptr [rdi]
0x00000000000810e8 : adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000b8380 : adc dword ptr [rax], eax ; and byte ptr [rcx], al ; mov eax, 0x38 ; syscall
0x0000000000047d54 : adc dword ptr [rax], eax ; movsxd rax, dword ptr [rax + rsi*4] ; add rax, rdi ; jmp rax
0x0000000000025cd4 : adc dword ptr [rbp + 0x29], ecx ; retf -0x76bb
0x00000000000cecb4 : adc dword ptr [rbx + 0x634801c0], eax ; ror byte ptr [rax + 0x39], 1 ; retf -0xf8e
0x000000000016a070 : adc dword ptr [rbx - 0x541f0003], ebp ; std ; call rax
0x000000000003d200 : adc dword ptr [rbx], 0 ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000036a22 : adc dword ptr [rbx], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000084158 : adc dword ptr [rbx], eax ; ret
0x00000000000840d1 : adc dword ptr [rbx], esp ; ret
0x0000000000146857 : adc dword ptr [rcx + 7], edi ; ret
0x00000000000e8d05 : adc dword ptr [rcx + rax - 0x3d], esi ; xor ebp, ebp ; pop rax ; pop rdi ; call rax
0x0000000000103838 : adc dword ptr [rcx + rcx*4 - 0x20], ecx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000840cc : adc dword ptr [rcx - 0x30], eax ; movups xmmword ptr [r11], xmm4 ; ret
0x00000000001464f2 : adc dword ptr [rcx - 1], ebx ; ret
0x00000000001464b6 : adc dword ptr [rcx - 1], edi ; ret
0x0000000000181ba5 : adc dword ptr [rcx], eax ; add al, ch ; loop 0x181ba5 ; jmp qword ptr [rax]
0x000000000011822e : adc dword ptr [rcx], eax ; ja 0x118262 ; mov rax, qword ptr [rdi + 0x18] ; ret
0x00000000000ee046 : adc dword ptr [rcx], esi ; rcr byte ptr [rbx - 0x77], cl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000084153 : adc dword ptr [rdi + 0x30], edi ; movups xmmword ptr [r11], xmm8 ; ret
0x0000000000083eb3 : adc dword ptr [rdi + rdx - 0x10], ecx ; ret
0x0000000000084035 : adc dword ptr [rdi + rdx - 0x10], edx ; movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x000000000008403a : adc dword ptr [rdi + rdx - 0x20], ebx ; ret
0x0000000000084012 : adc dword ptr [rdi + rdx - 0x30], esi ; movups xmmword ptr [rdi + rdx - 0x40], xmm7 ; ret
0x0000000000084017 : adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x00000000001469b9 : adc dword ptr [rdi - 8], edi ; ret
0x0000000000083eb0 : adc dword ptr [rdi], eax ; movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000032434 : adc dword ptr [rdi], ecx ; ret
0x00000000000323fd : adc dword ptr [rdi], ecx ; subsd xmm0, xmm1 ; ret
0x0000000000032782 : adc dword ptr [rdi], ecx ; subss xmm0, xmm1 ; ret
0x0000000000146c0c : adc dword ptr [rdi], edx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x0000000000078bb3 : adc dword ptr [rdx], eax ; xor al, byte ptr [rax] ; xor edi, edi ; call qword ptr [rax]
0x0000000000002341 : adc dword ptr [rsi + 0x3c5d2fd0], esp ; jp 0x2329 ; retf 0x23c4
0x0000000000146d3f : adc dword ptr [rsi + 3], edx ; ret
0x0000000000146ddc : adc dword ptr [rsi + 7], edx ; ret
0x0000000000146bde : adc dword ptr [rsi - 1], edx ; ret
0x000000000015c2c0 : adc dword ptr [rsi], -0x10 ; call rsi
0x0000000000122a66 : adc dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000075f2a : adc eax, 0x1003258 ; ret
0x00000000000994aa : adc eax, 0x10ef8348 ; add rax, rdi ; ret
0x000000000015dfad : adc eax, 0x1e14fff5 ; cmc ; call rsp
0x0000000000149ddb : adc eax, 0x251a80 ; je 0x149dea ; ret
0x000000000011cb27 : adc eax, 0x27d8c4 ; add rsp, 8 ; ret
0x0000000000114ff9 : adc eax, 0x288fa2 ; mov qword ptr fs:[rax], rdx ; ret
0x00000000001147c2 : adc eax, 0x2a39 ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000eaeef : adc eax, 0x2ae32c ; je 0xeaf00 ; pop rbp ; ret
0x00000000000e370a : adc eax, 0x2b89e1 ; ret
0x0000000000159404 : adc eax, 0x2f3ffae1 ; retf -0x4ae6
0x0000000000033cad : adc eax, 0x3653d6 ; ret
0x000000000002c426 : adc eax, 0x36cb05 ; mov qword ptr fs:[rdx], rax ; ret
0x000000000002b1d9 : adc eax, 0x36f89f ; ret
0x000000000001f9bc : adc eax, 0x37e947 ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000009a13a : adc eax, 0x3b30478b ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x0000000000001ea8 : adc eax, 0x42585c0c ; xchg eax, edi ; retf 0x20f4
0x00000000000fdd7d : adc eax, 0x4858fff5 ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x0000000000094fa8 : adc eax, 0x621850f ; add byte ptr [rax], al ; ret
0x00000000000966bc : adc eax, 0x71d850f ; add byte ptr [rax], al ; ret
0x000000000004fd82 : adc eax, 0x83480000 ; ret 0x491e
0x00000000001225f1 : adc eax, 0x83480000 ; ret 0xe910
0x000000000004091d : adc eax, 0x834856eb ; rol byte ptr [rcx], 0xc6 ; jmp qword ptr [rax]
0x0000000000063d57 : adc eax, 0x83ffff96 ; retf
0x000000000004525f : adc eax, 0x89480000 ; retf -0x76b8
0x0000000000127a30 : adc eax, 0x894d0000 ; retf
0x000000000009a43a : adc eax, 0xe180d188 ; pcmpeqb mm3, qword ptr [rsi] ; ret
0x0000000000084414 : adc eax, 0xf880272 ; ret
0x0000000000181f2d : adc eax, 0xfe400001 ; hlt ; call qword ptr [rbx]
0x0000000000181f6d : adc eax, 0xfe400001 ; hlt ; call qword ptr [rsi]
0x0000000000181fad : adc eax, 0xfe400001 ; hlt ; jmp qword ptr [rcx]
0x0000000000181fc5 : adc eax, 0xfe580001 ; hlt ; jmp qword ptr [rcx]
0x0000000000181fdd : adc eax, 0xfe700001 ; hlt ; jmp qword ptr [rcx]
0x0000000000181ff5 : adc eax, 0xfe880001 ; hlt ; jmp qword ptr [rcx]
0x00000000000503fb : adc eax, 0xfffffd22 ; add rax, rdx ; jmp rax
0x000000000002b22c : adc eax, dword ptr [eax] ; ret
0x0000000000054ebf : adc eax, dword ptr [rax - 0x78] ; sub byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000067da1 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x38b
0x000000000012623e : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001247f9 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000010dc0 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000000e104a : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000080f68 : adc eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000003d201 : adc eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000000289e5 : adc eax, dword ptr [rax] ; mov eax, ecx ; syscall
0x0000000000032834 : adc eax, dword ptr [rax] ; mulss xmm1, xmm0 ; movaps xmm0, xmm1 ; ret
0x000000000003235e : adc eax, dword ptr [rax] ; orpd xmm0, xmm1 ; ret
0x000000000002b22d : adc eax, dword ptr [rax] ; ret
0x0000000000024bbe : adc eax, dword ptr [rbp - 0x75] ; jl 0x24bee ; adc cl, ch ; retf -6
0x00000000000dfbcc : adc eax, dword ptr [rbx + 0x1674a1f8] ; neg eax ; pop rbx ; ret
0x00000000000c2bcc : adc eax, dword ptr [rbx + 0x67403f8] ; ret
0x00000000000e95dd : adc eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x00000000000911b8 : adc eax, dword ptr [rdx] ; mov rax, rdi ; ret
0x0000000000127c2f : adc eax, dword ptr cs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000042139 : adc eax, eax ; ret
0x0000000000042276 : adc eax, edx ; pop rbp ; pop rbx ; ret
0x00000000000eb011 : adc ebp, dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000001590a5 : adc ebp, dword ptr [rbx] ; fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x00000000000aa759 : adc ebp, dword ptr [rdi] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000149968 : adc ebp, eax ; retf -0x12a1
0x00000000001764a1 : adc ebp, edi ; call rdi
0x000000000015dddd : adc ebp, esi ; call rsp
0x000000000002d743 : adc ebx, 0x1480036 ; retf -0x76b8
0x00000000000ec38c : adc ebx, esi ; ret
0x000000000007e87c : adc ecx, dword ptr [rax + 0x31] ; retf 0x94c
0x00000000000dafc4 : adc ecx, dword ptr [rax + 0x63] ; sar byte ptr [rax + 0x1c], cl ; syscall
0x000000000002b21b : adc ecx, dword ptr [rax - 0x75] ; cli ; ret
0x00000000000243a4 : adc ecx, dword ptr [rax - 0x77] ; retf
0x000000000011999a : adc ecx, dword ptr [rax - 0x77] ; retf -0x1218
0x0000000000074f6a : adc ecx, dword ptr [rax - 0x7b] ; push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x00000000000ac120 : adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000f1c1c : adc ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000002dc5b : adc ecx, dword ptr [rax - 0x7d] ; ret 0x4901
0x000000000009ab04 : adc ecx, dword ptr [rax - 0x7d] ; ret 0x8b04
0x0000000000028654 : adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x000000000005ce03 : adc ecx, dword ptr [rcx + 0x415d5b28] ; pop rsp ; ret
0x00000000000e92d8 : adc ecx, dword ptr [rcx - 0x77] ; retf -0x1748
0x00000000000d9ed8 : adc ecx, dword ptr [rcx - 0x77] ; retf 0x11b8
0x00000000000d9f38 : adc ecx, dword ptr [rcx - 0x77] ; retf 0x12b8
0x00000000000e95d8 : adc ecx, dword ptr [rcx - 0x77] ; retf 0x13b8
0x00000000000e9668 : adc ecx, dword ptr [rcx - 0x77] ; retf 0x14b8
0x00000000000e0398 : adc ecx, dword ptr [rcx - 0x77] ; retf 0x15b8
0x00000000000e9728 : adc ecx, dword ptr [rcx - 0x77] ; retf 0x16b8
0x00000000000e15d8 : adc ecx, dword ptr [rcx - 0x77] ; retf 0x17b8
0x00000000000e1108 : adc ecx, dword ptr [rcx - 0x77] ; retf 0x27b8
0x00000000000e1168 : adc ecx, dword ptr [rcx - 0x77] ; retf 0x28b8
0x00000000000e9e58 : adc ecx, dword ptr [rcx - 0x77] ; retf 0x2cb8
0x00000000000e9bf8 : adc ecx, dword ptr [rcx - 0x77] ; retf 0x2db8
0x00000000000ea468 : adc ecx, dword ptr [rcx - 0x77] ; retf 0x45b8
0x00000000000ea4c8 : adc ecx, dword ptr [rcx - 0x77] ; retf 0x46b8
0x000000000009d195 : adc ecx, dword ptr [rcx - 0x7d] ; ret
0x000000000010c760 : adc ecx, dword ptr [rdi] ; mov dh, 0x40 ; or dh, dh ; ret 0x8802
0x000000000010c502 : adc ecx, dword ptr [rdi] ; retf 0x1089
0x00000000000d4c4d : adc ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xd120
0x00000000000baaa6 : adc ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000091384 : adc ecx, dword ptr [rdx + 5] ; mov rax, rdi ; ret
0x00000000000913a4 : adc ecx, dword ptr [rdx + 6] ; mov rax, rdi ; ret
0x00000000000913c4 : adc ecx, dword ptr [rdx + 7] ; mov rax, rdi ; ret
0x000000000009120e : adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x000000000018d3b9 : adc edi, eax ; call qword ptr [rsi]
0x000000000008f4eb : adc edi, edi ; dec dword ptr [rax + 0x39] ; ret
0x000000000015a5be : adc esi, dword ptr [rbp - 0x60001a67] ; mov dh, 0xc7 ; ret 0xe71f
0x00000000000746c3 : adc esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000f77f7 : adc esi, dword ptr [rsi + rdx - 0xa] ; ret 0x7420
0x000000000006a279 : adc esi, dword ptr [rsp + rdx - 0xa] ; ret 0x7420
0x0000000000127e12 : adc qword ptr [r8], rax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000146856 : adc qword ptr [rcx + 7], rdi ; ret
0x00000000001464f1 : adc qword ptr [rcx - 1], rbx ; ret
0x00000000001464b5 : adc qword ptr [rcx - 1], rdi ; ret
0x00000000001469b8 : adc qword ptr [rdi - 8], rdi ; ret
0x0000000000146d3e : adc qword ptr [rsi + 3], rdx ; ret
0x0000000000146ddb : adc qword ptr [rsi + 7], rdx ; ret
0x0000000000146bdd : adc qword ptr [rsi - 1], rdx ; ret
0x0000000000124960 : adc r8b, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000042275 : adc rax, rdx ; pop rbp ; pop rbx ; ret
0x00000000000baaa5 : adc rcx, qword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x000000000016f937 : add ah, ah ; add al, 0xfa ; call rsp
0x00000000001843eb : add ah, ah ; cmp dword ptr [rcx], eax ; add byte ptr [rax], al ; fdiv st(5) ; jmp qword ptr [rcx]
0x000000000018e2eb : add ah, ah ; fadd dword ptr [rcx] ; add byte ptr [rax + 0x4a], dl ; clc ; call qword ptr [rsi]
0x000000000016e897 : add ah, ah ; in eax, -9 ; call rsp
0x000000000017efeb : add ah, ah ; in eax, 0 ; add al, ah ; call qword ptr [rbx]
0x000000000016cfef : add ah, ah ; int1 ; call rsp
0x00000000001881eb : add ah, ah ; ja 0x1881f8 ; add byte ptr [rax], dl ; sal esi, 1 ; jmp qword ptr [rsi]
0x000000000016ff4f : add ah, ah ; lodsd eax, dword ptr [rsi] ; cli ; jmp rsp
0x000000000016d7bf : add ah, ah ; loope 0x16d7bb ; jmp rsp
0x00000000001794eb : add ah, ah ; mov al, byte ptr [rax] ; add byte ptr [rax - 0x4a], dh ; out dx, eax ; call qword ptr [rbx]
0x00000000001893eb : add ah, ah ; mov dword ptr [rcx], eax ; add al, ah ; push rsi ; call qword ptr [rdi]
0x000000000017c7eb : add ah, ah ; mov ebp, 0xa2d00000 ; sti ; call qword ptr [rax]
0x00000000001860eb : add ah, ah ; push rsi ; add dword ptr [rax], eax ; cmp byte ptr [rcx], 0xf6 ; jmp qword ptr [rcx]
0x000000000016e67f : add ah, ah ; ret
0x00000000001700df : add ah, ah ; retf
0x00000000001700c7 : add ah, ah ; retf -6
0x000000000017d4eb : add ah, ah ; retf 0
0x00000000001835eb : add ah, ah ; sub eax, dword ptr [rcx] ; add byte ptr [rax], ah ; wait ; cmc ; jmp qword ptr [rcx]
0x000000000016fab7 : add ah, ah ; sub edx, edi ; jmp rsp
0x00000000001752cb : add ah, al ; add byte ptr [rax], al ; xor bl, 0xec ; jmp rdi
0x0000000000188bcb : add ah, al ; add dword ptr [rcx], 0xf6ee1000 ; call qword ptr [rbx]
0x000000000000156f : add ah, al ; add eax, 0x5c70000 ; add byte ptr [rax], al ; retf 5
0x000000000016b5bf : add ah, al ; jae 0x16b5b3 ; call rsp
0x00000000001880cb : add ah, al ; jbe 0x1880d8 ; add al, ah ; sal dh, 1 ; jmp qword ptr [rsi]
0x000000000016b617 : add ah, al ; js 0x16b60b ; jmp rsp
0x00000000001895cb : add ah, al ; mov eax, dword ptr [rcx] ; add al, ah ; add esi, edi ; call qword ptr [rcx]
0x000000000017c9cb : add ah, al ; mov edi, 0x93500000 ; cli ; jmp qword ptr [rdi]
0x000000000016eadf : add ah, al ; or edi, eax ; call rsp
0x000000000016f4c7 : add ah, al ; pop rax ; stc ; jmp rsp
0x00000000001865cb : add ah, al ; pop rbx ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; jmp qword ptr [rcx]
0x0000000000170627 : add ah, al ; push rcx ; sti ; call rsp
0x000000000016e677 : add ah, al ; ret
0x000000000016bfb7 : add ah, al ; ret 0xffef
0x000000000016bacf : add ah, al ; retf -0x14
0x000000000016f0df : add ah, al ; retf -8
0x000000000018d4cb : add ah, al ; retf 1
0x000000000018ddcb : add ah, al ; rol dword ptr [rcx], cl ; add byte ptr [rax], dh ; cmp eax, edi ; call rdx
0x000000000017052f : add ah, al ; sti ; call rsp
0x00000000001833cb : add ah, al ; sub dword ptr [rcx], eax ; add al, ah ; xchg eax, ebp ; cmc ; jmp qword ptr [rcx]
0x0000000000173fcb : add ah, al ; xor eax, 0x2a700000 ; in al, dx ; call qword ptr [rsi]
0x0000000000183dcb : add ah, al ; xor eax, dword ptr [rcx] ; add byte ptr [rax], al ; retf
0x0000000000175f8b : add ah, bh ; add byte ptr [rax], al ; add al, dh ; out dx, al ; jmp qword ptr [rcx]
0x0000000000174103 : add ah, bh ; add byte ptr ss:[rax], al ; cwde ; sub ebp, esp ; call qword ptr [rdx]
0x0000000000184c03 : add ah, bh ; add dword ptr [r8], eax ; sub bh, dh ; cmc ; call qword ptr [rax]
0x000000000009911e : add ah, bh ; add eax, dword ptr [rax] ; pop rbx ; ret
0x0000000000184403 : add ah, bh ; cmp dword ptr [rcx], eax ; add byte ptr [rax], bl ; fdiv st(5) ; jmp qword ptr [rcx]
0x000000000017f003 : add ah, bh ; in eax, 0 ; add al, ch ; call qword ptr [rbx]
0x00000000000991fc : add ah, bh ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x0000000000190a03 : add ah, bh ; inc dword ptr [rcx] ; add byte ptr [rax], bl ; ret
0x0000000000188203 : add ah, bh ; ja 0x188210 ; add byte ptr [rax], ch ; sal esi, 1 ; jmp qword ptr [rsi]
0x000000000017bc03 : add ah, bh ; mov cl, 0 ; add byte ptr [rax], bh ; jrcxz 0x17bc03 ; jmp rbx
0x0000000000189403 : add ah, bh ; mov dword ptr [rcx], eax ; add al, ch ; push rsi ; call qword ptr [rax]
0x000000000018f103 : add ah, bh ; out 1, al ; add byte ptr [rax + 0x71], bh ; clc ; call qword ptr [rdx]
0x0000000000186103 : add ah, bh ; push rsi ; add dword ptr [rax], eax ; cwde ; cmp esi, esi ; jmp qword ptr [rcx]
0x000000000017d503 : add ah, bh ; retf 0
0x000000000018d503 : add ah, bh ; retf 1
0x0000000000173403 : add ah, bh ; sub dword ptr [rax], eax ; add byte ptr [rax + 7], cl ; in al, dx ; jmp qword ptr [rsi]
0x0000000000183603 : add ah, bh ; sub eax, dword ptr [rcx] ; add byte ptr [rax], bh ; wait ; cmc ; jmp qword ptr [rcx]
0x0000000000180103 : add ah, bh ; test byte ptr [rax], 0 ; cwde ; nop ; jmp qword ptr [rcx]
0x0000000000188be3 : add ah, bl ; add dword ptr [rcx], 0xf6ee1800 ; call qword ptr [rbx]
0x00000000001908e3 : add ah, bl ; inc byte ptr [rcx] ; add byte ptr [rax], ch ; ret 0xfff8
0x00000000001880e3 : add ah, bl ; jbe 0x1880f0 ; add al, ch ; jg 0x1880ec ; jmp qword ptr [rsi]
0x000000000017c9e3 : add ah, bl ; mov edi, 0x94680000 ; cli ; call qword ptr [rdi]
0x00000000001817e3 : add ah, bl ; or eax, 0x9d280001 ; hlt ; jmp qword ptr [rdi]
0x0000000000185ce3 : add ah, bl ; push rdx ; add dword ptr [rax], eax ; cmp byte ptr [rsi + rsi*8], dh ; jmp qword ptr [rcx]
0x000000000018cce3 : add ah, bl ; ret 1
0x000000000017d5e3 : add ah, bl ; retf
0x0000000000183ee3 : add ah, bl ; xor al, 1 ; add byte ptr [rax - 0x34], cl ; cmc ; jmp qword ptr [rcx]
0x0000000000173ce3 : add ah, bl ; xor al, byte ptr [rax] ; add al, ch ; and ebp, esp ; jmp qword ptr [rsi]
0x0000000000183de3 : add ah, bl ; xor eax, dword ptr [rcx] ; add byte ptr [rax], cl ; retf
0x00000000000f13ef : add ah, byte ptr [rax] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000017ff20 : add ah, byte ptr [rbp + 0xa] ; ret
0x000000000015a5e7 : add ah, byte ptr [rbp + rdi - 0x55] ; retf -0x5d02
0x0000000000177e06 : add ah, byte ptr [rcx + 0xe] ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x000000000018849c : add ah, byte ptr [rdx + 0x41200e0a] ; ret
0x0000000000146d3a : add ah, byte ptr [rdx - 0xf] ; jl 0x146d8f ; adc dword ptr [rsi + 3], edx ; ret
0x000000000009120b : add ah, byte ptr [rsi + 0xf] ; adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x0000000000181ff3 : add ah, ch ; adc eax, 0xfe880001 ; hlt ; jmp qword ptr [rcx]
0x0000000000180ef3 : add ah, ch ; add al, 1 ; add byte ptr [rax + 0x28], cl ; hlt ; jmp rdx
0x000000000017fdf3 : add ah, ch ; add byte ptr [rax], al ; mov bl, sil ; jmp qword ptr [rcx]
0x00000000001842f3 : add ah, ch ; cmp byte ptr [rcx], al ; add byte ptr [rax - 0x2c], ch ; cmc ; jmp qword ptr [rcx]
0x0000000000187ff3 : add ah, ch ; jne 0x188000 ; add byte ptr [rax], bh ; sal dh, 1 ; jmp qword ptr [rsi]
0x00000000001785f3 : add ah, ch ; jnp 0x1785ff ; add byte ptr [rax - 0x7d], cl ; out dx, eax ; call rcx
0x000000000017c8f3 : add ah, ch ; mov esi, 0x7ea80000 ; int1 ; call rsp
0x00000000001864f3 : add ah, ch ; pop rdx ; add dword ptr [rax], eax ; sub byte ptr [rax - 0xa], al ; jmp qword ptr [rcx]
0x000000000017cdf3 : add ah, ch ; ret
0x0000000000179ef3 : add ah, ch ; xchg eax, esp ; add byte ptr [rax], al ; sub al, dl ; out dx, eax ; call rax
0x00000000001751d3 : add ah, cl ; add byte ptr [r8], r8b ; out dx, al ; in al, dx ; jmp qword ptr [rdx]
0x00000000001730d3 : add ah, cl ; add byte ptr es:[rax], al ; cmp byte ptr [rdx], al ; in al, dx ; jmp qword ptr [rcx]
0x00000000001740d3 : add ah, cl ; add byte ptr ss:[rax], al ; cwde ; sub ebp, esp ; call qword ptr [rdx]
0x00000000001850d3 : add ah, cl ; add dword ptr [rax], r8d ; mov byte ptr [rbx], al ; idiv bh ; retf
0x0000000000182dd3 : add ah, cl ; and eax, dword ptr [rcx] ; add byte ptr [rax - 0x7c], cl ; cmc ; jmp qword ptr [rsi]
0x000000000018e2d3 : add ah, cl ; fadd dword ptr [rcx] ; add byte ptr [rax + 0x49], cl ; clc ; call qword ptr [rbx]
0x000000000018d9d3 : add ah, cl ; iretd ; add dword ptr [rax], eax ; or byte ptr [rdi], ch ; clc ; jmp rdi
0x000000000017d0d3 : add ah, cl ; mov byte ptr [rax], 0 ; cmp ch, bl ; int1 ; jmp qword ptr [rdi]
0x00000000001893d3 : add ah, cl ; mov dword ptr [rcx], eax ; add al, bl ; push rsi ; call qword ptr [rdi]
0x000000000017c4d3 : add ah, cl ; mov edx, 0xe0880000 ; cld ; call qword ptr [rax]
0x000000000017d4d3 : add ah, cl ; retf 0
0x000000000017b8d3 : add ah, cl ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; cwde ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cli ; call qword ptr [rax]
0x00000000001832d3 : add ah, cl ; sub byte ptr [rcx], al ; add byte ptr [rax], ch ; mov dr0, ebp ; jmp qword ptr [rcx]
0x00000000001835d3 : add ah, cl ; sub eax, dword ptr [rcx] ; add byte ptr [rax], cl ; wait ; cmc ; jmp qword ptr [rcx]
0x0000000000188bfb : add ah, dh ; add dword ptr [rcx], 0xf6ee2000 ; call qword ptr [rsi]
0x000000000016ed7f : add ah, dh ; clc ; push rsp ; retf 1
0x000000000017e8fb : add ah, dh ; fiadd word ptr [rax] ; add byte ptr [rax - 0x35], al ; jmp qword ptr [rcx]
0x000000000018e9fb : add ah, dh ; fild word ptr [rcx] ; add al, dl ; clc ; call qword ptr [rcx]
0x00000000001880fb : add ah, dh ; jbe 0x188108 ; add al, ah ; sal dh, 1 ; jmp qword ptr [rsi]
0x000000000016b297 : add ah, dh ; loopne 0x16b28a ; call rsp
0x000000000016b7df : add ah, dh ; mov ebp, esp ; jmp rsp
0x0000000000185cfb : add ah, dh ; push rdx ; add dword ptr [rax], eax ; push rax ; xor al, 0xf6 ; jmp qword ptr [rcx]
0x000000000016ecff : add ah, dh ; push rdx ; clc ; jmp rsp
0x000000000016f067 : add ah, dh ; ret 0xfff8
0x000000000017d5fb : add ah, dh ; retf
0x000000000017dafb : add ah, dh ; rol byte ptr [rax], 1 ; add byte ptr [rax], dh ; movsxd rsi, edx ; call qword ptr [rax]
0x000000000016edc7 : add ah, dh ; xchg al, bh ; call rsp
0x0000000000183efb : add ah, dh ; xor al, 1 ; add byte ptr [rax - 0x34], ah ; cmc ; call qword ptr [rcx]
0x0000000000173bfb : add ah, dh ; xor dword ptr [rax], eax ; add al, dh ; and ch, ah ; call qword ptr [rcx]
0x0000000000181fdb : add ah, dl ; adc eax, 0xfe700001 ; hlt ; jmp qword ptr [rcx]
0x0000000000184ddb : add ah, dl ; add dword ptr [r8], eax ; mov al, 0xfa ; cmc ; jmp qword ptr [rcx]
0x0000000000182adb : add ah, dl ; and byte ptr [rcx], al ; add al, al ; js 0x182ae0 ; call qword ptr [rsi]
0x00000000001842db : add ah, dl ; cmp byte ptr [rcx], al ; add byte ptr [rax - 0x2c], dl ; cmc ; jmp qword ptr [rcx]
0x000000000016b6a7 : add ah, dl ; jge 0x16b69b ; call rsp
0x0000000000187fdb : add ah, dl ; jne 0x187fe8 ; add byte ptr [rax], ah ; sal dh, 1 ; jmp qword ptr [rsi]
0x000000000016e847 : add ah, dl ; jrcxz 0x16e846 ; jmp rsp
0x00000000001882db : add ah, dl ; js 0x1882e8 ; add al, dl ; sal esi, 1 ; jmp qword ptr [rdi]
0x000000000016da4f : add ah, dl ; mov ch, 0xf5 ; call rsp
0x000000000017c8db : add ah, dl ; mov esi, 0x78900000 ; int1 ; jmp qword ptr [rbx]
0x000000000016d1b7 : add ah, dl ; mov esi, ebx ; call rsp
0x000000000016d0b7 : add ah, dl ; or bl, dh ; jmp rsp
0x000000000016baef : add ah, dl ; out dx, al ; in al, dx ; call rsp
0x000000000016fbdf : add ah, dl ; pop rcx ; cli ; call rsp
0x000000000016d26f : add ah, dl ; ret
0x000000000016d667 : add ah, dl ; retf
0x00000000001700bf : add ah, dl ; retf -6
0x00000000001834db : add ah, dl ; sub al, byte ptr [rcx] ; add al, dh ; xchg eax, edi ; cmc ; call rax
0x0000000000173edb : add ah, dl ; xor al, 0 ; add al, dh ; sub esp, ebp ; jmp qword ptr [rdx]
0x0000000000183fdb : add ah, dl ; xor eax, 0xce500001 ; cmc ; jmp qword ptr [rcx]
0x00000000000fd265 : add al, 0 ; add al, ch ; ret
0x0000000000100d66 : add al, 0 ; add al, ch ; ret 0xf1eb
0x00000000000dd55d : add al, 0 ; add al, ch ; retf
0x000000000002505b : add al, 0 ; add bh, dh ; ret 0
0x0000000000027091 : add al, 0 ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x00000000000efb5e : add al, 0 ; add byte ptr [rax - 0x73], cl ; push rax ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000041473 : add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x00000000000391c9 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; in eax, dx ; add dword ptr [rcx - 0x7d], eax ; call qword ptr [rax]
0x0000000000120bad : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001256f9 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000120bd1 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000011f718 : add al, 0 ; add byte ptr [rax - 0x7f], cl ; ret
0x0000000000004a60 : add al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x3c
0x00000000000e1931 : add al, 0 ; add byte ptr [rax], al ; mov rdi, r8 ; xor eax, eax ; syscall
0x0000000000077c98 : add al, 0 ; add byte ptr [rax], al ; mov rsi, r14 ; call 0xe47a9
0x000000000009a4c3 : add al, 0 ; add byte ptr [rax], al ; ret
0x00000000000db28f : add al, 0 ; add byte ptr [rax], al ; syscall
0x0000000000081e68 : add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001128cb : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000006435f : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000007e636 : add al, 0 ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000f0f85 : add al, 0 ; add byte ptr [rdx], al ; call rax
0x000000000008ee04 : add al, 0 ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000008ed74 : add al, 0 ; mov rax, rdi ; ret
0x000000000011284c : add al, 0 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000be5e9 : add al, 0 ; or byte ptr [rax + 0xf], 0xa3 ; ret 0x830f
0x000000000011c7ab : add al, 0 ; xor esi, esi ; mov eax, 2 ; syscall
0x000000000003fadd : add al, 0x10 ; add bl, dh ; ret
0x000000000002bcf9 : add al, 0x10 ; ret
0x00000000000ec2b5 : add al, 0x10 ; shr eax, cl ; and eax, 1 ; ret
0x00000000000ec38b : add al, 0x11 ; ret
0x0000000000039a0b : add al, 0x13 ; add cl, ch ; retf -0x1b
0x000000000008f561 : add al, 0x17 ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x000000000008005a : add al, 0x17 ; sub eax, ecx ; ret
0x00000000001171ea : add al, 0x24 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x00000000000f7c05 : add al, 0x24 ; add byte ptr [rax - 0x76b80000], al ; ret 0x4075
0x00000000000b52ef : add al, 0x24 ; add byte ptr [rax - 0x7af10000], al ; ret
0x00000000000b81f1 : add al, 0x24 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000daffd : add al, 0x24 ; add rsp, 0x18 ; ret
0x00000000000eb984 : add al, 0x24 ; add rsp, 0x38 ; ret
0x00000000000eb9e5 : add al, 0x24 ; add rsp, 0x40 ; ret
0x000000000007d221 : add al, 0x24 ; je 0x7d2e8 ; call rax
0x00000000001082e4 : add al, 0x24 ; mov dword ptr [rbp - 0x34], ecx ; call 0x845a7
0x00000000000db924 : add al, 0x24 ; mov eax, 0 ; syscall
0x00000000000e1064 : add al, 0x24 ; mov eax, 0x13 ; syscall
0x00000000000e9894 : add al, 0x24 ; mov eax, 0x130 ; syscall
0x00000000000e10c4 : add al, 0x24 ; mov eax, 0x14 ; syscall
0x00000000000e4764 : add al, 0x24 ; mov eax, 0x1a ; syscall
0x00000000000b8224 : add al, 0x24 ; mov eax, 0x22 ; syscall
0x00000000000b8284 : add al, 0x24 ; mov eax, 0x23 ; syscall
0x00000000000e9a34 : add al, 0x24 ; mov eax, 0x2a ; syscall
0x00000000000e99a4 : add al, 0x24 ; mov eax, 0x2b ; syscall
0x00000000000e17b4 : add al, 0x24 ; mov eax, 0x4a ; syscall
0x00000000000e1844 : add al, 0x24 ; mov eax, 0x4b ; syscall
0x00000000000dc094 : add al, 0x24 ; mov eax, 0x55 ; syscall
0x00000000000db984 : add al, 0x24 ; mov eax, 1 ; syscall
0x00000000000db704 : add al, 0x24 ; mov eax, 2 ; syscall
0x00000000000dbf44 : add al, 0x24 ; mov eax, 3 ; syscall
0x00000000000df8b4 : add al, 0x24 ; mov eax, 7 ; syscall
0x000000000009ab73 : add al, 0x24 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007d50b : add al, 0x24 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000205ca : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000202fd : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000002c6c3 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x000000000002d142 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r14 ; call rax
0x0000000000046f87 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; xor esi, esi ; call rax
0x0000000000104421 : add al, 0x2b ; pop rbx ; pop rbp ; ret
0x00000000000983b9 : add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000983cb : add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x000000000008251e : add al, 0x31 ; ret
0x00000000001029f1 : add al, 0x31 ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000000754af : add al, 0x32 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000173f0c : add al, 0x35 ; add byte ptr [rax], al ; adc byte ptr [rdx], ch ; in al, dx ; jmp qword ptr [rdx]
0x0000000000184c50 : add al, 0x35 ; retf 0
0x000000000008241a : add al, 0x37 ; ret
0x00000000000d4484 : add al, 0x39 ; ret 0x8675
0x000000000006c13f : add al, 0x3a ; ret
0x00000000001586c6 : add al, 0x3d ; retf
0x000000000009932b : add al, 0x45 ; test eax, eax ; jne 0x99327 ; ret
0x000000000010573b : add al, 0x48 ; add edx, 1 ; syscall
0x000000000008ee15 : add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x000000000008ee25 : add al, 0x48 ; lea eax, dword ptr [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x000000000009695b : add al, 0x48 ; lea eax, dword ptr [rdi + 6] ; ret
0x000000000008edc5 : add al, 0x48 ; lea eax, dword ptr [rdi + 7] ; ret
0x000000000008ec64 : add al, 0x48 ; lea eax, dword ptr [rdi + 8] ; ret
0x0000000000140b99 : add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x0000000000140bab : add al, 0x48 ; lea eax, dword ptr [rdx + 5] ; ret
0x0000000000069ed8 : add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; ret
0x0000000000133aca : add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x000000000006aa5c : add al, 0x48 ; mov dword ptr [rdx + 0x20], eax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x000000000006abf2 : add al, 0x48 ; mov dword ptr [rdx + 0x20], esi ; mov dword ptr [rcx], eax ; ret
0x000000000008ed85 : add al, 0x48 ; mov eax, edi ; mov byte ptr [rdi + 6], 0 ; ret
0x000000000008ed15 : add al, 0x48 ; mov eax, edi ; ret
0x00000000000807f4 : add al, 0x48 ; xor eax, eax ; ret
0x0000000000043e98 : add al, 0x4c ; cmp edi, eax ; jbe 0x43e97 ; ret
0x000000000009b5cf : add al, 0x4c ; lea ecx, dword ptr [rsp + 0x20] ; call rbx
0x00000000000f4e54 : add al, 0x50 ; shr ax, 0xe ; and eax, 1 ; ret
0x0000000000185b0c : add al, 0x51 ; add dword ptr [rax], eax ; nop ; xor dh, dh ; jmp qword ptr [rcx]
0x0000000000184c28 : add al, 0x51 ; retf 0
0x0000000000185c0c : add al, 0x52 ; add dword ptr [rax], eax ; nop ; xor esi, esi ; jmp qword ptr [rcx]
0x0000000000030db5 : add al, 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000c6629 : add al, 0x5b ; pop rbp ; pop r12 ; ret
0x00000000000c2c8b : add al, 0x5b ; ret
0x0000000000187937 : add al, 0x5c ; ret
0x000000000017320f : add al, 0x60 ; ret
0x000000000016fc30 : add al, 0x61 ; cli ; jmp rsp
0x000000000017316f : add al, 0x63 ; ret
0x0000000000140ba7 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x000000000009129c : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x000000000018fd2f : add al, 0x66 ; ret
0x000000000016b580 : add al, 0x69 ; in al, dx ; call rsp
0x000000000017bfaf : add al, 0x71 ; ret
0x0000000000028652 : add al, 0x72 ; adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x000000000002bd0d : add al, 0x72 ; or bl, dh ; ret
0x000000000017dc2f : add al, 0x72 ; ret
0x000000000011eb5e : add al, 0x74 ; jl 0x11eae9 ; ret 0x8380
0x00000000000c3165 : add al, 0x74 ; pop rax ; cmp al, 0x11 ; je 0xc3179 ; xor eax, eax ; ret
0x00000000000c9154 : add al, 0x75 ; mov cl, 0x8b ; pop rax ; or bh, dh ; ret
0x000000000004b966 : add al, 0x75 ; out -0x73, eax ; dec dword ptr [r8 - 0x77] ; ret 0xf748
0x000000000009a572 : add al, 0x75 ; ret
0x00000000000bb724 : add al, 0x75 ; sub dword ptr [rdi], ecx ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x000000000018800c : add al, 0x76 ; add dword ptr [rax], eax ; push rax ; sal dh, 1 ; jmp qword ptr [rsi]
0x00000000000df712 : add al, 0x77 ; or esp, dword ptr [rsi - 0x77] ; push rsi ; xor ax, ax ; ret
0x000000000002c0c0 : add al, 0x78 ; and ax, 0x100 ; movzx eax, ax ; ret
0x000000000002c0e0 : add al, 0x78 ; and ax, 0x1000 ; movzx eax, ax ; ret
0x000000000002c020 : add al, 0x78 ; and ax, 0x200 ; movzx eax, ax ; ret
0x000000000002c0a0 : add al, 0x78 ; and ax, 0x2000 ; movzx eax, ax ; ret
0x000000000002bfc0 : add al, 0x78 ; and ax, 0x400 ; movzx eax, ax ; ret
0x000000000002c060 : add al, 0x78 ; and ax, 0x4000 ; movzx eax, ax ; ret
0x000000000002c000 : add al, 0x78 ; and ax, 0x800 ; movzx eax, ax ; ret
0x000000000002c040 : add al, 0x78 ; and ax, 0x8000 ; movzx eax, ax ; ret
0x000000000002c160 : add al, 0x78 ; and eax, 1 ; ret
0x000000000002bfe0 : add al, 0x78 ; and eax, 2 ; movzx eax, ax ; ret
0x000000000002c080 : add al, 0x78 ; and eax, 4 ; movzx eax, ax ; ret
0x000000000002bfa0 : add al, 0x78 ; and eax, 8 ; movzx eax, ax ; ret
0x00000000001759f7 : add al, 0x78 ; ret
0x0000000000175a87 : add al, 0x7b ; ret
0x00000000000c314f : add al, 0x7c ; out dx, al ; ret
0x00000000000c3c6a : add al, 0x7f ; or dword ptr [rcx - 0x75], 0x7d ; or al, ch ; ret 0xf5bc
0x00000000000a8135 : add al, 0x80 ; ret
0x000000000005d165 : add al, 0x81 ; add rax, rcx ; jmp rax
0x00000000000992e3 : add al, 0x81 ; je 0x992c5 ; ret
0x00000000001222db : add al, 0x81 ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x00000000000992df : add al, 0x81 ; sub eax, dword ptr [rcx + r8*4] ; je 0x992c9 ; ret
0x0000000000123bb3 : add al, 0x81 ; sub eax, edx ; ret
0x000000000008ec4d : add al, 0x82 ; add rax, r10 ; jmp rax
0x000000000002099e : add al, 0x82 ; add rax, rdx ; jmp rax
0x0000000000099298 : add al, 0x82 ; sub eax, dword ptr [rdx + rcx*4] ; je 0x99288 ; ret
0x0000000000086987 : add al, 0x82 ; sub eax, ecx ; ret
0x000000000006edc2 : add al, 0x83 ; loop 0x6edcd ; mov eax, edx ; ret
0x00000000000713e4 : add al, 0x83 ; loopne 0x713ed ; ret
0x000000000004dcfd : add al, 0x83 ; ret
0x000000000009c9eb : add al, 0x83 ; ret 0x4101
0x00000000000c27b9 : add al, 0x83 ; ret 0x4801
0x000000000004a976 : add al, 0x84 ; sal byte ptr [rbp + 0x6b], 0xf6 ; ret 0x7440
0x0000000000051410 : add al, 0x85 ; add byte ptr [rax], 0 ; add byte ptr [rax + 0xf], cl ; ret 0x348
0x000000000004cce8 : add al, 0x85 ; fisttp dword ptr [rdi] ; lahf ; ret 0xe683
0x000000000004eb51 : add al, 0x85 ; fisttp dword ptr [rdi] ; lahf ; ret 0xe783
0x000000000009ae2e : add al, 0x85 ; ror byte ptr [rcx - 0xc0c8af0], cl ; ret
0x000000000009bf99 : add al, 0x85 ; sal byte ptr [rbp - 0xe], cl ; ret
0x00000000000d4480 : add al, 0x85 ; sal byte ptr [rsp + rax + 0x39], cl ; ret 0x8675
0x00000000000f7e9a : add al, 0x85 ; test byte ptr [rcx + 0x480e7430], 0x39 ; retf -0x158b
0x000000000007c095 : add al, 0x86 ; add rax, r14 ; jmp rax
0x000000000016b748 : add al, 0x86 ; in al, dx ; call rsp
0x000000000009ab1e : add al, 0x87 ; test r8d, r8d ; jne 0x9aaf8 ; ret
0x0000000000140b96 : add al, 0x88 ; add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x000000000009127b : add al, 0x88 ; add al, 0x48 ; mov eax, edi ; ret
0x00000000000be32c : add al, 0x88 ; dec qword ptr [rbx + 0x75c9850f] ; ret 0x8b48
0x000000000016b788 : add al, 0x89 ; in al, dx ; call rsp
0x00000000000cf7b0 : add al, 0x89 ; ret 0xb60f
0x000000000011f151 : add al, 0x89 ; retf -0x1540
0x000000000010f38a : add al, 0x89 ; retf 0x3944
0x00000000000c8713 : add al, 0x89 ; retf 0x4c89
0x000000000008eda2 : add al, 0x8a ; add rax, r10 ; jmp rax
0x000000000009929b : add al, 0x8a ; je 0x99285 ; ret
0x0000000000091264 : add al, 0x8b ; add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x00000000000ea189 : add al, 0x8b ; and al, 0xc ; add rsp, 0x18 ; ret
0x000000000009ab08 : add al, 0x8b ; or al, byte ptr [rbp - 0xc0e8a37] ; ret
0x000000000004e790 : add al, 0x8b ; or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x000000000016cc80 : add al, 0x8e ; int1 ; jmp rsp
0x00000000001707f8 : add al, 0x8f ; std ; call rsp
0x000000000005355d : add al, 0x90 ; add rax, rdi ; jmp rax
0x000000000016fd98 : add al, 0x90 ; cli ; jmp rsp
0x000000000005d629 : add al, 0x91 ; add rax, rcx ; jmp rax
0x0000000000099189 : add al, 0x96 ; add rax, rsi ; jmp rax
0x000000000018a30c : add al, 0x99 ; add dword ptr [rax], eax ; add byte ptr [rax - 9], dl ; call qword ptr [rbx]
0x00000000000b9d4d : add al, 0x9a ; add rax, rdx ; jmp rax
0x00000000000ec167 : add al, 0xa ; ret
0x00000000000556dc : add al, 0xa2 ; add rax, rdx ; jmp rax
0x000000000016e66c : add al, 0xa7 ; add dword ptr [rax], eax ; xchg eax, esp ; ret 0xfff7
0x000000000016b8a8 : add al, 0xa7 ; in al, dx ; jmp rsp
0x0000000000002319 : add al, 0xaa ; ret
0x000000000016b8f8 : add al, 0xad ; in al, dx ; jmp rsp
0x00000000000cbe0b : add al, 0xae ; add rax, rsi ; jmp rax
0x0000000000047d58 : add al, 0xb0 ; add rax, rdi ; jmp rax
0x0000000000112c38 : add al, 0xb1 ; add rax, rcx ; jmp rax
0x0000000000118737 : add al, 0xb1 ; shr rdx, 3 ; add rax, rcx ; jmp rax
0x00000000000b99dd : add al, 0xb2 ; add rax, rdx ; jmp rax
0x00000000001103e8 : add al, 0xb7 ; add rax, rdi ; jmp rax
0x000000000002bcf6 : add al, 0xb7 ; mov eax, dword ptr [rax + rdx] ; ret
0x000000000010d416 : add al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000010b402 : add al, 0xb8 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000002c348 : add al, 0xb8 ; ret
0x000000000016b9f0 : add al, 0xb9 ; in al, dx ; call rsp
0x00000000000cbeef : add al, 0xba ; add rax, rdx ; jmp rax
0x000000000003fad8 : add al, 0xbb ; xor eax, 0x1004c600 ; add bl, dh ; ret
0x00000000000990c9 : add al, 0xbe ; add rax, rsi ; jmp rax
0x0000000000184a70 : add al, 0xc0 ; retf
0x000000000009ad3b : add al, 0xc3 ; nop dword ptr [rax] ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000170878 : add al, 0xc3 ; std ; jmp qword ptr [rbx + rbx - 0x3cebffff]
0x000000000016cf80 : add al, 0xc8 ; call rsp
0x00000000001700b8 : add al, 0xca ; cli ; push qword ptr [rax + rcx*2 + 2] ; add ah, dl ; retf -6
0x000000000016f0f0 : add al, 0xcd ; clc ; call rsp
0x00000000000338e4 : add al, 0xcf ; setne al ; movzx eax, al ; ret
0x00000000000b3213 : add al, 0xd0 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000033927 : add al, 0xd7 ; xor eax, eax ; ret
0x000000000016f0d4 : add al, 0xdc ; add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; retf -8
0x0000000000184b68 : add al, 0xe5 ; retf 0
0x0000000000119d87 : add al, 0xe8 ; ret
0x000000000004f69f : add al, 0xe8 ; retf
0x0000000000029959 : add al, 0xe8 ; test rax, rax ; je 0x29969 ; call rax
0x00000000000bd43f : add al, 0xe9 ; ret
0x000000000002ec93 : add al, 0xeb ; ret 0x2e66
0x0000000000170950 : add al, 0xee ; std ; call rsp
0x000000000002bfc5 : add al, 0xf ; mov bh, 0xc0 ; ret
0x00000000001203ed : add al, 0xf ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x000000000010d39a : add al, 0xf ; retf 0x1689
0x00000000001119e5 : add al, 0xf ; retf 0x5089
0x000000000010d405 : add al, 0xf ; retf 0x6348
0x0000000000125c5b : add al, 0xf ; sub rax, r8 ; ret
0x000000000009a045 : add al, 0xf ; test dword ptr [rcx + rax], esi ; add byte ptr [rax], al ; ret
0x0000000000094d7b : add al, 0xf ; test dword ptr [rsi + 8], ecx ; add byte ptr [rax], al ; ret
0x00000000000e1b49 : add al, 0xf ; xchg eax, ebp ; ret 0xdaf7
0x000000000017fc0c : add al, 0xf2 ; add byte ptr [rax], al ; mov al, 0x82 ; jmp qword ptr [rcx]
0x000000000017fd0c : add al, 0xf3 ; add byte ptr [rax], al ; jo 0x17fc9d ; jmp qword ptr [rcx]
0x0000000000133e33 : add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00000000000c14fb : add al, 0xf3 ; ret
0x0000000000029ae3 : add al, 0xf8 ; test rax, rax ; je 0x29af3 ; call rax
0x000000000016f939 : add al, 0xfa ; call rsp
0x0000000000180ef5 : add al, 1 ; add byte ptr [rax + 0x28], cl ; hlt ; jmp rdx
0x000000000009a078 : add al, 1 ; add byte ptr [rax], al ; ret
0x00000000000dc9e4 : add al, 1 ; add byte ptr [rax], al ; syscall
0x000000000016cc2d : add al, 1 ; add byte ptr [rbx + rax*4 - 0xf], al ; jmp rsp
0x0000000000067dd0 : add al, 1 ; je 0x67e0a ; mov rax, rdx ; pop rbx ; ret
0x0000000000070410 : add al, 1 ; je 0x7044a ; mov rax, rdx ; pop rbx ; ret
0x0000000000064df9 : add al, 1 ; ret
0x0000000000064e5a : add al, 1 ; xor eax, eax ; ret
0x0000000000181c87 : add al, 2 ; jp 0x181c99 ; ret
0x000000000018260f : add al, 2 ; mov dword ptr [rdx], ecx ; ret
0x000000000018b91f : add al, 2 ; push rbx ; ret
0x0000000000180cd7 : add al, 2 ; ret
0x000000000008f44c : add al, 3 ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0x36e8
0x0000000000145287 : add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000004b7 : add al, 4 ; ret 0x6080
0x0000000000094ec8 : add al, 7 ; add byte ptr [rax], al ; ret
0x000000000007ea2d : add al, 7 ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x000000000008a758 : add al, 7 ; ret
0x000000000008eacf : add al, 7 ; test r8b, r8b ; jne 0x8eab8 ; ret
0x0000000000070833 : add al, 8 ; add byte ptr [rax], al ; ret
0x000000000008f6cf : add al, 8 ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x00000000001895cf : add al, ah ; add esi, edi ; call qword ptr [rcx]
0x000000000017efef : add al, ah ; call qword ptr [rbx]
0x000000000015d02f : add al, ah ; jl 0x15d02e ; inc dword ptr [rax] ; jge 0x15d032 ; jmp qword ptr [rax]
0x000000000017efbf : add al, ah ; jmp qword ptr [rdi]
0x000000000018014f : add al, ah ; nop ; jmp qword ptr [rcx]
0x00000000001853ff : add al, ah ; or al, 0xf6 ; call qword ptr [rax]
0x00000000001893ef : add al, ah ; push rsi ; call qword ptr [rdi]
0x000000000017f2af : add al, ah ; push rsp ; call rcx
0x000000000000d4b7 : add al, ah ; ret
0x000000000017995f : add al, ah ; ret 0xffef
0x0000000000008987 : add al, ah ; ret 2
0x000000000000857f : add al, ah ; ret 6
0x0000000000007f4f : add al, ah ; retf
0x000000000018809f : add al, ah ; sal dh, 1 ; jmp qword ptr [rsi]
0x000000000017d81f : add al, ah ; sbb dh, dl ; call qword ptr [rdx]
0x00000000001833cf : add al, ah ; xchg eax, ebp ; cmc ; jmp qword ptr [rcx]
0x0000000000185d8f : add al, ah ; xor al, 0xf6 ; jmp qword ptr [rcx]
0x0000000000185b6f : add al, ah ; xor dh, dh ; call qword ptr [rax]
0x0000000000185a1f : add al, ah ; xor esi, esi ; jmp qword ptr [rcx]
0x0000000000184c6f : add al, al ; div ebp ; call qword ptr [rdx]
0x000000000017abef : add al, al ; int1 ; cld ; call qword ptr [rdx]
0x000000000018f78f : add al, al ; jg 0x18f78f ; call qword ptr [rsi]
0x0000000000182adf : add al, al ; js 0x182adc ; call qword ptr [rsi]
0x000000000018ac4f : add al, al ; mov dh, bh ; call qword ptr [rdi]
0x000000000000ec57 : add al, al ; ret
0x0000000000010067 : add al, al ; ret 0x39
0x0000000000004937 : add al, al ; ret 0xe
0x0000000000006b0f : add al, al ; ret 2
0x000000000000bb07 : add al, al ; retf
0x0000000000152767 : add al, al ; sldt word ptr [rax] ; ret
0x0000000000184d1f : add al, al ; stc ; cmc ; jmp qword ptr [rcx]
0x000000000018fe8f : add al, al ; xchg al, bh ; jmp qword ptr [rcx]
0x0000000000185b3f : add al, al ; xor dh, dh ; jmp qword ptr [rcx]
0x000000000018db2f : add al, al ; xor edi, eax ; call qword ptr [rdx]
0x0000000000173c17 : add al, bh ; and ch, ah ; call qword ptr [rcx]
0x000000000018a347 : add al, bh ; idiv r15 ; ret
0x0000000000099216 : add al, bh ; jg 0x99218 ; int1 ; mov eax, eax ; ret
0x0000000000171ac7 : add al, bh ; jne 0x171aba ; call qword ptr [rdx]
0x0000000000179aa7 : add al, bh ; ret
0x0000000000182e97 : add al, bh ; test esi, ebp ; jmp qword ptr [rcx]
0x0000000000174237 : add al, bh ; xor ebp, esp ; call qword ptr [rax]
0x0000000000185a37 : add al, bh ; xor esi, esi ; jmp qword ptr [rcx]
0x000000000018ea17 : add al, bl ; clc ; call qword ptr [rbx]
0x00000000001843f0 : add al, bl ; cmc ; jmp qword ptr [rcx]
0x000000000017e047 : add al, bl ; cwde ; call qword ptr [rsi]
0x000000000018ee57 : add al, bl ; insd dword ptr [rdi], dx ; clc ; call qword ptr [rdx]
0x00000000000951cb : add al, bl ; nop dword ptr [rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000eb2f3 : add al, bl ; nop dword ptr [rax] ; ret
0x0000000000184927 : add al, bl ; out -0xb, eax ; call qword ptr [rsi]
0x00000000001893d7 : add al, bl ; push rsi ; call qword ptr [rdi]
0x0000000000185967 : add al, bl ; sbb al, 0xf6 ; jmp qword ptr [rcx]
0x0000000000184d37 : add al, bl ; stc ; cmc ; jmp qword ptr [rcx]
0x000000000007d2de : add al, bpl ; retf
0x00000000000d7a6b : add al, byte ptr [r8] ; add byte ptr [rax - 0x41f0d806], al ; retf 0x2974
0x0000000000128d12 : add al, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000007e991 : add al, byte ptr [rax + rax*8 - 0xb7ed8c] ; ret 0x2288
0x000000000016fa6e : add al, byte ptr [rax] ; adc al, 0x24 ; cli ; jmp rsp
0x0000000000170496 : add al, byte ptr [rax] ; adc al, 0x3c ; sti ; jmp rsp
0x000000000016fdbe : add al, byte ptr [rax] ; adc al, 0x94 ; cli ; jmp rsp
0x000000000016f69e : add al, byte ptr [rax] ; adc al, 0xa8 ; stc ; jmp rsp
0x000000000019103e : add al, byte ptr [rax] ; adc ch, bl ; clc ; call rcx
0x000000000016fc2e : add al, byte ptr [rax] ; add al, 0x61 ; cli ; jmp rsp
0x000000000016fd96 : add al, byte ptr [rax] ; add al, 0x90 ; cli ; jmp rsp
0x0000000000025644 : add al, byte ptr [rax] ; add bh, dh ; ret 0
0x000000000002c117 : add al, byte ptr [rax] ; add bl, dh ; ret
0x0000000000103156 : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000083683 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x00000000000d7a6c : add al, byte ptr [rax] ; add byte ptr [rax - 0x41f0d806], al ; retf 0x2974
0x00000000000efc8e : add al, byte ptr [rax] ; add byte ptr [rax - 0x73], cl ; pop rdx ; add dword ptr [rax + 0x39], ecx ; retf
0x000000000007b0b1 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000078d50 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8548
0x0000000000083374 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000006818d : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf
0x0000000000146ed4 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000002ee9a : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4508
0x000000000008b7eb : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000120d4d : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000123971 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000120d71 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000e288c : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000001045a : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x0000000000110f1f : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x10 ; jmp rcx
0x000000000011348f : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x0000000000112baf : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x68 ; jmp rcx
0x00000000000d2ef1 : add al, byte ptr [rax] ; add byte ptr [rax], al ; cmove eax, edx ; ret
0x000000000010b334 : add al, byte ptr [rax] ; add byte ptr [rax], al ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x0000000000032ff4 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, 0xe ; syscall
0x00000000000b8cba : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000eae15 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, 1 ; syscall
0x0000000000115049 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x00000000001171ec : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x00000000000eaf75 : add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000009a4a3 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000001fa73 : add al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000b3972 : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000002e5f1 : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor esi, esi ; mov eax, ebx ; syscall
0x00000000000f5b1d : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor esi, esi ; movsxd rdi, edx ; syscall
0x00000000000416a2 : add al, byte ptr [rax] ; add byte ptr [rax], cl ; retf -0x7af1
0x00000000000c45c2 : add al, byte ptr [rax] ; add byte ptr [rbp + 0x63], cl ; retf
0x00000000000c7d70 : add al, byte ptr [rax] ; add byte ptr [rbp + 0x63], cl ; retf 0xf41
0x0000000000089a00 : add al, byte ptr [rax] ; add byte ptr [rbp - 0x73], cl ; pop rsi ; dec dword ptr [rcx + 0x29] ; retf 0x1deb
0x0000000000081fe8 : add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000006b290 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000341e9 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000002c452 : add al, byte ptr [rax] ; add byte ptr [rbx + rcx*4 + 0x3d], cl ; lodsb al, byte ptr [rsi] ; retf 0x36
0x0000000000148c04 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x0000000000053d89 : add al, byte ptr [rax] ; add byte ptr [rcx + 0x63], cl ; ret
0x00000000000e5c86 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x73], cl ; push rsi ; or byte ptr [rax - 0x77], cl ; retf
0x00000000000c45b1 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret 0x3945
0x00000000000da45a : add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret 0x4b01
0x0000000000190f1e : add al, byte ptr [rax] ; add ch, bl ; clc ; call qword ptr [rdi]
0x000000000004e981 : add al, byte ptr [rax] ; add cl, bl ; in eax, -0x21 ; loopne 0x4e91a ; ret 0xe680
0x000000000004f2c0 : add al, byte ptr [rax] ; add rsp, 0xd8 ; ret
0x000000000016fd6e : add al, byte ptr [rax] ; and al, 0x84 ; cli ; jmp rsp
0x0000000000170146 : add al, byte ptr [rax] ; and al, 0xcf ; cli ; jmp rsp
0x00000000001701ae : add al, byte ptr [rax] ; and al, 0xd2 ; cli ; jmp rsp
0x0000000000190f4e : add al, byte ptr [rax] ; and ch, bl ; clc ; call qword ptr [rbx]
0x000000000016fc4e : add al, byte ptr [rax] ; cli ; jmp rsp
0x000000000016ff4e : add al, byte ptr [rax] ; in al, -0x53 ; cli ; jmp rsp
0x00000000001703c6 : add al, byte ptr [rax] ; in al, 0x1d ; sti ; call rsp
0x000000000016fab6 : add al, byte ptr [rax] ; in al, 0x29 ; cli ; jmp rsp
0x000000000016f936 : add al, byte ptr [rax] ; in al, 4 ; cli ; call rsp
0x000000000017033e : add al, byte ptr [rax] ; je 0x17035b ; sti ; jmp rsp
0x000000000004d899 : add al, byte ptr [rax] ; jmp 0x4d863
0x0000000000104372 : add al, byte ptr [rax] ; jne 0x1043c5 ; mov eax, r8d ; ret
0x0000000000104371 : add al, byte ptr [rax] ; jne 0x1043c6 ; mov eax, r8d ; ret
0x000000000008ede5 : add al, byte ptr [rax] ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000016f6be : add al, byte ptr [rax] ; lodsb al, byte ptr fs:[rsi] ; stc ; call rsp
0x000000000016fdee : add al, byte ptr [rax] ; mov ah, 0x96 ; cli ; call rsp
0x000000000016ff1e : add al, byte ptr [rax] ; mov ah, 0xab ; cli ; call rsp
0x00000000001910f6 : add al, byte ptr [rax] ; mov cl, ah ; clc ; call qword ptr [rdi]
0x000000000008ed55 : add al, byte ptr [rax] ; mov rax, rdi ; ret
0x00000000001700ce : add al, byte ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; retf
0x0000000000143f9b : add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x0000000000190a2e : add al, byte ptr [rax] ; nop ; ret
0x000000000011ddce : add al, byte ptr [rax] ; or byte ptr [rax], al ; mov rdi, rdx ; mov eax, ebx ; syscall
0x000000000019131e : add al, byte ptr [rax] ; out -8, eax ; call qword ptr [rcx]
0x00000000000fdd29 : add al, byte ptr [rax] ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000e72d2 : add al, byte ptr [rax] ; pop rbx ; ret
0x00000000001702b6 : add al, byte ptr [rax] ; push rsp ; add edi, ebx ; call rsp
0x000000000016f7e6 : add al, byte ptr [rax] ; push rsp ; in al, -7 ; jmp rsp
0x0000000000106123 : add al, byte ptr [rax] ; ret
0x0000000000190c76 : add al, byte ptr [rax] ; sbb dh, cl ; clc ; call rbx
0x0000000000170466 : add al, byte ptr [rax] ; sti ; jmp rsp
0x000000000016fb8e : add al, byte ptr [rax] ; xchg eax, esp ; cli ; call rsp
0x000000000016fb6e : add al, byte ptr [rax] ; xchg eax, esp ; cli ; jmp rsp
0x000000000016fe56 : add al, byte ptr [rax] ; xchg eax, esp ; lahf ; cli ; call rsp
0x000000000016f6de : add al, byte ptr [rax] ; xchg eax, esp ; mov dl, 0xf9 ; call rsp
0x000000000016f746 : add al, byte ptr [rax] ; xchg eax, esp ; retf -7
0x000000000016fe36 : add al, byte ptr [rax] ; xor al, 0x9d ; cli ; call rsp
0x000000000019127e : add al, byte ptr [rax] ; xor dl, ah ; clc ; jmp qword ptr [rbx]
0x00000000000a8c52 : add al, byte ptr [rbp + 0x29] ; out 0x29, eax ; retf -0x72bf
0x00000000000c67d9 : add al, byte ptr [rbp - 0x77] ; xor byte ptr [rcx + 0x63], cl ; add r9b, r13b ; ret
0x00000000000bac46 : add al, byte ptr [rbx - 0x7cb7fd37] ; ret 0xe901
0x0000000000183c31 : add al, byte ptr [rcx + 0x283100e] ; push rsp ; ret
0x00000000000f550e : add al, byte ptr [rcx + 0x39] ; ret
0x0000000000171f88 : add al, byte ptr [rcx + 0xa] ; ret
0x00000000000c6534 : add al, byte ptr [rcx - 0x77] ; ret 0x8b4c
0x0000000000030627 : add al, byte ptr [rcx - 0xccc1e] ; inc dword ptr [rcx] ; ret 0xd089
0x00000000000db6b1 : add al, byte ptr [rcx] ; add byte ptr [rax], al ; syscall
0x000000000016cbc5 : add al, byte ptr [rcx] ; add byte ptr [rdx + rbx*2], ah ; int1 ; jmp rsp
0x0000000000179110 : add al, byte ptr [rdi + 0xa] ; ret
0x000000000008d7d7 : add al, byte ptr [rdi + rcx - 0x4a] ; sbb eax, dword ptr [rcx + 0x38] ; retf
0x0000000000190c0d : add al, byte ptr [rdx] ; add al, dl ; retf
0x000000000016f6bd : add al, byte ptr [rdx] ; add byte ptr [rsp + rbp*4 - 7], ah ; call rsp
0x00000000001751a8 : add al, byte ptr [rdx] ; jbe 0x1751ba ; ret
0x0000000000182d1d : add al, byte ptr [rdx] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000018137e : add al, byte ptr [rdx] ; pop rcx ; ret
0x0000000000174a7d : add al, byte ptr [rdx] ; ret
0x000000000019154e : add al, byte ptr [rip - 0x10000] ; add dword ptr [rbx], ecx ; retf
0x00000000001911cd : add al, byte ptr [rsi + rcx + 0x10] ; ret
0x0000000000094fca : add al, byte ptr [rsi] ; add byte ptr [rax], al ; ret
0x000000000016ff4d : add al, byte ptr ds:[rax] ; in al, -0x53 ; cli ; jmp rsp
0x000000000016fb6d : add al, byte ptr es:[rax] ; xchg eax, esp ; cli ; jmp rsp
0x000000000016fded : add al, byte ptr ss:[rax] ; mov ah, 0x96 ; cli ; call rsp
0x00000000000efb37 : add al, ch ; add ebp, dword ptr [rdi - 0x7cb70009] ; ret
0x0000000000173ce7 : add al, ch ; and ebp, esp ; jmp qword ptr [rsi]
0x000000000017f007 : add al, ch ; call qword ptr [rbx]
0x000000000002015e : add al, ch ; cmp al, 0x8a ; or al, 0 ; call 0x2c3e8
0x000000000002cb69 : add al, ch ; cmp ebp, 0x8948ffff ; ret
0x0000000000149ca6 : add al, ch ; hlt ; ret 0xfff9
0x000000000017d367 : add al, ch ; in eax, -0xf ; call rdi
0x0000000000175497 : add al, ch ; in eax, dx ; call qword ptr [rdi]
0x00000000000c2d65 : add al, ch ; int 0xcb
0x00000000001880b7 : add al, ch ; jg 0x1880b8 ; jmp qword ptr [rsi]
0x00000000001880e7 : add al, ch ; jg 0x1880e8 ; jmp qword ptr [rsi]
0x0000000000188117 : add al, ch ; jg 0x188118 ; jmp qword ptr [rsi]
0x0000000000188147 : add al, ch ; jg 0x188148 ; jmp qword ptr [rsi]
0x0000000000188177 : add al, ch ; jg 0x188178 ; jmp qword ptr [rsi]
0x00000000001881a7 : add al, ch ; jg 0x1881a8 ; jmp qword ptr [rsi]
0x0000000000181ba7 : add al, ch ; loop 0x181ba3 ; jmp qword ptr [rax]
0x00000000000bb925 : add al, ch ; mov ch, 0x30 ; cld ; dec dword ptr [rax - 0x77] ; ret 0x16eb
0x00000000000e0a4b : add al, ch ; mov edi, 0x89000005 ; ret 0x448b
0x0000000000080516 : add al, ch ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000007a48f : add al, ch ; pop rbx ; retf
0x00000000000c529b : add al, ch ; pop rdi ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cmc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000089dac : add al, ch ; pop rsi ; pop rbx ; stc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000cee95 : add al, ch ; popfq ; or dh, ch ; dec dword ptr [rax + 0x63] ; ret
0x0000000000189407 : add al, ch ; push rsi ; call qword ptr [rax]
0x0000000000067b17 : add al, ch ; ret
0x00000000000ba578 : add al, ch ; ret 0x20f
0x000000000010aa18 : add al, ch ; ret 0xb0
0x0000000000035818 : add al, ch ; ret 0xbfc
0x0000000000100d68 : add al, ch ; ret 0xf1eb
0x0000000000054b08 : add al, ch ; ret 0xfd73
0x000000000002bef8 : add al, ch ; ret 9
0x000000000006287f : add al, ch ; retf
0x0000000000108b10 : add al, ch ; retf -0x137
0x00000000000f63d0 : add al, ch ; retf -0x154
0x00000000000f8a10 : add al, ch ; retf -0x36
0x000000000011bf40 : add al, ch ; retf -0x37a
0x000000000011d660 : add al, ch ; retf -0x41a
0x00000000000fef80 : add al, ch ; retf -0x7ea
0x00000000000ced10 : add al, ch ; retf -0xd6
0x00000000000e2590 : add al, ch ; retf -4
0x000000000005f5b8 : add al, ch ; retf 3
0x0000000000068a3c : add al, ch ; sahf ; retf 8
0x00000000000c87fe : add al, ch ; sub al, 0x71 ; cmc ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000000f3192 : add al, ch ; sub byte ptr [rdi - 0x76b7000d], dl ; ret
0x0000000000173ec7 : add al, ch ; sub esp, ebp ; jmp qword ptr [rax]
0x00000000000675cf : add al, ch ; wait ; retf
0x0000000000182fc7 : add al, ch ; xchg ch, dh ; jmp qword ptr [rcx]
0x0000000000118d42 : add al, ch ; xor rax, qword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000184df7 : add al, cl ; cli ; cmc ; jmp qword ptr [rcx]
0x0000000000186137 : add al, cl ; cmp esi, esi ; jmp qword ptr [rcx]
0x0000000000180137 : add al, cl ; nop ; jmp qword ptr [rcx]
0x000000000017e247 : add al, cl ; popfq ; call qword ptr [rcx]
0x000000000017e1c7 : add al, cl ; popfq ; jmp qword ptr [rcx]
0x000000000001001f : add al, cl ; ret 0x39
0x0000000000179947 : add al, cl ; ret 0xffef
0x00000000001804c7 : add al, cl ; retf
0x000000000017ced7 : add al, cl ; sal cl, cl ; jmp qword ptr [rbx]
0x0000000000188087 : add al, cl ; sal dh, 1 ; jmp qword ptr [rsi]
0x00000000001833b7 : add al, cl ; xchg eax, ebp ; cmc ; jmp qword ptr [rcx]
0x0000000000185d77 : add al, cl ; xor al, 0xf6 ; jmp qword ptr [rcx]
0x0000000000173bff : add al, dh ; and ch, ah ; call qword ptr [rcx]
0x000000000017b0bf : add al, dh ; cmp al, dh ; jmp qword ptr [rdx]
0x000000000018028f : add al, dh ; cwde ; jmp rcx
0x00000000001830cf : add al, dh ; mov ch, dh ; jmp qword ptr [rcx]
0x000000000018adbf : add al, dh ; mov edi, dr0 ; call rsi
0x0000000000175f8f : add al, dh ; out dx, al ; jmp qword ptr [rcx]
0x000000000017723f : add al, dh ; out dx, eax ; jmp qword ptr [rdi]
0x00000000000064f7 : add al, dh ; ret
0x000000000001dccf : add al, dh ; retf
0x0000000000183daf : add al, dh ; retf -0xb
0x00000000001902ef : add al, dh ; sahf ; sti ; jmp qword ptr [rdx]
0x000000000017665f : add al, dh ; sbb bh, ch ; call qword ptr [rcx]
0x0000000000173edf : add al, dh ; sub esp, ebp ; jmp qword ptr [rdx]
0x00000000001710bf : add al, dh ; xchg ch, bh ; jmp qword ptr [rdx]
0x00000000001834df : add al, dh ; xchg eax, edi ; cmc ; call rax
0x000000000017fdbf : add al, dh ; xchg ebx, esi ; jmp qword ptr [rdx]
0x000000000017424f : add al, dh ; xor ebp, esp ; call qword ptr [rdx]
0x000000000000707f : add al, dl ; call qword ptr [rcx]
0x000000000018e9ff : add al, dl ; clc ; call qword ptr [rcx]
0x000000000018608f : add al, dl ; cmp dh, dh ; call qword ptr [rsi]
0x000000000017992f : add al, dl ; ret 0xffef
0x0000000000190c0f : add al, dl ; retf
0x000000000000491f : add al, dl ; retf 0xe
0x00000000001882df : add al, dl ; sal esi, 1 ; jmp qword ptr [rdi]
0x00000000001882af : add al, dl ; sal esi, 1 ; jmp qword ptr [rsi]
0x0000000000173eaf : add al, dl ; sub esp, ebp ; jmp qword ptr [rbx]
0x0000000000182faf : add al, dl ; xchg ch, dh ; jmp qword ptr [rcx]
0x000000000017571f : add al, dl ; xchg eax, ecx ; in eax, dx ; jmp rsp
0x000000000002117f : add bh, al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000e1e73 : add bh, al ; and al, 0xb8 ; sbb byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000018cec1 : add bh, al ; call qword ptr [rdi]
0x000000000014a53f : add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000011cc79 : add bh, bh ; and eax, 0x27b980 ; ret
0x0000000000191464 : add bh, bh ; inc dword ptr [rcx] ; or ch, byte ptr [rdi + 5] ; ret
0x0000000000191390 : add bh, bh ; inc dword ptr [rcx] ; or dh, byte ptr [rbp + 5] ; retf
0x000000000011035c : add bh, bh ; loope 0x1102f5 ; ret
0x000000000003f1fa : add bh, bh ; shr cl, 1 ; retf
0x00000000000daf92 : add bh, byte ptr [rax + 0x16] ; jbe 0xdafa9 ; ret
0x00000000000d2e9c : add bh, byte ptr [rax + 0xf] ; je 0xd2f09 ; ret
0x0000000000043a89 : add bh, byte ptr [rax + 1] ; ret
0x00000000000722bb : add bh, byte ptr [rax - 1] ; pop rbx ; ret
0x00000000000332fb : add bh, byte ptr [rax - 1] ; ret
0x0000000000148fd2 : add bh, byte ptr [rcx] ; enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x0000000000181c88 : add bh, byte ptr [rdx + 0xa] ; ret
0x00000000000c5ca1 : add bh, dh ; ret
0x000000000002505d : add bh, dh ; ret 0
0x0000000000025051 : add bh, dh ; ret 0xf800
0x00000000000327bf : add bh, dh ; ret 0xffff
0x000000000015ff90 : add bl, al ; cli ; jmp rax
0x000000000009a1b9 : add bl, al ; lea rax, qword ptr [rip + 0xa973e] ; ret
0x000000000009ad7d : add bl, al ; lea rax, qword ptr [rip + 0xae26a] ; ret
0x000000000008396d : add bl, al ; lea rax, qword ptr [rip + 0xc3f0a] ; ret
0x00000000000ba7dc : add bl, al ; mov eax, 0xffffffff ; ret
0x000000000009bf71 : add bl, al ; mov eax, 2 ; ret
0x00000000000c11ad : add bl, al ; nop ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x00000000000b970c : add bl, al ; nop ; mov eax, 0xfffa ; ret
0x00000000000e04bd : add bl, al ; nop ; xor eax, eax ; ret
0x00000000000c2fb1 : add bl, al ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000011f26a : add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000007e51c : add bl, al ; ret
0x0000000000033bb3 : add bl, al ; xor eax, eax ; ret
0x000000000015f457 : add bl, bh ; inc ebx ; add dh, bh ; jmp rdi
0x0000000000184670 : add bl, bl ; cmc ; jmp qword ptr [rsi]
0x00000000001729f5 : add bl, byte ptr [rax + 0xa] ; ret
0x0000000000176b7e : add bl, byte ptr [rax + 0xe] ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x0000000000187e95 : add bl, byte ptr [rbp + 0xa] ; ret
0x000000000016a724 : add bl, byte ptr [rcx - 0x676d0004] ; cld ; jmp qword ptr [rdx]
0x000000000017ee7d : add bl, byte ptr [rdx + 0xa] ; ret
0x000000000018af00 : add bl, byte ptr [rsi + 0xa] ; ret
0x00000000000bebcd : add bl, ch ; cmovns eax, dword ptr [rcx] ; retf -0x74bd
0x00000000000ffc0b : add bl, ch ; mov dh, 0x66 ; nop ; xor eax, eax ; ret
0x000000000004d89a : add bl, ch ; ret
0x0000000000079240 : add bl, ch ; ret 0x1f0f
0x0000000000110bea : add bl, ch ; ret 0x8b48
0x00000000000b4295 : add bl, ch ; retf -0x76b8
0x000000000010ce93 : add bl, ch ; retf 0x2e66
0x000000000003292f : add bl, dh ; addps xmm0, xmm0 ; ret
0x000000000009557f : add bl, dh ; movq qword ptr [rdi - 1], mm0 ; ret
0x000000000009558f : add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x0000000000032835 : add bl, dh ; mulps xmm1, xmm0 ; movaps xmm0, xmm1 ; ret
0x000000000002003f : add bl, dh ; ret
0x0000000000184200 : add bl, dl ; cmc ; jmp qword ptr [rcx]
0x0000000000030cde : add bl, sil ; ret
0x000000000004758c : add byte ptr [r11 - 0x78f0d008], r8b ; ret 0x22
0x00000000000e55e5 : add byte ptr [r13 + 0x395274c0], r8b ; ret
0x00000000000b9877 : add byte ptr [r15 - 0x48], sil ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000004364c : add byte ptr [r15], r9b ; xchg eax, edx ; ret 0x8949
0x000000000010378c : add byte ptr [r8 + 1], r9b ; ret
0x00000000000b603d : add byte ptr [r8 - 0x7d], r9b ; ret
0x000000000017531d : add byte ptr [r8], al ; and ah, dh ; in al, dx ; jmp rcx
0x000000000006dbe6 : add byte ptr [r8], al ; cmp eax, 0xff ; jne 0x6dbf9 ; pop rbx ; ret
0x00000000000231ad : add byte ptr [r8], r8b ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x00000000001751d5 : add byte ptr [r8], r8b ; out dx, al ; in al, dx ; jmp qword ptr [rdx]
0x00000000000e5630 : add byte ptr [r9], r15b ; ret
0x00000000000c8f73 : add byte ptr [r9], r15b ; ret 0x8944
0x00000000000b394c : add byte ptr [rax + 0x101], bh ; syscall
0x00000000000db6af : add byte ptr [rax + 0x102], bh ; syscall
0x00000000000dd10f : add byte ptr [rax + 0x107], bh ; syscall
0x00000000000e0906 : add byte ptr [rax + 0x10], bh ; syscall
0x00000000000dd04f : add byte ptr [rax + 0x10a], bh ; syscall
0x00000000000df925 : add byte ptr [rax + 0x10f], bh ; syscall
0x00000000000e8f6a : add byte ptr [rax + 0x121], bh ; syscall
0x00000000000e8f9f : add byte ptr [rax + 0x122], bh ; syscall
0x00000000000e8f9e : add byte ptr [rax + 0x122], dil ; syscall
0x00000000000e926f : add byte ptr [rax + 0x123], bh ; syscall
0x00000000000dbfdf : add byte ptr [rax + 0x124], bh ; syscall
0x00000000000dc03f : add byte ptr [rax + 0x125], bh ; syscall
0x00000000000e93ef : add byte ptr [rax + 0x126], bh ; syscall
0x000000000018091f : add byte ptr [rax + 0x12], dh ; hlt ; jmp qword ptr [rdx]
0x00000000000e980f : add byte ptr [rax + 0x12c], bh ; syscall
0x00000000000e91af : add byte ptr [rax + 0x131], bh ; syscall
0x00000000000e187f : add byte ptr [rax + 0x132], bh ; syscall
0x00000000000e98cf : add byte ptr [rax + 0x134], bh ; syscall
0x000000000018d3b7 : add byte ptr [rax + 0x13], bl ; clc ; call qword ptr [rsi]
0x00000000000db9bf : add byte ptr [rax + 0x15], bh ; syscall
0x000000000007d007 : add byte ptr [rax + 0x16], bh ; ret
0x00000000000dc00f : add byte ptr [rax + 0x16], bh ; syscall
0x00000000000f5ca6 : add byte ptr [rax + 0x16], dil ; ret
0x000000000018d62f : add byte ptr [rax + 0x17], ah ; clc ; jmp rdi
0x00000000000d1eaf : add byte ptr [rax + 0x18], bh ; syscall
0x00000000000e47cf : add byte ptr [rax + 0x1b], bh ; syscall
0x00000000000e479f : add byte ptr [rax + 0x1c], bh ; syscall
0x00000000000ea69f : add byte ptr [rax + 0x1d], bh ; syscall
0x00000000000ea6cf : add byte ptr [rax + 0x1f], bh ; syscall
0x000000000003270b : add byte ptr [rax + 0x1fe8c17f], al ; ret
0x00000000000dbf7f : add byte ptr [rax + 0x20], bh ; syscall
0x00000000000dbfaf : add byte ptr [rax + 0x21], bh ; syscall
0x0000000000173c9f : add byte ptr [rax + 0x23], ah ; in al, dx ; jmp qword ptr [rsi]
0x00000000000ab43f : add byte ptr [rax + 0x24], bh ; syscall
0x00000000000b817f : add byte ptr [rax + 0x25], bh ; syscall
0x00000000000ab46f : add byte ptr [rax + 0x26], bh ; syscall
0x0000000000176947 : add byte ptr [rax + 0x26], cl ; out dx, eax ; call qword ptr [rax]
0x00000000000b8f0f : add byte ptr [rax + 0x27], bh ; syscall
0x0000000000180ef7 : add byte ptr [rax + 0x28], cl ; hlt ; jmp rdx
0x00000000000e9f0f : add byte ptr [rax + 0x29], bh ; syscall
0x000000000004f803 : add byte ptr [rax + 0x29], cl ; ret
0x00000000000ac103 : add byte ptr [rax + 0x29], cl ; ret 0x2948
0x0000000000027093 : add byte ptr [rax + 0x29], cl ; ret 0x349
0x00000000000cd6b2 : add byte ptr [rax + 0x29], cl ; ret 0x6348
0x00000000000c0afd : add byte ptr [rax + 0x29], cl ; ret 0x8b44
0x000000000004c807 : add byte ptr [rax + 0x29], cl ; ret 0xc148
0x000000000003f61c : add byte ptr [rax + 0x29], cl ; retf
0x0000000000026aa1 : add byte ptr [rax + 0x29], cl ; retf -0x1c7d
0x000000000003e7f5 : add byte ptr [rax + 0x29], cl ; retf -0x72b8
0x0000000000046e03 : add byte ptr [rax + 0x29], cl ; retf -0x76b8
0x00000000000c9f57 : add byte ptr [rax + 0x29], cl ; retf -0x7b3a
0x0000000000027893 : add byte ptr [rax + 0x29], cl ; retf -0x7cbf
0x0000000000173fcf : add byte ptr [rax + 0x2a], dh ; in al, dx ; call qword ptr [rsi]
0x0000000000176b67 : add byte ptr [rax + 0x2e], cl ; out dx, eax ; call rbx
0x00000000000e99df : add byte ptr [rax + 0x31], bh ; syscall
0x00000000000e9a9f : add byte ptr [rax + 0x33], bh ; syscall
0x00000000000e9a6f : add byte ptr [rax + 0x34], bh ; syscall
0x000000000003f062 : add byte ptr [rax + 0x38], bh ; syscall
0x0000000000035fd6 : add byte ptr [rax + 0x39], cl ; ret
0x000000000002a4c6 : add byte ptr [rax + 0x39], cl ; ret 0x4476
0x0000000000077012 : add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000000a9b66 : add byte ptr [rax + 0x39], cl ; ret 0x940f
0x00000000000f5711 : add byte ptr [rax + 0x39], cl ; ret 0xd975
0x00000000000f57e0 : add byte ptr [rax + 0x39], cl ; ret 0xda75
0x0000000000038f8d : add byte ptr [rax + 0x39], cl ; ret 0xed75
0x0000000000129520 : add byte ptr [rax + 0x39], cl ; retf -0x1e8b
0x00000000001474e3 : add byte ptr [rax + 0x39], cl ; retf -0x268b
0x000000000012bfc6 : add byte ptr [rax + 0x39], cl ; retf -0x76b7
0x0000000000146c68 : add byte ptr [rax + 0x39], cl ; retf -0x78f1
0x000000000003e1ec : add byte ptr [rax + 0x39], cl ; retf -0x7cf1
0x000000000006cb7d : add byte ptr [rax + 0x39], cl ; retf -0x7df1
0x00000000000b9776 : add byte ptr [rax + 0x39], cl ; retf 0x1f74
0x00000000000b9795 : add byte ptr [rax + 0x39], cl ; retf 0x2475
0x000000000007a70f : add byte ptr [rax + 0x39], cl ; retf 0x2575
0x000000000012c4a6 : add byte ptr [rax + 0x39], cl ; retf 0x280f
0x00000000000f799f : add byte ptr [rax + 0x39], cl ; retf 0x2f77
0x0000000000132d9f : add byte ptr [rax + 0x39], cl ; retf 0x377
0x00000000000f8b3f : add byte ptr [rax + 0x39], cl ; retf 0x577
0x00000000000f7a1f : add byte ptr [rax + 0x39], cl ; retf 0x877
0x000000000006e263 : add byte ptr [rax + 0x39], cl ; retf 0xf48
0x00000000000b863f : add byte ptr [rax + 0x3b], bh ; syscall
0x000000000003f3a8 : add byte ptr [rax + 0x3e], bh ; mov rbx, rdi ; syscall
0x000000000003330f : add byte ptr [rax + 0x3e], bh ; syscall
0x000000000003330e : add byte ptr [rax + 0x3e], dil ; syscall
0x00000000000b7ebf : add byte ptr [rax + 0x3f], bh ; syscall
0x00000000000ea5af : add byte ptr [rax + 0x40], bh ; syscall
0x00000000000ea57f : add byte ptr [rax + 0x41], bh ; syscall
0x00000000000ea66f : add byte ptr [rax + 0x43], bh ; syscall
0x000000000016979d : add byte ptr [rax + 0x43], dl ; pop rcx ; clc ; ret 0x6e1f
0x000000000002b0ad : add byte ptr [rax + 0x440ffff9], al ; retf 0xd88
0x000000000018bb87 : add byte ptr [rax + 0x46], bh ; stc ; call qword ptr [rax]
0x00000000000ea54f : add byte ptr [rax + 0x47], bh ; syscall
0x000000000018e1df : add byte ptr [rax + 0x48], ah ; clc ; jmp qword ptr [rax]
0x00000000000dbcec : add byte ptr [rax + 0x48], bh ; syscall
0x000000000018e1f7 : add byte ptr [rax + 0x48], ch ; clc ; jmp qword ptr [rax]
0x00000000000dbddf : add byte ptr [rax + 0x49], bh ; syscall
0x000000000018e2d7 : add byte ptr [rax + 0x49], cl ; clc ; call qword ptr [rbx]
0x00000000000dbdde : add byte ptr [rax + 0x49], dil ; syscall
0x000000000018e2ef : add byte ptr [rax + 0x4a], dl ; clc ; call qword ptr [rsi]
0x0000000000177667 : add byte ptr [rax + 0x4c], bh ; out dx, eax ; jmp qword ptr [rdx]
0x00000000000e2ebf : add byte ptr [rax + 0x4d], bh ; syscall
0x00000000000dc0cf : add byte ptr [rax + 0x50], bh ; syscall
0x00000000000dc0ff : add byte ptr [rax + 0x51], bh ; syscall
0x0000000000064d3f : add byte ptr [rax + 0x52], bh ; syscall
0x00000000000db67f : add byte ptr [rax + 0x53], bh ; syscall
0x00000000000db67e : add byte ptr [rax + 0x53], dil ; syscall
0x00000000000dd13f : add byte ptr [rax + 0x54], bh ; syscall
0x00000000000dcfbf : add byte ptr [rax + 0x56], bh ; syscall
0x00000000000dd07f : add byte ptr [rax + 0x59], bh ; syscall
0x00000000000db58f : add byte ptr [rax + 0x5a], bh ; syscall
0x00000000000db5bf : add byte ptr [rax + 0x5b], bh ; syscall
0x000000000001f9c0 : add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x00000000000dc97f : add byte ptr [rax + 0x5d], bh ; syscall
0x00000000000dc9af : add byte ptr [rax + 0x5e], bh ; syscall
0x000000000017f54f : add byte ptr [rax + 0x5f], al ; call rsi
0x00000000000a889f : add byte ptr [rax + 0x60], bh ; syscall
0x00000000000e0acf : add byte ptr [rax + 0x61], bh ; syscall
0x00000000000e0b2f : add byte ptr [rax + 0x62], bh ; syscall
0x00000000000664ba : add byte ptr [rax + 0x63], cl ; adc al, 0x91 ; add rdx, rcx ; jmp rdx
0x00000000000663fd : add byte ptr [rax + 0x63], cl ; adc al, 0x96 ; add rdx, rsi ; jmp rdx
0x0000000000030eb5 : add byte ptr [rax + 0x63], cl ; adc al, 0x97 ; add rdx, rdi ; jmp rdx
0x000000000005d162 : add byte ptr [rax + 0x63], cl ; add al, 0x81 ; add rax, rcx ; jmp rax
0x000000000002ca00 : add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rax, rdx ; jmp rax
0x000000000005355a : add byte ptr [rax + 0x63], cl ; add al, 0x90 ; add rax, rdi ; jmp rax
0x000000000005d626 : add byte ptr [rax + 0x63], cl ; add al, 0x91 ; add rax, rcx ; jmp rax
0x00000000000b9d4a : add byte ptr [rax + 0x63], cl ; add al, 0x9a ; add rax, rdx ; jmp rax
0x0000000000047d55 : add byte ptr [rax + 0x63], cl ; add al, 0xb0 ; add rax, rdi ; jmp rax
0x00000000000990c6 : add byte ptr [rax + 0x63], cl ; add al, 0xbe ; add rax, rsi ; jmp rax
0x00000000000c979c : add byte ptr [rax + 0x63], cl ; add cl, byte ptr [rax - 0x77] ; ret
0x00000000001201dc : add byte ptr [rax + 0x63], cl ; clc ; mov eax, 0x3e ; syscall
0x0000000000072298 : add byte ptr [rax + 0x63], cl ; jnp 0x72312 ; syscall
0x000000000004a7da : add byte ptr [rax + 0x63], cl ; or byte ptr [r13 + r9*4 + 0x25], cl ; ret 0x11f2
0x000000000004fda2 : add byte ptr [rax + 0x63], cl ; ret
0x00000000000a8561 : add byte ptr [rax + 0x63], cl ; ret 0x148
0x000000000006574a : add byte ptr [rax + 0x63], cl ; ret 0x3948
0x00000000000f3bb8 : add byte ptr [rax + 0x63], cl ; ret 0x4864
0x000000000004b5ec : add byte ptr [rax + 0x63], cl ; ret 0x8348
0x000000000004e86a : add byte ptr [rax + 0x63], cl ; ret 0x8948
0x00000000000c2f7f : add byte ptr [rax + 0x63], cl ; ret 0x8d48
0x000000000004e067 : add byte ptr [rax + 0x63], cl ; ret 0x8d49
0x00000000000bea72 : add byte ptr [rax + 0x63], cl ; ret 0x9589
0x00000000000c221b : add byte ptr [rax + 0x63], cl ; ret 0xc790
0x000000000006c10f : add byte ptr [rax + 0x63], cl ; retf -0x72b4
0x00000000000cfc57 : add byte ptr [rax + 0x63], cl ; retf 0x5489
0x00000000000bebb2 : add byte ptr [rax + 0x63], cl ; ror byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000007333f : add byte ptr [rax + 0x63], cl ; sar dword ptr [rax + 2], 1 ; syscall
0x00000000000e45df : add byte ptr [rax + 0x63], cl ; std ; mov eax, 3 ; syscall
0x000000000002e676 : add byte ptr [rax + 0x63], cl ; sti ; mov eax, 3 ; syscall
0x00000000000f5bd4 : add byte ptr [rax + 0x63], cl ; sti ; mov rsi, rbp ; mov eax, ecx ; syscall
0x00000000000b7eef : add byte ptr [rax + 0x64], bh ; syscall
0x00000000000b8f2f : add byte ptr [rax + 0x66], bh ; syscall
0x00000000000e944f : add byte ptr [rax + 0x67], bh ; syscall
0x00000000000b8f4f : add byte ptr [rax + 0x68], bh ; syscall
0x00000000000b8f3f : add byte ptr [rax + 0x6b], bh ; syscall
0x00000000000b8f5f : add byte ptr [rax + 0x6c], bh ; syscall
0x00000000000b913f : add byte ptr [rax + 0x6d], bh ; syscall
0x00000000000b8f1f : add byte ptr [rax + 0x6e], bh ; syscall
0x00000000000b916f : add byte ptr [rax + 0x6f], bh ; syscall
0x00000000000b91cf : add byte ptr [rax + 0x70], bh ; syscall
0x000000000018f107 : add byte ptr [rax + 0x71], bh ; clc ; call qword ptr [rdx]
0x0000000000177fdf : add byte ptr [rax + 0x73], al ; out dx, eax ; jmp qword ptr [rcx]
0x00000000000b8f6f : add byte ptr [rax + 0x73], bh ; syscall
0x000000000007e98f : add byte ptr [rax + 0x74c08402], cl ; adc cl, byte ptr [rax - 1] ; ret 0x2288
0x00000000000b91ff : add byte ptr [rax + 0x76], bh ; syscall
0x00000000000b922f : add byte ptr [rax + 0x78], bh ; syscall
0x0000000000095acf : add byte ptr [rax + 0x78d4837], cl ; ret
0x00000000000b910f : add byte ptr [rax + 0x79], bh ; syscall
0x00000000000e8dcf : add byte ptr [rax + 0x7a], bh ; syscall
0x0000000000171e4f : add byte ptr [rax + 0x7b], al ; std ; call qword ptr [rcx]
0x00000000000e8dff : add byte ptr [rax + 0x7b], bh ; syscall
0x00000000000b919f : add byte ptr [rax + 0x7c], bh ; syscall
0x00000000000e914f : add byte ptr [rax + 0x7d], bh ; syscall
0x00000000000b9707 : add byte ptr [rax + 0x7e], bh ; ret
0x00000000000e917f : add byte ptr [rax + 0x7e], bh ; syscall
0x00000000001783ef : add byte ptr [rax + 0x7e], dl ; out dx, eax ; jmp qword ptr [rcx]
0x00000000000b965a : add byte ptr [rax + 0x7f], bh ; ret
0x0000000000033344 : add byte ptr [rax + 0x7f], bh ; syscall
0x000000000003338e : add byte ptr [rax + 0x82], bh ; syscall
0x00000000000337ef : add byte ptr [rax + 0x83], bh ; syscall
0x00000000000337ee : add byte ptr [rax + 0x83], dil ; syscall
0x00000000000db1ef : add byte ptr [rax + 0x84], bh ; syscall
0x00000000000e96ef : add byte ptr [rax + 0x86], bh ; syscall
0x00000000000db4bf : add byte ptr [rax + 0x8a], bh ; syscall
0x00000000000e0e2f : add byte ptr [rax + 0x8d], bh ; syscall
0x00000000000d1def : add byte ptr [rax + 0x8e], bh ; syscall
0x00000000000d1e1f : add byte ptr [rax + 0x8f], bh ; syscall
0x00000000000d1e4f : add byte ptr [rax + 0x90], bh ; syscall
0x00000000000d1e7f : add byte ptr [rax + 0x91], bh ; syscall
0x00000000000d1edf : add byte ptr [rax + 0x92], bh ; syscall
0x00000000000d1f0f : add byte ptr [rax + 0x93], bh ; syscall
0x00000000000d1f3f : add byte ptr [rax + 0x94], bh ; syscall
0x00000000000e485f : add byte ptr [rax + 0x96], bh ; syscall
0x00000000000e488f : add byte ptr [rax + 0x97], bh ; syscall
0x00000000000e48bf : add byte ptr [rax + 0x98], bh ; syscall
0x00000000000e90af : add byte ptr [rax + 0x9a], bh ; syscall
0x00000000000e950f : add byte ptr [rax + 0x9b], bh ; syscall
0x00000000000e907f : add byte ptr [rax + 0x9e], bh ; syscall
0x00000000000e0aff : add byte ptr [rax + 0xa0], bh ; syscall
0x00000000000e175f : add byte ptr [rax + 0xa1], bh ; syscall
0x00000000000e17ef : add byte ptr [rax + 0xa2], bh ; syscall
0x00000000000e172f : add byte ptr [rax + 0xa3], bh ; syscall
0x00000000000a897f : add byte ptr [rax + 0xa4], bh ; syscall
0x00000000000e8d6f : add byte ptr [rax + 0xa6], bh ; syscall
0x00000000000e1c1f : add byte ptr [rax + 0xa7], bh ; syscall
0x00000000000e1c4f : add byte ptr [rax + 0xa8], bh ; syscall
0x00000000000e470f : add byte ptr [rax + 0xa], bh ; syscall
0x00000000000e14ff : add byte ptr [rax + 0xaa], bh ; syscall
0x00000000000e159f : add byte ptr [rax + 0xab], bh ; syscall
0x00000000000e8c2f : add byte ptr [rax + 0xac], bh ; syscall
0x00000000000e8bff : add byte ptr [rax + 0xad], bh ; syscall
0x00000000000e8bfe : add byte ptr [rax + 0xad], dil ; syscall
0x00000000000e91df : add byte ptr [rax + 0xae], bh ; syscall
0x00000000000e920f : add byte ptr [rax + 0xb0], bh ; syscall
0x00000000000e46df : add byte ptr [rax + 0xb], bh ; syscall
0x00000000000e8d9f : add byte ptr [rax + 0xbb], bh ; syscall
0x00000000000e75df : add byte ptr [rax + 0xc6], bh ; syscall
0x00000000000e74bf : add byte ptr [rax + 0xc7], bh ; syscall
0x00000000000c3d6c : add byte ptr [rax + 0xc], bh ; jmp 0xc3d3e
0x00000000000f965f : add byte ptr [rax + 0xca], bh ; ret
0x00000000000f54f1 : add byte ptr [rax + 0xca], bh ; syscall
0x00000000000e923f : add byte ptr [rax + 0xd5], bh ; syscall
0x00000000000e90df : add byte ptr [rax + 0xe4], bh ; syscall
0x00000000000b9d7e : add byte ptr [rax + 0xe5], bh ; syscall
0x0000000000032ff7 : add byte ptr [rax + 0xe], bh ; syscall
0x00000000000e2ccf : add byte ptr [rax + 0xeb], bh ; syscall
0x00000000000e2cce : add byte ptr [rax + 0xeb], dil ; syscall
0x0000000000099197 : add byte ptr [rax + 0xf48f0e5], al ; ret 0xc35b
0x000000000002c064 : add byte ptr [rax + 0xf], al ; mov bh, 0xc0 ; ret
0x0000000000082385 : add byte ptr [rax + 0xf], cl ; mov ebp, 0xf80148c0 ; ret
0x0000000000022577 : add byte ptr [rax + 0xf], cl ; mov esi, 0x83480147 ; ret
0x00000000000e1cc8 : add byte ptr [rax + 0xf], cl ; ret
0x00000000000ea3fa : add byte ptr [rax + 0xf], cl ; ret 0x31c3
0x0000000000051415 : add byte ptr [rax + 0xf], cl ; ret 0x348
0x00000000000833db : add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000011c5f4 : add byte ptr [rax + 0xf], cl ; ret 0x8348
0x00000000000f10ab : add byte ptr [rax + 0xf], cl ; ret 0x8349
0x000000000002435a : add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000799ab : add byte ptr [rax + 0xf], cl ; ret 0x894c
0x00000000000a9d86 : add byte ptr [rax + 0xf], cl ; ret 0x8d48
0x00000000000991b8 : add byte ptr [rax + 0xf], cl ; ret 0xb8c3
0x000000000009910a : add byte ptr [rax + 0xf], cl ; ret 0xc35b
0x000000000008b2fa : add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000000ddcb8 : add byte ptr [rax + 0xf], cl ; ret 0xc3f6
0x0000000000025a56 : add byte ptr [rax + 0xf], cl ; ret 0xf685
0x00000000000aa47a : add byte ptr [rax + 0xf], cl ; retf -0x76b8
0x000000000004cbd4 : add byte ptr [rax + 0xf], cl ; retf 0xf4c
0x00000000000b971f : add byte ptr [rax + 0xfc17], bh ; ret
0x00000000000e93bf : add byte ptr [rax + 0xfd], bh ; syscall
0x00000000000e941f : add byte ptr [rax + 0xff], bh ; syscall
0x00000000000da227 : add byte ptr [rax + 1], bh ; pop rbx ; ret
0x0000000000043a4c : add byte ptr [rax + 1], bh ; ret
0x00000000000eae18 : add byte ptr [rax + 1], bh ; syscall
0x0000000000083685 : add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x00000000000231b2 : add byte ptr [rax + 1], cl ; ret
0x000000000002d746 : add byte ptr [rax + 1], cl ; retf -0x76b8
0x000000000008368f : add byte ptr [rax + 1], cl ; retf -0x7cb8
0x0000000000132e5d : add byte ptr [rax + 1], cl ; retf -0x7eb8
0x00000000000da226 : add byte ptr [rax + 1], dil ; pop rbx ; ret
0x000000000007081e : add byte ptr [rax + 1], dil ; ret
0x000000000010c8af : add byte ptr [rax + 2], bh ; ret
0x000000000001fa71 : add byte ptr [rax + 2], bh ; syscall
0x00000000000da63c : add byte ptr [rax + 3], bh ; syscall
0x00000000001732a7 : add byte ptr [rax + 5], cl ; in al, dx ; jmp qword ptr [rcx]
0x0000000000179dc7 : add byte ptr [rax + 6], ch ; std ; jmp rdi
0x00000000000b98f6 : add byte ptr [rax + 7], bh ; ret
0x0000000000173407 : add byte ptr [rax + 7], cl ; in al, dx ; jmp qword ptr [rsi]
0x000000000002111f : add byte ptr [rax + 8], bh ; ret
0x00000000000e8d2f : add byte ptr [rax + 8], bh ; syscall
0x0000000000176187 : add byte ptr [rax + 8], ch ; out dx, eax ; jmp qword ptr [rax]
0x00000000001947af : add byte ptr [rax + 8], cl ; add byte ptr [rax], al ; retf 4
0x00000000000d401b : add byte ptr [rax + 9], cl ; retf -0x76b8
0x0000000000180aab : add byte ptr [rax + rax + 0x18800001], ah ; hlt ; call rdi
0x000000000015170b : add byte ptr [rax + rax + 0xbf0000], bh ; add byte ptr [rax], al ; ret 0
0x0000000000188a93 : add byte ptr [rax + rax*4 - 0x1527ffff], cl ; idiv bh ; retf
0x000000000017df33 : add byte ptr [rax + rax*4 - 0x6ae80000], ah ; jmp qword ptr [rcx]
0x0000000000184a6f : add byte ptr [rax + rax*8], al ; retf
0x000000000009514c : add byte ptr [rax + rax], 0 ; ret
0x0000000000190a2b : add byte ptr [rax + rax], ah ; add al, byte ptr [rax] ; nop ; ret
0x000000000000a297 : add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x000000000018cdef : add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; in al, dx ; ret
0x000000000016f2ef : add byte ptr [rax + rax], ah ; stc ; call rsp
0x00000000000fd264 : add byte ptr [rax + rax], al ; add al, ch ; ret
0x0000000000100d65 : add byte ptr [rax + rax], al ; add al, ch ; ret 0xf1eb
0x00000000000dd55c : add byte ptr [rax + rax], al ; add al, ch ; retf
0x0000000000004a5f : add byte ptr [rax + rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x3c
0x000000000006435e : add byte ptr [rax + rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000191973 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; jle 0x191989 ; add byte ptr [rax], al ; retf
0x000000000017d5f7 : add byte ptr [rax + rax], cl ; add ah, dh ; retf
0x0000000000079ac9 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000376d9 : add byte ptr [rax + rax], cl ; add byte ptr [rbp + 0x21], dh ; ret
0x000000000018d4ff : add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; cld ; retf 1
0x000000000018cc6f : add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret 1
0x000000000018cca7 : add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 1
0x000000000018d457 : add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; push rsp ; retf 1
0x000000000017d4ff : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; cld ; retf 0
0x000000000017cdef : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, dx ; ret
0x000000000017d46f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; retf 0
0x000000000017d457 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; push rsp ; retf 0
0x000000000017d49f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pushfq ; retf 0
0x000000000017cc4f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; ret 0
0x000000000017d547 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; retf
0x00000000001732a3 : add byte ptr [rax + rbp + 0x5480000], bl ; in al, dx ; jmp qword ptr [rcx]
0x00000000001832bb : add byte ptr [rax + rbp - 0x71efffff], dh ; cmc ; jmp qword ptr [rcx]
0x000000000018328b : add byte ptr [rax + rbp - 0x724fffff], al ; cmc ; jmp qword ptr [rcx]
0x000000000009aa65 : add byte ptr [rax + rbp*2 + 0x48], dh ; lea eax, dword ptr [rdi - 0x10] ; ret
0x000000000016d8cf : add byte ptr [rax + rbp*2 - 0xb], ah ; jmp rsp
0x000000000016f69f : add byte ptr [rax + rbp*4], dl ; stc ; jmp rsp
0x000000000017f2ab : add byte ptr [rax + rbp*8 + 0x54e00000], ah ; call rcx
0x000000000017e28b : add byte ptr [rax + rbx*8 - 0x61500000], al ; call rdi
0x000000000018e243 : add byte ptr [rax + rbx*8], bh ; add dword ptr [rax], eax ; sbb byte ptr [rcx - 8], cl ; jmp qword ptr [rax]
0x000000000019127b : add byte ptr [rax + rcx + 2], dh ; add byte ptr [rax], dh ; loop 0x191283 ; jmp qword ptr [rbx]
0x000000000016c9af : add byte ptr [rax + rcx - 0xf], dh ; jmp rsp
0x00000000000e3a8b : add byte ptr [rax + rcx - 9], dh ; ret 0xfc07
0x000000000003fc66 : add byte ptr [rax + rcx*2 - 0x75], ah ; add byte ptr [rax - 0x77], cl ; ret 0xde8
0x000000000016f087 : add byte ptr [rax + rcx*8 - 8], dh ; call rsp
0x000000000016cf7f : add byte ptr [rax + rcx*8], al ; call rsp
0x00000000001933e3 : add byte ptr [rax + rcx], dl ; add byte ptr [rax], al ; retf
0x00000000001742ab : add byte ptr [rax + rdi + 0x33f00000], ah ; in al, dx ; call qword ptr [rdx]
0x0000000000174293 : add byte ptr [rax + rdi + 0x33f80000], cl ; in al, dx ; call qword ptr [rax]
0x000000000018424b : add byte ptr [rax + rdi + 1], al ; add byte ptr [rax - 0x2d], dl ; cmc ; jmp qword ptr [rcx]
0x0000000000188233 : add byte ptr [rax + rdi*2], ch ; add dword ptr [rax], eax ; pop rax ; sal esi, 1 ; jmp qword ptr [rsi]
0x000000000018821b : add byte ptr [rax + rdi*2], dl ; add dword ptr [rax], eax ; sal esi, 1 ; jmp qword ptr [rsi]
0x000000000016bf87 : add byte ptr [rax + rdi*4], dl ; out dx, eax ; call rsp
0x000000000018028b : add byte ptr [rax + rdi*8 - 0x67100000], al ; jmp rcx
0x000000000017424b : add byte ptr [rax + rdi], al ; add al, dh ; xor ebp, esp ; call qword ptr [rdx]
0x0000000000174263 : add byte ptr [rax + rdi], bl ; add al, bh ; xor ebp, esp ; call qword ptr [rax]
0x0000000000174233 : add byte ptr [rax + rdi], ch ; add byte ptr [rax], al ; clc ; xor ebp, esp ; call qword ptr [rax]
0x000000000017427b : add byte ptr [rax + rdi], dh ; add al, dh ; xor ebp, esp ; call qword ptr [rdx]
0x00000000001528b7 : add byte ptr [rax + rdx + 0x10bf0000], bh ; add byte ptr [rax], al ; ret 0x10
0x000000000016cb67 : add byte ptr [rax + rdx*2 - 0xf], dl ; jmp rsp
0x0000000000185a33 : add byte ptr [rax + rdx*2], ch ; add dword ptr [rax], eax ; clc ; xor esi, esi ; jmp qword ptr [rcx]
0x000000000016fd97 : add byte ptr [rax + rdx*4], al ; cli ; jmp rsp
0x000000000016f13f : add byte ptr [rax + rdx*8 - 8], al ; call rsp
0x0000000000181a23 : add byte ptr [rax + rdx], bl ; add dword ptr [rax], eax ; js 0x1819ff ; hlt ; jmp rbx
0x000000000016d127 : add byte ptr [rax + rdx], dl ; jmp rsp
0x0000000000183ab3 : add byte ptr [rax + rsi - 0x41c7ffff], ch ; cmc ; jmp rcx
0x000000000016ed9f : add byte ptr [rax + rsi*2 - 8], ah ; call rsp
0x000000000017fa6b : add byte ptr [rax + rsi*8], ah ; add byte ptr [rax], dl ; ja 0x17fa6e ; call rsi
0x00000000001751d7 : add byte ptr [rax - 0x12], cl ; in al, dx ; jmp qword ptr [rdx]
0x000000000006631f : add byte ptr [rax - 0x14dff3b5], al ; retf 0x2e66
0x0000000000111e66 : add byte ptr [rax - 0x168b7f80], 0x89 ; ret 0x894d
0x000000000017ea93 : add byte ptr [rax - 0x1780000], cl ; call qword ptr [rax]
0x00000000000f2ac2 : add byte ptr [rax - 0x178b7f80], 0x89 ; ret 0xeac1
0x000000000017eaab : add byte ptr [rax - 0x1800000], ah ; call qword ptr [rax]
0x000000000002e032 : add byte ptr [rax - 0x188b7f80], 0x89 ; ret 0x894c
0x000000000019131f : add byte ptr [rax - 0x19], al ; clc ; call qword ptr [rcx]
0x000000000018b937 : add byte ptr [rax - 0x19], cl ; sti ; jmp qword ptr [rdx]
0x0000000000184877 : add byte ptr [rax - 0x1a], cl ; cmc ; jmp qword ptr [rcx]
0x0000000000190f1b : add byte ptr [rax - 0x22fffffe], dl ; clc ; call qword ptr [rdi]
0x000000000017d0ef : add byte ptr [rax - 0x23], dl ; int1 ; call qword ptr [rsi]
0x00000000001842f7 : add byte ptr [rax - 0x2c], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001842df : add byte ptr [rax - 0x2c], dl ; cmc ; jmp qword ptr [rcx]
0x0000000000033a11 : add byte ptr [rax - 0x2d], cl ; loopne 0x33a67 ; or dword ptr [rdi], eax ; xor eax, eax ; ret
0x000000000018424f : add byte ptr [rax - 0x2d], dl ; cmc ; jmp qword ptr [rcx]
0x0000000000182b47 : add byte ptr [rax - 0x30], bl ; stc ; call qword ptr [rax]
0x00000000001840af : add byte ptr [rax - 0x31], ah ; cmc ; jmp qword ptr [rcx]
0x0000000000184097 : add byte ptr [rax - 0x31], bl ; cmc ; call qword ptr [rsi]
0x0000000000183fdf : add byte ptr [rax - 0x32], dl ; cmc ; jmp qword ptr [rcx]
0x0000000000181a27 : add byte ptr [rax - 0x33], bh ; hlt ; jmp rbx
0x0000000000183f77 : add byte ptr [rax - 0x33], ch ; cmc ; call rdi
0x0000000000183eff : add byte ptr [rax - 0x34], ah ; cmc ; call qword ptr [rcx]
0x0000000000183ee7 : add byte ptr [rax - 0x34], cl ; cmc ; jmp qword ptr [rcx]
0x000000000017e8ff : add byte ptr [rax - 0x35], al ; jmp qword ptr [rcx]
0x000000000017e917 : add byte ptr [rax - 0x35], bl ; jmp qword ptr [rcx]
0x000000000017cbdf : add byte ptr [rax - 0x38], ah ; cli ; call qword ptr [rbx]
0x000000000003191f : add byte ptr [rax - 0x39], cl ; ret
0x00000000000312ea : add byte ptr [rax - 0x39], cl ; ret 0xfff6
0x0000000000030f97 : add byte ptr [rax - 0x39], cl ; ret 0xfffa
0x000000000003121b : add byte ptr [rax - 0x39], cl ; ret 0xfffc
0x00000000000311e3 : add byte ptr [rax - 0x39], cl ; ret 0xfffe
0x0000000000038035 : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000009a4af : add byte ptr [rax - 0x39], cl ; rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x000000000009a48f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x000000000009a4ef : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x000000000009a49f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x000000000009a4df : add byte ptr [rax - 0x39], cl ; rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x000000000003305f : add byte ptr [rax - 0x39], cl ; ror byte ptr [rdi], 0 ; add byte ptr [rax], al ; syscall
0x0000000000179bff : add byte ptr [rax - 0x39], dl ; out dx, eax ; call qword ptr [rsi]
0x000000000017cad7 : add byte ptr [rax - 0x3b], cl ; cli ; call rsp
0x0000000000179b27 : add byte ptr [rax - 0x3c], bl ; out dx, eax ; jmp qword ptr [rax]
0x00000000000a82b9 : add byte ptr [rax - 0x3db2f0b8], al ; pop rbx ; ret
0x0000000000032a65 : add byte ptr [rax - 0x3f000001], al ; shr eax, 0x1f ; ret
0x000000000015d20f : add byte ptr [rax - 0x3f000c6f], ah ; xchg eax, ecx ; jmp rax
0x000000000003276c : add byte ptr [rax - 0x3f91f09a], al ; ret
0x0000000000105737 : add byte ptr [rax - 0x3f], cl ; cli ; add al, 0x48 ; add edx, 1 ; syscall
0x0000000000118dd0 : add byte ptr [rax - 0x3f], cl ; cli ; and byte ptr [rcx + 1], al ; retf -0x72b3
0x000000000001f9ae : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x0000000000067785 : add byte ptr [rax - 0x3f], cl ; ret 0x6411
0x0000000000032e25 : add byte ptr [rax - 0x3f], cl ; retf 0x6411
0x000000000005099b : add byte ptr [rax - 0x3f], cl ; stc ; add cl, byte ptr [rax + 0x29] ; retf
0x00000000000d7a6e : add byte ptr [rax - 0x41f0d806], al ; retf 0x2974
0x000000000017b997 : add byte ptr [rax - 0x44], cl ; cli ; call qword ptr [rax]
0x0000000000038232 : add byte ptr [rax - 0x48], cl ; ret 0xffff
0x000000000003b841 : add byte ptr [rax - 0x48], cl ; retf -2
0x00000000001794ef : add byte ptr [rax - 0x4a], dh ; out dx, eax ; call qword ptr [rbx]
0x000000000016a180 : add byte ptr [rax - 0x4f7f0003], dh ; std ; call qword ptr [rax]
0x000000000017e077 : add byte ptr [rax - 0x51], bh ; cld ; jmp qword ptr [rbx]
0x0000000000183777 : add byte ptr [rax - 0x57], bh ; cmc ; jmp rcx
0x000000000017cc57 : add byte ptr [rax - 0x59], bh ; cld ; call qword ptr [rbx]
0x000000000017c93f : add byte ptr [rax - 0x5a], dl ; int1 ; jmp rbx
0x000000000017e43f : add byte ptr [rax - 0x5b], al ; jmp qword ptr [rcx]
0x0000000000190147 : add byte ptr [rax - 0x60], ch ; sti ; jmp qword ptr [rdx]
0x0000000000183547 : add byte ptr [rax - 0x66], bh ; cmc ; jmp qword ptr [rcx]
0x000000000017c9e7 : add byte ptr [rax - 0x6c], ch ; cli ; call qword ptr [rdi]
0x000000000017c9cf : add byte ptr [rax - 0x6d], dl ; cli ; jmp qword ptr [rdi]
0x000000000016aaa0 : add byte ptr [rax - 0x705f0004], cl ; cld ; jmp qword ptr [rax]
0x0000000000180017 : add byte ptr [rax - 0x71], bl ; jmp qword ptr [rcx]
0x00000000000f168a : add byte ptr [rax - 0x71f0ffc8], al ; ret
0x0000000000183247 : add byte ptr [rax - 0x73], ch ; cmc ; jmp qword ptr [rcx]
0x000000000002b227 : add byte ptr [rax - 0x73], cl ; add eax, 0x1367f6 ; ret
0x00000000000203df : add byte ptr [rax - 0x73], cl ; add eax, 0x141184 ; ret
0x00000000000203ef : add byte ptr [rax - 0x73], cl ; add eax, 0x143049 ; ret
0x0000000000109b7f : add byte ptr [rax - 0x73], cl ; add eax, 0x57e9e ; ret
0x0000000000020bd4 : add byte ptr [rax - 0x73], cl ; and qword ptr [rax - 0x77], rcx ; ret 0x894c
0x000000000009aaaf : add byte ptr [rax - 0x73], cl ; clc ; ret
0x000000000009aabf : add byte ptr [rax - 0x73], cl ; cld ; ret
0x0000000000100def : add byte ptr [rax - 0x73], cl ; cmp eax, 0x29c905 ; call rax
0x000000000009aa9f : add byte ptr [rax - 0x73], cl ; hlt ; ret
0x00000000000efc90 : add byte ptr [rax - 0x73], cl ; pop rdx ; add dword ptr [rax + 0x39], ecx ; retf
0x00000000000fef37 : add byte ptr [rax - 0x73], cl ; pop rsp ; and al, 0x44 ; call 0xdb968
0x00000000000786ca : add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x00000000000efb60 : add byte ptr [rax - 0x73], cl ; push rax ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000e0608 : add byte ptr [rax - 0x73], cl ; push rsp ; and al, 0xd0 ; syscall
0x000000000003f1cd : add byte ptr [rax - 0x73], cl ; xor eax, 0x1cb ; call rax
0x0000000000068b38 : add byte ptr [rax - 0x73], cl ; xor eax, 0x30 ; call rax
0x0000000000075b32 : add byte ptr [rax - 0x73], cl ; xor eax, 0xffffe2d6 ; call rax
0x0000000000075662 : add byte ptr [rax - 0x73], cl ; xor eax, 0xffffe7a6 ; call rax
0x0000000000074388 : add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffa80 ; call rax
0x0000000000074140 : add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffcc8 ; call rax
0x0000000000068e22 : add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffd46 ; call rax
0x000000000018322f : add byte ptr [rax - 0x73], dl ; cmc ; jmp qword ptr [rcx]
0x000000000007cc4f : add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000e76ff : add byte ptr [rax - 0x75], cl ; adc byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x00000000000cc67b : add byte ptr [rax - 0x75], cl ; adc byte ptr [rcx + 0x63], r9b ; retf -0x72b4
0x00000000001037a2 : add byte ptr [rax - 0x75], cl ; add byte ptr [r8 + 1], r9b ; ret
0x00000000000b7a42 : add byte ptr [rax - 0x75], cl ; add byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000035fc1 : add byte ptr [rax - 0x75], cl ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x000000000011ccd2 : add byte ptr [rax - 0x75], cl ; add eax, 0x27d716 ; call qword ptr [rax]
0x000000000011c6a5 : add byte ptr [rax - 0x75], cl ; add eax, 0x27dd43 ; call qword ptr [rax]
0x0000000000075e8f : add byte ptr [rax - 0x75], cl ; add eax, 0x324669 ; ret
0x000000000002899f : add byte ptr [rax - 0x75], cl ; add eax, 0x371f29 ; ret
0x00000000000212cf : add byte ptr [rax - 0x75], cl ; add eax, 0x37d039 ; ret
0x00000000000212bf : add byte ptr [rax - 0x75], cl ; add eax, 0x37d059 ; ret
0x00000000000e1e9e : add byte ptr [rax - 0x75], cl ; and al, 0xb0 ; ret
0x000000000006d118 : add byte ptr [rax - 0x75], cl ; cmp byte ptr [r8 - 0x77], cl ; ret 0x348
0x00000000000c4c2f : add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000000000007bb9f : add byte ptr [rax - 0x75], cl ; je 0x7bbd1 ; sub byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x000000000008b0e5 : add byte ptr [rax - 0x75], cl ; je 0x8b116 ; cmp byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000ced8b : add byte ptr [rax - 0x75], cl ; je 0xcedbb ; jo 0xced9a ; ret 0xc083
0x00000000000251d5 : add byte ptr [rax - 0x75], cl ; jl 0x25206 ; or byte ptr [rax + 0x29], cl ; retf -0x1f7d
0x000000000006e3cf : add byte ptr [rax - 0x75], cl ; mov rax, qword ptr [rax + 0x4c] ; ret
0x00000000000c5c4f : add byte ptr [rax - 0x75], cl ; or byte ptr [r8 + 0x63], r9b ; ret 0xb60f
0x00000000000e76f7 : add byte ptr [rax - 0x75], cl ; pop rax ; ret
0x000000000007901f : add byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0x7404
0x000000000012d9ef : add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000ec186 : add byte ptr [rax - 0x75], cl ; push rsp ; retf -0x74c0
0x0000000000042627 : add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x48f8
0x00000000000219a2 : add byte ptr [rax - 0x75], cl ; ret
0x00000000000d16ed : add byte ptr [rax - 0x75], cl ; sbb al, ch ; retf -0xa4f
0x00000000000b516f : add byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x00000000000eb2d6 : add byte ptr [rax - 0x75], cl ; sbb byte ptr [rsi - 0x7d], spl ; add byte ptr [rcx], al ; ret
0x00000000000da9c7 : add byte ptr [rax - 0x75], cl ; test dword ptr [rax - 0x7c000002], ecx ; ret
0x000000000007b597 : add byte ptr [rax - 0x75], cl ; xor al, 0x24 ; jmp rax
0x000000000005d535 : add byte ptr [rax - 0x75], cl ; xor eax, 0x33ba33 ; call rax
0x000000000005548d : add byte ptr [rax - 0x75], cl ; xor eax, 0x343adb ; call rax
0x0000000000054e51 : add byte ptr [rax - 0x75], cl ; xor eax, 0x344117 ; call rax
0x000000000005229d : add byte ptr [rax - 0x75], cl ; xor eax, 0x346ccb ; call rax
0x0000000000049de9 : add byte ptr [rax - 0x75], cl ; xor eax, 0x34f17f ; call rax
0x0000000000046fbd : add byte ptr [rax - 0x75], cl ; xor eax, 0x351fab ; call rax
0x00000000000e3232 : add byte ptr [rax - 0x76b7ffc8], al ; ret
0x00000000000e37e2 : add byte ptr [rax - 0x76b80000], al ; ret
0x0000000000067adc : add byte ptr [rax - 0x76b80000], al ; ret 0x3f75
0x00000000000f7c07 : add byte ptr [rax - 0x76b80000], al ; ret 0x4075
0x00000000000680ad : add byte ptr [rax - 0x76b80000], al ; ret 0x4275
0x000000000011f364 : add byte ptr [rax - 0x77], cl ; adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x0000000000082700 : add byte ptr [rax - 0x77], cl ; add eax, 0x319180 ; ret
0x000000000011f50f : add byte ptr [rax - 0x77], cl ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x000000000007e2ae : add byte ptr [rax - 0x77], cl ; and al, 8 ; call qword ptr [rdx]
0x0000000000035f4f : add byte ptr [rax - 0x77], cl ; clc ; cqo ; idiv rsi ; ret
0x00000000000e3088 : add byte ptr [rax - 0x77], cl ; clc ; mov byte ptr [r8 - 1], 0 ; ret
0x000000000006a2c5 : add byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000ca635 : add byte ptr [rax - 0x77], cl ; enter -0x72b8, 0x14 ; retf 0x17eb
0x0000000000068795 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000645be : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000007b2b0 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x000000000011dc3f : add byte ptr [rax - 0x77], cl ; fiadd word ptr [rcx + rcx*4 - 0x40] ; syscall
0x000000000011db89 : add byte ptr [rax - 0x77], cl ; fiadd word ptr [rcx + rcx*4 - 8] ; syscall
0x00000000000d0100 : add byte ptr [rax - 0x77], cl ; fimul word ptr [rax - 0x75] ; or cl, byte ptr [rax - 0x77] ; ret 0x91e8
0x000000000010b5c5 : add byte ptr [rax - 0x77], cl ; fimul word ptr [rax - 0x77] ; out dx, eax ; call 0x118059
0x000000000007dbfa : add byte ptr [rax - 0x77], cl ; fimul word ptr [rcx + rcx*4 - 0x11] ; call rax
0x000000000001fa10 : add byte ptr [rax - 0x77], cl ; fistp qword ptr [rax + 1] ; syscall
0x0000000000031beb : add byte ptr [rax - 0x77], cl ; fistp qword ptr [rax + 3] ; syscall
0x00000000000317c7 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x39] ; ret
0x000000000011ee39 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x75] ; and al, 0x10 ; call rax
0x000000000010be2e : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x75] ; or al, 0x24 ; call rcx
0x000000000008f44e : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0x36e8
0x00000000000475ee : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; retf -0x76b8
0x00000000000ce123 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; retf -0x76bc
0x00000000000c2ccb : add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x00000000000b8b41 : add byte ptr [rax - 0x77], cl ; fmul qword ptr [rax - 0x75] ; pop rbp ; clc ; leave ; ret
0x0000000000067584 : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x00000000000a95b5 : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0xfffa
0x0000000000101a1c : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; stosd dword ptr [rdi], eax ; retf
0x00000000000a7145 : add byte ptr [rax - 0x77], cl ; imul eax ; ret 0xf793
0x00000000000f8db0 : add byte ptr [rax - 0x77], cl ; in eax, -0x18 ; xchg eax, edi ; ret 0xfff7
0x00000000000523fe : add byte ptr [rax - 0x77], cl ; mov ebp, 0xffffef38 ; jmp rax
0x0000000000071af3 : add byte ptr [rax - 0x77], cl ; mov edx, 0x130 ; pop rbx ; ret
0x00000000000e7b36 : add byte ptr [rax - 0x77], cl ; mov edx, dword ptr [rax - 0x77000000] ; ret 0xe8c1
0x00000000000eab98 : add byte ptr [rax - 0x77], cl ; out -0x48, eax ; add al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000011df49 : add byte ptr [rax - 0x77], cl ; out dx, al ; mov eax, 1 ; syscall
0x000000000007debb : add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call rax
0x000000000010cb6c : add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x000000000010b3e3 : add byte ptr [rax - 0x77], cl ; out dx, eax ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000010b224 : add byte ptr [rax - 0x77], cl ; out dx, eax ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x0000000000028a60 : add byte ptr [rax - 0x77], cl ; out dx, eax ; mov eax, 3 ; syscall
0x00000000000f4279 : add byte ptr [rax - 0x77], cl ; push rbp ; nop ; mov rdx, r13 ; call rax
0x0000000000078aae : add byte ptr [rax - 0x77], cl ; push rsp ; and al, 8 ; xor edi, edi ; call qword ptr [rax]
0x0000000000026abf : add byte ptr [rax - 0x77], cl ; ret
0x0000000000057028 : add byte ptr [rax - 0x77], cl ; ret 0x148
0x000000000008312f : add byte ptr [rax - 0x77], cl ; ret 0x14c
0x00000000000ab10f : add byte ptr [rax - 0x77], cl ; ret 0x19e9
0x0000000000107621 : add byte ptr [rax - 0x77], cl ; ret 0x1be
0x000000000005bc6c : add byte ptr [rax - 0x77], cl ; ret 0x1be8
0x000000000007ad7c : add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x0000000000041475 : add byte ptr [rax - 0x77], cl ; ret 0x2948
0x00000000000688b6 : add byte ptr [rax - 0x77], cl ; ret 0x294c
0x00000000000fe162 : add byte ptr [rax - 0x77], cl ; ret 0x2e66
0x0000000000067da3 : add byte ptr [rax - 0x77], cl ; ret 0x38b
0x0000000000031c9a : add byte ptr [rax - 0x77], cl ; ret 0x394d
0x00000000000e736a : add byte ptr [rax - 0x77], cl ; ret 0x3be
0x0000000000040f54 : add byte ptr [rax - 0x77], cl ; ret 0x3dbe
0x0000000000067adf : add byte ptr [rax - 0x77], cl ; ret 0x3f75
0x00000000000f7c0a : add byte ptr [rax - 0x77], cl ; ret 0x4075
0x00000000000680b0 : add byte ptr [rax - 0x77], cl ; ret 0x4275
0x000000000010769c : add byte ptr [rax - 0x77], cl ; ret 0x46c7
0x00000000000d2f1f : add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000000ee99b : add byte ptr [rax - 0x77], cl ; ret 0x850f
0x0000000000078d52 : add byte ptr [rax - 0x77], cl ; ret 0x8548
0x000000000009e758 : add byte ptr [rax - 0x77], cl ; ret 0x8945
0x0000000000065640 : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000b9cf3 : add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000689e8 : add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000e224a : add byte ptr [rax - 0x77], cl ; ret 0x8feb
0x00000000000b44ec : add byte ptr [rax - 0x77], cl ; ret 0x9ee9
0x00000000000e6d4c : add byte ptr [rax - 0x77], cl ; ret 0xabe
0x0000000000083376 : add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000003eeda : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000003fc6a : add byte ptr [rax - 0x77], cl ; ret 0xde8
0x0000000000030507 : add byte ptr [rax - 0x77], cl ; ret 0xf748
0x000000000007e1f2 : add byte ptr [rax - 0x77], cl ; ret 0xff31
0x000000000006818f : add byte ptr [rax - 0x77], cl ; retf
0x000000000007da96 : add byte ptr [rax - 0x77], cl ; retf -0x3d15
0x00000000001260cc : add byte ptr [rax - 0x77], cl ; retf -0x63b
0x00000000001203a0 : add byte ptr [rax - 0x77], cl ; retf -0x6f9a
0x000000000003845c : add byte ptr [rax - 0x77], cl ; retf -0x74b8
0x0000000000026df6 : add byte ptr [rax - 0x77], cl ; retf -0x769a
0x0000000000041fe7 : add byte ptr [rax - 0x77], cl ; retf -0x76b4
0x0000000000043024 : add byte ptr [rax - 0x77], cl ; retf -0x76b8
0x00000000001205e2 : add byte ptr [rax - 0x77], cl ; retf -0x7cb7
0x0000000000122374 : add byte ptr [rax - 0x77], cl ; retf 0x1f0f
0x000000000004748f : add byte ptr [rax - 0x77], cl ; retf 0x2948
0x0000000000120442 : add byte ptr [rax - 0x77], cl ; retf 0x2e66
0x000000000002fd4a : add byte ptr [rax - 0x77], cl ; retf 0x44f6
0x000000000004a510 : add byte ptr [rax - 0x77], cl ; retf 0x4864
0x000000000005ca2b : add byte ptr [rax - 0x77], cl ; retf 0x5ce8
0x000000000005b91c : add byte ptr [rax - 0x77], cl ; retf 0x6be8
0x00000000001221f6 : add byte ptr [rax - 0x77], cl ; retf 0xf66
0x00000000000fb334 : add byte ptr [rax - 0x77], cl ; ror dword ptr [rdi], -0x7b ; ret
0x0000000000083f70 : add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000db2dc : add byte ptr [rax - 0x77], cl ; salc ; syscall
0x000000000011f31c : add byte ptr [rax - 0x77], cl ; sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000003f3ad : add byte ptr [rax - 0x77], cl ; sti ; syscall
0x000000000006750c : add byte ptr [rax - 0x77], cl ; xchg eax, ecx ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000011d424 : add byte ptr [rax - 0x77], cl ; xlatb ; mov eax, 2 ; syscall
0x000000000011ddd1 : add byte ptr [rax - 0x77], cl ; xlatb ; mov eax, ebx ; syscall
0x00000000000b85ff : add byte ptr [rax - 0x77], cl ; xlatb ; mov eax, esi ; syscall
0x00000000000dac26 : add byte ptr [rax - 0x77], cl ; xlatb ; syscall
0x000000000011042c : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x110444 ; ret
0x0000000000112c7c : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x112c94 ; ret
0x0000000000112c94 : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x112cac ; ret
0x000000000011350c : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x113524 ; ret
0x0000000000113524 : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x11353c ; ret
0x0000000000113554 : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x11356c ; ret
0x00000000000f966f : add byte ptr [rax - 0x77], cl ; xor eax, eax ; ret
0x00000000000dfbbe : add byte ptr [rax - 0x77], cl ; xor esi, esi ; syscall
0x000000000017fdf7 : add byte ptr [rax - 0x78], cl ; jmp qword ptr [rcx]
0x000000000017867f : add byte ptr [rax - 0x7a], ah ; out dx, eax ; call rsi
0x0000000000182f4f : add byte ptr [rax - 0x7a], al ; cmc ; jmp qword ptr [rcx]
0x0000000000182f67 : add byte ptr [rax - 0x7a], bl ; cmc ; jmp qword ptr [rcx]
0x000000000018fe47 : add byte ptr [rax - 0x7a], ch ; clc ; call qword ptr [rdx]
0x00000000000b52f1 : add byte ptr [rax - 0x7af10000], al ; ret
0x00000000000807ef : add byte ptr [rax - 0x7b], cl ; div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x000000000001ffdc : add byte ptr [rax - 0x7b], cl ; ret 0xf4c
0x0000000000106096 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], cl ; ret 0xff81
0x00000000000e1f46 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rax - 0x73], 0x15 ; retf 0x817
0x0000000000053ebc : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf
0x00000000000213ea : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf 0
0x0000000000091a73 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00000000000ea7c0 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; retf
0x00000000000738bf : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 0xb], cl ; xor eax, eax ; ret
0x0000000000115c13 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x19], 0x5b ; ret
0x00000000000e3725 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbx + rcx + 0x48], 0x83 ; ret 0x4808
0x000000000013c93b : add byte ptr [rax - 0x7bf0ffc7], al ; retf
0x0000000000182dd7 : add byte ptr [rax - 0x7c], cl ; cmc ; jmp qword ptr [rsi]
0x000000000017fd0f : add byte ptr [rax - 0x7c], dh ; jmp qword ptr [rcx]
0x0000000000142757 : add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x00000000000e2417 : add byte ptr [rax - 0x7d], cl ; call 0xffffffffc3476c27
0x00000000000e2416 : add byte ptr [rax - 0x7d], cl ; call 0xffffffffc3476c28
0x000000000007b2d2 : add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000007d03d : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x000000000002be24 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000078902 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0x8b4c
0x000000000006d47b : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; retf
0x000000000002a5d7 : add byte ptr [rax - 0x7d], cl ; cli ; or al, 0x76 ; ret 0x25e9
0x00000000000656df : add byte ptr [rax - 0x7d], cl ; fiadd dword ptr [rbx] ; sub rdx, r12 ; syscall
0x000000000006f6fe : add byte ptr [rax - 0x7d], cl ; imul ebp, dword ptr [rax], 1 ; jmp 0x6f6d8
0x00000000000391cb : add byte ptr [rax - 0x7d], cl ; in eax, dx ; add dword ptr [rcx - 0x7d], eax ; call qword ptr [rax]
0x000000000014a036 : add byte ptr [rax - 0x7d], cl ; inc dword ptr [rcx] ; ja 0x14a047 ; ret
0x000000000007b3fa : add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00000000001785f7 : add byte ptr [rax - 0x7d], cl ; out dx, eax ; call rcx
0x0000000000022adf : add byte ptr [rax - 0x7d], cl ; ret
0x00000000000776bc : add byte ptr [rax - 0x7d], cl ; ret 0x3110
0x00000000001035cd : add byte ptr [rax - 0x7d], cl ; ret 0x3904
0x00000000000988ef : add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000003cecf : add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x0000000000102d1a : add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x00000000000aac6f : add byte ptr [rax - 0x7d], cl ; ret 0x4401
0x000000000002ee9c : add byte ptr [rax - 0x7d], cl ; ret 0x4508
0x0000000000021185 : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000c7c09 : add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x00000000000de10f : add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000000ea81a : add byte ptr [rax - 0x7d], cl ; ret 0x4814
0x00000000000f0789 : add byte ptr [rax - 0x7d], cl ; ret 0x4830
0x000000000008efdf : add byte ptr [rax - 0x7d], cl ; ret 0x4840
0x0000000000040363 : add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x000000000012046f : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000044c44 : add byte ptr [rax - 0x7d], cl ; ret 0x491e
0x00000000000fff59 : add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x00000000000c7c6f : add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x0000000000103e4f : add byte ptr [rax - 0x7d], cl ; ret 0x4c0c
0x000000000008387f : add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x000000000008380f : add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x0000000000038f7f : add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x000000000002acbf : add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x00000000000cc50f : add byte ptr [rax - 0x7d], cl ; ret 0x8304
0x00000000000bf457 : add byte ptr [rax - 0x7d], cl ; ret 0x8401
0x0000000000023fb7 : add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x0000000000052e1f : add byte ptr [rax - 0x7d], cl ; ret 0xc71e
0x0000000000122453 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000c7692 : add byte ptr [rax - 0x7d], cl ; ret 0xeb02
0x0000000000120493 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000441d7 : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000076da2 : add byte ptr [rax - 0x7d], cl ; retf
0x0000000000031541 : add byte ptr [rax - 0x7d], cl ; retf -0x16f8
0x00000000000314a1 : add byte ptr [rax - 0x7d], cl ; retf 0x4809
0x000000000008f60f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000008092f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x000000000002842b : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret 0x860f
0x0000000000041ccf : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x39 ; ret 0xc07f
0x00000000000d10df : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x83 ; ret 0x4101
0x000000000002964f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x83 ; ret 0x4801
0x000000000017859f : add byte ptr [rax - 0x7d], dh ; out dx, eax ; jmp qword ptr [rbx]
0x0000000000077e10 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000035811 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0xbfc
0x00000000000ed808 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf
0x0000000000108b09 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf -0x137
0x000000000011d158 : add byte ptr [rax - 0x7f], cl ; in al, dx ; js 0x11d167 ; add byte ptr [rax], al ; syscall
0x000000000006b1ec : add byte ptr [rax - 0x7f], cl ; ret
0x000000000013165b : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000000fe2d7 : add byte ptr [rax - 0x80], al ; jmp qword ptr [rax]
0x000000000018f817 : add byte ptr [rax - 0x80], ch ; clc ; call qword ptr [rcx]
0x000000000018211f : add byte ptr [rax - 1], ah ; hlt ; call qword ptr [rdx]
0x00000000000b89fc : add byte ptr [rax - 1], bh ; leave ; ret
0x000000000004f4c7 : add byte ptr [rax - 1], bh ; mov qword ptr [rdi], r10 ; ret
0x0000000000031a5d : add byte ptr [rax - 1], bh ; pop rbx ; ret
0x000000000003303d : add byte ptr [rax - 1], bh ; ret
0x0000000000182137 : add byte ptr [rax - 1], ch ; hlt ; call rdx
0x0000000000033cc6 : add byte ptr [rax - 1], dil ; ret
0x0000000000181f2f : add byte ptr [rax - 2], al ; hlt ; call qword ptr [rbx]
0x0000000000181f6f : add byte ptr [rax - 2], al ; hlt ; call qword ptr [rsi]
0x0000000000181faf : add byte ptr [rax - 2], al ; hlt ; jmp qword ptr [rcx]
0x0000000000181fc7 : add byte ptr [rax - 2], bl ; hlt ; jmp qword ptr [rcx]
0x0000000000181fdf : add byte ptr [rax - 2], dh ; hlt ; jmp qword ptr [rcx]
0x000000000016a564 : add byte ptr [rax - 4], ah ; jmp rax
0x0000000000184e57 : add byte ptr [rax - 5], bl ; cmc ; jmp qword ptr [rdx]
0x0000000000184d7f : add byte ptr [rax - 6], dl ; cmc ; jmp qword ptr [rcx]
0x000000000018e070 : add byte ptr [rax - 8], 0xff ; retf
0x000000000016ee7f : add byte ptr [rax - 8], dh ; call rsp
0x00000000000da4ab : add byte ptr [rax - 9], cl ; fmul dword ptr [rax + 0x21] ; ret
0x000000000018a310 : add byte ptr [rax - 9], dl ; call qword ptr [rbx]
0x0000000000067b14 : add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000035815 : add byte ptr [rax], 0 ; add al, ch ; ret 0xbfc
0x0000000000064ddc : add byte ptr [rax], 0 ; add al, ch ; retf
0x0000000000108b0d : add byte ptr [rax], 0 ; add al, ch ; retf -0x137
0x00000000000f8a0d : add byte ptr [rax], 0 ; add al, ch ; retf -0x36
0x0000000000068a39 : add byte ptr [rax], 0 ; add al, ch ; sahf ; retf 8
0x0000000000064e9b : add byte ptr [rax], 0 ; add bl, dh ; ret
0x000000000012951d : add byte ptr [rax], 0 ; add byte ptr [rax + 0x39], cl ; retf -0x1e8b
0x000000000004fd9f : add byte ptr [rax], 0 ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000051412 : add byte ptr [rax], 0 ; add byte ptr [rax + 0xf], cl ; ret 0x348
0x0000000000132e5a : add byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; retf -0x7eb8
0x00000000000a7142 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; imul eax ; ret 0xf793
0x000000000003292b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; addss xmm0, xmm0 ; ret
0x000000000014a53b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; call qword ptr [rbx]
0x0000000000032c5b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; fadd st(0) ; ret
0x00000000001181ab : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x000000000006cf0b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov eax, dword ptr [rdx] ; ret
0x0000000000069a7b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov eax, edi ; ret
0x0000000000133e3b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000e76f3 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x58] ; ret
0x000000000009ad2b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000007b593 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rsi, qword ptr [rsp] ; jmp rax
0x000000000009914b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x000000000002a463 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x00000000000992eb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000008a6fb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000079deb : add byte ptr [rax], 0 ; add byte ptr [rbx - 0xd], bl ; ret
0x0000000000051407 : add byte ptr [rax], 0 ; add byte ptr [rcx + 0x63], cl ; ret
0x00000000000f5932 : add byte ptr [rax], 0 ; add byte ptr [rcx + rcx*4 - 0x38], al ; syscall
0x000000000006a9ca : add byte ptr [rax], 0 ; add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; ret
0x00000000000406c8 : add byte ptr [rax], 0 ; add byte ptr [rcx], al ; ret 0x8b44
0x00000000000c5ceb : add byte ptr [rax], 0 ; add byte ptr [rdi], cl ; ret 0xf35b
0x00000000001442a1 : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016b70d : add byte ptr [rax], 0 ; and al, 0x84 ; in al, dx ; call rsp
0x00000000000379da : add byte ptr [rax], 0xf ; xchg eax, ebp ; ret
0x00000000000b8381 : add byte ptr [rax], ah ; add dword ptr [rax + 0x38], edi ; syscall
0x000000000000e657 : add byte ptr [rax], ah ; clc ; or al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001860bf : add byte ptr [rax], ah ; cmp esi, esi ; jmp qword ptr [rcx]
0x000000000017531f : add byte ptr [rax], ah ; hlt ; in al, dx ; jmp rcx
0x000000000002c0a4 : add byte ptr [rax], ah ; movzx eax, ax ; ret
0x000000000018d32f : add byte ptr [rax], ah ; or bh, al ; jmp qword ptr [rdi]
0x0000000000005f0f : add byte ptr [rax], ah ; or rax, qword ptr [r8] ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x000000000000cd7f : add byte ptr [rax], ah ; ret
0x000000000000a5a7 : add byte ptr [rax], ah ; ret 2
0x000000000000a907 : add byte ptr [rax], ah ; ret 6
0x000000000000deef : add byte ptr [rax], ah ; retf
0x0000000000187fdf : add byte ptr [rax], ah ; sal dh, 1 ; jmp qword ptr [rsi]
0x00000000001835ef : add byte ptr [rax], ah ; wait ; cmc ; jmp qword ptr [rcx]
0x00000000001843bf : add byte ptr [rax], ah ; xlatb ; cmc ; jmp rdx
0x0000000000171e4a : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax + 0x7b], al ; std ; call qword ptr [rcx]
0x000000000017d4fe : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; cld ; retf 0
0x000000000017cdee : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, dx ; ret
0x000000000017d46e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; retf 0
0x000000000017d456 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; push rsp ; retf 0
0x000000000017d49e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pushfq ; retf 0
0x000000000017cc4e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; ret 0
0x000000000017d546 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; retf
0x000000000018241a : add byte ptr [rax], al ; adc al, 0x1a ; add dword ptr [rax], eax ; adc byte ptr [rdi], bh ; cmc ; call rdi
0x000000000018441a : add byte ptr [rax], al ; adc al, 0x3a ; add dword ptr [rax], eax ; xor al, bl ; cmc ; jmp qword ptr [rcx]
0x0000000000184d1a : add byte ptr [rax], al ; adc al, 0x43 ; add dword ptr [rax], eax ; sar cl, 0xf5 ; jmp qword ptr [rcx]
0x000000000017531a : add byte ptr [rax], al ; adc al, 0x49 ; add byte ptr [rax], al ; and ah, dh ; in al, dx ; jmp rcx
0x000000000018591a : add byte ptr [rax], al ; adc al, 0x4f ; add dword ptr [rax], eax ; nop ; sbb al, 0xf6 ; jmp qword ptr [rcx]
0x000000000018821a : add byte ptr [rax], al ; adc al, 0x78 ; add dword ptr [rax], eax ; sal esi, 1 ; jmp qword ptr [rsi]
0x000000000016bf86 : add byte ptr [rax], al ; adc al, 0xb8 ; out dx, eax ; call rsp
0x000000000017d51a : add byte ptr [rax], al ; adc al, 0xcb ; add byte ptr [rax], al ; and bl, ch ; int1 ; call qword ptr [rdx]
0x000000000017d81a : add byte ptr [rax], al ; adc al, 0xce ; add byte ptr [rax], al ; loopne 0x17d844 ; call qword ptr [rdx]
0x000000000017d81a : add byte ptr [rax], al ; adc al, 0xce ; add byte ptr [rax], al ; loopne 0x17d845 ; call qword ptr [rdx]
0x000000000016c0a6 : add byte ptr [rax], al ; adc al, 0xe4 ; out dx, eax ; jmp rsp
0x000000000018011a : add byte ptr [rax], al ; adc al, 0xf7 ; add byte ptr [rax], al ; mov al, 0x90 ; jmp qword ptr [rcx]
0x000000000018091a : add byte ptr [rax], al ; adc al, 0xff ; add byte ptr [rax], al ; jo 0x18093d ; hlt ; jmp qword ptr [rdx]
0x0000000000190f1a : add byte ptr [rax], al ; adc al, 5 ; add al, byte ptr [rax] ; add ch, bl ; clc ; call qword ptr [rdi]
0x00000000001933e2 : add byte ptr [rax], al ; adc al, 8 ; add byte ptr [rax], al ; retf
0x000000000019131a : add byte ptr [rax], al ; adc al, 9 ; add al, byte ptr [rax] ; out -8, eax ; call qword ptr [rcx]
0x00000000000007b8 : add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x00000000000cca26 : add byte ptr [rax], al ; adc al, ch ; ret 0xff68
0x000000000017cf9e : add byte ptr [rax], al ; adc bh, dl ; int1 ; call rsi
0x0000000000171076 : add byte ptr [rax], al ; adc bpl, bl ; call rsp
0x000000000017fa6e : add byte ptr [rax], al ; adc byte ptr [rdi - 0xd], dh ; call rsi
0x0000000000173f0e : add byte ptr [rax], al ; adc byte ptr [rdx], ch ; in al, dx ; jmp qword ptr [rdx]
0x000000000016c286 : add byte ptr [rax], al ; adc dh, al ; jmp rsp
0x0000000000181f6a : add byte ptr [rax], al ; adc eax, 0xfe400001 ; hlt ; call qword ptr [rsi]
0x000000000017d4e9 : add byte ptr [rax], al ; add ah, ah ; retf 0
0x000000000018d4c9 : add byte ptr [rax], al ; add ah, al ; retf 1
0x0000000000183dc9 : add byte ptr [rax], al ; add ah, al ; xor eax, dword ptr [rcx] ; add byte ptr [rax], al ; retf
0x0000000000190a01 : add byte ptr [rax], al ; add ah, bh ; inc dword ptr [rcx] ; add byte ptr [rax], bl ; ret
0x000000000017d501 : add byte ptr [rax], al ; add ah, bh ; retf 0
0x000000000018d501 : add byte ptr [rax], al ; add ah, bh ; retf 1
0x00000000001908e1 : add byte ptr [rax], al ; add ah, bl ; inc byte ptr [rcx] ; add byte ptr [rax], ch ; ret 0xfff8
0x000000000018cce1 : add byte ptr [rax], al ; add ah, bl ; ret 1
0x000000000017d5e1 : add byte ptr [rax], al ; add ah, bl ; retf
0x0000000000183de1 : add byte ptr [rax], al ; add ah, bl ; xor eax, dword ptr [rcx] ; add byte ptr [rax], cl ; retf
0x000000000017cdf1 : add byte ptr [rax], al ; add ah, ch ; ret
0x000000000017d4d1 : add byte ptr [rax], al ; add ah, cl ; retf 0
0x000000000017e8f9 : add byte ptr [rax], al ; add ah, dh ; fiadd word ptr [rax] ; add byte ptr [rax - 0x35], al ; jmp qword ptr [rcx]
0x000000000017d5f9 : add byte ptr [rax], al ; add ah, dh ; retf
0x00000000000fd263 : add byte ptr [rax], al ; add al, 0 ; add al, ch ; ret
0x0000000000173f0a : add byte ptr [rax], al ; add al, 0x35 ; add byte ptr [rax], al ; adc byte ptr [rdx], ch ; in al, dx ; jmp qword ptr [rdx]
0x0000000000184c4e : add byte ptr [rax], al ; add al, 0x35 ; retf 0
0x0000000000185b0a : add byte ptr [rax], al ; add al, 0x51 ; add dword ptr [rax], eax ; nop ; xor dh, dh ; jmp qword ptr [rcx]
0x0000000000184c26 : add byte ptr [rax], al ; add al, 0x51 ; retf 0
0x0000000000185c0a : add byte ptr [rax], al ; add al, 0x52 ; add dword ptr [rax], eax ; nop ; xor esi, esi ; jmp qword ptr [rcx]
0x000000000016b57e : add byte ptr [rax], al ; add al, 0x69 ; in al, dx ; call rsp
0x000000000018800a : add byte ptr [rax], al ; add al, 0x76 ; add dword ptr [rax], eax ; push rax ; sal dh, 1 ; jmp qword ptr [rsi]
0x000000000016b746 : add byte ptr [rax], al ; add al, 0x86 ; in al, dx ; call rsp
0x000000000016b786 : add byte ptr [rax], al ; add al, 0x89 ; in al, dx ; call rsp
0x000000000018a30a : add byte ptr [rax], al ; add al, 0x99 ; add dword ptr [rax], eax ; add byte ptr [rax - 9], dl ; call qword ptr [rbx]
0x000000000016b8a6 : add byte ptr [rax], al ; add al, 0xa7 ; in al, dx ; jmp rsp
0x000000000016b8f6 : add byte ptr [rax], al ; add al, 0xad ; in al, dx ; jmp rsp
0x000000000016b9ee : add byte ptr [rax], al ; add al, 0xb9 ; in al, dx ; call rsp
0x0000000000184a6e : add byte ptr [rax], al ; add al, 0xc0 ; retf
0x0000000000184b66 : add byte ptr [rax], al ; add al, 0xe5 ; retf 0
0x000000000017fc0a : add byte ptr [rax], al ; add al, 0xf2 ; add byte ptr [rax], al ; mov al, 0x82 ; jmp qword ptr [rcx]
0x000000000017fd0a : add byte ptr [rax], al ; add al, 0xf3 ; add byte ptr [rax], al ; jo 0x17fc9f ; jmp qword ptr [rcx]
0x000000000001ea95 : add byte ptr [rax], al ; add al, al ; ret
0x0000000000183c2f : add byte ptr [rax], al ; add al, byte ptr [rcx + 0x283100e] ; push rsp ; ret
0x0000000000080514 : add byte ptr [rax], al ; add al, ch ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000067b15 : add byte ptr [rax], al ; add al, ch ; ret
0x000000000010aa16 : add byte ptr [rax], al ; add al, ch ; ret 0xb0
0x0000000000035816 : add byte ptr [rax], al ; add al, ch ; ret 0xbfc
0x000000000002bef6 : add byte ptr [rax], al ; add al, ch ; ret 9
0x000000000006287d : add byte ptr [rax], al ; add al, ch ; retf
0x0000000000108b0e : add byte ptr [rax], al ; add al, ch ; retf -0x137
0x00000000000f63ce : add byte ptr [rax], al ; add al, ch ; retf -0x154
0x00000000000f8a0e : add byte ptr [rax], al ; add al, ch ; retf -0x36
0x000000000011bf3e : add byte ptr [rax], al ; add al, ch ; retf -0x37a
0x000000000011d65e : add byte ptr [rax], al ; add al, ch ; retf -0x41a
0x00000000000fef7e : add byte ptr [rax], al ; add al, ch ; retf -0x7ea
0x0000000000068a3a : add byte ptr [rax], al ; add al, ch ; sahf ; retf 8
0x0000000000175f8d : add byte ptr [rax], al ; add al, dh ; out dx, al ; jmp qword ptr [rcx]
0x000000000001dccd : add byte ptr [rax], al ; add al, dh ; retf
0x000000000018cebf : add byte ptr [rax], al ; add bh, al ; call qword ptr [rdi]
0x000000000014a53d : add byte ptr [rax], al ; add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000011035a : add byte ptr [rax], al ; add bh, bh ; loope 0x1102f7 ; ret
0x000000000003f1f8 : add byte ptr [rax], al ; add bh, bh ; shr cl, 1 ; retf
0x00000000000c5c9f : add byte ptr [rax], al ; add bh, dh ; ret
0x0000000000025638 : add byte ptr [rax], al ; add bh, dh ; ret 0xf800
0x000000000015ff8e : add byte ptr [rax], al ; add bl, al ; cli ; jmp rax
0x00000000000ba7da : add byte ptr [rax], al ; add bl, al ; mov eax, 0xffffffff ; ret
0x000000000009bf6f : add byte ptr [rax], al ; add bl, al ; mov eax, 2 ; ret
0x000000000011361b : add byte ptr [rax], al ; add bl, al ; nop ; xor eax, eax ; ret
0x000000000007e51a : add byte ptr [rax], al ; add bl, al ; ret
0x0000000000033bb1 : add byte ptr [rax], al ; add bl, al ; xor eax, eax ; ret
0x00000000000bebcb : add byte ptr [rax], al ; add bl, ch ; cmovns eax, dword ptr [rcx] ; retf -0x74bd
0x00000000000c3d6f : add byte ptr [rax], al ; add bl, ch ; ret
0x0000000000110be8 : add byte ptr [rax], al ; add bl, ch ; ret 0x8b48
0x00000000000b4293 : add byte ptr [rax], al ; add bl, ch ; retf -0x76b8
0x000000000003292d : add byte ptr [rax], al ; add bl, dh ; addps xmm0, xmm0 ; ret
0x000000000009557d : add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi - 1], mm0 ; ret
0x000000000009558d : add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x000000000002003d : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000000e100d : add byte ptr [rax], al ; add byte ptr [rax + 0x10], bh ; syscall
0x00000000000df923 : add byte ptr [rax], al ; add byte ptr [rax + 0x10f], bh ; syscall
0x00000000000e8f68 : add byte ptr [rax], al ; add byte ptr [rax + 0x121], bh ; syscall
0x000000000011ea0b : add byte ptr [rax], al ; add byte ptr [rax + 0x16], bh ; ret
0x00000000000ab43d : add byte ptr [rax], al ; add byte ptr [rax + 0x24], bh ; syscall
0x00000000000b817d : add byte ptr [rax], al ; add byte ptr [rax + 0x25], bh ; syscall
0x00000000000b8f0d : add byte ptr [rax], al ; add byte ptr [rax + 0x27], bh ; syscall
0x000000000004f801 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000ac101 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x2948
0x00000000000cd6b0 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x6348
0x00000000000c0afb : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8b44
0x000000000004c805 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0xc148
0x00000000000e240a : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000002a4c4 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x4476
0x00000000000a9b64 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x940f
0x000000000012951e : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf -0x1e8b
0x000000000006cb7b : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf -0x7df1
0x00000000000b9774 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x1f74
0x000000000012c4a4 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x280f
0x00000000000f799d : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x2f77
0x0000000000135891 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x00000000000f8b3d : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x577
0x000000000006e261 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0xf48
0x00000000000b863d : add byte ptr [rax], al ; add byte ptr [rax + 0x3b], bh ; syscall
0x000000000016979b : add byte ptr [rax], al ; add byte ptr [rax + 0x43], dl ; pop rcx ; clc ; ret 0x6e1f
0x000000000002b0ab : add byte ptr [rax], al ; add byte ptr [rax + 0x440ffff9], al ; retf 0xd88
0x00000000000dbcea : add byte ptr [rax], al ; add byte ptr [rax + 0x48], bh ; syscall
0x00000000000dcfbd : add byte ptr [rax], al ; add byte ptr [rax + 0x56], bh ; syscall
0x00000000000db58d : add byte ptr [rax], al ; add byte ptr [rax + 0x5a], bh ; syscall
0x00000000000a889d : add byte ptr [rax], al ; add byte ptr [rax + 0x60], bh ; syscall
0x00000000000e0acd : add byte ptr [rax], al ; add byte ptr [rax + 0x61], bh ; syscall
0x00000000000c979a : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; add cl, byte ptr [rax - 0x77] ; ret
0x0000000000072296 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; jnp 0x72314 ; syscall
0x000000000004fda0 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x00000000000a855f : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x148
0x000000000004e065 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d49
0x00000000000c2219 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0xc790
0x000000000006c10d : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf -0x72b4
0x00000000000b8f2d : add byte ptr [rax], al ; add byte ptr [rax + 0x66], bh ; syscall
0x00000000000b8f4d : add byte ptr [rax], al ; add byte ptr [rax + 0x68], bh ; syscall
0x00000000000b8f3d : add byte ptr [rax], al ; add byte ptr [rax + 0x6b], bh ; syscall
0x00000000000b8f5d : add byte ptr [rax], al ; add byte ptr [rax + 0x6c], bh ; syscall
0x00000000000b8f1d : add byte ptr [rax], al ; add byte ptr [rax + 0x6e], bh ; syscall
0x00000000000b8f6d : add byte ptr [rax], al ; add byte ptr [rax + 0x73], bh ; syscall
0x0000000000095acd : add byte ptr [rax], al ; add byte ptr [rax + 0x78d4837], cl ; ret
0x00000000000b910d : add byte ptr [rax], al ; add byte ptr [rax + 0x79], bh ; syscall
0x00000000000b919d : add byte ptr [rax], al ; add byte ptr [rax + 0x7c], bh ; syscall
0x00000000000b9658 : add byte ptr [rax], al ; add byte ptr [rax + 0x7f], bh ; ret
0x0000000000033342 : add byte ptr [rax], al ; add byte ptr [rax + 0x7f], bh ; syscall
0x000000000003338c : add byte ptr [rax], al ; add byte ptr [rax + 0x82], bh ; syscall
0x00000000000d1ded : add byte ptr [rax], al ; add byte ptr [rax + 0x8e], bh ; syscall
0x00000000000e172d : add byte ptr [rax], al ; add byte ptr [rax + 0xa3], bh ; syscall
0x00000000000a897d : add byte ptr [rax], al ; add byte ptr [rax + 0xa4], bh ; syscall
0x00000000000e8d6d : add byte ptr [rax], al ; add byte ptr [rax + 0xa6], bh ; syscall
0x00000000000e14fd : add byte ptr [rax], al ; add byte ptr [rax + 0xaa], bh ; syscall
0x00000000000e159d : add byte ptr [rax], al ; add byte ptr [rax + 0xab], bh ; syscall
0x00000000000e46dd : add byte ptr [rax], al ; add byte ptr [rax + 0xb], bh ; syscall
0x00000000000c3d6a : add byte ptr [rax], al ; add byte ptr [rax + 0xc], bh ; jmp 0xc3d40
0x00000000000f965d : add byte ptr [rax], al ; add byte ptr [rax + 0xca], bh ; ret
0x00000000000f54ef : add byte ptr [rax], al ; add byte ptr [rax + 0xca], bh ; syscall
0x00000000000b9d7c : add byte ptr [rax], al ; add byte ptr [rax + 0xe5], bh ; syscall
0x0000000000032ff5 : add byte ptr [rax], al ; add byte ptr [rax + 0xe], bh ; syscall
0x0000000000099195 : add byte ptr [rax], al ; add byte ptr [rax + 0xf48f0e5], al ; ret 0xc35b
0x00000000000e1cc6 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x00000000000ea3f8 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x31c3
0x0000000000051413 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x348
0x000000000011c5f2 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8348
0x00000000000f10a9 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8349
0x0000000000024358 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000799a9 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x894c
0x00000000000991b6 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xb8c3
0x0000000000099108 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc35b
0x000000000008b2f8 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000000ddcb6 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f6
0x0000000000025a54 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xf685
0x00000000000b971d : add byte ptr [rax], al ; add byte ptr [rax + 0xfc17], bh ; ret
0x00000000000de22a : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; pop rbx ; ret
0x0000000000043a4a : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x00000000000eae16 : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; syscall
0x00000000000993e0 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x00000000000231b0 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x0000000000132e5b : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; retf -0x7eb8
0x000000000010c8ad : add byte ptr [rax], al ; add byte ptr [rax + 2], bh ; ret
0x00000000000da63a : add byte ptr [rax], al ; add byte ptr [rax + 3], bh ; syscall
0x00000000000b98f4 : add byte ptr [rax], al ; add byte ptr [rax + 7], bh ; ret
0x00000000000e8d2d : add byte ptr [rax], al ; add byte ptr [rax + 8], bh ; syscall
0x000000000017df31 : add byte ptr [rax], al ; add byte ptr [rax + rax*4 - 0x6ae80000], ah ; jmp qword ptr [rcx]
0x0000000000190a29 : add byte ptr [rax], al ; add byte ptr [rax + rax], ah ; add al, byte ptr [rax] ; nop ; ret
0x000000000018cded : add byte ptr [rax], al ; add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; in al, dx ; ret
0x000000000017d5f5 : add byte ptr [rax], al ; add byte ptr [rax + rax], cl ; add ah, dh ; retf
0x000000000018d4fd : add byte ptr [rax], al ; add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; cld ; retf 1
0x000000000018cc6d : add byte ptr [rax], al ; add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret 1
0x000000000018cca5 : add byte ptr [rax], al ; add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 1
0x000000000018d455 : add byte ptr [rax], al ; add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; push rsp ; retf 1
0x000000000017d4fd : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; cld ; retf 0
0x000000000017cded : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, dx ; ret
0x000000000017d46d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; retf 0
0x000000000017d455 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; push rsp ; retf 0
0x000000000017d49d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pushfq ; retf 0
0x000000000017cc4d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; ret 0
0x000000000017d545 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; retf
0x000000000009aa63 : add byte ptr [rax], al ; add byte ptr [rax + rbp*2 + 0x48], dh ; lea eax, dword ptr [rdi - 0x10] ; ret
0x000000000017e289 : add byte ptr [rax], al ; add byte ptr [rax + rbx*8 - 0x61500000], al ; call rdi
0x00000000001933e1 : add byte ptr [rax], al ; add byte ptr [rax + rcx], dl ; add byte ptr [rax], al ; retf
0x000000000006631d : add byte ptr [rax], al ; add byte ptr [rax - 0x14dff3b5], al ; retf 0x2e66
0x000000000017ea91 : add byte ptr [rax], al ; add byte ptr [rax - 0x1780000], cl ; call qword ptr [rax]
0x000000000017eaa9 : add byte ptr [rax], al ; add byte ptr [rax - 0x1800000], ah ; call qword ptr [rax]
0x0000000000037964 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000312e8 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xfff6
0x0000000000030f95 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xfffa
0x0000000000031219 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xfffc
0x00000000000311e1 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xfffe
0x00000000000fa90d : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000a82b7 : add byte ptr [rax], al ; add byte ptr [rax - 0x3db2f0b8], al ; pop rbx ; ret
0x000000000003276a : add byte ptr [rax], al ; add byte ptr [rax - 0x3f91f09a], al ; ret
0x0000000000118dce : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; cli ; and byte ptr [rcx + 1], al ; retf -0x72b3
0x000000000001f9ac : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x0000000000067783 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x6411
0x0000000000032e23 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; retf 0x6411
0x0000000000050999 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; stc ; add cl, byte ptr [rax + 0x29] ; retf
0x00000000000f1688 : add byte ptr [rax], al ; add byte ptr [rax - 0x71f0ffc8], al ; ret
0x000000000009aaad : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; clc ; ret
0x000000000009aabd : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cld ; ret
0x000000000009aa9d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; hlt ; ret
0x00000000000e0606 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; push rsp ; and al, 0xd0 ; syscall
0x000000000007cc4d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000cc679 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; adc byte ptr [rcx + 0x63], r9b ; retf -0x72b4
0x00000000000e1e9c : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; and al, 0xb0 ; ret
0x00000000000c4c2d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000ced89 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; je 0xcedbd ; jo 0xced9c ; ret 0xc083
0x00000000000e76f5 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; pop rax ; ret
0x000000000007901d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0x7404
0x00000000000ec184 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rsp ; retf -0x74c0
0x00000000000d16eb : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; sbb al, ch ; retf -0xa4f
0x00000000000b516d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x000000000007b595 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; xor al, 0x24 ; jmp rax
0x000000000006a2c3 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000007dbf8 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fimul word ptr [rcx + rcx*4 - 0x11] ; call rax
0x00000000000475ec : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; retf -0x76b8
0x00000000000ce121 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; retf -0x76bc
0x0000000000067582 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x00000000000a95b3 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0xfffa
0x00000000000a7143 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; imul eax ; ret 0xf793
0x00000000000f8dae : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; in eax, -0x18 ; xchg eax, edi ; ret 0xfff7
0x000000000007deb9 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call rax
0x000000000010cb6a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x000000000003e251 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000ab10d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x19e9
0x000000000010761f : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x000000000005bc6a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1be8
0x000000000007ad7a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x00000000000688b4 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x00000000000e7368 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x3be
0x00000000000d2f1d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000009e756 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8945
0x00000000000689e6 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000005134d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000082b0e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf
0x00000000001260ca : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf -0x63b
0x000000000012039e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf -0x6f9a
0x0000000000041fe5 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf -0x76b4
0x0000000000043022 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf -0x76b8
0x000000000005ca29 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x5ce8
0x000000000005b91a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x6be8
0x00000000001221f4 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xf66
0x00000000000db2da : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; salc ; syscall
0x000000000003f3ab : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; sti ; syscall
0x00000000000b85fd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; xlatb ; mov eax, esi ; syscall
0x00000000000dac24 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; xlatb ; syscall
0x00000000000f966d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; xor eax, eax ; ret
0x000000000001ffda : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ret 0xf4c
0x0000000000053eba : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf
0x0000000000115c11 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x19], 0x5b ; ret
0x0000000000022b7d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001035cb : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3904
0x00000000000988ed : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000003cecd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x0000000000021183 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000c7c07 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x00000000000ea818 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4814
0x00000000000f0787 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4830
0x0000000000121f93 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000100019 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x00000000000c7c6d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x0000000000103e4d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c0c
0x000000000008387d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x000000000008380d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x000000000002acbd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x0000000000123b11 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000c7690 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb02
0x0000000000121fbd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000441d5 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000003153f : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; retf -0x16f8
0x000000000008f60d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x00000000000d10dd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x83 ; ret 0x4101
0x0000000000132e54 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000000b89fa : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; leave ; ret
0x0000000000031a5b : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; pop rbx ; ret
0x000000000003303b : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000000379d8 : add byte ptr [rax], al ; add byte ptr [rax], 0xf ; xchg eax, ebp ; ret
0x000000000017d4fc : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; cld ; retf 0
0x000000000017cdec : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, dx ; ret
0x000000000017d46c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; retf 0
0x000000000017d454 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; push rsp ; retf 0
0x000000000017d49c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pushfq ; retf 0
0x000000000017cc4c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; ret 0
0x000000000017d544 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; retf
0x00000000001933e0 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 8 ; add byte ptr [rax], al ; retf
0x000000000001ea93 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; ret
0x00000000000d26a8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret
0x000000000001dccb : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; retf
0x000000000009558b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x000000000002003b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000000f799b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x2f77
0x000000000006c10b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf -0x72b4
0x00000000000231ae : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x00000000001933df : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rcx], dl ; add byte ptr [rax], al ; retf
0x00000000000fa90b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000009aaab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; clc ; ret
0x000000000009aabb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cld ; ret
0x000000000009aa9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; hlt ; ret
0x0000000000075ebb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000005bc68 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1be8
0x000000000007ad78 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x00000000000d2f1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000005134b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000006e35b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf -0x76b4
0x000000000002fdcb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000988eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000003cecb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x000000000002306b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000c7c6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x0000000000103e4b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c0c
0x000000000008387b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x000000000008380b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x000000000002acbb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x00000000000fe16b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000001ea91 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; ret
0x000000000001dcc9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; retf
0x00000000000d200d : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000193dfc : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000001018 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x0000000000169648 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x49f2
0x000000000019402c : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 6
0x0000000000018a19 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; ret
0x000000000001dc81 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; retf
0x000000000000defa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp qword ptr [rcx]
0x000000000001dcb2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; retf
0x000000000016960a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x00000000000062aa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000001deaa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1616
0x000000000001c82a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1625
0x000000000000fef2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d
0x0000000000153592 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x0000000000007b22 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x26
0x0000000000000548 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2800
0x0000000000003f9a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x31
0x0000000000153a82 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x000000000000a552 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x34
0x000000000000f66a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x35
0x0000000000010e6a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x42
0x000000000000807a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x45
0x000000000001053a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x49
0x0000000000005b5a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4e
0x0000000000010fd2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x51
0x0000000000193f62 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x00000000000075fa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 4
0x0000000000192c92 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 5
0x000000000000ddda : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 6
0x00000000001934a6 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 8
0x000000000000101a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x0000000000194926 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x0000000000008b72 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x14
0x000000000001a30a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x14b1
0x00000000001535d2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x24
0x0000000000010942 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x29
0x000000000000f75a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x32
0x0000000000153ac2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x33
0x0000000000004a62 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x3c
0x000000000016964a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x49f2
0x000000000000ecda : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x4d
0x0000000000010df2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x4f
0x000000000000c87a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0xc
0x000000000001092a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0xf
0x0000000000152c3a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x000000000000909a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 3
0x000000000000eeea : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 6
0x000000000019244e : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 7
0x00000000000052ba : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000009834b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x0000000000018a1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; ret
0x000000000001dc83 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; retf
0x000000000017d5f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add ah, dh ; retf
0x000000000008beab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp + 0x38], al ; retf -0x78f1
0x000000000008ac78 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000036139 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x00000000000e49db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x7d], dl ; call qword ptr [rcx]
0x00000000000d0b8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret
0x0000000000098b2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x00000000000e90eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; retf 0x2db8
0x00000000000c0b9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000003d32b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4801
0x00000000000f993b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4901
0x000000000012044b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000007edcb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000016960b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0xd], bl ; clc ; ret 0x6e1f
0x00000000000c229b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; retf 0x337e
0x000000000009a94b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; retf -0x7ab8
0x00000000000f64c9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; ret
0x00000000000d31db : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0xf01
0x0000000000078a8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0xf0f
0x0000000000192c4c : add byte ptr [rax], al ; add byte ptr [rax], al ; add eax, dword ptr [rcx] ; add byte ptr [rax], al ; ret
0x000000000009a46c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, 3 ; ret
0x00000000000e218c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000003292c : add byte ptr [rax], al ; add byte ptr [rax], al ; addss xmm0, xmm0 ; ret
0x000000000018cdec : add byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; in al, dx ; ret
0x00000000000713cc : add byte ptr [rax], al ; add byte ptr [rax], al ; and dword ptr [rdi], 0xffffffcf ; ret
0x000000000007489c : add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x71366
0x000000000014a53c : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000011f6dc : add byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000001555bc : add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000015476c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x00000000000df9f7 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmova eax, edx ; ret
0x0000000000104717 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmovae rax, rdx ; ret
0x00000000000ea3f7 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmovb rax, rdx ; ret
0x00000000000c2ffd : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove eax, esi ; ret
0x00000000000e1cc5 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rbx ; pop rbx ; ret
0x0000000000099107 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rdx ; pop rbx ; ret
0x000000000008b2f7 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000032c5c : add byte ptr [rax], al ; add byte ptr [rax], al ; fadd st(0) ; ret
0x000000000017cc94 : add byte ptr [rax], al ; add byte ptr [rax], al ; jl 0x17cca3 ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x000000000017d55c : add byte ptr [rax], al ; add byte ptr [rax], al ; jl 0x17d56b ; add byte ptr [rax], al ; pop rsp ; retf
0x000000000010372c : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x1f93e
0x000000000000defc : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp qword ptr [rcx]
0x00000000000532f0 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x000000000009a73a : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x9a737 ; ret
0x000000000014782c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000014783c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000014784c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000014785c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000014786c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000001477ac : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000001477bc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000001477cc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000001477dc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000001477ec : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000001477fc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000014780c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000014781c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000009aa9c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0xc] ; ret
0x000000000009aabc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 4] ; ret
0x000000000009aaac : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 8] ; ret
0x000000000014779c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x000000000013e7dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x0000000000095acc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x00000000000944cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000009549c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x000000000009519c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000013e81c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x000000000013e83c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x000000000013e80c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x00000000000da3cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x00000000000954bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x00000000000954dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000954cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x00000000000e100c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x10 ; syscall
0x00000000000ab43c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x24 ; syscall
0x00000000000b817c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x25 ; syscall
0x00000000000b8f0c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x27 ; syscall
0x00000000000b863c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x3b ; syscall
0x00000000000dcfbc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x56 ; syscall
0x00000000000db58c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x5a ; syscall
0x00000000000a889c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x60 ; syscall
0x00000000000e0acc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x61 ; syscall
0x00000000000b8f2c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x66 ; syscall
0x00000000000b8f4c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x68 ; syscall
0x00000000000b8f3c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x6b ; syscall
0x00000000000b8f5c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x6c ; syscall
0x00000000000b8f1c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x6e ; syscall
0x00000000000b8f6c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x73 ; syscall
0x00000000000b910c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x79 ; syscall
0x00000000000b919c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x7c ; syscall
0x00000000000d1dec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x8e ; syscall
0x00000000000e172c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xa3 ; syscall
0x00000000000a897c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xa4 ; syscall
0x00000000000e8d6c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xa6 ; syscall
0x00000000000e14fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xaa ; syscall
0x00000000000e159c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xab ; syscall
0x00000000000e46dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xb ; syscall
0x00000000000f965c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xca ; ret
0x00000000000b971c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xfc17 ; ret
0x0000000000074aec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000043a49 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000010c8ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 2 ; ret
0x00000000000e8d2c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 8 ; syscall
0x00000000001181ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x000000000006cf0c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdx] ; ret
0x0000000000069a7c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, edi ; ret
0x00000000000ee5ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, edx ; ret
0x0000000000133e3c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000013e84c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x0000000000118568 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000954fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi - 1], rdx ; ret
0x000000000009550c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x000000000010c29a : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000f966c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x00000000000e76f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x58] ; ret
0x00000000000b3e8c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x20] ; ret
0x0000000000075eac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000006a2c2 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x00000000000f8dad : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rbp, rsp ; call 0x75059
0x00000000000b36b6 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, qword ptr [rbx] ; call 0x1f941
0x000000000002a6e3 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, qword ptr [rdi] ; syscall
0x00000000000b85fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, rdx ; mov eax, esi ; syscall
0x000000000007b594 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rsi, qword ptr [rsp] ; jmp rax
0x000000000013e7ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x00000000000954ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x000000000009557c : add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x000000000009558c : add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000009914c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x0000000000133f8c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000000f64ca : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x000000000001dcb4 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; retf
0x000000000011836b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; xor eax, eax ; ret
0x00000000001117d8 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; ret
0x000000000009c3c3 : add byte ptr [rax], al ; add byte ptr [rax], al ; or byte ptr [rax + 0xf], 0x44 ; ret 0x8348
0x00000000000a82b6 : add byte ptr [rax], al ; add byte ptr [rax], al ; or byte ptr [rax + 0xf], 0x4d ; ret 0xc35b
0x00000000001614e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; or byte ptr [rbx - 5], dh ; call qword ptr [rax]
0x00000000000eaf68 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000003613a : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000008ac79 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000029135 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000016960c : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x000000000016979a : add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; pop r9 ; clc ; ret 0x6e1f
0x00000000000062ac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000001deac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1616
0x000000000001c82c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1625
0x000000000000fef4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d
0x000000000015458c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x0000000000154d24 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x0000000000153594 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x0000000000007b24 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x26
0x000000000000054a : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2800
0x0000000000003f9c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x31
0x0000000000153a84 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x000000000000a554 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x34
0x000000000000f66c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x35
0x0000000000010e6c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x42
0x000000000000807c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x45
0x000000000001053c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x49
0x0000000000005b5c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4e
0x0000000000010fd4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x51
0x000000000000c88c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x0000000000193f64 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x00000000000075fc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 4
0x0000000000192c94 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 5
0x000000000000dddc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 6
0x00000000001934a8 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 8
0x000000000000101c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x0000000000194928 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x0000000000008b74 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x14
0x000000000001a30c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x14b1
0x00000000001545c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d4
0x0000000000154d64 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d5
0x00000000001535d4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x24
0x0000000000010944 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x29
0x000000000000f75c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x32
0x0000000000153ac4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x33
0x0000000000157985 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x3b9a
0x0000000000004a64 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x3c
0x000000000016964c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x49f2
0x000000000000ecdc : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x4d
0x0000000000010df4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x4f
0x000000000000c87c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0xc
0x000000000001092c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0xf
0x000000000001045c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x000000000000c754 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 2
0x000000000000909c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 3
0x000000000000eeec : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 6
0x0000000000192450 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 7
0x00000000000052bc : add byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x0000000000037718 : add byte ptr [rax], al ; add byte ptr [rax], al ; test dl, dl ; cmovne eax, ecx ; ret
0x000000000018d4fc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; cld ; retf 1
0x000000000018cc6c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret 1
0x000000000018cca4 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 1
0x000000000018d454 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; push rsp ; retf 1
0x000000000009834c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x0000000000036042 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000003666c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000002034c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor edi, edi ; mov eax, edx ; syscall
0x000000000008a6fc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000017699e : add byte ptr [rax], al ; add byte ptr [rax], ch ; out dx, eax ; jmp qword ptr [rdi]
0x00000000001614e5 : add byte ptr [rax], al ; add byte ptr [rax], cl ; jae 0x1614ec ; call qword ptr [rax]
0x000000000009834d : add byte ptr [rax], al ; add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x0000000000018a1d : add byte ptr [rax], al ; add byte ptr [rax], dl ; ret
0x000000000001dc85 : add byte ptr [rax], al ; add byte ptr [rax], dl ; retf
0x000000000017d5f6 : add byte ptr [rax], al ; add byte ptr [rax], r8b ; add ah, dh ; retf
0x0000000000038c7d : add byte ptr [rax], al ; add byte ptr [rbp + 0x29], cl ; retf
0x0000000000028737 : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x00000000000aea0c : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; ror byte ptr [rax - 0x7d], cl ; ret
0x00000000000892d1 : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; ror byte ptr [rcx - 0x39], cl ; ret
0x000000000008bead : add byte ptr [rax], al ; add byte ptr [rbp + 0x38], al ; retf -0x78f1
0x000000000004e7ec : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x000000000007e284 : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x000000000010b335 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x1c ; call qword ptr [rax]
0x000000000010b877 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x30 ; call qword ptr [rax]
0x000000000009a73b : add byte ptr [rax], al ; add byte ptr [rbp - 0x10], dh ; ret
0x0000000000098e01 : add byte ptr [rax], al ; add byte ptr [rbp - 0x6bf0be13], al ; ret 0xfe83
0x0000000000121f48 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000c40f3 : add byte ptr [rax], al ; add byte ptr [rbp - 0x9d18b37], al ; ret
0x000000000008d32a : add byte ptr [rax], al ; add byte ptr [rbx + 0x294803e0], al ; ret 0x148
0x00000000000b90fe : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x00000000001062b2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x4f0f05f8], al ; ret 0x4589
0x000000000010628a : add byte ptr [rax], al ; add byte ptr [rbx + 0x4f0f1ef8], al ; ret 0x4589
0x000000000013371d : add byte ptr [rax], al ; add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x0000000000033fef : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000020434 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000224e6 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000049d0c : add byte ptr [rax], al ; add byte ptr [rbx + 0x7501046a], al ; ret
0x000000000003629d : add byte ptr [rax], al ; add byte ptr [rbx + 0xf48fffa], al ; ret
0x0000000000191c79 : add byte ptr [rax], al ; add byte ptr [rbx + 6], dl ; add byte ptr [rax], al ; ret 2
0x00000000001463d8 : add byte ptr [rax], al ; add byte ptr [rbx + rax - 9], bh ; fadd st(3) ; ret
0x000000000017cd69 : add byte ptr [rax], al ; add byte ptr [rbx + rax*8], ah ; add byte ptr [rax], dl ; ret
0x00000000000d12ff : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x2c], cl ; ret
0x0000000000102274 : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x32], ah ; syscall
0x0000000000056300 : add byte ptr [rax], al ; add byte ptr [rbx - 0x5ff43], al ; call qword ptr [rax]
0x00000000000ec998 : add byte ptr [rax], al ; add byte ptr [rbx - 0x74b7fe3f], al ; push rsp ; retf -0x74c0
0x000000000003613b : add byte ptr [rax], al ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x000000000004e5d7 : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000001041fb : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], dl ; retf
0x000000000011ec0c : add byte ptr [rax], al ; add byte ptr [rbx - 0x78f0c008], al ; retf -3
0x00000000000c205d : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7fe3b], al ; ret
0x00000000000e49dd : add byte ptr [rax], al ; add byte ptr [rbx - 0x7d], dl ; call qword ptr [rcx]
0x0000000000029136 : add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x0000000000053e91 : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], cl ; ret 0x8949
0x00000000000947df : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], cl ; retf 0x394d
0x000000000013e83d : add byte ptr [rax], al ; add byte ptr [rcx + 0x3518911], cl ; ret
0x00000000000e456f : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x0000000000072392 : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x00000000000f6ead : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; ret
0x000000000013e81d : add byte ptr [rax], al ; add byte ptr [rcx + 0x4518811], cl ; ret
0x00000000000954dd : add byte ptr [rax], al ; add byte ptr [rcx + 0x4578817], cl ; ret
0x0000000000051408 : add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret
0x0000000000050218 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x57 ; or al, 0x83 ; ret
0x00000000000501a5 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x57 ; or al, 0xf6 ; ret 0xf08
0x0000000000037915 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000098e20 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000002e830 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], cl ; retf
0x0000000000048215 : add byte ptr [rax], al ; add byte ptr [rcx + 1], bh ; jmp rax
0x0000000000098b2d : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x000000000017e3a9 : add byte ptr [rax], al ; add byte ptr [rcx + rbx*8 - 0x5bf00000], ah ; jmp qword ptr [rax]
0x000000000017e321 : add byte ptr [rax], al ; add byte ptr [rcx + rbx*8], bl ; add byte ptr [rax], al ; test al, 0x9f ; jmp rdi
0x0000000000101e51 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x14], al ; and al, 0xe8 ; ret
0x0000000000063ab4 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x24], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x00000000000f366d : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call 0xf00b8
0x00000000000b84da : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x20], al ; syscall
0x000000000007818e : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x31], cl ; mov eax, r8d ; syscall
0x00000000000f5933 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x38], al ; syscall
0x00000000000e7370 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x39], cl ; mov eax, esi ; syscall
0x00000000000e1932 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x39], cl ; xor eax, eax ; syscall
0x0000000000033003 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; ret
0x00000000000ffe5e : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0xa], cl ; call 0x2c8c8
0x0000000000077c99 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0xa], cl ; call 0xe47a8
0x00000000000f364f : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call 0xf00b8
0x000000000002d145 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call rax
0x0000000000184c25 : add byte ptr [rax], al ; add byte ptr [rcx + rdx*2], al ; retf 0
0x00000000000da3cd : add byte ptr [rax], al ; add byte ptr [rcx - 0x3fcefb89], cl ; ret
0x00000000000cf0ed : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; cmp byte ptr [r8 - 0x77], r9b ; retf -0x7cb8
0x000000000003ffc7 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret
0x000000000011eb34 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; sub byte ptr [r8 - 0x77], r9b ; ret 0x8948
0x00000000000c4567 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0xc141
0x000000000009dc3d : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; retf
0x00000000000dfa5e : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; std ; call 0xdbd68
0x00000000000465ac : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000000c283f : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x349
0x0000000000082ac1 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; retf
0x00000000000892aa : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; retf -0x46bf
0x00000000000f041d : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; retf -0x76b7
0x00000000000e90ed : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; retf 0x2db8
0x00000000000e901d : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; retf 0x2eb8
0x00000000000f5cdf : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; retf 0x50f
0x00000000000aaadb : add byte ptr [rax], al ; add byte ptr [rcx - 0x7b], al ; retf
0x000000000001fcd8 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; retf 0x31ff
0x00000000000c0b9d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000008933f : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4101
0x000000000008d64d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4601
0x000000000003d32d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4801
0x00000000000f993d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4901
0x000000000012044d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000000b88ae : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xeb08
0x000000000007edcd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000007bd1f : add byte ptr [rax], al ; add byte ptr [rcx - 0x80], al ; clc ; add dword ptr [rbp - 0x77], ecx ; retf 0xf44
0x0000000000101ebd : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0x7502
0x0000000000101ddf : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000016960d : add byte ptr [rax], al ; add byte ptr [rcx - 0xd], bl ; clc ; ret 0x6e1f
0x00000000000a0ff0 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; fisttp dword ptr [rcx - 0x39] ; ret 0xffff
0x00000000000839a0 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 1
0x00000000000839c6 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 2
0x00000000000406c9 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x8b44
0x0000000000040d42 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x8b4c
0x00000000000a66b5 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x00000000000c229d : add byte ptr [rax], al ; add byte ptr [rcx], bh ; retf 0x337e
0x0000000000082924 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret
0x00000000000ae55b : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x2941
0x00000000000b1d92 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8944
0x00000000000afaef : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8d41
0x00000000000e0e06 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xc085
0x0000000000125e1b : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xca39
0x00000000000af676 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd089
0x00000000000b223d : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd629
0x00000000000ae523 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd889
0x00000000001034a8 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; retf -0x2e77
0x0000000000035bba : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000f5b1e : add byte ptr [rax], al ; add byte ptr [rcx], dh ; test byte ptr [rax + 0x63], 0xfa ; syscall
0x00000000000da743 : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call rax
0x000000000009a182 : add byte ptr [rax], al ; add byte ptr [rdi + 2], bh ; neg eax ; ret
0x00000000001495f2 : add byte ptr [rax], al ; add byte ptr [rdi + 9], bh ; neg eax ; ret
0x000000000017e971 : add byte ptr [rax], al ; add byte ptr [rdi + rbx*8], ch ; add al, ch ; retf
0x000000000017e911 : add byte ptr [rax], al ; add byte ptr [rdi + rbx*8], cl ; add byte ptr [rax], al ; pop rax ; retf
0x000000000017e959 : add byte ptr [rax], al ; add byte ptr [rdi + rbx*8], dl ; add al, ah ; retf
0x00000000000b2823 : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x4f], al ; loopne 0xb281c ; ret 0xffea
0x0000000000179959 : add byte ptr [rax], al ; add byte ptr [rdi + rcx*4], dl ; add al, ah ; ret 0xffef
0x0000000000190931 : add byte ptr [rax], al ; add byte ptr [rdi + rdi*8], ch ; add dword ptr [rax], eax ; pop rax ; ret 0xfff8
0x000000000017e1c1 : add byte ptr [rax], al ; add byte ptr [rdi + rdx*8 - 0x62380000], bh ; jmp qword ptr [rcx]
0x0000000000099095 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x0000000000133f1d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x0000000000133f8d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x00000000000ba91e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00000000000383ed : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000002515b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000bd255 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x53 ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000006666d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x000000000009b252 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000009914d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0xc1 ; pop rbx ; ret
0x000000000008eaed : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esi, 0x89c63907 ; ret 0xb8
0x00000000000838bd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x00000000000b6b91 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret
0x00000000000aee59 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x144
0x00000000000a8b15 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x3bba
0x00000000000292ae : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x4389
0x00000000000c9b94 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x813b
0x00000000000f5c99 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8348
0x000000000003f7ac : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8539
0x00000000000df9f8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x90c3
0x00000000000a3eac : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc3f3
0x00000000000d3713 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xd4e9
0x00000000000d5211 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xe1e9
0x00000000000c5cec : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xf35b
0x00000000000d2ef2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xfc3
0x0000000000112406 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret
0x0000000000125d65 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xf40
0x0000000000040b9b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8b44
0x0000000000064757 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xb60f
0x000000000017e439 : add byte ptr [rax], al ; add byte ptr [rdx + rbx*8], dh ; add byte ptr [rax], al ; movsd dword ptr [rdi], dword ptr [rsi] ; jmp qword ptr [rcx]
0x0000000000180481 : add byte ptr [rax], al ; add byte ptr [rdx + rdi*8], bh ; add byte ptr [rax], ch ; retf
0x00000000000b6082 : add byte ptr [rax], al ; add byte ptr [rdx + rdx*8 - 0x76b76a8b], al ; ret
0x0000000000000762 : add byte ptr [rax], al ; add byte ptr [rdx], dl ; retf
0x00000000001442a2 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000837d2 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x000000000009a94d : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; retf -0x7ab8
0x000000000005338d : add byte ptr [rax], al ; add byte ptr [rsi + 1], bh ; jmp rax
0x0000000000191975 : add byte ptr [rax], al ; add byte ptr [rsi + 6], bh ; add byte ptr [rax], al ; retf
0x00000000000daf95 : add byte ptr [rax], al ; add byte ptr [rsi + 6], dh ; ret
0x000000000017d819 : add byte ptr [rax], al ; add byte ptr [rsi + rcx*8], dl ; add byte ptr [rax], al ; loopne 0x17d845 ; call qword ptr [rdx]
0x00000000000f64cb : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; ret
0x00000000000da3a7 : add byte ptr [rax], al ; add byte ptr [rsp + rax - 0xd], dh ; ret
0x00000000000d2e9f : add byte ptr [rax], al ; add byte ptr [rsp + rbx*2 - 0xd], dh ; ret
0x0000000000174a6a : add byte ptr [rax], al ; add byte ptr fs:[rax], al ; loopne 0x174a40 ; in al, dx ; call rax
0x0000000000063d53 : add byte ptr [rax], al ; add cl, ch ; adc eax, 0x83ffff96 ; retf
0x00000000000804bc : add byte ptr [rax], al ; add cl, ch ; cld ; ret
0x00000000000265c9 : add byte ptr [rax], al ; add cl, ch ; mov esp, 0x89fffffe ; ret 0xe283
0x0000000000050439 : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000005a9ae : add byte ptr [rax], al ; add cl, ch ; ret 0xffa9
0x0000000000061ca6 : add byte ptr [rax], al ; add cl, ch ; ret 0xffb6
0x00000000000308de : add byte ptr [rax], al ; add cl, ch ; ret 0xfffd
0x00000000000bc065 : add byte ptr [rax], al ; add cl, ch ; retf
0x000000000006359e : add byte ptr [rax], al ; add cl, ch ; retf -0x63
0x000000000005abf1 : add byte ptr [rax], al ; add cl, ch ; retf -0xf
0x000000000003af91 : add byte ptr [rax], al ; add cl, ch ; syscall
0x0000000000026650 : add byte ptr [rax], al ; add cl, ch ; xor eax, 0x89fffffe ; ret 0xe283
0x0000000000076f44 : add byte ptr [rax], al ; add dh, dh ; ret
0x000000000004a310 : add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x0000000000148a61 : add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x00000000000c5117 : add byte ptr [rax], al ; add dh, dh ; ret 0x7540
0x00000000000d31dd : add byte ptr [rax], al ; add dh, dh ; ret 0xf01
0x000000000010c751 : add byte ptr [rax], al ; add dh, dh ; ret 0xf04
0x00000000000767d9 : add byte ptr [rax], al ; add dh, dh ; ret 0xf08
0x0000000000078a8d : add byte ptr [rax], al ; add dh, dh ; ret 0xf0f
0x000000000008fa50 : add byte ptr [rax], al ; add dh, dh ; ret 0xf20
0x000000000008fa59 : add byte ptr [rax], al ; add dh, dh ; ret 0xf40
0x00000000000f2988 : add byte ptr [rax], al ; add dh, dh ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp qword ptr [rax]
0x0000000000184e52 : add byte ptr [rax], al ; add dword ptr [rax], r8d ; pop rax ; sti ; cmc ; jmp qword ptr [rdx]
0x00000000000c1a06 : add byte ptr [rax], al ; add dword ptr [rdi], ecx ; lahf ; ret 0x8feb
0x0000000000064e56 : add byte ptr [rax], al ; add dword ptr [rdx + 4], 1 ; xor eax, eax ; ret
0x0000000000184c6a : add byte ptr [rax], al ; add dword ptr fs:[rax], eax ; sal bh, 0xf5 ; call qword ptr [rdx]
0x0000000000190f4a : add byte ptr [rax], al ; add eax, 0xdd200002 ; clc ; call qword ptr [rbx]
0x0000000000192c4e : add byte ptr [rax], al ; add eax, dword ptr [rcx] ; add byte ptr [rax], al ; ret
0x000000000015ff89 : add byte ptr [rax], al ; add ecx, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001119df : add byte ptr [rax], al ; add ecx, dword ptr [rbx + 0xf042454] ; retf 0x5089
0x000000000009a46e : add byte ptr [rax], al ; add rax, 3 ; ret
0x0000000000044fcc : add byte ptr [rax], al ; add rax, rcx ; jmp rax
0x0000000000083684 : add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; ret
0x0000000000110f21 : add byte ptr [rax], al ; add rdi, 0x10 ; jmp rcx
0x0000000000113491 : add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x0000000000112bb1 : add byte ptr [rax], al ; add rdi, 0x68 ; jmp rcx
0x0000000000110354 : add byte ptr [rax], al ; add rdi, 0xc8 ; jmp rcx
0x000000000010d385 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000010d2c6 : add byte ptr [rax], al ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x0000000000033529 : add byte ptr [rax], al ; add rsp, 0x108 ; ret
0x0000000000032ef6 : add byte ptr [rax], al ; add rsp, 0x148 ; ret
0x00000000000719ff : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000da3e9 : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000002056b : add byte ptr [rax], al ; add rsp, 0x28 ; jmp rax
0x000000000007407c : add byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000032684 : add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000000000010dccd : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000033247 : add byte ptr [rax], al ; add rsp, 0xd0 ; ret
0x000000000003fc71 : add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x000000000008278a : add byte ptr [rax], al ; add rsp, 8 ; jmp rax
0x0000000000021327 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000032cd6 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000003292e : add byte ptr [rax], al ; addss xmm0, xmm0 ; ret
0x000000000017531e : add byte ptr [rax], al ; and ah, dh ; in al, dx ; jmp rcx
0x0000000000190a2a : add byte ptr [rax], al ; and al, 0 ; add al, byte ptr [rax] ; nop ; ret
0x000000000018cdee : add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; in al, dx ; ret
0x000000000016cb06 : add byte ptr [rax], al ; and al, 0x35 ; int1 ; jmp rsp
0x000000000016b70e : add byte ptr [rax], al ; and al, 0x84 ; in al, dx ; call rsp
0x000000000018d32a : add byte ptr [rax], al ; and al, 0xc9 ; add dword ptr [rax], eax ; and byte ptr [rdx], cl ; clc ; jmp qword ptr [rdi]
0x000000000018db2a : add byte ptr [rax], al ; and al, 0xd1 ; add dword ptr [rax], eax ; sal byte ptr [rbx], 0xf8 ; call qword ptr [rdx]
0x00000000001928ba : add byte ptr [rax], al ; and al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000017d48e : add byte ptr [rax], al ; and bl, ch ; int1 ; call qword ptr [rdx]
0x000000000017d45e : add byte ptr [rax], al ; and bl, ch ; int1 ; jmp qword ptr [rax]
0x00000000000713ce : add byte ptr [rax], al ; and dword ptr [rdi], 0xffffffcf ; ret
0x0000000000182f4a : add byte ptr [rax], al ; and eax, 0x86400001 ; cmc ; jmp qword ptr [rcx]
0x000000000002c37b : add byte ptr [rax], al ; and eax, esi ; ret
0x000000000006ecce : add byte ptr [rax], al ; and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x0000000000177fda : add byte ptr [rax], al ; and qword ptr [rax], r8 ; add byte ptr [rax + 0x73], al ; out dx, eax ; jmp qword ptr [rcx]
0x00000000000838be : add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x00000000000806d0 : add byte ptr [rax], al ; bsf rax, rdx ; ret
0x0000000000082384 : add byte ptr [rax], al ; bsr rax, rax ; add rax, rdi ; ret
0x00000000000ecc45 : add byte ptr [rax], al ; call 0x108e74
0x000000000017f006 : add byte ptr [rax], al ; call 0x1417e360
0x0000000000175496 : add byte ptr [rax], al ; call 0x181741ef
0x0000000000175495 : add byte ptr [rax], al ; call 0x181741f0
0x0000000000173ec6 : add byte ptr [rax], al ; call 0x21172afb
0x0000000000173ce6 : add byte ptr [rax], al ; call 0x27172915
0x000000000007489e : add byte ptr [rax], al ; call 0x71364
0x000000000005f5b7 : add byte ptr [rax], al ; call 0x9c004
0x00000000001089f1 : add byte ptr [rax], al ; call 0xf54b4
0x0000000000068a3b : add byte ptr [rax], al ; call 0xf54e4
0x000000000017d366 : add byte ptr [rax], al ; call 0xffffffffd817c557
0x000000000011f436 : add byte ptr [rax], al ; call qword ptr [rbx]
0x0000000000020301 : add byte ptr [rax], al ; call rax
0x00000000001555be : add byte ptr [rax], al ; call rdi
0x0000000000035914 : add byte ptr [rax], al ; call rdx
0x000000000015476e : add byte ptr [rax], al ; call rsp
0x0000000000173c16 : add byte ptr [rax], al ; clc ; and ch, ah ; call qword ptr [rcx]
0x0000000000099215 : add byte ptr [rax], al ; clc ; jg 0x99219 ; int1 ; mov eax, eax ; ret
0x0000000000171ac6 : add byte ptr [rax], al ; clc ; jne 0x171abb ; call qword ptr [rdx]
0x0000000000179aa6 : add byte ptr [rax], al ; clc ; ret
0x0000000000174236 : add byte ptr [rax], al ; clc ; xor ebp, esp ; call qword ptr [rax]
0x0000000000175f8a : add byte ptr [rax], al ; cld ; add byte ptr [rax], al ; add al, dh ; out dx, al ; jmp qword ptr [rcx]
0x0000000000174102 : add byte ptr [rax], al ; cld ; add byte ptr ss:[rax], al ; cwde ; sub ebp, esp ; call qword ptr [rdx]
0x0000000000184c02 : add byte ptr [rax], al ; cld ; add dword ptr [r8], eax ; sub bh, dh ; cmc ; call qword ptr [rax]
0x0000000000184402 : add byte ptr [rax], al ; cld ; cmp dword ptr [rcx], eax ; add byte ptr [rax], bl ; fdiv st(5) ; jmp qword ptr [rcx]
0x000000000017f002 : add byte ptr [rax], al ; cld ; in eax, 0 ; add al, ch ; call qword ptr [rbx]
0x0000000000190a02 : add byte ptr [rax], al ; cld ; inc dword ptr [rcx] ; add byte ptr [rax], bl ; ret
0x0000000000188202 : add byte ptr [rax], al ; cld ; ja 0x188211 ; add byte ptr [rax], ch ; sal esi, 1 ; jmp qword ptr [rsi]
0x000000000017bc02 : add byte ptr [rax], al ; cld ; mov cl, 0 ; add byte ptr [rax], bh ; jrcxz 0x17bc04 ; jmp rbx
0x0000000000189402 : add byte ptr [rax], al ; cld ; mov dword ptr [rcx], eax ; add al, ch ; push rsi ; call qword ptr [rax]
0x000000000018f102 : add byte ptr [rax], al ; cld ; out 1, al ; add byte ptr [rax + 0x71], bh ; clc ; call qword ptr [rdx]
0x0000000000186102 : add byte ptr [rax], al ; cld ; push rsi ; add dword ptr [rax], eax ; cwde ; cmp esi, esi ; jmp qword ptr [rcx]
0x000000000017d502 : add byte ptr [rax], al ; cld ; retf 0
0x000000000018d502 : add byte ptr [rax], al ; cld ; retf 1
0x0000000000173402 : add byte ptr [rax], al ; cld ; sub dword ptr [rax], eax ; add byte ptr [rax + 7], cl ; in al, dx ; jmp qword ptr [rsi]
0x0000000000183602 : add byte ptr [rax], al ; cld ; sub eax, dword ptr [rcx] ; add byte ptr [rax], bh ; wait ; cmc ; jmp qword ptr [rcx]
0x0000000000180102 : add byte ptr [rax], al ; cld ; test byte ptr [rax], 0 ; cwde ; nop ; jmp qword ptr [rcx]
0x00000000000f5c9a : add byte ptr [rax], al ; cmova eax, edx ; add rsp, 0x28 ; ret
0x00000000000df9f9 : add byte ptr [rax], al ; cmova eax, edx ; ret
0x0000000000104719 : add byte ptr [rax], al ; cmovae rax, rdx ; ret
0x00000000000ea3f9 : add byte ptr [rax], al ; cmovb rax, rdx ; ret
0x00000000000a3ead : add byte ptr [rax], al ; cmove eax, edx ; ret
0x00000000000c2fff : add byte ptr [rax], al ; cmove eax, esi ; ret
0x00000000000e1cc7 : add byte ptr [rax], al ; cmove rax, rbx ; pop rbx ; ret
0x0000000000099141 : add byte ptr [rax], al ; cmove rax, rcx ; pop rbx ; ret
0x0000000000099109 : add byte ptr [rax], al ; cmove rax, rdx ; pop rbx ; ret
0x000000000008b2f9 : add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000000c5ced : add byte ptr [rax], al ; cmovne eax, edx ; pop rbx ; ret
0x00000000000f5b39 : add byte ptr [rax], al ; cmovne eax, edx ; ret
0x00000000000f03ef : add byte ptr [rax], al ; cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x0000000000182b42 : add byte ptr [rax], al ; cmp al, 0x21 ; add dword ptr [rax], eax ; pop rax ; sar cl, 1 ; call qword ptr [rax]
0x0000000000183542 : add byte ptr [rax], al ; cmp al, 0x2b ; add dword ptr [rax], eax ; js 0x1834ed ; cmc ; jmp qword ptr [rcx]
0x0000000000185d42 : add byte ptr [rax], al ; cmp al, 0x53 ; add dword ptr [rax], eax ; cwde ; xor al, 0xf6 ; jmp qword ptr [rcx]
0x0000000000188142 : add byte ptr [rax], al ; cmp al, 0x77 ; add dword ptr [rax], eax ; call 0x27187ad5
0x000000000018e242 : add byte ptr [rax], al ; cmp al, 0xd8 ; add dword ptr [rax], eax ; sbb byte ptr [rcx - 8], cl ; jmp qword ptr [rax]
0x000000000018466a : add byte ptr [rax], al ; cmp al, 1 ; add byte ptr [rax], al ; fcomi st(5) ; jmp qword ptr [rsi]
0x0000000000171576 : add byte ptr [rax], al ; cmp bl, bpl ; call rbx
0x0000000000142756 : add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000017424a : add byte ptr [rax], al ; cmp byte ptr [rax], r8b ; add al, dh ; xor ebp, esp ; call qword ptr [rdx]
0x000000000018424a : add byte ptr [rax], al ; cmp byte ptr [rcx], r8b ; add byte ptr [rax - 0x2d], dl ; cmc ; jmp qword ptr [rcx]
0x00000000001730d6 : add byte ptr [rax], al ; cmp byte ptr [rdx], al ; in al, dx ; jmp qword ptr [rcx]
0x0000000000173dc6 : add byte ptr [rax], al ; cmp byte ptr [rsi], ah ; in al, dx ; jmp rsp
0x000000000017d0d6 : add byte ptr [rax], al ; cmp ch, bl ; int1 ; jmp qword ptr [rdi]
0x000000000017eaae : add byte ptr [rax], al ; cmp dh, 0xf2 ; call qword ptr [rax]
0x000000000006dbe7 : add byte ptr [rax], al ; cmp eax, 0xff ; jne 0x6dbf8 ; pop rbx ; ret
0x000000000009b0f7 : add byte ptr [rax], al ; cmp edi, 0x7f ; ja 0x9b111 ; mov eax, edi ; ret
0x000000000006bad5 : add byte ptr [rax], al ; cmp qword ptr [rsi + 0x30], 0 ; je 0x6bae9 ; ret
0x000000000007ac77 : add byte ptr [rax], al ; cmp rdx, r8 ; jne 0x7ac48 ; ret
0x00000000000b9794 : add byte ptr [rax], al ; cmp rdx, rcx ; jne 0xb97c7 ; ret
0x000000000017b8d6 : add byte ptr [rax], al ; cwde ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cli ; call qword ptr [rax]
0x000000000017b9c6 : add byte ptr [rax], al ; cwde ; mov al, 0xf0 ; call qword ptr [rax]
0x000000000017b7b6 : add byte ptr [rax], al ; cwde ; mov esi, eax ; jmp rbx
0x00000000001800a6 : add byte ptr [rax], al ; cwde ; nop ; jmp qword ptr [rcx]
0x0000000000174016 : add byte ptr [rax], al ; cwde ; sub ch, ah ; call qword ptr [rsi]
0x00000000001740d6 : add byte ptr [rax], al ; cwde ; sub ebp, esp ; call qword ptr [rdx]
0x000000000017f356 : add byte ptr [rax], al ; enter -0xca9, -1 ; retf
0x0000000000000c3e : add byte ptr [rax], al ; enter 0, 0 ; retf
0x000000000015576e : add byte ptr [rax], al ; enter 0, 0 ; retf 0
0x00000000001528c6 : add byte ptr [rax], al ; enter 0x10, 0 ; retf
0x00000000001520c6 : add byte ptr [rax], al ; enter 0xa, 0 ; retf
0x00000000001524c6 : add byte ptr [rax], al ; enter 0xd, 0 ; retf
0x0000000000000e2a : add byte ptr [rax], al ; enter 1, 0 ; retf
0x000000000015596e : add byte ptr [rax], al ; enter 1, 0 ; retf 1
0x0000000000155b6e : add byte ptr [rax], al ; enter 2, 0 ; retf 2
0x0000000000155d6e : add byte ptr [rax], al ; enter 3, 0 ; retf 3
0x0000000000155f6e : add byte ptr [rax], al ; enter 4, 0 ; retf 4
0x000000000015616e : add byte ptr [rax], al ; enter 5, 0 ; retf 5
0x000000000015636e : add byte ptr [rax], al ; enter 6, 0 ; retf 6
0x000000000015656e : add byte ptr [rax], al ; enter 7, 0 ; retf 7
0x000000000015676e : add byte ptr [rax], al ; enter 8, 0 ; retf 8
0x000000000015696e : add byte ptr [rax], al ; enter 9, 0 ; retf 9
0x000000000019418e : add byte ptr [rax], al ; fadd dword ptr [rbx] ; add byte ptr [rax], al ; syscall
0x0000000000032c5e : add byte ptr [rax], al ; fadd st(0) ; ret
0x0000000000185ce2 : add byte ptr [rax], al ; fcom qword ptr [rdx + 1] ; add byte ptr [rax], bh ; xor al, 0xf6 ; jmp qword ptr [rcx]
0x000000000018466f : add byte ptr [rax], al ; fcomi st(5) ; jmp qword ptr [rsi]
0x0000000000183ee2 : add byte ptr [rax], al ; fdiv qword ptr [rcx + rax] ; add byte ptr [rax - 0x34], cl ; cmc ; jmp qword ptr [rcx]
0x0000000000173ce2 : add byte ptr [rax], al ; fdiv qword ptr [rdx] ; add byte ptr [rax], al ; call 0x27172919
0x00000000001880e2 : add byte ptr [rax], al ; fdiv qword ptr [rsi + 1] ; add al, ch ; jg 0x1880ed ; jmp qword ptr [rsi]
0x00000000001843ef : add byte ptr [rax], al ; fdiv st(5) ; jmp qword ptr [rcx]
0x00000000001908e2 : add byte ptr [rax], al ; fdiv st(6), st(0) ; add dword ptr [rax], eax ; sub dl, al ; clc ; jmp qword ptr [rcx]
0x000000000017c9e2 : add byte ptr [rax], al ; fdivr qword ptr [rdi - 0x6b980000] ; cli ; call qword ptr [rdi]
0x00000000001817e2 : add byte ptr [rax], al ; fmul qword ptr [rip - 0x62d7ffff] ; hlt ; jmp qword ptr [rdi]
0x0000000000188bfa : add byte ptr [rax], al ; hlt ; add dword ptr [rcx], 0xf6ee2000 ; call qword ptr [rsi]
0x000000000017e8fa : add byte ptr [rax], al ; hlt ; fiadd word ptr [rax] ; add byte ptr [rax - 0x35], al ; jmp qword ptr [rcx]
0x000000000018e9fa : add byte ptr [rax], al ; hlt ; fild word ptr [rcx] ; add al, dl ; clc ; call qword ptr [rcx]
0x00000000001880fa : add byte ptr [rax], al ; hlt ; jbe 0x188109 ; add al, ah ; sal dh, 1 ; jmp qword ptr [rsi]
0x000000000016b296 : add byte ptr [rax], al ; hlt ; loopne 0x16b28b ; call rsp
0x000000000016b7de : add byte ptr [rax], al ; hlt ; mov ebp, esp ; jmp rsp
0x0000000000185cfa : add byte ptr [rax], al ; hlt ; push rdx ; add dword ptr [rax], eax ; push rax ; xor al, 0xf6 ; jmp qword ptr [rcx]
0x000000000017d5fa : add byte ptr [rax], al ; hlt ; retf
0x000000000017dafa : add byte ptr [rax], al ; hlt ; rol byte ptr [rax], 1 ; add byte ptr [rax], dh ; movsxd rsi, edx ; call qword ptr [rax]
0x0000000000183efa : add byte ptr [rax], al ; hlt ; xor al, 1 ; add byte ptr [rax - 0x34], ah ; cmc ; call qword ptr [rcx]
0x0000000000173bfa : add byte ptr [rax], al ; hlt ; xor dword ptr [rax], eax ; add al, dh ; and ch, ah ; call qword ptr [rcx]
0x000000000017efea : add byte ptr [rax], al ; in al, -0x1b ; add byte ptr [rax], al ; loopne 0x17f049 ; call qword ptr [rbx]
0x000000000018e2ea : add byte ptr [rax], al ; in al, -0x28 ; add dword ptr [rax], eax ; push rax ; clc ; call qword ptr [rsi]
0x000000000017d4ea : add byte ptr [rax], al ; in al, -0x36 ; add byte ptr [rax], al ; and bl, ch ; int1 ; call qword ptr [rdx]
0x000000000016ba9e : add byte ptr [rax], al ; in al, -0x3b ; in al, dx ; jmp rsp
0x000000000017abea : add byte ptr [rax], al ; in al, -0x5f ; add byte ptr [rax], al ; sal cl, 0xfc ; call qword ptr [rdx]
0x00000000001794ea : add byte ptr [rax], al ; in al, -0x76 ; add byte ptr [rax], al ; jo 0x1794b1 ; out dx, eax ; call qword ptr [rbx]
0x00000000001843ea : add byte ptr [rax], al ; in al, 0x39 ; add dword ptr [rax], eax ; add al, bl ; cmc ; jmp qword ptr [rcx]
0x00000000001860ea : add byte ptr [rax], al ; in al, 0x56 ; add dword ptr [rax], eax ; cmp byte ptr [rcx], 0xf6 ; jmp qword ptr [rcx]
0x000000000018ee52 : add byte ptr [rax], al ; in al, 1 ; add al, bl ; insd dword ptr [rdi], dx ; clc ; call qword ptr [rdx]
0x0000000000181ff2 : add byte ptr [rax], al ; in al, dx ; adc eax, 0xfe880001 ; hlt ; jmp qword ptr [rcx]
0x0000000000180ef2 : add byte ptr [rax], al ; in al, dx ; add al, 1 ; add byte ptr [rax + 0x28], cl ; hlt ; jmp rdx
0x000000000017fdf2 : add byte ptr [rax], al ; in al, dx ; add byte ptr [rax], al ; mov bl, sil ; jmp qword ptr [rcx]
0x00000000001842f2 : add byte ptr [rax], al ; in al, dx ; cmp byte ptr [rcx], al ; add byte ptr [rax - 0x2c], ch ; cmc ; jmp qword ptr [rcx]
0x0000000000187ff2 : add byte ptr [rax], al ; in al, dx ; jne 0x188001 ; add byte ptr [rax], bh ; sal dh, 1 ; jmp qword ptr [rsi]
0x00000000001785f2 : add byte ptr [rax], al ; in al, dx ; jnp 0x178600 ; add byte ptr [rax - 0x7d], cl ; out dx, eax ; call rcx
0x000000000017c8f2 : add byte ptr [rax], al ; in al, dx ; mov esi, 0x7ea80000 ; int1 ; call rsp
0x00000000001864f2 : add byte ptr [rax], al ; in al, dx ; pop rdx ; add dword ptr [rax], eax ; sub byte ptr [rax - 0xa], al ; jmp qword ptr [rcx]
0x000000000017cdf2 : add byte ptr [rax], al ; in al, dx ; ret
0x0000000000179ef2 : add byte ptr [rax], al ; in al, dx ; xchg eax, esp ; add byte ptr [rax], al ; sub al, dl ; out dx, eax ; call rax
0x0000000000184872 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add dword ptr ds:[rax], eax ; out 0xf5, al ; jmp qword ptr [rcx]
0x000000000017e972 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; fild word ptr [rax] ; add al, ch ; retf
0x0000000000188172 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ja 0x188181 ; add al, ch ; jg 0x18817d ; jmp qword ptr [rsi]
0x000000000018cd72 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret
0x000000000018cc72 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret 1
0x000000000018d572 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; retf
0x000000000017d472 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; retf 0
0x000000000017e072 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; salc ; add byte ptr [rax], al ; js 0x17e032 ; cld ; jmp qword ptr [rbx]
0x0000000000183772 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; sub eax, 0xa9780001 ; cmc ; jmp rcx
0x0000000000183f72 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; xor eax, 0xcd680001 ; cmc ; call rdi
0x000000000016c5f6 : add byte ptr [rax], al ; ja 0x16c5f0 ; call rsp
0x0000000000177fde : add byte ptr [rax], al ; jae 0x177fd7 ; jmp qword ptr [rcx]
0x00000000000daf96 : add byte ptr [rax], al ; jbe 0xdafa5 ; ret
0x000000000016beb6 : add byte ptr [rax], al ; je 0x16be54 ; out dx, eax ; jmp rsp
0x000000000016bfa6 : add byte ptr [rax], al ; je 0x16bf6e ; out dx, eax ; call rsp
0x000000000016c9ae : add byte ptr [rax], al ; je 0x16c9bf ; int1 ; jmp rsp
0x000000000017b17a : add byte ptr [rax], al ; je 0x17b12e ; add byte ptr [rax], al ; xor byte ptr [rax - 0x10], dl ; jmp qword ptr [rdx]
0x0000000000184d7a : add byte ptr [rax], al ; je 0x184dca ; add dword ptr [rax], eax ; push rax ; cli ; cmc ; jmp qword ptr [rcx]
0x0000000000187f7a : add byte ptr [rax], al ; je 0x187ffc ; add dword ptr [rax], eax ; ror bh, 0xf6 ; jmp qword ptr [rsi]
0x000000000018a67a : add byte ptr [rax], al ; je 0x18a623 ; add dword ptr [rax], eax ; adc byte ptr [rdi - 9], bl ; call qword ptr [rdi]
0x000000000019127a : add byte ptr [rax], al ; je 0x19128f ; add al, byte ptr [rax] ; xor dl, ah ; clc ; jmp qword ptr [rbx]
0x0000000000071386 : add byte ptr [rax], al ; je 0x71394 ; ret
0x000000000007cfb7 : add byte ptr [rax], al ; je 0x7cfc4 ; ret
0x000000000007dfb6 : add byte ptr [rax], al ; je 0x7dfc4 ; ret
0x000000000009aa64 : add byte ptr [rax], al ; je 0x9aad8 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000b97bb : add byte ptr [rax], al ; je 0xb980e ; mov eax, 0x20 ; ret
0x00000000000d0156 : add byte ptr [rax], al ; je 0xd0196 ; xor eax, eax ; ret
0x00000000000d2ea0 : add byte ptr [rax], al ; je 0xd2f05 ; ret
0x00000000000da3a8 : add byte ptr [rax], al ; je 0xda3b5 ; ret
0x00000000001495f3 : add byte ptr [rax], al ; jg 0x149606 ; neg eax ; ret
0x000000000009a183 : add byte ptr [rax], al ; jg 0x9a18f ; neg eax ; ret
0x00000000001463d9 : add byte ptr [rax], al ; jl 0x1463e6 ; neg eax ; ret
0x000000000017cc96 : add byte ptr [rax], al ; jl 0x17cca1 ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x000000000017d55e : add byte ptr [rax], al ; jl 0x17d569 ; add byte ptr [rax], al ; pop rsp ; retf
0x0000000000181982 : add byte ptr [rax], al ; jl 0x18199c ; add dword ptr [rax], eax ; pop rax ; retf
0x0000000000182b82 : add byte ptr [rax], al ; jl 0x182bb0 ; add dword ptr [rax], eax ; sub al, dl ; stc ; call qword ptr [rax]
0x0000000000185c82 : add byte ptr [rax], al ; jl 0x185ce1 ; add dword ptr [rax], eax ; clc ; xor esi, esi ; jmp qword ptr [rcx]
0x000000000018bb82 : add byte ptr [rax], al ; jl 0x18bb40 ; add dword ptr [rax], eax ; js 0x18bbd9 ; stc ; call qword ptr [rax]
0x000000000018cd6e : add byte ptr [rax], al ; jl 0x18cd79 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret
0x0000000000191976 : add byte ptr [rax], al ; jle 0x191986 ; add byte ptr [rax], al ; retf
0x000000000010372e : add byte ptr [rax], al ; jmp 0x1f93c
0x00000000000c3d70 : add byte ptr [rax], al ; jmp 0xc3d3a
0x000000000000defe : add byte ptr [rax], al ; jmp qword ptr [rcx]
0x000000000002c6c7 : add byte ptr [rax], al ; jmp rax
0x000000000011035b : add byte ptr [rax], al ; jmp rcx
0x00000000000376db : add byte ptr [rax], al ; jne 0x37705 ; ret
0x0000000000039eeb : add byte ptr [rax], al ; jne 0x39f15 ; ret
0x000000000003c69b : add byte ptr [rax], al ; jne 0x3c6c5 ; ret
0x000000000009a73c : add byte ptr [rax], al ; jne 0x9a735 ; ret
0x000000000009cc0b : add byte ptr [rax], al ; jne 0x9cc35 ; ret
0x000000000009f29b : add byte ptr [rax], al ; jne 0x9f2c5 ; ret
0x00000000000a182b : add byte ptr [rax], al ; jne 0xa1855 ; ret
0x00000000000b8205 : add byte ptr [rax], al ; jne 0xb8222 ; mov eax, 0x22 ; syscall
0x00000000000b8265 : add byte ptr [rax], al ; jne 0xb8282 ; mov eax, 0x23 ; syscall
0x00000000000b968f : add byte ptr [rax], al ; jne 0xb9660 ; ret
0x00000000000b989e : add byte ptr [rax], al ; jne 0xb9881 ; xor eax, eax ; ret
0x00000000000db6e5 : add byte ptr [rax], al ; jne 0xdb702 ; mov eax, 2 ; syscall
0x00000000000db905 : add byte ptr [rax], al ; jne 0xdb922 ; mov eax, 0 ; syscall
0x00000000000db965 : add byte ptr [rax], al ; jne 0xdb982 ; mov eax, 1 ; syscall
0x00000000000dbf25 : add byte ptr [rax], al ; jne 0xdbf42 ; mov eax, 3 ; syscall
0x00000000000dc075 : add byte ptr [rax], al ; jne 0xdc092 ; mov eax, 0x55 ; syscall
0x00000000000df895 : add byte ptr [rax], al ; jne 0xdf8b2 ; mov eax, 7 ; syscall
0x00000000000e1045 : add byte ptr [rax], al ; jne 0xe1062 ; mov eax, 0x13 ; syscall
0x00000000000e10a5 : add byte ptr [rax], al ; jne 0xe10c2 ; mov eax, 0x14 ; syscall
0x00000000000e1795 : add byte ptr [rax], al ; jne 0xe17b2 ; mov eax, 0x4a ; syscall
0x00000000000e1825 : add byte ptr [rax], al ; jne 0xe1842 ; mov eax, 0x4b ; syscall
0x00000000000e4745 : add byte ptr [rax], al ; jne 0xe4762 ; mov eax, 0x1a ; syscall
0x00000000000e9875 : add byte ptr [rax], al ; jne 0xe9892 ; mov eax, 0x130 ; syscall
0x00000000000e9985 : add byte ptr [rax], al ; jne 0xe99a2 ; mov eax, 0x2b ; syscall
0x00000000000e9a15 : add byte ptr [rax], al ; jne 0xe9a32 ; mov eax, 0x2a ; syscall
0x0000000000171e4e : add byte ptr [rax], al ; jnp 0x171e55 ; call qword ptr [rcx]
0x0000000000173fce : add byte ptr [rax], al ; jo 0x174001 ; in al, dx ; call qword ptr [rsi]
0x000000000017859e : add byte ptr [rax], al ; jo 0x17852a ; out dx, eax ; jmp qword ptr [rbx]
0x00000000001794ee : add byte ptr [rax], al ; jo 0x1794ad ; out dx, eax ; call qword ptr [rbx]
0x000000000017fd0e : add byte ptr [rax], al ; jo 0x17fc9b ; jmp qword ptr [rcx]
0x000000000017fd0d : add byte ptr [rax], al ; jo 0x17fc9c ; jmp qword ptr [rcx]
0x000000000018091e : add byte ptr [rax], al ; jo 0x180939 ; hlt ; jmp qword ptr [rdx]
0x0000000000177666 : add byte ptr [rax], al ; js 0x1776bb ; out dx, eax ; jmp qword ptr [rdx]
0x000000000017cc56 : add byte ptr [rax], al ; js 0x17cc06 ; cld ; call qword ptr [rbx]
0x000000000017e076 : add byte ptr [rax], al ; js 0x17e02e ; cld ; jmp qword ptr [rbx]
0x00000000000b98f5 : add byte ptr [rax], al ; js 0xb9905 ; ret
0x000000000010b4a1 : add byte ptr [rax], al ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000010b336 : add byte ptr [rax], al ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x000000000010b878 : add byte ptr [rax], al ; lea r9, qword ptr [rsp + 0x30] ; call qword ptr [rax]
0x000000000014782e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000014783e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000014784e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000014785e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000014786e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000014778d : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000001477ae : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000001477be : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000001477ce : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000001477de : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000001477ee : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000001477fe : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000014773a : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000014780e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000014781e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000009a93b : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0x10] ; ret
0x000000000009aa9e : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0xc] ; ret
0x000000000009aabe : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 4] ; ret
0x000000000009aaae : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 8] ; ret
0x000000000014779e : add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x00000000000203de : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x141184] ; ret
0x00000000000203ee : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x143049] ; ret
0x0000000000109b7e : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x57e9e] ; ret
0x00000000000fef36 : add byte ptr [rax], al ; lea rbx, qword ptr [rsp + 0x44] ; call 0xdb969
0x0000000000100dee : add byte ptr [rax], al ; lea rdi, qword ptr [rip + 0x29c905] ; call rax
0x00000000000e0607 : add byte ptr [rax], al ; lea rdx, qword ptr [rsp - 0x30] ; syscall
0x000000000003f1cc : add byte ptr [rax], al ; lea rsi, qword ptr [rip + 0x1cb] ; call rax
0x0000000000068b37 : add byte ptr [rax], al ; lea rsi, qword ptr [rip + 0x30] ; call rax
0x0000000000075661 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x185a] ; call rax
0x0000000000075b31 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x1d2a] ; call rax
0x0000000000068e21 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x2ba] ; call rax
0x000000000007413f : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x338] ; call rax
0x0000000000074387 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x580] ; call rax
0x000000000017fa6a : add byte ptr [rax], al ; lock add byte ptr fs:[rax], al ; adc byte ptr [rdi - 0xd], dh ; call rsi
0x00000000001880b2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; jbe 0x1880c1 ; add al, ch ; jg 0x1880bd ; jmp qword ptr [rsi]
0x000000000018d3b2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; leave ; add dword ptr [rax], eax ; pop rax ; adc edi, eax ; call qword ptr [rsi]
0x000000000017b7b2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; cwde ; mov esi, eax ; jmp rbx
0x00000000001865b2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; pop rbx ; add dword ptr [rax], eax ; call 0x22185c06
0x00000000001833b2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; sub dword ptr [rcx], eax ; add al, cl ; xchg eax, ebp ; cmc ; jmp qword ptr [rcx]
0x000000000018b76a : add byte ptr [rax], al ; lodsd eax, dword ptr fs:[rsi] ; add dword ptr [rax], eax ; ret
0x000000000015d02e : add byte ptr [rax], al ; loopne 0x15d0b7 ; inc dword ptr [rax] ; jge 0x15d033 ; jmp qword ptr [rax]
0x000000000017435e : add byte ptr [rax], al ; loopne 0x17439e ; in al, dx ; call rcx
0x0000000000174a6e : add byte ptr [rax], al ; loopne 0x174a3c ; in al, dx ; call rax
0x0000000000174a6d : add byte ptr [rax], al ; loopne 0x174a3d ; in al, dx ; call rax
0x000000000017d81e : add byte ptr [rax], al ; loopne 0x17d840 ; call qword ptr [rdx]
0x000000000017d81e : add byte ptr [rax], al ; loopne 0x17d841 ; call qword ptr [rdx]
0x000000000017efbe : add byte ptr [rax], al ; loopne 0x17f015 ; jmp qword ptr [rdi]
0x000000000017efee : add byte ptr [rax], al ; loopne 0x17f045 ; call qword ptr [rbx]
0x000000000017f2ae : add byte ptr [rax], al ; loopne 0x17f30b ; call rcx
0x000000000017fc9e : add byte ptr [rax], al ; loopne 0x17fc2a ; call qword ptr [rdx]
0x000000000017fc9d : add byte ptr [rax], al ; loopne 0x17fc2b ; call qword ptr [rdx]
0x000000000018014e : add byte ptr [rax], al ; loopne 0x1800e7 ; jmp qword ptr [rcx]
0x0000000000172aba : add byte ptr [rax], al ; mov ah, 0x20 ; add byte ptr [rax], al ; sub bl, 0xeb ; jmp rax
0x00000000001843ba : add byte ptr [rax], al ; mov ah, 0x39 ; add dword ptr [rax], eax ; and bh, dl ; cmc ; jmp rdx
0x00000000001866ba : add byte ptr [rax], al ; mov ah, 0x5c ; add dword ptr [rax], eax ; and byte ptr [rax - 0xa], cl ; call qword ptr [rdi]
0x00000000001873ba : add byte ptr [rax], al ; mov ah, 0x69 ; add dword ptr [rax], eax ; jl 0x1873c2 ; call rsi
0x0000000000176942 : add byte ptr [rax], al ; mov ah, 0xa ; add byte ptr [rax], al ; out dx, eax ; call qword ptr [rax]
0x000000000018ceba : add byte ptr [rax], al ; mov ah, 0xc4 ; add dword ptr [rax], eax ; add byte ptr [rdx], al ; clc ; call qword ptr [rdi]
0x000000000017d4ba : add byte ptr [rax], al ; mov ah, 0xca ; add byte ptr [rax], al ; and bl, ch ; int1 ; call qword ptr [rdx]
0x000000000017efba : add byte ptr [rax], al ; mov ah, 0xe5 ; add byte ptr [rax], al ; loopne 0x17f019 ; jmp qword ptr [rdi]
0x000000000017f0ba : add byte ptr [rax], al ; mov ah, 0xe6 ; add byte ptr [rax], al ; nop ; jmp qword ptr [rdi]
0x000000000017fc0e : add byte ptr [rax], al ; mov al, 0x82 ; jmp qword ptr [rcx]
0x000000000018011e : add byte ptr [rax], al ; mov al, 0x90 ; jmp qword ptr [rcx]
0x000000000017e28e : add byte ptr [rax], al ; mov al, 0x9e ; call rdi
0x000000000017c4d6 : add byte ptr [rax], al ; mov al, ah ; cld ; call qword ptr [rax]
0x0000000000140b3e : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x000000000013c80e : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x000000000017fdf6 : add byte ptr [rax], al ; mov bl, sil ; jmp qword ptr [rcx]
0x000000000013e7de : add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x00000000000717fe : add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x0000000000095ace : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x00000000000944ce : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000009549e : add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x000000000008ec6e : add byte ptr [rax], al ; mov byte ptr [rdi], sil ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000001744d6 : add byte ptr [rax], al ; mov byte ptr [rsi - 0x14], bl ; call rcx
0x000000000017ea96 : add byte ptr [rax], al ; mov dh, bh ; call qword ptr [rax]
0x000000000009519e : add byte ptr [rax], al ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000013e81e : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x000000000013e83e : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x000000000013e82e : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov word ptr [rcx + 4], dx ; ret
0x000000000013e80e : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x00000000000da3ce : add byte ptr [rax], al ; mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x00000000000954be : add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x000000000008ed5e : add byte ptr [rax], al ; mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x00000000000954de : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000954ee : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000954ce : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x000000000004f0f5 : add byte ptr [rax], al ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000010c25e : add byte ptr [rax], al ; mov dword ptr [rsi], 0xa ; ret
0x000000000010c24e : add byte ptr [rax], al ; mov dword ptr [rsi], 0xb ; ret
0x000000000010c27e : add byte ptr [rax], al ; mov dword ptr [rsi], 0xc ; ret
0x000000000010c26e : add byte ptr [rax], al ; mov dword ptr [rsi], 8 ; ret
0x00000000000daeb4 : add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000b53b0 : add byte ptr [rax], al ; mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x00000000000944de : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000e0905 : add byte ptr [rax], al ; mov eax, 0x10 ; syscall
0x00000000000db6ae : add byte ptr [rax], al ; mov eax, 0x102 ; syscall
0x00000000000dd10e : add byte ptr [rax], al ; mov eax, 0x107 ; syscall
0x00000000000dd04e : add byte ptr [rax], al ; mov eax, 0x10a ; syscall
0x00000000000df924 : add byte ptr [rax], al ; mov eax, 0x10f ; syscall
0x00000000000e8f69 : add byte ptr [rax], al ; mov eax, 0x121 ; syscall
0x00000000000e926e : add byte ptr [rax], al ; mov eax, 0x123 ; syscall
0x00000000000dbfde : add byte ptr [rax], al ; mov eax, 0x124 ; syscall
0x00000000000dc03e : add byte ptr [rax], al ; mov eax, 0x125 ; syscall
0x00000000000e93ee : add byte ptr [rax], al ; mov eax, 0x126 ; syscall
0x00000000000e980e : add byte ptr [rax], al ; mov eax, 0x12c ; syscall
0x00000000000e91ae : add byte ptr [rax], al ; mov eax, 0x131 ; syscall
0x00000000000e187e : add byte ptr [rax], al ; mov eax, 0x132 ; syscall
0x00000000000e98ce : add byte ptr [rax], al ; mov eax, 0x134 ; syscall
0x00000000000db9be : add byte ptr [rax], al ; mov eax, 0x15 ; syscall
0x000000000007d006 : add byte ptr [rax], al ; mov eax, 0x16 ; ret
0x00000000000dc00e : add byte ptr [rax], al ; mov eax, 0x16 ; syscall
0x00000000000d1eae : add byte ptr [rax], al ; mov eax, 0x18 ; syscall
0x00000000000e47ce : add byte ptr [rax], al ; mov eax, 0x1b ; syscall
0x00000000000e479e : add byte ptr [rax], al ; mov eax, 0x1c ; syscall
0x00000000000ea69e : add byte ptr [rax], al ; mov eax, 0x1d ; syscall
0x00000000000ea6ce : add byte ptr [rax], al ; mov eax, 0x1f ; syscall
0x00000000000dbf7e : add byte ptr [rax], al ; mov eax, 0x20 ; syscall
0x00000000000dbfae : add byte ptr [rax], al ; mov eax, 0x21 ; syscall
0x00000000000ab43e : add byte ptr [rax], al ; mov eax, 0x24 ; syscall
0x00000000000b817e : add byte ptr [rax], al ; mov eax, 0x25 ; syscall
0x00000000000ab46e : add byte ptr [rax], al ; mov eax, 0x26 ; syscall
0x00000000000b8f0e : add byte ptr [rax], al ; mov eax, 0x27 ; syscall
0x00000000000e9f0e : add byte ptr [rax], al ; mov eax, 0x29 ; syscall
0x00000000000e99de : add byte ptr [rax], al ; mov eax, 0x31 ; syscall
0x00000000000e9a9e : add byte ptr [rax], al ; mov eax, 0x33 ; syscall
0x00000000000e9a6e : add byte ptr [rax], al ; mov eax, 0x34 ; syscall
0x00000000000b863e : add byte ptr [rax], al ; mov eax, 0x3b ; syscall
0x00000000000ea5ae : add byte ptr [rax], al ; mov eax, 0x40 ; syscall
0x00000000000ea57e : add byte ptr [rax], al ; mov eax, 0x41 ; syscall
0x00000000000ea66e : add byte ptr [rax], al ; mov eax, 0x43 ; syscall
0x00000000000ea54e : add byte ptr [rax], al ; mov eax, 0x47 ; syscall
0x00000000000dbceb : add byte ptr [rax], al ; mov eax, 0x48 ; syscall
0x00000000000e2ebe : add byte ptr [rax], al ; mov eax, 0x4d ; syscall
0x00000000000dc0ce : add byte ptr [rax], al ; mov eax, 0x50 ; syscall
0x00000000000dc0fe : add byte ptr [rax], al ; mov eax, 0x51 ; syscall
0x00000000000dd13e : add byte ptr [rax], al ; mov eax, 0x54 ; syscall
0x00000000000dcfbe : add byte ptr [rax], al ; mov eax, 0x56 ; syscall
0x00000000000dd07e : add byte ptr [rax], al ; mov eax, 0x59 ; syscall
0x00000000000db58e : add byte ptr [rax], al ; mov eax, 0x5a ; syscall
0x00000000000db5be : add byte ptr [rax], al ; mov eax, 0x5b ; syscall
0x00000000000dc97e : add byte ptr [rax], al ; mov eax, 0x5d ; syscall
0x00000000000dc9ae : add byte ptr [rax], al ; mov eax, 0x5e ; syscall
0x00000000000a889e : add byte ptr [rax], al ; mov eax, 0x60 ; syscall
0x00000000000e0ace : add byte ptr [rax], al ; mov eax, 0x61 ; syscall
0x00000000000e0b2e : add byte ptr [rax], al ; mov eax, 0x62 ; syscall
0x00000000000b7eee : add byte ptr [rax], al ; mov eax, 0x64 ; syscall
0x00000000000b8f2e : add byte ptr [rax], al ; mov eax, 0x66 ; syscall
0x00000000000e944e : add byte ptr [rax], al ; mov eax, 0x67 ; syscall
0x00000000000b8f4e : add byte ptr [rax], al ; mov eax, 0x68 ; syscall
0x00000000000b8f3e : add byte ptr [rax], al ; mov eax, 0x6b ; syscall
0x00000000000b8f5e : add byte ptr [rax], al ; mov eax, 0x6c ; syscall
0x00000000000b913e : add byte ptr [rax], al ; mov eax, 0x6d ; syscall
0x00000000000b8f1e : add byte ptr [rax], al ; mov eax, 0x6e ; syscall
0x00000000000b916e : add byte ptr [rax], al ; mov eax, 0x6f ; syscall
0x00000000000b91ce : add byte ptr [rax], al ; mov eax, 0x70 ; syscall
0x00000000000b8f6e : add byte ptr [rax], al ; mov eax, 0x73 ; syscall
0x00000000000b91fe : add byte ptr [rax], al ; mov eax, 0x76 ; syscall
0x00000000000b922e : add byte ptr [rax], al ; mov eax, 0x78 ; syscall
0x00000000000b910e : add byte ptr [rax], al ; mov eax, 0x79 ; syscall
0x00000000000e8dce : add byte ptr [rax], al ; mov eax, 0x7a ; syscall
0x00000000000e8dfe : add byte ptr [rax], al ; mov eax, 0x7b ; syscall
0x00000000000b919e : add byte ptr [rax], al ; mov eax, 0x7c ; syscall
0x00000000000e914e : add byte ptr [rax], al ; mov eax, 0x7d ; syscall
0x00000000000e917e : add byte ptr [rax], al ; mov eax, 0x7e ; syscall
0x00000000000b9659 : add byte ptr [rax], al ; mov eax, 0x7f ; ret
0x0000000000033343 : add byte ptr [rax], al ; mov eax, 0x7f ; syscall
0x000000000003338d : add byte ptr [rax], al ; mov eax, 0x82 ; syscall
0x00000000000db1ee : add byte ptr [rax], al ; mov eax, 0x84 ; syscall
0x00000000000e96ee : add byte ptr [rax], al ; mov eax, 0x86 ; syscall
0x00000000000db4be : add byte ptr [rax], al ; mov eax, 0x8a ; syscall
0x00000000000e0e2e : add byte ptr [rax], al ; mov eax, 0x8d ; syscall
0x00000000000d1dee : add byte ptr [rax], al ; mov eax, 0x8e ; syscall
0x00000000000d1e1e : add byte ptr [rax], al ; mov eax, 0x8f ; syscall
0x00000000000d1e4e : add byte ptr [rax], al ; mov eax, 0x90 ; syscall
0x00000000000d1e7e : add byte ptr [rax], al ; mov eax, 0x91 ; syscall
0x00000000000d1ede : add byte ptr [rax], al ; mov eax, 0x92 ; syscall
0x00000000000d1f0e : add byte ptr [rax], al ; mov eax, 0x93 ; syscall
0x00000000000d1f3e : add byte ptr [rax], al ; mov eax, 0x94 ; syscall
0x00000000000e485e : add byte ptr [rax], al ; mov eax, 0x96 ; syscall
0x00000000000e488e : add byte ptr [rax], al ; mov eax, 0x97 ; syscall
0x00000000000e48be : add byte ptr [rax], al ; mov eax, 0x98 ; syscall
0x00000000000e90ae : add byte ptr [rax], al ; mov eax, 0x9a ; syscall
0x00000000000e950e : add byte ptr [rax], al ; mov eax, 0x9b ; syscall
0x00000000000e907e : add byte ptr [rax], al ; mov eax, 0x9e ; syscall
0x00000000000e470e : add byte ptr [rax], al ; mov eax, 0xa ; syscall
0x00000000000e0afe : add byte ptr [rax], al ; mov eax, 0xa0 ; syscall
0x00000000000e175e : add byte ptr [rax], al ; mov eax, 0xa1 ; syscall
0x00000000000e17ee : add byte ptr [rax], al ; mov eax, 0xa2 ; syscall
0x00000000000e172e : add byte ptr [rax], al ; mov eax, 0xa3 ; syscall
0x00000000000a897e : add byte ptr [rax], al ; mov eax, 0xa4 ; syscall
0x00000000000e8d6e : add byte ptr [rax], al ; mov eax, 0xa6 ; syscall
0x00000000000e1c1e : add byte ptr [rax], al ; mov eax, 0xa7 ; syscall
0x00000000000e1c4e : add byte ptr [rax], al ; mov eax, 0xa8 ; syscall
0x00000000000e14fe : add byte ptr [rax], al ; mov eax, 0xaa ; syscall
0x00000000000e159e : add byte ptr [rax], al ; mov eax, 0xab ; syscall
0x00000000000e8c2e : add byte ptr [rax], al ; mov eax, 0xac ; syscall
0x00000000000e91de : add byte ptr [rax], al ; mov eax, 0xae ; syscall
0x00000000000e46de : add byte ptr [rax], al ; mov eax, 0xb ; syscall
0x00000000000e920e : add byte ptr [rax], al ; mov eax, 0xb0 ; syscall
0x00000000000e8d9e : add byte ptr [rax], al ; mov eax, 0xbb ; syscall
0x00000000000c3d6b : add byte ptr [rax], al ; mov eax, 0xc ; jmp 0xc3d3f
0x00000000000e75de : add byte ptr [rax], al ; mov eax, 0xc6 ; syscall
0x00000000000e74be : add byte ptr [rax], al ; mov eax, 0xc7 ; syscall
0x00000000000f965e : add byte ptr [rax], al ; mov eax, 0xca ; ret
0x00000000000f54f0 : add byte ptr [rax], al ; mov eax, 0xca ; syscall
0x00000000000e923e : add byte ptr [rax], al ; mov eax, 0xd5 ; syscall
0x0000000000032ff6 : add byte ptr [rax], al ; mov eax, 0xe ; syscall
0x00000000000e90de : add byte ptr [rax], al ; mov eax, 0xe4 ; syscall
0x00000000000b9d7d : add byte ptr [rax], al ; mov eax, 0xe5 ; syscall
0x00000000000b971e : add byte ptr [rax], al ; mov eax, 0xfc17 ; ret
0x00000000000e93be : add byte ptr [rax], al ; mov eax, 0xfd ; syscall
0x00000000000e941e : add byte ptr [rax], al ; mov eax, 0xff ; syscall
0x00000000000b89fb : add byte ptr [rax], al ; mov eax, 0xffffffff ; leave ; ret
0x0000000000031a5c : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000003303c : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000de22b : add byte ptr [rax], al ; mov eax, 1 ; pop rbx ; ret
0x0000000000043a4b : add byte ptr [rax], al ; mov eax, 1 ; ret
0x00000000000eae17 : add byte ptr [rax], al ; mov eax, 1 ; syscall
0x000000000010c8ae : add byte ptr [rax], al ; mov eax, 2 ; ret
0x00000000000da63b : add byte ptr [rax], al ; mov eax, 3 ; syscall
0x00000000000e8d2e : add byte ptr [rax], al ; mov eax, 8 ; syscall
0x0000000000143f2e : add byte ptr [rax], al ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x0000000000075bfe : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000010c1ac : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x20] ; mov dword ptr [rsi + 8], eax ; ret
0x00000000001181ae : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x00000000000c5c16 : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x4c] ; ret
0x00000000000da3be : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 4] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000007085e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
0x000000000007082e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; and eax, 0x804 ; ret
0x000000000006cf0e : add byte ptr [rax], al ; mov eax, dword ptr [rdx] ; ret
0x0000000000033c7e : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x365402] ; ret
0x0000000000072393 : add byte ptr [rax], al ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e0da8 : add byte ptr [rax], al ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000e4570 : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011e53b : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000007d140 : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x0000000000033158 : add byte ptr [rax], al ; mov eax, ecx ; syscall
0x0000000000020b0c : add byte ptr [rax], al ; mov eax, edi ; ret
0x0000000000032fbd : add byte ptr [rax], al ; mov eax, edi ; syscall
0x0000000000041a51 : add byte ptr [rax], al ; mov eax, edx ; add rsp, 8 ; ret
0x000000000004e8a7 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x000000000006e8fe : add byte ptr [rax], al ; mov eax, edx ; ret
0x00000000000f6eae : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f7067 : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x0000000000065011 : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; ret
0x000000000004c9c9 : add byte ptr [rax], al ; mov eax, esi ; ret
0x000000000017ea92 : add byte ptr [rax], al ; mov eax, fs ; add byte ptr [rax], al ; mov dh, bh ; call qword ptr [rax]
0x00000000000b84db : add byte ptr [rax], al ; mov eax, r12d ; syscall
0x0000000000033004 : add byte ptr [rax], al ; mov eax, r8d ; pop rbx ; ret
0x00000000000f5934 : add byte ptr [rax], al ; mov eax, r9d ; syscall
0x00000000000da5e3 : add byte ptr [rax], al ; mov ebp, eax ; mov eax, 3 ; syscall
0x00000000000e0ede : add byte ptr [rax], al ; mov ecx, 0xc ; mov eax, ecx ; syscall
0x0000000000048216 : add byte ptr [rax], al ; mov ecx, 1 ; jmp rax
0x000000000009450e : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000000da744 : add byte ptr [rax], al ; mov edi, 1 ; call rax
0x0000000000041797 : add byte ptr [rax], al ; mov edi, dword ptr [rsp + 0x3c] ; call rax
0x000000000005ff06 : add byte ptr [rax], al ; mov edi, r15d ; call 0xec117
0x0000000000041a5e : add byte ptr [rax], al ; mov edx, 0xffffffff ; mov eax, edx ; ret
0x000000000013371e : add byte ptr [rax], al ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000944fe : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000010bdcb : add byte ptr [rax], al ; mov edx, eax ; mov rdi, rbx ; call 0x118039
0x00000000000f55a6 : add byte ptr [rax], al ; mov esi, 0x80 ; syscall
0x000000000005338e : add byte ptr [rax], al ; mov esi, 1 ; jmp rax
0x0000000000102275 : add byte ptr [rax], al ; mov esi, dword ptr fs:[rdx] ; syscall
0x00000000001831c2 : add byte ptr [rax], al ; mov esp, 0x18000127 ; mov ebp, dr0 ; jmp qword ptr [rcx]
0x0000000000173dc2 : add byte ptr [rax], al ; mov esp, 0x38000033 ; in al, dx ; jmp rsp
0x0000000000185ac2 : add byte ptr [rax], al ; mov esp, 0x68000150 ; xor dh, dh ; jmp qword ptr [rcx]
0x0000000000187fc2 : add byte ptr [rax], al ; mov esp, 0x8000175 ; sal dh, 1 ; jmp qword ptr [rsi]
0x000000000017b9c2 : add byte ptr [rax], al ; mov esp, 0x980000af ; mov al, 0xf0 ; call qword ptr [rax]
0x0000000000184dc2 : add byte ptr [rax], al ; mov esp, 0x98000143 ; cli ; cmc ; jmp qword ptr [rcx]
0x00000000001909c2 : add byte ptr [rax], al ; mov esp, 0xb80001ff ; ret 0xfff8
0x000000000017e1c2 : add byte ptr [rax], al ; mov esp, 0xc80000d7 ; popfq ; jmp qword ptr [rcx]
0x00000000001804c2 : add byte ptr [rax], al ; mov esp, 0xc80000fa ; retf
0x0000000000173ec2 : add byte ptr [rax], al ; mov esp, 0xe8000034 ; sub esp, ebp ; jmp qword ptr [rax]
0x0000000000182fc2 : add byte ptr [rax], al ; mov esp, 0xe8000125 ; xchg ch, dh ; jmp qword ptr [rcx]
0x0000000000171ac2 : add byte ptr [rax], al ; mov esp, 0xf8000010 ; jne 0x171abf ; call qword ptr [rdx]
0x0000000000103b5e : add byte ptr [rax], al ; mov qword ptr [r11], rcx ; add rsp, 0x10 ; ret
0x00000000000523fd : add byte ptr [rax], al ; mov qword ptr [rbp - 0x10c8], rdi ; jmp rax
0x000000000004713c : add byte ptr [rax], al ; mov qword ptr [rbp - 0x530], rsi ; jmp rax
0x00000000000f4278 : add byte ptr [rax], al ; mov qword ptr [rbp - 0x70], rdx ; mov rdx, r13 ; call rax
0x000000000011f363 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000011f31b : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000011f50e : add byte ptr [rax], al ; mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000013e85e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x000000000013e87e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 7], edx ; ret
0x000000000013e88e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 8], edx ; ret
0x000000000013e89e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 5], rdx ; ret
0x000000000013e8ae : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 6], rdx ; ret
0x000000000013e8be : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 7], rdx ; ret
0x000000000013e8ce : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 8], rdx ; ret
0x000000000013e86e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov word ptr [rcx + 8], dx ; ret
0x000000000013e84e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x000000000010d84b : add byte ptr [rax], al ; mov qword ptr [rdi + 0x20], rcx ; ret
0x000000000011856a : add byte ptr [rax], al ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000954fe : add byte ptr [rax], al ; mov qword ptr [rdi - 1], rdx ; ret
0x000000000009551e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x000000000009553e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000009554e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000009555e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x000000000009556e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 6], rdx ; ret
0x000000000009552e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x000000000009550e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x0000000000043a68 : add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x000000000006f6ec : add byte ptr [rax], al ; mov qword ptr [rdx], rax ; xor eax, eax ; pop rbx ; ret
0x000000000011042b : add byte ptr [rax], al ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x000000000010c1ec : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000036b43 : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; xor eax, eax ; ret
0x00000000000da2ec : add byte ptr [rax], al ; mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x000000000010c1bc : add byte ptr [rax], al ; mov qword ptr [rsi + 8], rax ; ret
0x00000000000f966e : add byte ptr [rax], al ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x0000000000035ea6 : add byte ptr [rax], al ; mov qword ptr fs:[rbp], rdx ; call rax
0x000000000011504b : add byte ptr [rax], al ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x00000000000f5ce0 : add byte ptr [rax], al ; mov r10, rcx ; syscall
0x00000000000dfa5f : add byte ptr [rax], al ; mov r13d, edi ; call 0xdbd67
0x00000000000805d9 : add byte ptr [rax], al ; mov r14, rsp ; call 0x2c8c7
0x00000000000b38a9 : add byte ptr [rax], al ; mov r8d, dword ptr fs:[rsi] ; syscall
0x0000000000032f24 : add byte ptr [rax], al ; mov rax, -1 ; ret
0x000000000003305e : add byte ptr [rax], al ; mov rax, 0xf ; syscall
0x000000000009a48e : add byte ptr [rax], al ; mov rax, 1 ; ret
0x000000000009a49e : add byte ptr [rax], al ; mov rax, 2 ; ret
0x000000000009a4ae : add byte ptr [rax], al ; mov rax, 3 ; ret
0x000000000009a4be : add byte ptr [rax], al ; mov rax, 4 ; ret
0x000000000009a4ce : add byte ptr [rax], al ; mov rax, 5 ; ret
0x000000000009a4de : add byte ptr [rax], al ; mov rax, 6 ; ret
0x000000000009a4ee : add byte ptr [rax], al ; mov rax, 7 ; ret
0x000000000006dc00 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00000000000f4e06 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x30] ; ret
0x00000000000e76f6 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x58] ; ret
0x0000000000035fc0 : add byte ptr [rax], al ; mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00000000000b3e8e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x20] ; ret
0x000000000006e3ce : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x0000000000075eae : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x0000000000117406 : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000011ccd1 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x27d716] ; call qword ptr [rax]
0x000000000011c6a4 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x27dd43] ; call qword ptr [rax]
0x0000000000075e8e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x324669] ; ret
0x00000000000212ce : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x37d039] ; ret
0x00000000000212be : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x37d059] ; ret
0x00000000000e1e9d : add byte ptr [rax], al ; mov rax, qword ptr [rsp - 0x50] ; ret
0x0000000000072c9c : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000068794 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000645bd : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000003634c : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x00000000000319f4 : add byte ptr [rax], al ; mov rax, rcx ; ret
0x000000000006a2c4 : add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000011ce4a : add byte ptr [rax], al ; mov rax, rdx ; add rsp, 8 ; ret
0x0000000000067e54 : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; ret
0x0000000000076eee : add byte ptr [rax], al ; mov rax, rdx ; ret
0x000000000006954c : add byte ptr [rax], al ; mov rax, rsi ; pop rbx ; ret
0x00000000000b414a : add byte ptr [rax], al ; mov rbp, r13 ; mov rdi, rbx ; call r12
0x00000000000f8daf : add byte ptr [rax], al ; mov rbp, rsp ; call 0x75057
0x000000000003f3ac : add byte ptr [rax], al ; mov rbx, rdi ; syscall
0x0000000000083f6f : add byte ptr [rax], al ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000b36b8 : add byte ptr [rax], al ; mov rdi, qword ptr [rbx] ; call 0x1f93f
0x000000000002a6e5 : add byte ptr [rax], al ; mov rdi, qword ptr [rdi] ; syscall
0x00000000000f366e : add byte ptr [rax], al ; mov rdi, r13 ; call 0xf00b7
0x000000000002d146 : add byte ptr [rax], al ; mov rdi, r14 ; call rax
0x00000000000f3650 : add byte ptr [rax], al ; mov rdi, r15 ; call 0xf00b7
0x00000000000e7371 : add byte ptr [rax], al ; mov rdi, r8 ; mov eax, esi ; syscall
0x00000000000e1933 : add byte ptr [rax], al ; mov rdi, r8 ; xor eax, eax ; syscall
0x000000000007818f : add byte ptr [rax], al ; mov rdi, r9 ; mov eax, r8d ; syscall
0x000000000010cb6b : add byte ptr [rax], al ; mov rdi, rbp ; call qword ptr [rbx]
0x00000000001147c5 : add byte ptr [rax], al ; mov rdi, rbx ; call qword ptr [rax]
0x000000000006646e : add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x00000000000660c5 : add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000010be2d : add byte ptr [rax], al ; mov rdi, rbx ; mov rcx, qword ptr [rsp] ; call rcx
0x00000000000b85fe : add byte ptr [rax], al ; mov rdi, rdx ; mov eax, esi ; syscall
0x00000000000dac25 : add byte ptr [rax], al ; mov rdi, rdx ; syscall
0x00000000001171ee : add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x000000000009453e : add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000007d663 : add byte ptr [rax], al ; mov rdx, r12 ; mov rdi, rcx ; call rax
0x00000000000dfbbd : add byte ptr [rax], al ; mov rdx, rsi ; xor esi, esi ; syscall
0x000000000005d534 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x33ba33] ; call rax
0x000000000005548c : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x343adb] ; call rax
0x0000000000054e50 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x344117] ; call rax
0x000000000005229c : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x346ccb] ; call rax
0x0000000000049de8 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x34f17f] ; call rax
0x0000000000046fbc : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x351fab] ; call rax
0x000000000007b596 : add byte ptr [rax], al ; mov rsi, qword ptr [rsp] ; jmp rax
0x00000000000ffe5f : add byte ptr [rax], al ; mov rsi, r14 ; call 0x2c8c7
0x0000000000077c9a : add byte ptr [rax], al ; mov rsi, r14 ; call 0xe47a7
0x000000000011d68a : add byte ptr [rax], al ; mov rsi, r15 ; mov eax, r14d ; syscall
0x000000000007deba : add byte ptr [rax], al ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x0000000000033d1e : add byte ptr [rax], al ; mov rsi, rbx ; mov eax, ecx ; syscall
0x000000000011db88 : add byte ptr [rax], al ; mov rsi, rbx ; mov eax, r15d ; syscall
0x000000000011dc3e : add byte ptr [rax], al ; mov rsi, rbx ; mov eax, r8d ; syscall
0x000000000007dbf9 : add byte ptr [rax], al ; mov rsi, rbx ; mov rdi, r13 ; call rax
0x00000000000db2db : add byte ptr [rax], al ; mov rsi, rdx ; syscall
0x0000000000174292 : add byte ptr [rax], al ; mov word ptr [rax], dr1 ; add byte ptr [rax], al ; clc ; xor ebp, esp ; call qword ptr [rax]
0x0000000000182e92 : add byte ptr [rax], al ; mov word ptr [rcx + rax], fs ; add al, bh ; test esi, ebp ; jmp qword ptr [rcx]
0x000000000013e7fe : add byte ptr [rax], al ; mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x000000000013e7ee : add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x0000000000179992 : add byte ptr [rax], al ; mov word ptr [rdi - 0x3cd80000], cs ; out dx, eax ; jmp qword ptr [rdx]
0x000000000017b992 : add byte ptr [rax], al ; mov word ptr [rdi - 0x43b80000], gs ; cli ; call qword ptr [rax]
0x00000000000954ae : add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x000000000008edce : add byte ptr [rax], al ; mov word ptr [rdi], si ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000008ed3e : add byte ptr [rax], al ; mov word ptr [rdi], si ; mov rax, rdi ; ret
0x0000000000175492 : add byte ptr [rax], al ; mov word ptr [rdx], cs ; add al, ch ; in eax, dx ; call qword ptr [rdi]
0x0000000000036b8d : add byte ptr [rax], al ; mov word ptr [rsi + 0xc], ax ; xor eax, eax ; ret
0x0000000000036bd4 : add byte ptr [rax], al ; mov word ptr [rsi + 0xe], ax ; xor eax, eax ; ret
0x0000000000179092 : add byte ptr [rax], al ; mov word ptr [rsi - 0x57d80000], es ; out dx, eax ; jmp qword ptr [rsi]
0x0000000000184092 : add byte ptr [rax], al ; mov word ptr [rsi], dr0 ; add dword ptr [rax], eax ; pop rax ; iretd ; cmc ; call qword ptr [rsi]
0x000000000009557e : add byte ptr [rax], al ; movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x000000000009558e : add byte ptr [rax], al ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000181faa : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; adc eax, 0xfe400001 ; hlt ; jmp qword ptr [rcx]
0x0000000000184daa : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [r8], eax ; cmp dl, 0xf5 ; jmp qword ptr [rcx]
0x0000000000182eaa : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; and al, 1 ; add byte ptr [rax], dl ; xchg ch, dh ; jmp qword ptr [rcx]
0x0000000000182faa : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; and eax, 0x86d00001 ; cmc ; jmp qword ptr [rcx]
0x00000000001742aa : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; cmp byte ptr [rax], al ; add al, dh ; xor ebp, esp ; call qword ptr [rdx]
0x000000000017e3aa : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; fld dword ptr [rax] ; add byte ptr [rax], dl ; movsb byte ptr [rdi], byte ptr [rsi] ; jmp qword ptr [rax]
0x00000000001709e6 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; hlt ; std ; jmp rsp
0x000000000016c13e : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; imul edi ; jmp rsp
0x00000000001882aa : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; js 0x1882b9 ; add al, dl ; sal esi, 1 ; jmp qword ptr [rsi]
0x000000000016c226 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; or dh, al ; jmp rsp
0x000000000018f9aa : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; out dx, eax ; add dword ptr [rax], eax ; mov al, 0x82 ; clc ; jmp qword ptr [rdi]
0x0000000000185aaa : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; push rax ; add dword ptr [rax], eax ; xor dh, dh ; call qword ptr [rcx]
0x000000000018ccaa : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 1
0x000000000016bb1e : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; sbb ch, ch ; jmp rsp
0x0000000000179caa : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; xchg eax, edx ; add byte ptr [rax], al ; rol bh, 1 ; out dx, eax ; call qword ptr [rdx]
0x0000000000173eaa : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; xor al, 0 ; add al, dl ; sub esp, ebp ; jmp qword ptr [rbx]
0x0000000000183daa : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; xor eax, dword ptr [rcx] ; add al, dh ; retf -0xb
0x000000000017e43e : add byte ptr [rax], al ; movsd dword ptr [rdi], dword ptr [rsi] ; jmp qword ptr [rcx]
0x00000000000662da : add byte ptr [rax], al ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000072297 : add byte ptr [rax], al ; movsxd rdi, dword ptr [rbx + 0x70] ; syscall
0x00000000000d1fe3 : add byte ptr [rax], al ; movsxd rdi, edi ; mov eax, ecx ; syscall
0x000000000002a584 : add byte ptr [rax], al ; movsxd rsi, dword ptr [r8 + r9*4] ; add rsi, r8 ; jmp rsi
0x000000000009b253 : add byte ptr [rax], al ; movzx eax, al ; ret
0x00000000000d2f4e : add byte ptr [rax], al ; movzx eax, byte ptr [rdi + 9] ; and eax, 0xf ; ret
0x000000000009914e : add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x00000000001338ae : add byte ptr [rax], al ; movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000133f8e : add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000133f1e : add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000017f0be : add byte ptr [rax], al ; nop ; jmp qword ptr [rdi]
0x000000000017ec6e : add byte ptr [rax], al ; nop ; jmp rsp
0x000000000017c8de : add byte ptr [rax], al ; nop ; js 0x17c8d9 ; jmp qword ptr [rbx]
0x00000000000e97dc : add byte ptr [rax], al ; nop ; mov eax, 0x11f ; syscall
0x00000000000ea63c : add byte ptr [rax], al ; nop ; mov eax, 0x1e ; syscall
0x00000000000e9edc : add byte ptr [rax], al ; nop ; mov eax, 0x30 ; syscall
0x00000000000e9afc : add byte ptr [rax], al ; nop ; mov eax, 0x32 ; syscall
0x00000000000dd0dc : add byte ptr [rax], al ; nop ; mov eax, 0x57 ; syscall
0x00000000000dd01c : add byte ptr [rax], al ; nop ; mov eax, 0x58 ; syscall
0x00000000000e904c : add byte ptr [rax], al ; nop ; mov eax, 0x87 ; syscall
0x00000000000db48c : add byte ptr [rax], al ; nop ; mov eax, 0x89 ; syscall
0x00000000000e482c : add byte ptr [rax], al ; nop ; mov eax, 0x95 ; syscall
0x00000000000e1bec : add byte ptr [rax], al ; nop ; mov eax, 0x99 ; syscall
0x00000000000e911c : add byte ptr [rax], al ; nop ; mov eax, 0x9f ; syscall
0x00000000000e94dc : add byte ptr [rax], al ; nop ; mov eax, 0xb4 ; syscall
0x00000000000e754c : add byte ptr [rax], al ; nop ; mov eax, 0xc2 ; syscall
0x00000000000e75ac : add byte ptr [rax], al ; nop ; mov eax, 0xc3 ; syscall
0x00000000000e748c : add byte ptr [rax], al ; nop ; mov eax, 0xc4 ; syscall
0x00000000000e763c : add byte ptr [rax], al ; nop ; mov eax, 0xc5 ; syscall
0x00000000000e938c : add byte ptr [rax], al ; nop ; mov eax, 0xfe ; syscall
0x000000000011626d : add byte ptr [rax], al ; nop ; mov eax, 2 ; ret
0x00000000000f96cd : add byte ptr [rax], al ; nop ; mov eax, edi ; ror ax, 8 ; ret
0x00000000000f64cc : add byte ptr [rax], al ; nop ; ret
0x000000000001dcb6 : add byte ptr [rax], al ; nop ; retf
0x000000000011836d : add byte ptr [rax], al ; nop ; xor eax, eax ; ret
0x0000000000117e49 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; ret
0x00000000001117da : add byte ptr [rax], al ; nop dword ptr [rax] ; ret
0x0000000000171b12 : add byte ptr [rax], al ; or al, 0x11 ; add byte ptr [rax], al ; sub byte ptr [rbp - 3], bh ; jmp qword ptr [rdi]
0x0000000000173c12 : add byte ptr [rax], al ; or al, 0x32 ; add byte ptr [rax], al ; clc ; and ch, ah ; call qword ptr [rcx]
0x0000000000174012 : add byte ptr [rax], al ; or al, 0x36 ; add byte ptr [rax], al ; cwde ; sub ch, ah ; call qword ptr [rsi]
0x0000000000185312 : add byte ptr [rax], al ; or al, 0x49 ; add dword ptr [rax], eax ; mov byte ptr [rsi + rsi*8], cl ; call qword ptr [rdx]
0x0000000000175e12 : add byte ptr [rax], al ; or al, 0x54 ; add byte ptr [rax], al ; sub bh, ch ; out dx, al ; jmp qword ptr [rcx]
0x0000000000188112 : add byte ptr [rax], al ; or al, 0x77 ; add dword ptr [rax], eax ; call 0x27187aa5
0x000000000017db12 : add byte ptr [rax], al ; or al, 0xd1 ; add byte ptr [rax], al ; sub byte ptr [rbx - 0xe], ah ; call qword ptr [rax]
0x000000000017e912 : add byte ptr [rax], al ; or al, 0xdf ; add byte ptr [rax], al ; pop rax ; retf
0x000000000018ea12 : add byte ptr [rax], al ; or al, 0xe0 ; add dword ptr [rax], eax ; fsub dword ptr [rbp - 8] ; call qword ptr [rbx]
0x000000000009c3c5 : add byte ptr [rax], al ; or byte ptr [rax + 0xf], 0x44 ; ret 0x8348
0x00000000000a82b8 : add byte ptr [rax], al ; or byte ptr [rax + 0xf], 0x4d ; ret 0xc35b
0x00000000001614e6 : add byte ptr [rax], al ; or byte ptr [rbx - 5], dh ; call qword ptr [rax]
0x00000000000e8e44 : add byte ptr [rax], al ; or eax, edi ; ret
0x000000000019214e : add byte ptr [rax], al ; out 1, al ; add byte ptr [rax], al ; ret
0x00000000001751d6 : add byte ptr [rax], al ; out dx, al ; in al, dx ; jmp qword ptr [rdx]
0x0000000000175f8e : add byte ptr [rax], al ; out dx, al ; jmp qword ptr [rcx]
0x0000000000176946 : add byte ptr [rax], al ; out dx, eax ; call qword ptr [rax]
0x0000000000176b66 : add byte ptr [rax], al ; out dx, eax ; call rbx
0x000000000017b566 : add byte ptr [rax], al ; pop rax ; jle 0x17b560 ; jmp qword ptr [rcx]
0x000000000017b456 : add byte ptr [rax], al ; pop rax ; jne 0x17b450 ; jmp qword ptr [rdx]
0x000000000017e916 : add byte ptr [rax], al ; pop rax ; retf
0x000000000004e71d : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000004e7ed : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007e285 : add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000000eaf6a : add byte ptr [rax], al ; pop rbp ; ret
0x000000000003613c : add byte ptr [rax], al ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000004e5d8 : add byte ptr [rax], al ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000000f71bb : add byte ptr [rax], al ; pop rbx ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x0000000000067459 : add byte ptr [rax], al ; pop rbx ; mov rax, rdx ; pop rbp ; pop r12 ; ret
0x00000000000b90ff : add byte ptr [rax], al ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000001fb14 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000020435 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000224e7 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000029137 : add byte ptr [rax], al ; pop rbx ; ret
0x000000000016960e : add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x000000000017f54e : add byte ptr [rax], al ; pop rdi ; call rsi
0x00000000000b85ae : add byte ptr [rax], al ; pop rdi ; mov eax, 0x3a ; syscall
0x0000000000176452 : add byte ptr [rax], al ; pop rdx ; add byte ptr [rax], al ; test al, 0x12 ; out dx, eax ; call qword ptr [rax]
0x0000000000184d62 : add byte ptr [rax], al ; pop rsp ; add dword ptr [r8], eax ; cmp dl, bh ; cmc ; jmp qword ptr [rcx]
0x0000000000185962 : add byte ptr [rax], al ; pop rsp ; add qword ptr [r8], r8 ; fcomp dword ptr [rsi + rsi*8] ; jmp qword ptr [rcx]
0x00000000001783ea : add byte ptr [rax], al ; pop rsp ; and eax, 0x7e500000 ; out dx, eax ; jmp qword ptr [rcx]
0x0000000000182f62 : add byte ptr [rax], al ; pop rsp ; and eax, 0x86580001 ; cmc ; jmp qword ptr [rcx]
0x0000000000174262 : add byte ptr [rax], al ; pop rsp ; cmp byte ptr [rax], al ; add al, bh ; xor ebp, esp ; call qword ptr [rax]
0x0000000000177662 : add byte ptr [rax], al ; pop rsp ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; js 0x1776bf ; out dx, eax ; jmp qword ptr [rdx]
0x000000000017d362 : add byte ptr [rax], al ; pop rsp ; leave ; add byte ptr [rax], al ; call 0xffffffffd817c55b
0x0000000000185e62 : add byte ptr [rax], al ; pop rsp ; push rsp ; add dword ptr [rax], eax ; call 0x221854ab
0x000000000017d562 : add byte ptr [rax], al ; pop rsp ; retf
0x000000000017b962 : add byte ptr [rax], al ; pop rsp ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; test al, 0x82 ; cli ; call qword ptr [rax]
0x000000000017b562 : add byte ptr [rax], al ; pop rsp ; stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; pop rax ; jle 0x17b564 ; jmp qword ptr [rcx]
0x0000000000173b62 : add byte ptr [rax], al ; pop rsp ; xor dword ptr [rax], eax ; add byte ptr [rax], bl ; and ch, ah ; call qword ptr [rcx]
0x000000000017c93e : add byte ptr [rax], al ; push rax ; cmpsb byte ptr [rsi], byte ptr [rdi] ; int1 ; jmp rbx
0x00000000001783ee : add byte ptr [rax], al ; push rax ; jle 0x1783e7 ; jmp qword ptr [rcx]
0x000000000016979c : add byte ptr [rax], al ; push rax ; pop r9 ; clc ; ret 0x6e1f
0x000000000017c9ce : add byte ptr [rax], al ; push rax ; xchg eax, ebx ; cli ; jmp qword ptr [rdi]
0x00000000000f5cfe : add byte ptr [rax], al ; push rbp ; xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x000000000018485a : add byte ptr [rax], al ; push rsp ; add dword ptr ds:[rax], eax ; xor dh, ah ; cmc ; jmp qword ptr [rcx]
0x0000000000186f5a : add byte ptr [rax], al ; push rsp ; add dword ptr gs:[rax], eax ; shr byte ptr [rax - 0xa], 1 ; call rsi
0x000000000017e95a : add byte ptr [rax], al ; push rsp ; fild word ptr [rax] ; add al, ah ; retf
0x000000000018815a : add byte ptr [rax], al ; push rsp ; ja 0x188169 ; add al, ah ; sal dh, 1 ; jmp qword ptr [rsi]
0x000000000017995a : add byte ptr [rax], al ; push rsp ; pop qword ptr [rax] ; add al, ah ; ret 0xffef
0x000000000017d45a : add byte ptr [rax], al ; push rsp ; retf 0
0x000000000018d45a : add byte ptr [rax], al ; push rsp ; retf 1
0x000000000016cad6 : add byte ptr [rax], al ; push rsp ; xor ecx, esi ; call rsp
0x0000000000181ba2 : add byte ptr [rax], al ; pushfq ; adc dword ptr [rcx], eax ; add al, ch ; loop 0x181ba8 ; jmp qword ptr [rax]
0x00000000001858a2 : add byte ptr [rax], al ; pushfq ; add qword ptr [rax], r8 ; sbb byte ptr [rsi + rsi*8], bl ; jmp qword ptr [rcx]
0x00000000001881a2 : add byte ptr [rax], al ; pushfq ; ja 0x1881b1 ; add al, ch ; jg 0x1881ad ; jmp qword ptr [rsi]
0x0000000000179aa2 : add byte ptr [rax], al ; pushfq ; nop ; add byte ptr [rax], al ; clc ; ret
0x000000000017d4a2 : add byte ptr [rax], al ; pushfq ; retf 0
0x00000000001732a2 : add byte ptr [rax], al ; pushfq ; sub byte ptr [rax], al ; add byte ptr [rax + 5], cl ; in al, dx ; jmp qword ptr [rcx]
0x00000000001800a2 : add byte ptr [rax], al ; pushfq ; test byte ptr [rax], 0 ; cwde ; nop ; jmp qword ptr [rcx]
0x0000000000000977 : add byte ptr [rax], al ; ret
0x000000000014b946 : add byte ptr [rax], al ; ret 0
0x00000000001528be : add byte ptr [rax], al ; ret 0x10
0x000000000001deae : add byte ptr [rax], al ; ret 0x1616
0x000000000001c82e : add byte ptr [rax], al ; ret 0x1625
0x000000000000fef6 : add byte ptr [rax], al ; ret 0x1d
0x000000000015458e : add byte ptr [rax], al ; ret 0x1d4
0x0000000000154d26 : add byte ptr [rax], al ; ret 0x1d5
0x0000000000153596 : add byte ptr [rax], al ; ret 0x24
0x0000000000007b26 : add byte ptr [rax], al ; ret 0x26
0x000000000000054c : add byte ptr [rax], al ; ret 0x2800
0x0000000000003f9e : add byte ptr [rax], al ; ret 0x31
0x0000000000153a86 : add byte ptr [rax], al ; ret 0x33
0x000000000000a556 : add byte ptr [rax], al ; ret 0x34
0x000000000000f66e : add byte ptr [rax], al ; ret 0x35
0x0000000000010e6e : add byte ptr [rax], al ; ret 0x42
0x0000000000000886 : add byte ptr [rax], al ; ret 0x440c
0x000000000000807e : add byte ptr [rax], al ; ret 0x45
0x000000000001053e : add byte ptr [rax], al ; ret 0x49
0x0000000000005b5e : add byte ptr [rax], al ; ret 0x4e
0x0000000000010fd6 : add byte ptr [rax], al ; ret 0x51
0x00000000001520be : add byte ptr [rax], al ; ret 0xa
0x00000000001524be : add byte ptr [rax], al ; ret 0xd
0x0000000000155962 : add byte ptr [rax], al ; ret 1
0x00000000000060bf : add byte ptr [rax], al ; ret 2
0x00000000000011c6 : add byte ptr [rax], al ; ret 3
0x00000000000075fe : add byte ptr [rax], al ; ret 4
0x0000000000156162 : add byte ptr [rax], al ; ret 5
0x000000000000ddde : add byte ptr [rax], al ; ret 6
0x00000000000018c2 : add byte ptr [rax], al ; ret 7
0x0000000000156762 : add byte ptr [rax], al ; ret 8
0x0000000000156962 : add byte ptr [rax], al ; ret 9
0x0000000000000c42 : add byte ptr [rax], al ; retf
0x000000000001f34a : add byte ptr [rax], al ; retf 0
0x0000000000152a1e : add byte ptr [rax], al ; retf 0x11
0x0000000000008b76 : add byte ptr [rax], al ; retf 0x14
0x000000000001a30e : add byte ptr [rax], al ; retf 0x14b1
0x00000000001545c6 : add byte ptr [rax], al ; retf 0x1d4
0x0000000000154d66 : add byte ptr [rax], al ; retf 0x1d5
0x00000000001535d6 : add byte ptr [rax], al ; retf 0x24
0x0000000000010946 : add byte ptr [rax], al ; retf 0x29
0x000000000000f75e : add byte ptr [rax], al ; retf 0x32
0x0000000000153ac6 : add byte ptr [rax], al ; retf 0x33
0x0000000000157987 : add byte ptr [rax], al ; retf 0x3b9a
0x0000000000004a66 : add byte ptr [rax], al ; retf 0x3c
0x000000000016964e : add byte ptr [rax], al ; retf 0x49f2
0x000000000000ecde : add byte ptr [rax], al ; retf 0x4d
0x0000000000010df6 : add byte ptr [rax], al ; retf 0x4f
0x000000000015221e : add byte ptr [rax], al ; retf 0xb
0x000000000000c87e : add byte ptr [rax], al ; retf 0xc
0x000000000015261e : add byte ptr [rax], al ; retf 0xe
0x000000000001092e : add byte ptr [rax], al ; retf 0xf
0x000000000001045e : add byte ptr [rax], al ; retf 1
0x000000000000c756 : add byte ptr [rax], al ; retf 2
0x00000000000011da : add byte ptr [rax], al ; retf 3
0x00000000000013a2 : add byte ptr [rax], al ; retf 4
0x0000000000001576 : add byte ptr [rax], al ; retf 5
0x000000000000171e : add byte ptr [rax], al ; retf 6
0x0000000000156572 : add byte ptr [rax], al ; retf 7
0x0000000000156772 : add byte ptr [rax], al ; retf 8
0x0000000000156972 : add byte ptr [rax], al ; retf 9
0x0000000000179cae : add byte ptr [rax], al ; rol bh, 1 ; out dx, eax ; call qword ptr [rdx]
0x0000000000155f5e : add byte ptr [rax], al ; rol byte ptr [rax + rax], 0 ; ret 4
0x0000000000152366 : add byte ptr [rax], al ; ror byte ptr [rax + rax], 0 ; ret
0x000000000017abee : add byte ptr [rax], al ; sal cl, 0xfc ; call qword ptr [rdx]
0x00000000001841ff : add byte ptr [rax], al ; sal ebp, cl ; jmp qword ptr [rcx]
0x0000000000181a22 : add byte ptr [rax], al ; sbb al, 0x10 ; add dword ptr [rax], eax ; js 0x181a00 ; hlt ; jmp rbx
0x0000000000174522 : add byte ptr [rax], al ; sbb al, 0x3b ; add byte ptr [rax], al ; sbb byte ptr [rcx - 0x14], ah ; jmp qword ptr [rcx]
0x0000000000184922 : add byte ptr [rax], al ; sbb al, 0x3f ; add dword ptr [rax], eax ; fsub st(7) ; cmc ; call qword ptr [rsi]
0x000000000017e322 : add byte ptr [rax], al ; sbb al, 0xd9 ; add byte ptr [rax], al ; test al, 0x9f ; jmp rdi
0x000000000018588f : add byte ptr [rax], al ; sbb al, 0xf6 ; jmp qword ptr [rcx]
0x0000000000174526 : add byte ptr [rax], al ; sbb byte ptr [rcx - 0x14], ah ; jmp qword ptr [rcx]
0x0000000000173b66 : add byte ptr [rax], al ; sbb byte ptr [rdx], ah ; in al, dx ; call qword ptr [rcx]
0x00000000000656de : add byte ptr [rax], al ; sbb rdx, 3 ; sub rdx, r12 ; syscall
0x00000000000d2f3e : add byte ptr [rax], al ; setne al ; lea eax, dword ptr [rax + rax*8 + 5] ; ret
0x0000000000173eae : add byte ptr [rax], al ; shr byte ptr [rcx], 1 ; in al, dx ; jmp qword ptr [rbx]
0x00000000000da256 : add byte ptr [rax], al ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x000000000017b452 : add byte ptr [rax], al ; stosb byte ptr [rdi], al ; add byte ptr [rax], al ; pop rax ; jne 0x17b454 ; jmp qword ptr [rdx]
0x0000000000174232 : add byte ptr [rax], al ; sub al, 0x38 ; add byte ptr [rax], al ; clc ; xor ebp, esp ; call qword ptr [rax]
0x0000000000184d32 : add byte ptr [rax], al ; sub al, 0x43 ; add dword ptr [rax], eax ; fdivr st(1) ; cmc ; jmp qword ptr [rcx]
0x0000000000185a32 : add byte ptr [rax], al ; sub al, 0x50 ; add dword ptr [rax], eax ; clc ; xor esi, esi ; jmp qword ptr [rcx]
0x0000000000188232 : add byte ptr [rax], al ; sub al, 0x78 ; add dword ptr [rax], eax ; pop rax ; sal esi, 1 ; jmp qword ptr [rsi]
0x000000000018b932 : add byte ptr [rax], al ; sub al, 0xaf ; add dword ptr [rax], eax ; out -5, eax ; jmp qword ptr [rdx]
0x000000000017d532 : add byte ptr [rax], al ; sub al, 0xcb ; add byte ptr [rax], al ; sub bl, ch ; int1 ; call qword ptr [rax]
0x0000000000190932 : add byte ptr [rax], al ; sub al, 0xff ; add dword ptr [rax], eax ; pop rax ; ret 0xfff8
0x0000000000179ef6 : add byte ptr [rax], al ; sub al, dl ; out dx, eax ; call rax
0x000000000017699f : add byte ptr [rax], al ; sub bh, ch ; jmp qword ptr [rdi]
0x0000000000175e16 : add byte ptr [rax], al ; sub bh, ch ; out dx, al ; jmp qword ptr [rcx]
0x0000000000172abe : add byte ptr [rax], al ; sub bl, 0xeb ; jmp rax
0x0000000000179996 : add byte ptr [rax], al ; sub bl, al ; out dx, eax ; jmp qword ptr [rdx]
0x000000000017d476 : add byte ptr [rax], al ; sub bl, ch ; int1 ; call qword ptr [rax]
0x0000000000171b16 : add byte ptr [rax], al ; sub byte ptr [rbp - 3], bh ; jmp qword ptr [rdi]
0x000000000017db16 : add byte ptr [rax], al ; sub byte ptr [rbx - 0xe], ah ; call qword ptr [rax]
0x0000000000144cec : add byte ptr [rax], al ; sub eax, ecx ; ret
0x0000000000032a51 : add byte ptr [rax], al ; sub eax, edx ; sar eax, 0x10 ; ret
0x00000000000abd8f : add byte ptr [rax], al ; sub eax, edx ; sub ecx, eax ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000e0e07 : add byte ptr [rax], al ; sub edx, eax ; test eax, eax ; cmovns eax, edx ; ret
0x000000000016c2ee : add byte ptr [rax], al ; sub esi, eax ; call rsp
0x000000000006f6fd : add byte ptr [rax], al ; sub qword ptr [rbx + 0x28], 1 ; jmp 0x6f6d9
0x0000000000075326 : add byte ptr [rax], al ; sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000007bce1 : add byte ptr [rax], al ; sub rax, 8 ; ret
0x0000000000080271 : add byte ptr [rax], al ; sub rax, rdx ; ret
0x000000000011d157 : add byte ptr [rax], al ; sub rsp, 0x178 ; syscall
0x00000000000e07ff : add byte ptr [rax], al ; sub rsp, 0x30 ; mov rdx, rsp ; syscall
0x00000000000052be : add byte ptr [rax], al ; syscall
0x0000000000176456 : add byte ptr [rax], al ; test al, 0x12 ; out dx, eax ; call qword ptr [rax]
0x000000000017c8f6 : add byte ptr [rax], al ; test al, 0x7e ; int1 ; call rsp
0x000000000017b966 : add byte ptr [rax], al ; test al, 0x82 ; cli ; call qword ptr [rax]
0x000000000017e326 : add byte ptr [rax], al ; test al, 0x9f ; jmp rdi
0x000000000017e9f6 : add byte ptr [rax], al ; test al, 0xd2 ; call qword ptr [rdx]
0x000000000016bff6 : add byte ptr [rax], al ; test al, dh ; out dx, eax ; call rsp
0x000000000017e28a : add byte ptr [rax], al ; test bl, al ; add byte ptr [rax], al ; mov al, 0x9e ; call rdi
0x000000000017cd66 : add byte ptr [rax], al ; test byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000018328a : add byte ptr [rax], al ; test byte ptr [rax], ch ; add dword ptr [rax], eax ; mov al, 0x8d ; cmc ; jmp qword ptr [rcx]
0x0000000000185d8a : add byte ptr [rax], al ; test byte ptr [rbx + 1], dl ; add al, ah ; xor al, 0xf6 ; jmp qword ptr [rcx]
0x00000000000751a4 : add byte ptr [rax], al ; test byte ptr [rbx], 0x80 ; jne 0x751b8 ; pop rbx ; ret
0x0000000000188e8a : add byte ptr [rax], al ; test byte ptr [rcx + rax - 0x90d3000], al ; jmp rdi
0x0000000000184e8a : add byte ptr [rax], al ; test byte ptr [rcx + rax], al ; cmp bl, 0xf5 ; call rdx
0x000000000018818a : add byte ptr [rax], al ; test byte ptr [rdi + 1], dh ; add al, ah ; sal dh, 1 ; jmp qword ptr [rsi]
0x000000000016c5a6 : add byte ptr [rax], al ; test byte ptr [rdx - 0x10], ch ; jmp rsp
0x0000000000194672 : add byte ptr [rax], al ; test byte ptr [rdx], al ; add byte ptr [rax], al ; retf
0x000000000016b44e : add byte ptr [rax], al ; test byte ptr [rdx], dl ; in al, dx ; jmp rsp
0x000000000018588a : add byte ptr [rax], al ; test byte ptr [rsi + 1], cl ; add byte ptr [rax], al ; sbb al, 0xf6 ; jmp qword ptr [rcx]
0x000000000018608a : add byte ptr [rax], al ; test byte ptr [rsi + 1], dl ; add al, dl ; cmp dh, dh ; call qword ptr [rsi]
0x000000000017d48a : add byte ptr [rax], al ; test cl, dl ; add byte ptr [rax], al ; and bl, ch ; int1 ; call qword ptr [rdx]
0x00000000000376ed : add byte ptr [rax], al ; test dil, dil ; cmove eax, ecx ; ret
0x000000000003772d : add byte ptr [rax], al ; test dil, dil ; cmovne eax, ecx ; ret
0x000000000003771a : add byte ptr [rax], al ; test dl, dl ; cmovne eax, ecx ; ret
0x000000000018014a : add byte ptr [rax], al ; test dword ptr [rax], 0xf390e000 ; jmp qword ptr [rcx]
0x000000000010c10f : add byte ptr [rax], al ; test eax, eax ; je 0x10c128 ; xor eax, eax ; ret
0x000000000011864a : add byte ptr [rax], al ; test r14d, r14d ; jle 0x118689 ; call 0x115119
0x00000000000f5b9d : add byte ptr [rax], al ; test rax, rax ; je 0xf5bd7 ; call rax
0x0000000000115c12 : add byte ptr [rax], al ; test rax, rax ; jne 0x115c08 ; pop rbx ; ret
0x00000000000738be : add byte ptr [rax], al ; test rdx, rdx ; jne 0x738d9 ; xor eax, eax ; ret
0x000000000017fc9a : add byte ptr [rax], al ; xchg eax, esp ; add byte ptr [rax], al ; loopne 0x17fc2e ; call qword ptr [rdx]
0x000000000018809a : add byte ptr [rax], al ; xchg eax, esp ; jbe 0x1880a9 ; add al, ah ; sal dh, 1 ; jmp qword ptr [rsi]
0x000000000017859a : add byte ptr [rax], al ; xchg eax, esp ; jnp 0x1785a8 ; add byte ptr [rax - 0x7d], dh ; out dx, eax ; jmp qword ptr [rbx]
0x000000000018659a : add byte ptr [rax], al ; xchg eax, esp ; pop rbx ; add dword ptr [rax], eax ; rol byte ptr [rax - 0xa], 1 ; jmp qword ptr [rcx]
0x000000000017699a : add byte ptr [rax], al ; xchg eax, esp ; pop rdi ; add byte ptr [rax], al ; add byte ptr [rax], ch ; out dx, eax ; jmp qword ptr [rdi]
0x000000000017649a : add byte ptr [rax], al ; xchg eax, esp ; pop rdx ; add byte ptr [rax], al ; xor byte ptr [rbx], dl ; out dx, eax ; call rdi
0x0000000000185c9a : add byte ptr [rax], al ; xchg eax, esp ; push rdx ; add dword ptr [rax], eax ; adc byte ptr [rsi + rsi*8], dh ; jmp qword ptr [rcx]
0x000000000017cc9a : add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x000000000016bd2e : add byte ptr [rax], al ; xchg eax, esp ; xchg eax, ecx ; in eax, dx ; call rsp
0x0000000000173c9a : add byte ptr [rax], al ; xchg eax, esp ; xor al, byte ptr [rax] ; add byte ptr [rax + 0x23], ah ; in al, dx ; jmp qword ptr [rsi]
0x000000000018d4fe : add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; cld ; retf 1
0x000000000018cc6e : add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret 1
0x000000000018cca6 : add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 1
0x000000000018d456 : add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; push rsp ; retf 1
0x000000000018203a : add byte ptr [rax], al ; xor al, 0x16 ; add dword ptr [rax], eax ; sar dh, 1 ; hlt ; jmp qword ptr [rcx]
0x000000000016be5e : add byte ptr [rax], al ; xor al, 0x1d ; out dx, eax ; call rsp
0x0000000000185b3a : add byte ptr [rax], al ; xor al, 0x51 ; add dword ptr [rax], eax ; sal byte ptr [rdx], 0xf6 ; jmp qword ptr [rcx]
0x000000000018803a : add byte ptr [rax], al ; xor al, 0x76 ; add dword ptr [rax], eax ; adc al, 0xf6 ; jmp qword ptr [rsi]
0x000000000016b846 : add byte ptr [rax], al ; xor al, 0x92 ; in al, dx ; jmp rsp
0x000000000017c93a : add byte ptr [rax], al ; xor al, 0xbf ; add byte ptr [rax], al ; push rax ; cmpsb byte ptr [rsi], byte ptr [rdi] ; int1 ; jmp rbx
0x000000000017e43a : add byte ptr [rax], al ; xor al, 0xda ; add byte ptr [rax], al ; movsd dword ptr [rdi], dword ptr [rsi] ; jmp qword ptr [rcx]
0x000000000016c0be : add byte ptr [rax], al ; xor al, 0xe9 ; out dx, eax ; jmp rsp
0x000000000019103a : add byte ptr [rax], al ; xor al, 6 ; add al, byte ptr [rax] ; adc ch, bl ; clc ; call rcx
0x00000000001752ce : add byte ptr [rax], al ; xor bl, 0xec ; jmp rdi
0x000000000017b17e : add byte ptr [rax], al ; xor byte ptr [rax - 0x10], dl ; jmp qword ptr [rdx]
0x000000000017dafe : add byte ptr [rax], al ; xor byte ptr [rbx - 0xe], ah ; call qword ptr [rax]
0x000000000017649e : add byte ptr [rax], al ; xor byte ptr [rbx], dl ; out dx, eax ; call rdi
0x00000000000e055a : add byte ptr [rax], al ; xor byte ptr [rcx], 0xc0 ; ret
0x000000000009834e : add byte ptr [rax], al ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x00000000000b3156 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000007c52c : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x18 ; ret
0x00000000000ff496 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x28 ; ret
0x000000000011fb06 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x38 ; ret
0x00000000000cf7fe : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x000000000010c95e : add byte ptr [rax], al ; xor eax, eax ; jmp rcx
0x0000000000082813 : add byte ptr [rax], al ; xor eax, eax ; mov rdi, rbp ; call 0x4f249
0x000000000010c916 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x0000000000035bbb : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b392d : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000035823 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000035846 : add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000036876 : add byte ptr [rax], al ; xor eax, ecx ; ret
0x00000000000646be : add byte ptr [rax], al ; xor ebx, ebx ; mov rax, rbx ; pop rbx ; ret
0x000000000002034e : add byte ptr [rax], al ; xor edi, edi ; mov eax, edx ; syscall
0x0000000000020477 : add byte ptr [rax], al ; xor edx, edx ; mov eax, 2 ; syscall
0x000000000006a1ce : add byte ptr [rax], al ; xor edx, edx ; mov rax, rdx ; ret
0x0000000000033e7e : add byte ptr [rax], al ; xor edx, edx ; mov rsi, rbx ; mov eax, ecx ; syscall
0x0000000000046f8b : add byte ptr [rax], al ; xor esi, esi ; call rax
0x00000000000524cc : add byte ptr [rax], al ; xor esi, esi ; jmp rax
0x00000000000b9cac : add byte ptr [rax], al ; xor esi, esi ; mov eax, 2 ; syscall
0x000000000002e5f3 : add byte ptr [rax], al ; xor esi, esi ; mov eax, ebx ; syscall
0x00000000000f7886 : add byte ptr [rax], al ; xor esi, esi ; mov rax, rsi ; ret
0x00000000000f5b1f : add byte ptr [rax], al ; xor esi, esi ; movsxd rdi, edx ; syscall
0x0000000000028738 : add byte ptr [rax], al ; xor r9d, r9d ; call r15
0x000000000008386d : add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000191c77 : add byte ptr [rax], bh ; add byte ptr [rax], al ; add byte ptr [rbx + 6], dl ; add byte ptr [rax], al ; ret 2
0x00000000001730d7 : add byte ptr [rax], bh ; add ch, ah ; jmp qword ptr [rcx]
0x0000000000184d67 : add byte ptr [rax], bh ; cli ; cmc ; jmp qword ptr [rcx]
0x0000000000173dc7 : add byte ptr [rax], bh ; in al, dx ; jmp rsp
0x0000000000178017 : add byte ptr [rax], bh ; je 0x17800e ; jmp qword ptr [rsi]
0x000000000017bc07 : add byte ptr [rax], bh ; jrcxz 0x17bbff ; jmp rbx
0x000000000017a4e7 : add byte ptr [rax], bh ; or eax, esi ; jmp rbx
0x000000000018cd77 : add byte ptr [rax], bh ; push rdi ; jmp rsi
0x000000000017e847 : add byte ptr [rax], bh ; ret
0x00000000001903d7 : add byte ptr [rax], bh ; sahf ; sti ; jmp qword ptr [rdx]
0x0000000000187ff7 : add byte ptr [rax], bh ; sal dh, 1 ; jmp qword ptr [rsi]
0x0000000000179237 : add byte ptr [rax], bh ; scasd eax, dword ptr [rdi] ; out dx, eax ; call qword ptr [rdx]
0x0000000000183607 : add byte ptr [rax], bh ; wait ; cmc ; jmp qword ptr [rcx]
0x0000000000185ce7 : add byte ptr [rax], bh ; xor al, 0xf6 ; jmp qword ptr [rcx]
0x0000000000173b67 : add byte ptr [rax], bl ; and ch, ah ; call qword ptr [rcx]
0x000000000018e247 : add byte ptr [rax], bl ; clc ; jmp qword ptr [rax]
0x0000000000184407 : add byte ptr [rax], bl ; fdiv st(5) ; jmp qword ptr [rcx]
0x00000000001831c7 : add byte ptr [rax], bl ; mov ebp, dr0 ; jmp qword ptr [rcx]
0x0000000000190a07 : add byte ptr [rax], bl ; ret
0x00000000001858a7 : add byte ptr [rax], bl ; sbb al, 0xf6 ; jmp qword ptr [rcx]
0x000000000017df37 : add byte ptr [rax], bl ; xchg eax, ebp ; jmp qword ptr [rcx]
0x0000000000003f97 : add byte ptr [rax], ch ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x31
0x0000000000184c07 : add byte ptr [rax], ch ; div ebp ; call qword ptr [rax]
0x0000000000171b17 : add byte ptr [rax], ch ; jge 0x171b1c ; jmp qword ptr [rdi]
0x00000000001832d7 : add byte ptr [rax], ch ; mov dr0, ebp ; jmp qword ptr [rcx]
0x000000000017db17 : add byte ptr [rax], ch ; movsxd rsi, edx ; call qword ptr [rax]
0x00000000001769a0 : add byte ptr [rax], ch ; out dx, eax ; jmp qword ptr [rdi]
0x0000000000175e17 : add byte ptr [rax], ch ; out dx, eax ; out dx, al ; jmp qword ptr [rcx]
0x00000000001817e7 : add byte ptr [rax], ch ; popfq ; hlt ; jmp qword ptr [rdi]
0x0000000000179997 : add byte ptr [rax], ch ; ret
0x00000000001908e7 : add byte ptr [rax], ch ; ret 0xfff8
0x0000000000180487 : add byte ptr [rax], ch ; retf
0x0000000000188207 : add byte ptr [rax], ch ; sal esi, 1 ; jmp qword ptr [rsi]
0x0000000000182b87 : add byte ptr [rax], ch ; sar cl, 1 ; call qword ptr [rax]
0x0000000000179ef7 : add byte ptr [rax], ch ; shr bh, 1 ; call rax
0x0000000000179097 : add byte ptr [rax], ch ; test al, 0xef ; jmp qword ptr [rsi]
0x000000000011ddcf : add byte ptr [rax], cl ; add byte ptr [rax - 0x77], cl ; xlatb ; mov eax, ebx ; syscall
0x000000000002a8c8 : add byte ptr [rax], cl ; add byte ptr [rcx + rcx*4 - 0x18], al ; mov rdi, rcx ; syscall
0x000000000018ea13 : add byte ptr [rax], cl ; add dword ptr [rax], eax ; fsub dword ptr [rbp - 8] ; call qword ptr [rbx]
0x00000000001614e7 : add byte ptr [rax], cl ; jae 0x1614ea ; call qword ptr [rax]
0x000000000002c004 : add byte ptr [rax], cl ; movzx eax, ax ; ret
0x00000000000b3949 : add byte ptr [rax], cl ; or dword ptr [rax], eax ; mov eax, 0x101 ; syscall
0x00000000000b39a6 : add byte ptr [rax], cl ; or dword ptr [rax], eax ; mov eax, 2 ; syscall
0x0000000000183de7 : add byte ptr [rax], cl ; retf
0x00000000000416a4 : add byte ptr [rax], cl ; retf -0x7af1
0x0000000000187fc7 : add byte ptr [rax], cl ; sal dh, 1 ; jmp qword ptr [rsi]
0x00000000001835d7 : add byte ptr [rax], cl ; wait ; cmc ; jmp qword ptr [rcx]
0x000000000017649f : add byte ptr [rax], dh ; adc ebp, edi ; call rdi
0x000000000018ddcf : add byte ptr [rax], dh ; cmp eax, edi ; call rdx
0x000000000018441f : add byte ptr [rax], dh ; fdiv st(5) ; jmp qword ptr [rcx]
0x000000000009834f : add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x000000000019127f : add byte ptr [rax], dh ; loop 0x19127f ; jmp qword ptr [rbx]
0x000000000017daff : add byte ptr [rax], dh ; movsxd rsi, edx ; call qword ptr [rax]
0x000000000018485f : add byte ptr [rax], dh ; out 0xf5, al ; jmp qword ptr [rcx]
0x000000000000962f : add byte ptr [rax], dh ; retf 0x11
0x000000000000791f : add byte ptr [rax], dh ; retf 0xe
0x0000000000182dbf : add byte ptr [rax], dh ; test dh, ch ; jmp qword ptr [rcx]
0x000000000003f060 : add byte ptr [rax], dl ; add byte ptr [rax + 0x38], bh ; syscall
0x00000000000f5a72 : add byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000064715 : add byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000064723 : add byte ptr [rax], dl ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000185fff : add byte ptr [rax], dl ; cmp dh, dh ; jmp qword ptr [rcx]
0x000000000017fa6f : add byte ptr [rax], dl ; ja 0x17fa6a ; call rsi
0x00000000001832bf : add byte ptr [rax], dl ; mov dr0, ebp ; jmp qword ptr [rcx]
0x000000000017e3af : add byte ptr [rax], dl ; movsb byte ptr [rdi], byte ptr [rsi] ; jmp qword ptr [rax]
0x000000000002c0e4 : add byte ptr [rax], dl ; movzx eax, ax ; ret
0x0000000000018a1f : add byte ptr [rax], dl ; ret
0x000000000001dc87 : add byte ptr [rax], dl ; retf
0x0000000000009557 : add byte ptr [rax], dl ; retf 0xd
0x00000000001881ef : add byte ptr [rax], dl ; sal esi, 1 ; jmp qword ptr [rsi]
0x0000000000173f0f : add byte ptr [rax], dl ; sub ch, ah ; jmp qword ptr [rdx]
0x0000000000182eaf : add byte ptr [rax], dl ; xchg ch, dh ; jmp qword ptr [rcx]
0x000000000017cf9f : add byte ptr [rax], dl ; xlatb ; int1 ; call rsi
0x0000000000185c9f : add byte ptr [rax], dl ; xor al, 0xf6 ; jmp qword ptr [rcx]
0x000000000017d5f8 : add byte ptr [rax], r8b ; add ah, dh ; retf
0x0000000000064e55 : add byte ptr [rax], r8b ; add dword ptr [rdx + 4], 1 ; xor eax, eax ; ret
0x00000000000f0965 : add byte ptr [rax], r8b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001497a5 : add byte ptr [rax], r8b ; add rsp, 8 ; ret
0x000000000006eccd : add byte ptr [rax], r8b ; and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x000000000011f435 : add byte ptr [rax], r8b ; call qword ptr [rbx]
0x000000000008ed2d : add byte ptr [rax], r8b ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x000000000008ed5d : add byte ptr [rax], r8b ; mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x00000000000db6ad : add byte ptr [rax], r8b ; mov eax, 0x102 ; syscall
0x00000000000dd10d : add byte ptr [rax], r8b ; mov eax, 0x107 ; syscall
0x00000000000dd04d : add byte ptr [rax], r8b ; mov eax, 0x10a ; syscall
0x00000000000e926d : add byte ptr [rax], r8b ; mov eax, 0x123 ; syscall
0x00000000000dbfdd : add byte ptr [rax], r8b ; mov eax, 0x124 ; syscall
0x00000000000dc03d : add byte ptr [rax], r8b ; mov eax, 0x125 ; syscall
0x00000000000e93ed : add byte ptr [rax], r8b ; mov eax, 0x126 ; syscall
0x00000000000e980d : add byte ptr [rax], r8b ; mov eax, 0x12c ; syscall
0x00000000000e91ad : add byte ptr [rax], r8b ; mov eax, 0x131 ; syscall
0x00000000000e187d : add byte ptr [rax], r8b ; mov eax, 0x132 ; syscall
0x00000000000e98cd : add byte ptr [rax], r8b ; mov eax, 0x134 ; syscall
0x00000000000db9bd : add byte ptr [rax], r8b ; mov eax, 0x15 ; syscall
0x000000000007d005 : add byte ptr [rax], r8b ; mov eax, 0x16 ; ret
0x00000000000dc00d : add byte ptr [rax], r8b ; mov eax, 0x16 ; syscall
0x00000000000d1ead : add byte ptr [rax], r8b ; mov eax, 0x18 ; syscall
0x00000000000e47cd : add byte ptr [rax], r8b ; mov eax, 0x1b ; syscall
0x00000000000e479d : add byte ptr [rax], r8b ; mov eax, 0x1c ; syscall
0x00000000000ea69d : add byte ptr [rax], r8b ; mov eax, 0x1d ; syscall
0x00000000000ea6cd : add byte ptr [rax], r8b ; mov eax, 0x1f ; syscall
0x00000000000dbf7d : add byte ptr [rax], r8b ; mov eax, 0x20 ; syscall
0x00000000000dbfad : add byte ptr [rax], r8b ; mov eax, 0x21 ; syscall
0x00000000000ab46d : add byte ptr [rax], r8b ; mov eax, 0x26 ; syscall
0x00000000000e9f0d : add byte ptr [rax], r8b ; mov eax, 0x29 ; syscall
0x00000000000e99dd : add byte ptr [rax], r8b ; mov eax, 0x31 ; syscall
0x00000000000e9a9d : add byte ptr [rax], r8b ; mov eax, 0x33 ; syscall
0x00000000000e9a6d : add byte ptr [rax], r8b ; mov eax, 0x34 ; syscall
0x00000000000ea5ad : add byte ptr [rax], r8b ; mov eax, 0x40 ; syscall
0x00000000000ea57d : add byte ptr [rax], r8b ; mov eax, 0x41 ; syscall
0x00000000000ea66d : add byte ptr [rax], r8b ; mov eax, 0x43 ; syscall
0x00000000000ea54d : add byte ptr [rax], r8b ; mov eax, 0x47 ; syscall
0x00000000000e2ebd : add byte ptr [rax], r8b ; mov eax, 0x4d ; syscall
0x00000000000dc0cd : add byte ptr [rax], r8b ; mov eax, 0x50 ; syscall
0x00000000000dc0fd : add byte ptr [rax], r8b ; mov eax, 0x51 ; syscall
0x00000000000dd13d : add byte ptr [rax], r8b ; mov eax, 0x54 ; syscall
0x00000000000dd07d : add byte ptr [rax], r8b ; mov eax, 0x59 ; syscall
0x00000000000db5bd : add byte ptr [rax], r8b ; mov eax, 0x5b ; syscall
0x00000000000dc97d : add byte ptr [rax], r8b ; mov eax, 0x5d ; syscall
0x00000000000dc9ad : add byte ptr [rax], r8b ; mov eax, 0x5e ; syscall
0x00000000000e0b2d : add byte ptr [rax], r8b ; mov eax, 0x62 ; syscall
0x00000000000b7eed : add byte ptr [rax], r8b ; mov eax, 0x64 ; syscall
0x00000000000e944d : add byte ptr [rax], r8b ; mov eax, 0x67 ; syscall
0x00000000000b913d : add byte ptr [rax], r8b ; mov eax, 0x6d ; syscall
0x00000000000b916d : add byte ptr [rax], r8b ; mov eax, 0x6f ; syscall
0x00000000000b91cd : add byte ptr [rax], r8b ; mov eax, 0x70 ; syscall
0x00000000000b91fd : add byte ptr [rax], r8b ; mov eax, 0x76 ; syscall
0x00000000000b922d : add byte ptr [rax], r8b ; mov eax, 0x78 ; syscall
0x00000000000e8dcd : add byte ptr [rax], r8b ; mov eax, 0x7a ; syscall
0x00000000000e8dfd : add byte ptr [rax], r8b ; mov eax, 0x7b ; syscall
0x00000000000e914d : add byte ptr [rax], r8b ; mov eax, 0x7d ; syscall
0x00000000000e917d : add byte ptr [rax], r8b ; mov eax, 0x7e ; syscall
0x00000000000db1ed : add byte ptr [rax], r8b ; mov eax, 0x84 ; syscall
0x00000000000e96ed : add byte ptr [rax], r8b ; mov eax, 0x86 ; syscall
0x00000000000db4bd : add byte ptr [rax], r8b ; mov eax, 0x8a ; syscall
0x00000000000e0e2d : add byte ptr [rax], r8b ; mov eax, 0x8d ; syscall
0x00000000000d1e1d : add byte ptr [rax], r8b ; mov eax, 0x8f ; syscall
0x00000000000d1e4d : add byte ptr [rax], r8b ; mov eax, 0x90 ; syscall
0x00000000000d1e7d : add byte ptr [rax], r8b ; mov eax, 0x91 ; syscall
0x00000000000d1edd : add byte ptr [rax], r8b ; mov eax, 0x92 ; syscall
0x00000000000d1f0d : add byte ptr [rax], r8b ; mov eax, 0x93 ; syscall
0x00000000000d1f3d : add byte ptr [rax], r8b ; mov eax, 0x94 ; syscall
0x00000000000e485d : add byte ptr [rax], r8b ; mov eax, 0x96 ; syscall
0x00000000000e488d : add byte ptr [rax], r8b ; mov eax, 0x97 ; syscall
0x00000000000e48bd : add byte ptr [rax], r8b ; mov eax, 0x98 ; syscall
0x00000000000e90ad : add byte ptr [rax], r8b ; mov eax, 0x9a ; syscall
0x00000000000e950d : add byte ptr [rax], r8b ; mov eax, 0x9b ; syscall
0x00000000000e907d : add byte ptr [rax], r8b ; mov eax, 0x9e ; syscall
0x00000000000e470d : add byte ptr [rax], r8b ; mov eax, 0xa ; syscall
0x00000000000e0afd : add byte ptr [rax], r8b ; mov eax, 0xa0 ; syscall
0x00000000000e175d : add byte ptr [rax], r8b ; mov eax, 0xa1 ; syscall
0x00000000000e17ed : add byte ptr [rax], r8b ; mov eax, 0xa2 ; syscall
0x00000000000e1c1d : add byte ptr [rax], r8b ; mov eax, 0xa7 ; syscall
0x00000000000e1c4d : add byte ptr [rax], r8b ; mov eax, 0xa8 ; syscall
0x00000000000e8c2d : add byte ptr [rax], r8b ; mov eax, 0xac ; syscall
0x00000000000e91dd : add byte ptr [rax], r8b ; mov eax, 0xae ; syscall
0x00000000000e920d : add byte ptr [rax], r8b ; mov eax, 0xb0 ; syscall
0x00000000000e8d9d : add byte ptr [rax], r8b ; mov eax, 0xbb ; syscall
0x00000000000e75dd : add byte ptr [rax], r8b ; mov eax, 0xc6 ; syscall
0x00000000000e74bd : add byte ptr [rax], r8b ; mov eax, 0xc7 ; syscall
0x00000000000e923d : add byte ptr [rax], r8b ; mov eax, 0xd5 ; syscall
0x00000000000e90dd : add byte ptr [rax], r8b ; mov eax, 0xe4 ; syscall
0x00000000000e93bd : add byte ptr [rax], r8b ; mov eax, 0xfd ; syscall
0x00000000000e941d : add byte ptr [rax], r8b ; mov eax, 0xff ; syscall
0x0000000000075fed : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; ret
0x00000000000ba7d5 : add byte ptr [rax], r8b ; mov eax, 1 ; ret
0x0000000000115c1d : add byte ptr [rax], r8b ; mov eax, 2 ; ret
0x00000000000c5c15 : add byte ptr [rax], r8b ; mov eax, dword ptr [rdi + 0x4c] ; ret
0x00000000000944fd : add byte ptr [rax], r8b ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000f4e05 : add byte ptr [rax], r8b ; mov rax, qword ptr [rax + 0x30] ; ret
0x00000000000319fd : add byte ptr [rax], r8b ; mov rax, rcx ; ret
0x000000000009576d : add byte ptr [rax], r8b ; mov rax, rdi ; ret
0x0000000000076eed : add byte ptr [rax], r8b ; mov rax, rdx ; ret
0x000000000009453d : add byte ptr [rax], r8b ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000010af6d : add byte ptr [rax], r8b ; pop rbx ; ret
0x00000000000b85ad : add byte ptr [rax], r8b ; pop rdi ; mov eax, 0x3a ; syscall
0x0000000000041115 : add byte ptr [rax], r8b ; ret
0x00000000001915ce : add byte ptr [rax], r8b ; retf
0x000000000011fb05 : add byte ptr [rax], r8b ; xor eax, eax ; add rsp, 0x38 ; ret
0x00000000000cf7fd : add byte ptr [rax], r8b ; xor eax, eax ; add rsp, 8 ; ret
0x00000000000c38d5 : add byte ptr [rax], r8b ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003609d : add byte ptr [rax], r8b ; xor eax, eax ; pop rbx ; ret
0x0000000000035845 : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x000000000006a1cd : add byte ptr [rax], r8b ; xor edx, edx ; mov rax, rdx ; ret
0x00000000000f7885 : add byte ptr [rax], r8b ; xor esi, esi ; mov rax, rsi ; ret
0x000000000009a18d : add byte ptr [rax], r8b ; xor rax, rax ; ret
0x00000000000db906 : add byte ptr [rbp + 0x10], dh ; mov eax, 0 ; syscall
0x00000000000e1046 : add byte ptr [rbp + 0x10], dh ; mov eax, 0x13 ; syscall
0x00000000000e9876 : add byte ptr [rbp + 0x10], dh ; mov eax, 0x130 ; syscall
0x00000000000e10a6 : add byte ptr [rbp + 0x10], dh ; mov eax, 0x14 ; syscall
0x00000000000e4746 : add byte ptr [rbp + 0x10], dh ; mov eax, 0x1a ; syscall
0x00000000000b8206 : add byte ptr [rbp + 0x10], dh ; mov eax, 0x22 ; syscall
0x00000000000b8266 : add byte ptr [rbp + 0x10], dh ; mov eax, 0x23 ; syscall
0x00000000000e9a16 : add byte ptr [rbp + 0x10], dh ; mov eax, 0x2a ; syscall
0x00000000000e9986 : add byte ptr [rbp + 0x10], dh ; mov eax, 0x2b ; syscall
0x00000000000e1796 : add byte ptr [rbp + 0x10], dh ; mov eax, 0x4a ; syscall
0x00000000000e1826 : add byte ptr [rbp + 0x10], dh ; mov eax, 0x4b ; syscall
0x00000000000dc076 : add byte ptr [rbp + 0x10], dh ; mov eax, 0x55 ; syscall
0x00000000000db966 : add byte ptr [rbp + 0x10], dh ; mov eax, 1 ; syscall
0x00000000000db6e6 : add byte ptr [rbp + 0x10], dh ; mov eax, 2 ; syscall
0x00000000000dbf26 : add byte ptr [rbp + 0x10], dh ; mov eax, 3 ; syscall
0x00000000000df896 : add byte ptr [rbp + 0x10], dh ; mov eax, 7 ; syscall
0x00000000000376dc : add byte ptr [rbp + 0x21], dh ; ret
0x0000000000043fcf : add byte ptr [rbp + 0x29], cl ; ret
0x0000000000038c7f : add byte ptr [rbp + 0x29], cl ; retf
0x00000000000a66d7 : add byte ptr [rbp + 0x29dc75db], al ; ret
0x00000000000f37bd : add byte ptr [rbp + 0x2f], dh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000028739 : add byte ptr [rbp + 0x31], al ; leave ; call r15
0x00000000000aea0e : add byte ptr [rbp + 0x31], al ; ror byte ptr [rax - 0x7d], cl ; ret
0x00000000000892d3 : add byte ptr [rbp + 0x31], al ; ror byte ptr [rcx - 0x39], cl ; ret
0x00000000000f5cff : add byte ptr [rbp + 0x31], dl ; ror byte ptr [rax - 0x77], 0xe5 ; pop rbp ; ret
0x000000000008beaf : add byte ptr [rbp + 0x38], al ; retf -0x78f1
0x00000000000a672b : add byte ptr [rbp + 0x390a74db], al ; ret
0x00000000000e55e6 : add byte ptr [rbp + 0x395274c0], al ; ret
0x0000000000077621 : add byte ptr [rbp + 0x41], bl ; mov dword ptr [rsp + 0x10], eax ; pop r12 ; ret
0x000000000004e71e : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000004e7ee : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x000000000007e286 : add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x000000000008275e : add byte ptr [rbp + 0x480d75c0], al ; add esp, 8 ; ret
0x00000000000646ae : add byte ptr [rbp + 0x480d75c0], al ; mov eax, ebx ; pop rbx ; ret
0x0000000000104373 : add byte ptr [rbp + 0x48], dh ; mov eax, r8d ; ret
0x000000000017efbb : add byte ptr [rbp + 0x4ee00000], dh ; jmp qword ptr [rdi]
0x0000000000033cb7 : add byte ptr [rbp + 0x5890142], cl ; retf
0x00000000000c45c4 : add byte ptr [rbp + 0x63], cl ; retf
0x00000000000c7d72 : add byte ptr [rbp + 0x63], cl ; retf 0xf41
0x00000000000428ef : add byte ptr [rbp + 0xf], cl ; lodsd eax, dword ptr [rsi] ; ret
0x00000000000427df : add byte ptr [rbp + 0xf], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000182f4b : add byte ptr [rbp + 1], al ; add byte ptr [rax - 0x7a], al ; cmc ; jmp qword ptr [rcx]
0x0000000000182f63 : add byte ptr [rbp + 1], bl ; add byte ptr [rax - 0x7a], bl ; cmc ; jmp qword ptr [rcx]
0x0000000000035f6a : add byte ptr [rbp + 3], dh ; pop rbx ; ret
0x00000000000c2c89 : add byte ptr [rbp + 4], dh ; pop rbx ; ret
0x000000000011f3b8 : add byte ptr [rbp + 5], dh ; add rsp, 0x38 ; ret
0x00000000000e1fe5 : add byte ptr [rbp + 8], dh ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000713b2 : add byte ptr [rbp + rax + 0x48], dh ; add esp, 0x38 ; ret
0x000000000016de7f : add byte ptr [rbp + rax - 9], al ; jmp rsp
0x000000000017cf9b : add byte ptr [rbp + rax*8 - 0x28f00000], dl ; int1 ; call rsi
0x0000000000183773 : add byte ptr [rbp + rbp + 1], ch ; add byte ptr [rax - 0x57], bh ; cmc ; jmp rcx
0x000000000018f78b : add byte ptr [rbp + rbp*8 + 0x7fc00001], al ; clc ; call qword ptr [rsi]
0x00000000001524b7 : add byte ptr [rbp + rcx + 0xdbf0000], bh ; add byte ptr [rax], al ; ret 0xd
0x000000000012d6df : add byte ptr [rbp + rcx*4 + 0x1d], cl ; stc ; retf
0x0000000000021965 : add byte ptr [rbp + rcx*4 + 0x34], cl ; ret
0x00000000000294b6 : add byte ptr [rbp + rcx*4 + 0x3d], cl ; ret 0x370f
0x000000000006e601 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x10 ; mov rdi, r12 ; call rbx
0x000000000010b4a2 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; call qword ptr [rax]
0x000000000006e51e : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; mov rdi, r12 ; call rbx
0x000000000010b337 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x1c ; call qword ptr [rax]
0x000000000010b879 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x30 ; call qword ptr [rax]
0x00000000000c3407 : add byte ptr [rbp + rcx*4 + 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret
0x000000000016f767 : add byte ptr [rbp + rcx*8 - 7], al ; jmp rsp
0x0000000000181f6b : add byte ptr [rbp + rdx + 1], ah ; add byte ptr [rax - 2], al ; hlt ; call qword ptr [rsi]
0x0000000000181fc3 : add byte ptr [rbp + rdx - 0x1a7ffff], bh ; hlt ; jmp qword ptr [rcx]
0x0000000000181fab : add byte ptr [rbp + rdx - 0x1bfffff], ah ; hlt ; jmp qword ptr [rcx]
0x000000000016beb7 : add byte ptr [rbp + rdx*4 - 0x11], dh ; jmp rsp
0x0000000000183f73 : add byte ptr [rbp + rsi + 1], ch ; add byte ptr [rax - 0x33], ch ; cmc ; call rdi
0x000000000016ea07 : add byte ptr [rbp + rsi*8 - 9], ah ; call rsp
0x000000000009a73d : add byte ptr [rbp - 0x10], dh ; ret
0x0000000000149da4 : add byte ptr [rbp - 0x1f], dh ; pop rbx ; ret
0x00000000000b989f : add byte ptr [rbp - 0x27], dh ; xor eax, eax ; ret
0x00000000000b9690 : add byte ptr [rbp - 0x38], dh ; ret
0x0000000000152763 : add byte ptr [rbp - 0x3ffffff1], bh ; sldt word ptr [rax] ; ret
0x000000000015e818 : add byte ptr [rbp - 0x42df000b], bh ; cmc ; jmp rax
0x000000000015e814 : add byte ptr [rbp - 0x42ff000b], bh ; cmc ; jmp qword ptr [rax]
0x00000000000b9802 : add byte ptr [rbp - 0x46], dh ; mov eax, 0x40 ; ret
0x0000000000098e03 : add byte ptr [rbp - 0x6bf0be13], al ; ret 0xfe83
0x0000000000089a02 : add byte ptr [rbp - 0x73], cl ; pop rsi ; dec dword ptr [rcx + 0x29] ; retf 0x1deb
0x0000000000044811 : add byte ptr [rbp - 0x75], cl ; jl 0x44842 ; and byte ptr [rax + 1], cl ; ret
0x000000000004f961 : add byte ptr [rbp - 0x75], cl ; jl 0x4f992 ; and byte ptr [rax + 1], cl ; ret
0x00000000000c5d9a : add byte ptr [rbp - 0x76bb008b], cl ; retf -0x76b8
0x000000000002bec4 : add byte ptr [rbp - 0x77], cl ; ret 0xb0e9
0x0000000000080b8d : add byte ptr [rbp - 0x77], cl ; retf
0x0000000000182fc3 : add byte ptr [rbp - 0x7917ffff], bh ; cmc ; jmp qword ptr [rcx]
0x0000000000182fab : add byte ptr [rbp - 0x792fffff], ah ; cmc ; jmp qword ptr [rcx]
0x000000000011864b : add byte ptr [rbp - 0x7b], al ; idiv byte ptr [rsi + 0x2f] ; call 0x115118
0x00000000000f58f3 : add byte ptr [rbp - 0x7b], cl ; sal byte ptr [rax + rdi*2 + 0x41], 0xb9 ; retf 0
0x000000000008e99b : add byte ptr [rbp - 0x7c], al ; sal byte ptr [rcx + 0x44], 0x38 ; ret 0x4153
0x00000000000c59bf : add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x00000000000c40f5 : add byte ptr [rbp - 0x9d18b37], al ; ret
0x00000000000410c7 : add byte ptr [rbp - 0xa], dh ; pop rbx ; ret
0x000000000007c365 : add byte ptr [rbp - 0xcf98740], al ; ret
0x0000000000032e55 : add byte ptr [rbp - 0xcf98a40], al ; ret
0x000000000015d034 : add byte ptr [rbp - 0xd], bh ; jmp qword ptr [rax]
0x000000000016e24f : add byte ptr [rbp - 9], dl ; jmp rsp
0x000000000000c877 : add byte ptr [rbp], bh ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0xc
0x00000000001783eb : add byte ptr [rbp], bl ; add byte ptr [rax + 0x7e], dl ; out dx, eax ; jmp qword ptr [rcx]
0x000000000000a54f : add byte ptr [rbp], bl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x34
0x00000000000052b7 : add byte ptr [rbp], bl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000000def7 : add byte ptr [rbp], dh ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp qword ptr [rcx]
0x0000000000106e87 : add byte ptr [rbx + 0x1074ffff], al ; mov eax, r13d ; syscall
0x00000000001222d9 : add byte ptr [rbx + 0x148b8104], cl ; xchg eax, ecx ; sub eax, edx ; ret
0x000000000007085f : add byte ptr [rbx + 0x2002507], cl ; add byte ptr [rax], al ; ret
0x000000000006dbe8 : add byte ptr [rbx + 0x275fff8], al ; pop rbx ; ret
0x000000000008d32c : add byte ptr [rbx + 0x294803e0], al ; ret 0x148
0x00000000000ee551 : add byte ptr [rbx + 0x2aad303d], cl ; add al, ch ; ret
0x00000000000eb00d : add byte ptr [rbx + 0x2b138c0d], cl ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000c65b7 : add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000075f27 : add byte ptr [rbx + 0x32581505], al ; add byte ptr [rcx], al ; ret
0x00000000000b9100 : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x000000000009450f : add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x0000000000140b7f : add byte ptr [rbx + 0x48028901], cl ; lea eax, dword ptr [rdx + 3] ; ret
0x0000000000143f2f : add byte ptr [rbx + 0x48028901], cl ; mov eax, edi ; ret
0x000000000009692f : add byte ptr [rbx + 0x48178916], cl ; lea eax, dword ptr [rdi + 4] ; ret
0x00000000000faadf : add byte ptr [rbx + 0x488d01f8], al ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8b48
0x000000000008e9fc : add byte ptr [rbx + 0x48], bl ; mov dword ptr [rdi], edx ; ret
0x000000000006745a : add byte ptr [rbx + 0x48], bl ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000001062b4 : add byte ptr [rbx + 0x4f0f05f8], al ; ret 0x4589
0x000000000010628c : add byte ptr [rbx + 0x4f0f1ef8], al ; ret 0x4589
0x000000000013371f : add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x000000000001fc12 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000001fb15 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000020436 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000002068d : add byte ptr [rbx + 0x5d], bl ; ret
0x00000000000713ef : add byte ptr [rbx + 0x5e8c107], cl ; and eax, 1 ; ret
0x0000000000094bf9 : add byte ptr [rbx + 0x63], cl ; or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000002a585 : add byte ptr [rbx + 0x63], cl ; xor al, 0x88 ; add rsi, r8 ; jmp rsi
0x00000000000da3bf : add byte ptr [rbx + 0x6890447], cl ; xor eax, eax ; ret
0x0000000000049d0e : add byte ptr [rbx + 0x7501046a], al ; ret
0x000000000007082f : add byte ptr [rbx + 0x8042507], cl ; add byte ptr [rax], al ; ret
0x000000000009b0f8 : add byte ptr [rbx + 0xa777fff], al ; mov eax, edi ; ret
0x000000000011865f : add byte ptr [rbx + 0xc89c20c], cl ; ret
0x000000000003629f : add byte ptr [rbx + 0xf48fffa], al ; ret
0x000000000006eccf : add byte ptr [rbx + 0xf89cfe1], al ; ret
0x00000000000007bc : add byte ptr [rbx + 1], al ; ret 0x102
0x000000000000ecef : add byte ptr [rbx + 1], bl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x0000000000191c7b : add byte ptr [rbx + 6], dl ; add byte ptr [rax], al ; ret 2
0x00000000001702b7 : add byte ptr [rbx + rax - 5], dl ; call rsp
0x00000000001463da : add byte ptr [rbx + rax - 9], bh ; fadd st(3) ; ret
0x000000000016de3f : add byte ptr [rbx + rax - 9], dl ; jmp rsp
0x0000000000184d63 : add byte ptr [rbx + rax*2 + 1], bl ; add byte ptr [rax], bh ; cli ; cmc ; jmp qword ptr [rcx]
0x0000000000184d7b : add byte ptr [rbx + rax*2 + 1], dh ; add byte ptr [rax - 6], dl ; cmc ; jmp qword ptr [rcx]
0x0000000000184dc3 : add byte ptr [rbx + rax*2 - 0x567ffff], bh ; cmc ; jmp qword ptr [rcx]
0x0000000000184dab : add byte ptr [rbx + rax*2 - 0x57fffff], ah ; cmc ; jmp qword ptr [rcx]
0x000000000016ec9f : add byte ptr [rbx + rax*2 - 8], ah ; dec esp ; ret
0x0000000000184d33 : add byte ptr [rbx + rax*2], ch ; add dword ptr [rax], eax ; fdivr st(1) ; cmc ; jmp qword ptr [rcx]
0x0000000000184d1b : add byte ptr [rbx + rax*2], dl ; add dword ptr [rax], eax ; sar cl, 0xf5 ; jmp qword ptr [rcx]
0x000000000016cc2f : add byte ptr [rbx + rax*4 - 0xf], al ; jmp rsp
0x000000000018cd73 : add byte ptr [rbx + rax*8 + 1], ch ; add byte ptr [rax], bh ; push rdi ; jmp rsi
0x0000000000170887 : add byte ptr [rbx + rax*8 - 3], dl ; call rsp
0x000000000017cd6b : add byte ptr [rbx + rax*8], ah ; add byte ptr [rax], dl ; ret
0x000000000018cd2b : add byte ptr [rbx + rax*8], ah ; add dword ptr [rax], eax ; mov al, 0xfd ; idiv edi ; retf 1
0x0000000000192133 : add byte ptr [rbx + rax], al ; add byte ptr [rax], al ; retf 1
0x000000000016c2ef : add byte ptr [rbx + rbp - 0x10], ah ; call rsp
0x00000000001835a3 : add byte ptr [rbx + rbp - 0x6527ffff], bl ; cmc ; jmp qword ptr [rcx]
0x000000000018358b : add byte ptr [rbx + rbp - 0x653fffff], al ; cmc ; jmp qword ptr [rcx]
0x000000000017f54b : add byte ptr [rbx + rbp*8], al ; add byte ptr [rax + 0x5f], al ; call rsi
0x0000000000183543 : add byte ptr [rbx + rbp], bh ; add dword ptr [rax], eax ; js 0x1834ec ; cmc ; jmp qword ptr [rcx]
0x000000000016ebdf : add byte ptr [rbx + rbx - 8], ah ; call rsp
0x00000000000ee00a : add byte ptr [rbx + rcx + 0x5b], dh ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000000d1301 : add byte ptr [rbx + rcx*4 + 0x2c], cl ; ret
0x0000000000102276 : add byte ptr [rbx + rcx*4 + 0x32], ah ; syscall
0x000000000010f9ae : add byte ptr [rbx + rcx*4 + 0x35], cl ; ret 0x28ae
0x000000000002c454 : add byte ptr [rbx + rcx*4 + 0x3d], cl ; lodsb al, byte ptr [rsi] ; retf 0x36
0x0000000000036797 : add byte ptr [rbx + rcx*4 + 0x41], cl ; or byte ptr [rax - 0x77], cl ; retf
0x00000000000439e7 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x0000000000042267 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x0000000000076dc6 : add byte ptr [rbx + rcx*4 + 0xd], cl ; ret 0x321f
0x000000000017d533 : add byte ptr [rbx + rcx*8], ch ; add byte ptr [rax], al ; sub bl, ch ; int1 ; call qword ptr [rax]
0x000000000017d51b : add byte ptr [rbx + rcx*8], dl ; add byte ptr [rax], al ; and bl, ch ; int1 ; call qword ptr [rdx]
0x000000000017859b : add byte ptr [rbx + rdi*2 - 0x7c900000], dl ; out dx, eax ; jmp qword ptr [rbx]
0x000000000016e637 : add byte ptr [rbx + rdi*4 - 9], ah ; jmp rsp
0x0000000000174523 : add byte ptr [rbx + rdi], bl ; add byte ptr [rax], al ; sbb byte ptr [rcx - 0x14], ah ; jmp qword ptr [rcx]
0x0000000000185d73 : add byte ptr [rbx + rdx*2 + 1], ch ; add al, cl ; xor al, 0xf6 ; jmp qword ptr [rcx]
0x0000000000185d43 : add byte ptr [rbx + rdx*2], bh ; add dword ptr [rax], eax ; cwde ; xor al, 0xf6 ; jmp qword ptr [rcx]
0x0000000000179dc3 : add byte ptr [rbx + rdx*4 + 0x6680000], bh ; std ; jmp rdi
0x0000000000173dc3 : add byte ptr [rbx + rsi + 0x26380000], bh ; in al, dx ; jmp rsp
0x000000000017fdbb : add byte ptr [rbx + rsi*8 - 0x78100000], dh ; jmp qword ptr [rdx]
0x000000000016dd77 : add byte ptr [rbx + rsi*8 - 0xa], dh ; jmp rsp
0x000000000015d16c : add byte ptr [rbx + rsi*8 - 0xc7bef01], al ; jmp qword ptr [rax]
0x000000000017fd0b : add byte ptr [rbx + rsi*8], al ; add byte ptr [rax], al ; jo 0x17fc9e ; jmp qword ptr [rcx]
0x000000000006c088 : add byte ptr [rbx - 0x14f3db8c], cl ; ret 0x5590
0x00000000000e7307 : add byte ptr [rbx - 0x15], bl ; retf 0x1f0f
0x00000000000e8eb5 : add byte ptr [rbx - 0x2f], cl ; mov eax, 0x119 ; syscall
0x000000000006db7f : add byte ptr [rbx - 0x3b7cb7fe], cl ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000000991c2 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x10 ; pop rbx ; ret
0x00000000000991d0 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x20 ; pop rbx ; ret
0x00000000000991c9 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x30 ; pop rbx ; ret
0x00000000000991e5 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x40 ; pop rbx ; ret
0x00000000000991de : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x60 ; pop rbx ; ret
0x00000000000991d7 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x80 ; pop rbx ; ret
0x000000000010d3ff : add byte ptr [rbx - 0x3e7cb7ef], cl ; add al, 0xf ; retf 0x6348
0x00000000000e744b : add byte ptr [rbx - 0x3f7ac7c0], cl ; cmove eax, edx ; ret
0x0000000000107ab6 : add byte ptr [rbx - 0x3f7ae7c0], cl ; jne 0x107ac8 ; ret
0x00000000000f55bf : add byte ptr [rbx - 0x3f7aefb9], cl ; jne 0xf55d9 ; ret
0x00000000000a941d : add byte ptr [rbx - 0x40], ch ; cmp al, 1 ; ret 0xb70f
0x000000000016ad88 : add byte ptr [rbx - 0x456f0004], bh ; cld ; jmp qword ptr [rax]
0x00000000000776a6 : add byte ptr [rbx - 0x4e], dh ; ret
0x0000000000098f12 : add byte ptr [rbx - 0x50f0fe3e], al ; ror dword ptr [rdi], -0x51 ; ret 0x78e9
0x000000000003df2b : add byte ptr [rbx - 0x57ccf16], al ; or dword ptr [rdi], ecx ; xchg eax, edi ; ret 0xd284
0x0000000000056302 : add byte ptr [rbx - 0x5ff43], al ; call qword ptr [rax]
0x00000000000a30c4 : add byte ptr [rbx - 0x71f0e706], al ; ret
0x00000000000c765a : add byte ptr [rbx - 0x72bed3af], cl ; add dword ptr [rcx], edi ; ret 0x8e0f
0x00000000000ec99a : add byte ptr [rbx - 0x74b7fe3f], al ; push rsp ; retf -0x74c0
0x0000000000035fc4 : add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x0000000000039547 : add byte ptr [rbx - 0x76b7e73b], al ; ret
0x000000000004e5d9 : add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000001041fd : add byte ptr [rbx - 0x77], dl ; retf
0x000000000011ec0e : add byte ptr [rbx - 0x78f0c008], al ; retf -3
0x000000000004758d : add byte ptr [rbx - 0x78f0d008], al ; ret 0x22
0x0000000000182dbb : add byte ptr [rbx - 0x7bcfffff], dh ; cmc ; jmp qword ptr [rcx]
0x000000000009d37b : add byte ptr [rbx - 0x7bf09608], al ; ret
0x0000000000148c06 : add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x0000000000040777 : add byte ptr [rbx - 0x7bf0fd08], al ; retf 3
0x00000000000c205f : add byte ptr [rbx - 0x7cb7fe3b], al ; ret
0x00000000000e49df : add byte ptr [rbx - 0x7d], dl ; call qword ptr [rcx]
0x00000000000f5e9f : add byte ptr [rbx - 0xd8a0008], al ; xor eax, eax ; leave ; ret
0x0000000000029138 : add byte ptr [rbx - 0xd], bl ; ret
0x000000000016cf4f : add byte ptr [rbx - 0xe], dh ; jmp rsp
0x000000000016aae0 : add byte ptr [rbx - 4], ch ; jmp qword ptr [rax]
0x000000000016eeff : add byte ptr [rbx - 8], dh ; jmp rsp
0x000000000015ff8a : add byte ptr [rbx], al ; or byte ptr [rax], al ; add byte ptr [rax], al ; add bl, al ; cli ; jmp rax
0x0000000000010def : add byte ptr [rbx], ch ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x4f
0x000000000016ed67 : add byte ptr [rbx], dl ; clc ; call rsp
0x000000000004f0f6 : add byte ptr [rcx + 0x1b802], cl ; add byte ptr [rax], al ; ret
0x0000000000053e93 : add byte ptr [rcx + 0x29], cl ; ret 0x8949
0x00000000001211d5 : add byte ptr [rcx + 0x29], cl ; retf
0x00000000000947e1 : add byte ptr [rcx + 0x29], cl ; retf 0x394d
0x00000000000a89f6 : add byte ptr [rcx + 0x29], cl ; ror byte ptr [rax + 0x3d], 1 ; ret 0x10
0x000000000010deaa : add byte ptr [rcx + 0x31], cl ; ror byte ptr [rbp - 0x77], 1 ; ret 0x334c
0x000000000010e0c3 : add byte ptr [rcx + 0x31], cl ; ror byte ptr [rbp - 0x77], 1 ; ret 0x334d
0x000000000004e864 : add byte ptr [rcx + 0x34a8b505], cl ; add byte ptr [rax + 0x63], cl ; ret 0x8948
0x000000000013e83f : add byte ptr [rcx + 0x3518911], cl ; ret
0x000000000008095f : add byte ptr [rcx + 0x39], cl ; ret
0x00000000000da5e4 : add byte ptr [rcx + 0x3b8c5], cl ; add byte ptr [rax], al ; syscall
0x00000000000dbb4e : add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; pop r13 ; ret
0x00000000000334d6 : add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x0000000000069b12 : add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x0000000000072394 : add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x00000000000f6eaf : add byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; ret
0x000000000013e81f : add byte ptr [rcx + 0x4518811], cl ; ret
0x00000000000954df : add byte ptr [rcx + 0x4578817], cl ; ret
0x00000000000d1d26 : add byte ptr [rcx + 0x5b595a0a], cl ; ret
0x00000000000e4eba : add byte ptr [rcx + 0x5b], bl ; pop rbp ; pop r12 ; ret
0x0000000000073a5d : add byte ptr [rcx + 0x5c], al ; pop r13 ; pop r14 ; ret
0x000000000012c0be : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000008ec4a : add byte ptr [rcx + 0x63], cl ; add al, 0x82 ; add rax, r10 ; jmp rax
0x000000000011b20f : add byte ptr [rcx + 0x63], cl ; clc ; mov eax, 3 ; syscall
0x00000000000d581f : add byte ptr [rcx + 0x63], cl ; cld ; mov eax, 3 ; syscall
0x0000000000143f9c : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x0000000000094388 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000005140a : add byte ptr [rcx + 0x63], cl ; ret
0x00000000000da99f : add byte ptr [rcx + 0x63], cl ; std ; mov eax, 3 ; syscall
0x0000000000178013 : add byte ptr [rcx + 0x74380000], al ; out dx, eax ; jmp qword ptr [rsi]
0x000000000002c1af : add byte ptr [rcx + 0x7fe083f8], cl ; ret
0x00000000000e37df : add byte ptr [rcx + 0x800008], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000110be4 : add byte ptr [rcx + 0x9883], cl ; add bl, ch ; ret 0x8b48
0x00000000000e0edf : add byte ptr [rcx + 0xc], bh ; mov eax, ecx ; syscall
0x00000000000da8d7 : add byte ptr [rcx + 0xf], al ; mov bh, 4 ; and al, 0x89 ; ret 0xe283
0x000000000005021a : add byte ptr [rcx + 0xf], al ; mov dh, 0x57 ; or al, 0x83 ; ret
0x00000000000501a7 : add byte ptr [rcx + 0xf], al ; mov dh, 0x57 ; or al, 0xf6 ; ret 0xf08
0x00000000000c011f : add byte ptr [rcx + 0xf], al ; mov dh, 4 ; xor edi, dword ptr [rcx] ; retf
0x0000000000037917 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000098e22 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000002e832 : add byte ptr [rcx + 0xf], cl ; retf
0x0000000000112402 : add byte ptr [rcx + 0xfffb], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret
0x0000000000182b83 : add byte ptr [rcx + 1], bh ; add byte ptr [rax], ch ; sar cl, 1 ; call qword ptr [rax]
0x0000000000048217 : add byte ptr [rcx + 1], bh ; jmp rax
0x00000000000ead6b : add byte ptr [rcx + 1], cl ; fmul qword ptr [rax + 0x39] ; ret
0x0000000000098b2f : add byte ptr [rcx + 1], cl ; ret
0x0000000000007c3f : add byte ptr [rcx + 2], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000dd686 : add byte ptr [rcx + 3], cl ; jbe 0xdd6aa ; mov eax, ecx ; syscall
0x0000000000000881 : add byte ptr [rcx + 4], cl ; or al, 1 ; add byte ptr [rax], al ; ret 0x440c
0x0000000000000e13 : add byte ptr [rcx + rax + 0x1c00000], bh ; add byte ptr [rax], al ; ret
0x000000000019466f : add byte ptr [rcx + rax + 0x2840000], ch ; add byte ptr [rax], al ; retf
0x000000000016ea77 : add byte ptr [rcx + rax - 8], ah ; call rsp
0x0000000000008fd7 : add byte ptr [rcx + rax], bl ; add byte ptr [rax], al ; ret
0x00000000001833b3 : add byte ptr [rcx + rbp - 0x6a37ffff], ch ; cmc ; jmp qword ptr [rcx]
0x000000000018339b : add byte ptr [rcx + rbp - 0x6a4fffff], dl ; cmc ; jmp qword ptr [rcx]
0x000000000016d86f : add byte ptr [rcx + rbp - 0xb], ah ; call rsp
0x000000000016b57f : add byte ptr [rcx + rbp*2], al ; in al, dx ; call rsp
0x00000000000327c5 : add byte ptr [rcx + rbp*8 - 0xd], dh ; ret
0x000000000016c0bf : add byte ptr [rcx + rbp*8], dh ; out dx, eax ; jmp rsp
0x000000000016e15f : add byte ptr [rcx + rbx*2 - 9], dh ; call rsp
0x000000000018a30b : add byte ptr [rcx + rbx*4], al ; add dword ptr [rax], eax ; add byte ptr [rax - 9], dl ; call qword ptr [rbx]
0x000000000018a343 : add byte ptr [rcx + rbx*4], bh ; add dword ptr [rax], eax ; clc ; idiv r15 ; ret
0x000000000017e3ab : add byte ptr [rcx + rbx*8 - 0x5bf00000], ah ; jmp qword ptr [rax]
0x000000000017e323 : add byte ptr [rcx + rbx*8], bl ; add byte ptr [rax], al ; test al, 0x9f ; jmp rdi
0x000000000016d357 : add byte ptr [rcx + rbx*8], dh ; call rsp
0x000000000016d147 : add byte ptr [rcx + rbx], ah ; jmp rsp
0x00000000000f4e7c : add byte ptr [rcx + rcx - 0xd], dh ; ret
0x0000000000185313 : add byte ptr [rcx + rcx*2], cl ; add dword ptr [rax], eax ; mov byte ptr [rsi + rsi*8], cl ; call qword ptr [rdx]
0x000000000017531b : add byte ptr [rcx + rcx*2], dl ; add byte ptr [rax], al ; and ah, dh ; in al, dx ; jmp rcx
0x0000000000101e53 : add byte ptr [rcx + rcx*4 + 0x14], al ; and al, 0xe8 ; ret
0x0000000000063ab6 : add byte ptr [rcx + rcx*4 + 0x24], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000115211 : add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8e0f
0x00000000000b53b1 : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 0x18 ; ret
0x00000000000b547b : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 8 ; ret
0x00000000000f366f : add byte ptr [rcx + rcx*4 - 0x11], cl ; call 0xf00b6
0x00000000000b414b : add byte ptr [rcx + rcx*4 - 0x13], cl ; mov rdi, rbx ; call r12
0x000000000002a8ca : add byte ptr [rcx + rcx*4 - 0x18], al ; mov rdi, rcx ; syscall
0x0000000000100cbd : add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x00000000000ea79c : add byte ptr [rcx + rcx*4 - 0x19], cl ; mov eax, 1 ; syscall
0x0000000000021acf : add byte ptr [rcx + rcx*4 - 0x19], cl ; mov rcx, qword ptr [rbp - 0x60] ; call rcx
0x000000000011c7ec : add byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, r8 ; mov eax, ebx ; syscall
0x000000000007d664 : add byte ptr [rcx + rcx*4 - 0x1e], cl ; mov rdi, rcx ; call rax
0x00000000000b84dc : add byte ptr [rcx + rcx*4 - 0x20], al ; syscall
0x00000000000781bc : add byte ptr [rcx + rcx*4 - 0x31], cl ; mov eax, 3 ; syscall
0x0000000000078190 : add byte ptr [rcx + rcx*4 - 0x31], cl ; mov eax, r8d ; syscall
0x00000000000f5935 : add byte ptr [rcx + rcx*4 - 0x38], al ; syscall
0x00000000000e1b31 : add byte ptr [rcx + rcx*4 - 0x39], cl ; mov eax, 1 ; syscall
0x00000000000e194a : add byte ptr [rcx + rcx*4 - 0x39], cl ; mov eax, 3 ; syscall
0x00000000000e7372 : add byte ptr [rcx + rcx*4 - 0x39], cl ; mov eax, esi ; syscall
0x00000000000e7354 : add byte ptr [rcx + rcx*4 - 0x39], cl ; xor eax, eax ; mov rsi, rbp ; syscall
0x00000000000e1934 : add byte ptr [rcx + rcx*4 - 0x39], cl ; xor eax, eax ; syscall
0x0000000000033005 : add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; ret
0x00000000000ffe60 : add byte ptr [rcx + rcx*4 - 0xa], cl ; call 0x2c8c6
0x0000000000077c9b : add byte ptr [rcx + rcx*4 - 0xa], cl ; call 0xe47a6
0x000000000007a472 : add byte ptr [rcx + rcx*4 - 0xa], cl ; mov rdi, r15 ; call 0x766c9
0x000000000005ff07 : add byte ptr [rcx + rcx*4 - 1], al ; call 0xec116
0x00000000000f3651 : add byte ptr [rcx + rcx*4 - 1], cl ; call 0xf00b6
0x000000000011d68b : add byte ptr [rcx + rcx*4 - 2], cl ; mov eax, r14d ; syscall
0x000000000007a513 : add byte ptr [rcx + rcx*4 - 6], cl ; call 0x76f26
0x000000000002d147 : add byte ptr [rcx + rcx*4 - 9], cl ; call rax
0x000000000002a782 : add byte ptr [rcx + rcx*4 - 9], cl ; mov eax, 3 ; syscall
0x000000000016d4e7 : add byte ptr [rcx + rcx*4], ah ; hlt ; call rsp
0x000000000016b787 : add byte ptr [rcx + rcx*4], al ; in al, dx ; call rsp
0x000000000018d3b3 : add byte ptr [rcx + rcx*8 + 0x13580001], ch ; clc ; call qword ptr [rsi]
0x000000000018d32b : add byte ptr [rcx + rcx*8], ah ; add dword ptr [rax], eax ; and byte ptr [rdx], cl ; clc ; jmp qword ptr [rdi]
0x000000000017d363 : add byte ptr [rcx + rcx*8], bl ; add al, ch ; in eax, -0xf ; call rdi
0x000000000019131b : add byte ptr [rcx + rcx], dl ; add al, byte ptr [rax] ; out -8, eax ; call qword ptr [rcx]
0x00000000001843bb : add byte ptr [rcx + rdi - 0x28dfffff], dh ; cmc ; jmp rdx
0x000000000007ac78 : add byte ptr [rcx + rdi - 0x3e], cl ; jne 0x7ac47 ; ret
0x000000000016cc07 : add byte ptr [rcx + rdi*2], dh ; int1 ; call rsp
0x000000000016b9ef : add byte ptr [rcx + rdi*4], al ; in al, dx ; call rsp
0x0000000000181ba3 : add byte ptr [rcx + rdx - 0x1d17ffff], bl ; hlt ; jmp qword ptr [rax]
0x0000000000185b6b : add byte ptr [rcx + rdx*2 + 1], ah ; add al, ah ; xor dh, dh ; call qword ptr [rax]
0x0000000000185b0b : add byte ptr [rcx + rdx*2], al ; add dword ptr [rax], eax ; nop ; xor dh, dh ; jmp qword ptr [rcx]
0x0000000000184c27 : add byte ptr [rcx + rdx*2], al ; retf 0
0x0000000000185b3b : add byte ptr [rcx + rdx*2], dh ; add dword ptr [rax], eax ; sal byte ptr [rdx], 0xf6 ; jmp qword ptr [rcx]
0x000000000018db2b : add byte ptr [rcx + rdx*8], ah ; add dword ptr [rax], eax ; sal byte ptr [rbx], 0xf8 ; call qword ptr [rdx]
0x000000000017db13 : add byte ptr [rcx + rdx*8], cl ; add byte ptr [rax], al ; sub byte ptr [rbx - 0xe], ah ; call qword ptr [rax]
0x0000000000171b13 : add byte ptr [rcx + rdx], cl ; add byte ptr [rax], al ; sub byte ptr [rbp - 3], bh ; jmp qword ptr [rdi]
0x000000000016cad7 : add byte ptr [rcx + rsi - 0xf], dl ; call rsp
0x000000000018bb83 : add byte ptr [rcx + rsi*4 + 1], bh ; add byte ptr [rax + 0x46], bh ; stc ; call qword ptr [rax]
0x0000000000173b63 : add byte ptr [rcx + rsi], bl ; add byte ptr [rax], bl ; and ch, ah ; call qword ptr [rcx]
0x00000000000732af : add byte ptr [rcx - 0x100c1e], al ; dec dword ptr [rcx] ; ret 0xfd81
0x000000000010bdcc : add byte ptr [rcx - 0x2076b73e], cl ; call 0x118038
0x0000000000002483 : add byte ptr [rcx - 0x23], al ; out 0xa9, al ; ret 0xbd07
0x000000000011910f : add byte ptr [rcx - 0x39], cl ; ret
0x00000000000da3cf : add byte ptr [rcx - 0x3fcefb89], cl ; ret
0x0000000000055cd0 : add byte ptr [rcx - 0x68f7b], cl ; dec dword ptr [rax + 0x63] ; ret
0x000000000002309f : add byte ptr [rcx - 0x73], cl ; add qword ptr [r8 - 0x7d], rcx ; ret 0x8801
0x00000000000e5c88 : add byte ptr [rcx - 0x73], cl ; push rsi ; or byte ptr [rax - 0x77], cl ; retf
0x00000000000b603a : add byte ptr [rcx - 0x75], cl ; add byte ptr [r8 - 0x7d], r9b ; ret
0x00000000000cf0ef : add byte ptr [rcx - 0x75], cl ; cmp byte ptr [r8 - 0x77], r9b ; retf -0x7cb8
0x0000000000035877 : add byte ptr [rcx - 0x75], cl ; or byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x000000000003ffc9 : add byte ptr [rcx - 0x75], cl ; ret
0x000000000011eb36 : add byte ptr [rcx - 0x75], cl ; sub byte ptr [r8 - 0x77], r9b ; ret 0x8948
0x000000000008ed5f : add byte ptr [rcx - 0x776b7f1], cl ; ret
0x0000000000027a5b : add byte ptr [rcx - 0x77], al ; ret
0x00000000000c45b3 : add byte ptr [rcx - 0x77], al ; ret 0x3945
0x0000000000024c16 : add byte ptr [rcx - 0x77], al ; ret 0x5841
0x00000000000c4569 : add byte ptr [rcx - 0x77], al ; ret 0xc141
0x00000000000aea3f : add byte ptr [rcx - 0x77], al ; ret 0xcdeb
0x000000000009dc3f : add byte ptr [rcx - 0x77], al ; retf
0x00000000000b0b67 : add byte ptr [rcx - 0x77], al ; retf -0x3015
0x00000000001041af : add byte ptr [rcx - 0x77], al ; rol dword ptr [rax - 0x69f0fe07], cl ; ret 0x8341
0x000000000001fd08 : add byte ptr [rcx - 0x77], al ; rol dword ptr [rcx - 0x77], cl ; ret 0x8341
0x00000000000dfa60 : add byte ptr [rcx - 0x77], al ; std ; call 0xdbd66
0x000000000003aa6a : add byte ptr [rcx - 0x77], cl ; ret
0x00000000000c2841 : add byte ptr [rcx - 0x77], cl ; ret 0x349
0x000000000002ac9a : add byte ptr [rcx - 0x77], cl ; ret 0x850f
0x0000000000082ac3 : add byte ptr [rcx - 0x77], cl ; retf
0x00000000000e929f : add byte ptr [rcx - 0x77], cl ; retf -0x1648
0x00000000000e47ff : add byte ptr [rcx - 0x77], cl ; retf -0x2748
0x00000000000e757f : add byte ptr [rcx - 0x77], cl ; retf -0x3f48
0x00000000000e03f5 : add byte ptr [rcx - 0x77], cl ; retf -0x3f7b
0x00000000000e74ef : add byte ptr [rcx - 0x77], cl ; retf -0x4148
0x00000000000e760f : add byte ptr [rcx - 0x77], cl ; retf -0x4248
0x00000000000e766f : add byte ptr [rcx - 0x77], cl ; retf -0x4348
0x00000000000892ac : add byte ptr [rcx - 0x77], cl ; retf -0x46bf
0x00000000000e935f : add byte ptr [rcx - 0x77], cl ; retf -0x5048
0x00000000000e947f : add byte ptr [rcx - 0x77], cl ; retf -0x5a48
0x00000000000e953f : add byte ptr [rcx - 0x77], cl ; retf -0x6248
0x00000000000f041f : add byte ptr [rcx - 0x77], cl ; retf -0x76b7
0x00000000000e97af : add byte ptr [rcx - 0x77], cl ; retf 0x1eb8
0x00000000000e90ef : add byte ptr [rcx - 0x77], cl ; retf 0x2db8
0x00000000000e901f : add byte ptr [rcx - 0x77], cl ; retf 0x2eb8
0x00000000000e983f : add byte ptr [rcx - 0x77], cl ; retf 0x2fb8
0x000000000010e027 : add byte ptr [rcx - 0x77], cl ; retf 0x334d
0x00000000000e9f3f : add byte ptr [rcx - 0x77], cl ; retf 0x35b8
0x00000000000e98ff : add byte ptr [rcx - 0x77], cl ; retf 0x36b8
0x00000000000e9acf : add byte ptr [rcx - 0x77], cl ; retf 0x37b8
0x00000000000b809f : add byte ptr [rcx - 0x77], cl ; retf 0x3db8
0x00000000000ea5df : add byte ptr [rcx - 0x77], cl ; retf 0x42b8
0x00000000000dc9df : add byte ptr [rcx - 0x77], cl ; retf 0x4b8
0x00000000000f5ce1 : add byte ptr [rcx - 0x77], cl ; retf 0x50f
0x0000000000064d6f : add byte ptr [rcx - 0x77], cl ; retf 0x8b8
0x00000000000dcfef : add byte ptr [rcx - 0x77], cl ; retf 0x9b8
0x00000000000dd0af : add byte ptr [rcx - 0x77], cl ; retf 0xbb8
0x00000000000f9b7b : add byte ptr [rcx - 0x77], cl ; ror byte ptr [rdi], 0x85 ; ret 0xfffe
0x00000000000aaadd : add byte ptr [rcx - 0x7b], al ; retf
0x0000000000038048 : add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x000000000004a7af : add byte ptr [rcx - 0x7d], al ; mov byte ptr [rcx], 0x89 ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000001fcda : add byte ptr [rcx - 0x7d], al ; retf 0x31ff
0x0000000000047764 : add byte ptr [rcx - 0x7d], al ; rol dword ptr [rcx], -0x17 ; ret 0xfffc
0x00000000000abcd6 : add byte ptr [rcx - 0x7d], al ; sti ; add dword ptr [rdi], ecx ; sahf ; ret 0x2941
0x00000000000c0b9f : add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000089341 : add byte ptr [rcx - 0x7d], cl ; ret 0x4101
0x000000000008bb37 : add byte ptr [rcx - 0x7d], cl ; ret 0x4601
0x000000000003d32f : add byte ptr [rcx - 0x7d], cl ; ret 0x4801
0x00000000000f993f : add byte ptr [rcx - 0x7d], cl ; ret 0x4901
0x00000000000da45c : add byte ptr [rcx - 0x7d], cl ; ret 0x4b01
0x000000000012044f : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000000b88b0 : add byte ptr [rcx - 0x7d], cl ; ret 0xeb08
0x000000000007edcf : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000015d0a8 : add byte ptr [rcx - 0x7ecf000d], al ; jmp rax
0x000000000015d0b8 : add byte ptr [rcx - 0x7eef000d], al ; jmp qword ptr [rax]
0x000000000007bd21 : add byte ptr [rcx - 0x80], al ; clc ; add dword ptr [rbp - 0x77], ecx ; retf 0xf44
0x0000000000023f29 : add byte ptr [rcx - 0x80], al ; js 0x23f3d ; or byte ptr [rdi], 0x87 ; retf
0x00000000001865d0 : add byte ptr [rcx - 0xa], al ; jmp qword ptr [rcx]
0x0000000000101ebf : add byte ptr [rcx - 0xa], al ; ret 0x7502
0x0000000000101de1 : add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000016960f : add byte ptr [rcx - 0xd], bl ; clc ; ret 0x6e1f
0x000000000011eb4e : add byte ptr [rcx - 0xfff1f], al ; dec dword ptr [rcx] ; retf -0x57d
0x000000000016a5c8 : add byte ptr [rcx - 4], ah ; jmp rax
0x00000000000a0ff2 : add byte ptr [rcx - 9], cl ; fisttp dword ptr [rcx - 0x39] ; ret 0xffff
0x00000000000839a2 : add byte ptr [rcx - 9], cl ; ret 1
0x00000000000839c8 : add byte ptr [rcx - 9], cl ; ret 2
0x000000000017571b : add byte ptr [rcx*2 - 0x6e300000], dl ; in eax, dx ; jmp rsp
0x0000000000188a95 : add byte ptr [rcx], 0 ; fsubr st(2) ; idiv bh ; retf
0x000000000017a09f : add byte ptr [rcx], 2 ; retf -0x7ff2
0x000000000015fa6b : add byte ptr [rcx], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x000000000016cb65 : add byte ptr [rcx], al ; add byte ptr [rax + rdx*2 - 0xf], dl ; jmp rsp
0x000000000000e137 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000007327 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000000e3c35 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add cl, ch ; ret
0x000000000002c379 : add byte ptr [rcx], al ; add byte ptr [rax], al ; and eax, esi ; ret
0x0000000000114971 : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000834d1 : add byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000008026f : add byte ptr [rcx], al ; add byte ptr [rax], al ; sub rax, rdx ; ret
0x000000000016fc2f : add byte ptr [rcx], al ; cli ; jmp rsp
0x000000000002c0c4 : add byte ptr [rcx], al ; movzx eax, ax ; ret
0x00000000001002c9 : add byte ptr [rcx], al ; pop rbx ; ret
0x000000000011819f : add byte ptr [rcx], al ; push rdi ; sub byte ptr [rax + 1], bh ; ret
0x0000000000075f2d : add byte ptr [rcx], al ; ret
0x00000000000406cb : add byte ptr [rcx], al ; ret 0x8b44
0x0000000000040d44 : add byte ptr [rcx], al ; ret 0x8b4c
0x0000000000032c45 : add byte ptr [rcx], al ; retf -0x1f3
0x0000000000036604 : add byte ptr [rcx], al ; retf -0x7573
0x0000000000010fcf : add byte ptr [rcx], bh ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x51
0x0000000000182b43 : add byte ptr [rcx], bh ; add dword ptr [rax], eax ; pop rax ; sar cl, 1 ; call qword ptr [rax]
0x00000000000a66b7 : add byte ptr [rcx], bh ; ret
0x0000000000033ca0 : add byte ptr [rcx], bh ; ret 0x237f
0x00000000000c8f74 : add byte ptr [rcx], bh ; ret 0x8944
0x00000000000c1d8f : add byte ptr [rcx], bh ; retf
0x00000000000c2213 : add byte ptr [rcx], bh ; retf -0x72f1
0x00000000000c229f : add byte ptr [rcx], bh ; retf 0x337e
0x0000000000176b63 : add byte ptr [rcx], bl ; add byte ptr [rax + 0x2e], cl ; out dx, eax ; call rbx
0x000000000001093f : add byte ptr [rcx], bl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x29
0x0000000000082926 : add byte ptr [rcx], ch ; ret
0x00000000000ae55d : add byte ptr [rcx], ch ; ret 0x2941
0x00000000000b1d94 : add byte ptr [rcx], ch ; ret 0x8944
0x00000000000afaf1 : add byte ptr [rcx], ch ; ret 0x8d41
0x00000000000e0e08 : add byte ptr [rcx], ch ; ret 0xc085
0x0000000000125e1d : add byte ptr [rcx], ch ; ret 0xca39
0x00000000000af678 : add byte ptr [rcx], ch ; ret 0xd089
0x00000000000b223f : add byte ptr [rcx], ch ; ret 0xd629
0x00000000000ae525 : add byte ptr [rcx], ch ; ret 0xd889
0x00000000001034aa : add byte ptr [rcx], ch ; retf -0x2e77
0x0000000000177fdb : add byte ptr [rcx], cl ; add byte ptr [rax + 0x73], al ; out dx, eax ; jmp qword ptr [rcx]
0x00000000000f9759 : add byte ptr [rcx], cl ; clc ; bswap eax ; ret
0x00000000000e8e45 : add byte ptr [rcx], cl ; clc ; ret
0x00000000000c1e72 : add byte ptr [rcx], cl ; ret
0x00000000000b9cad : add byte ptr [rcx], dh ; idiv byte ptr [rax + 2] ; syscall
0x00000000000325df : add byte ptr [rcx], dh ; leave ; addsd xmm0, xmm0 ; mov dword ptr [rdi], ecx ; ret
0x0000000000111110 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000a7d24 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r14 ; ret
0x0000000000035bbc : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000d3437 : add byte ptr [rcx], dh ; retf -0x3fcf
0x0000000000080397 : add byte ptr [rcx], dh ; rol bl, 0xf3 ; ret
0x0000000000056230 : add byte ptr [rcx], dh ; rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x000000000002c1bf : add byte ptr [rcx], dh ; rol byte ptr [rbx - 0x6bf07f19], 0xc0 ; ret
0x0000000000038ac7 : add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], cl ; fmul dword ptr [rdi] ; xchg eax, edx ; ret 0x2948
0x0000000000082814 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], 0xef ; call 0x4f248
0x00000000000359db : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000026501 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], cl ; ret 0x4901
0x00000000000826e2 : add byte ptr [rcx], dh ; ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x0000000000020478 : add byte ptr [rcx], dh ; sar byte ptr [rax + 2], cl ; syscall
0x00000000000edb10 : add byte ptr [rcx], dh ; shr al, cl ; clc ; ret
0x00000000000f5b20 : add byte ptr [rcx], dh ; test byte ptr [rax + 0x63], 0xfa ; syscall
0x00000000000f7887 : add byte ptr [rcx], dh ; test byte ptr [rax - 0x77], 0xf0 ; ret
0x0000000000010063 : add byte ptr [rcx], dl ; add byte ptr [rdx], ah ; add al, al ; ret 0x39
0x000000000001001b : add byte ptr [rcx], dl ; add byte ptr [rdx], ah ; add al, cl ; ret 0x39
0x000000000013156a : add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; add r9, r11 ; jmp r9
0x00000000000da745 : add byte ptr [rdi + 1], bh ; call rax
0x000000000009a184 : add byte ptr [rdi + 2], bh ; neg eax ; ret
0x00000000001495f4 : add byte ptr [rdi + 9], bh ; neg eax ; ret
0x00000000000e546e : add byte ptr [rdi + rax - 0xd], dh ; ret
0x000000000018d1c3 : add byte ptr [rdi + rax*8 + 0x6a80001], bh ; clc ; jmp rsi
0x000000000017b993 : add byte ptr [rdi + rbp*4 - 0x43b80000], cl ; cli ; call qword ptr [rax]
0x000000000018b933 : add byte ptr [rdi + rbp*4], ch ; add dword ptr [rax], eax ; out -5, eax ; jmp qword ptr [rdx]
0x000000000018f9ab : add byte ptr [rdi + rbp*8 - 0x7d4fffff], ah ; clc ; jmp qword ptr [rdi]
0x000000000018f993 : add byte ptr [rdi + rbp*8 - 0x7d67ffff], cl ; clc ; jmp qword ptr [rdi]
0x000000000016fa17 : add byte ptr [rdi + rbx - 6], al ; jmp rsp
0x000000000017699b : add byte ptr [rdi + rbx*2 + 0x28000000], dl ; out dx, eax ; jmp qword ptr [rdi]
0x000000000016c4e7 : add byte ptr [rdi + rbx*2 - 0x10], dl ; call rsp
0x000000000017e973 : add byte ptr [rdi + rbx*8], ch ; add al, ch ; retf
0x000000000017e913 : add byte ptr [rdi + rbx*8], cl ; add byte ptr [rax], al ; pop rax ; retf
0x000000000017e95b : add byte ptr [rdi + rbx*8], dl ; add al, ah ; retf
0x00000000000b2825 : add byte ptr [rdi + rcx + 0x4f], al ; loopne 0xb281a ; ret 0xffea
0x00000000000386ef : add byte ptr [rdi + rcx - 0x42], cl ; push rbx ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000185963 : add byte ptr [rdi + rcx*2 + 1], bl ; add al, bl ; sbb al, 0xf6 ; jmp qword ptr [rcx]
0x000000000018591b : add byte ptr [rdi + rcx*2], dl ; add dword ptr [rax], eax ; nop ; sbb al, 0xf6 ; jmp qword ptr [rcx]
0x0000000000179993 : add byte ptr [rdi + rcx*4 - 0x3cd80000], cl ; out dx, eax ; jmp qword ptr [rdx]
0x00000000001707f7 : add byte ptr [rdi + rcx*4], al ; std ; call rsp
0x000000000017995b : add byte ptr [rdi + rcx*4], dl ; add al, ah ; ret 0xffef
0x000000000016d687 : add byte ptr [rdi + rcx*8 - 0xc], ah ; jmp rsp
0x0000000000170147 : add byte ptr [rdi + rcx*8], ah ; cli ; jmp rsp
0x000000000002bfc4 : add byte ptr [rdi + rcx], al ; mov bh, 0xc0 ; ret
0x000000000016bfa7 : add byte ptr [rdi + rdi*4 - 0x11], dh ; call rsp
0x000000000017c93b : add byte ptr [rdi + rdi*4], dh ; add byte ptr [rax], al ; push rax ; cmpsb byte ptr [rsi], byte ptr [rdi] ; int1 ; jmp rbx
0x0000000000190933 : add byte ptr [rdi + rdi*8], ch ; add dword ptr [rax], eax ; pop rax ; ret 0xfff8
0x000000000018091b : add byte ptr [rdi + rdi*8], dl ; add byte ptr [rax], al ; jo 0x18093c ; hlt ; jmp qword ptr [rdx]
0x0000000000184923 : add byte ptr [rdi + rdi], bl ; add dword ptr [rax], eax ; fsub st(7) ; cmc ; call qword ptr [rsi]
0x0000000000176183 : add byte ptr [rdi + rdx*2], bh ; add byte ptr [rax + 8], ch ; out dx, eax ; jmp qword ptr [rax]
0x000000000017e1c3 : add byte ptr [rdi + rdx*8 - 0x62380000], bh ; jmp qword ptr [rcx]
0x000000000018419b : add byte ptr [rdi + rsi - 0x2d5fffff], dl ; cmc ; jmp qword ptr [rdx]
0x00000000001881a3 : add byte ptr [rdi + rsi*2 + 0x7fe80001], bl ; stc ; jmp qword ptr [rsi]
0x0000000000188173 : add byte ptr [rdi + rsi*2 + 1], ch ; add al, ch ; jg 0x18817c ; jmp qword ptr [rsi]
0x000000000018815b : add byte ptr [rdi + rsi*2 + 1], dl ; add al, ah ; sal dh, 1 ; jmp qword ptr [rsi]
0x000000000016c5f7 : add byte ptr [rdi + rsi*2 - 0x10], ah ; call rsp
0x0000000000188143 : add byte ptr [rdi + rsi*2], bh ; add dword ptr [rax], eax ; call 0x27187ad4
0x0000000000188113 : add byte ptr [rdi + rsi*2], cl ; add dword ptr [rax], eax ; call 0x27187aa4
0x000000000018014b : add byte ptr [rdi + rsi*8], al ; add al, ah ; nop ; jmp qword ptr [rcx]
0x000000000018011b : add byte ptr [rdi + rsi*8], dl ; add byte ptr [rax], al ; mov al, 0x90 ; jmp qword ptr [rcx]
0x00000000000b85af : add byte ptr [rdi - 0x48], bl ; cmp al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000b9878 : add byte ptr [rdi - 0x48], dh ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000016a678 : add byte ptr [rdi - 0x696f0004], dl ; cld ; jmp qword ptr [rax]
0x00000000001831c3 : add byte ptr [rdi - 0x73e7ffff], bh ; cmc ; jmp qword ptr [rcx]
0x000000000015d074 : add byte ptr [rdi - 0xd], bh ; jmp qword ptr [rax]
0x0000000000169f54 : add byte ptr [rdi - 5], bh ; push rax ; jg 0x169f5d ; jmp qword ptr [rax]
0x000000000016b8a7 : add byte ptr [rdi], al ; in al, dx ; jmp rsp
0x0000000000032920 : add byte ptr [rdi], bh ; movd xmm0, eax ; mov dword ptr [rdi], edx ; ret
0x0000000000020689 : add byte ptr [rdi], ch ; mov byte ptr [rdi], 0 ; pop rbx ; pop rbp ; ret
0x00000000000206bd : add byte ptr [rdi], ch ; mov byte ptr [rdi], 0 ; ret
0x0000000000132ee6 : add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x0000000000051b63 : add byte ptr [rdi], cl ; fsubr st(1) ; retf -8
0x0000000000099097 : add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x0000000000133f1f : add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00000000000ea3b1 : add byte ptr [rdi], cl ; mov bh, 0xff ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002c15d : add byte ptr [rdi], cl ; mov bh, 4 ; js 0x2c0ee ; loopne 0x2c16e ; ret
0x00000000000ebba4 : add byte ptr [rdi], cl ; mov bh, 4 ; js 0xebb35 ; loopne 0xebbb5 ; ret
0x0000000000133f8f : add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x00000000000bfebd : add byte ptr [rdi], cl ; mov dh, 0x34 ; mov al, 0x39 ; retf
0x00000000000ba920 : add byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00000000000cc547 : add byte ptr [rdi], cl ; mov dh, 0x42 ; or byte ptr [rcx + 1], al ; retf -0x76bc
0x00000000000383ef : add byte ptr [rdi], cl ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000002515d : add byte ptr [rdi], cl ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000bd257 : add byte ptr [rdi], cl ; mov dh, 0x53 ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000006666f : add byte ptr [rdi], cl ; mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x00000000000f2c07 : add byte ptr [rdi], cl ; mov dh, 0x7b ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000009b254 : add byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000009914f : add byte ptr [rdi], cl ; mov dh, 0xc1 ; pop rbx ; ret
0x000000000008006f : add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000073a67 : add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x0000000000143faf : add byte ptr [rdi], cl ; mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x0000000000083a4f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000008f09f : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000008f0af : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dh ; ret
0x000000000008f08f : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000008ea4f : add byte ptr [rdi], cl ; mov esi, 0x74c08407 ; sub edi, dword ptr [rcx] ; ret 0x2774
0x00000000000e2f9f : add byte ptr [rdi], cl ; mov esi, 0x89c08507 ; ret 0x840f
0x000000000008eaef : add byte ptr [rdi], cl ; mov esi, 0x89c63907 ; ret 0xb8
0x000000000008a6bf : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x00000000000838df : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x00000000000838cf : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00000000000838bf : add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x0000000000032727 : add byte ptr [rdi], cl ; push rsp ; ret
0x00000000000b6b93 : add byte ptr [rdi], cl ; ret
0x00000000000aee5b : add byte ptr [rdi], cl ; ret 0x144
0x00000000000a8b17 : add byte ptr [rdi], cl ; ret 0x3bba
0x00000000000292b0 : add byte ptr [rdi], cl ; ret 0x4389
0x00000000000c9b96 : add byte ptr [rdi], cl ; ret 0x813b
0x00000000000f5c9b : add byte ptr [rdi], cl ; ret 0x8348
0x000000000003f7ae : add byte ptr [rdi], cl ; ret 0x8539
0x0000000000111e7b : add byte ptr [rdi], cl ; ret 0x8d48
0x000000000002e04f : add byte ptr [rdi], cl ; ret 0x8d49
0x00000000000df9fa : add byte ptr [rdi], cl ; ret 0x90c3
0x00000000000a3eae : add byte ptr [rdi], cl ; ret 0xc3f3
0x00000000000d3715 : add byte ptr [rdi], cl ; ret 0xd4e9
0x00000000000d5213 : add byte ptr [rdi], cl ; ret 0xe1e9
0x00000000000c5cee : add byte ptr [rdi], cl ; ret 0xf35b
0x00000000000d2ef4 : add byte ptr [rdi], cl ; ret 0xfc3
0x00000000001211cf : add byte ptr [rdi], cl ; sub dword ptr [rsi + 0xe], 0 ; add byte ptr [rcx + 0x29], cl ; retf
0x000000000002ee96 : add byte ptr [rdi], cl ; test byte ptr [rcx], dh ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4508
0x000000000007a727 : add byte ptr [rdi], cl ; test dword ptr [rbx + rax], ebx ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000003f616 : add byte ptr [rdi], cl ; test dword ptr [rdx], ebp ; add eax, dword ptr [rax] ; add byte ptr [rax + 0x29], cl ; retf
0x000000000007c127 : add byte ptr [rdi], cl ; test dword ptr [rsi - 0x16000002], esi ; ret 0xfffe
0x00000000000379db : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000000c645a : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd201
0x00000000000c5bf1 : add byte ptr [rdi], cl ; xchg eax, ebp ; rol byte ptr [rcx], 0xc0 ; ret
0x0000000000112408 : add byte ptr [rdi], cl ; xchg eax, edi ; ret
0x000000000004364d : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0x8949
0x0000000000125d67 : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xf40
0x0000000000040b9d : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8b44
0x0000000000022147 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9e9
0x000000000006475a : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xb60f
0x000000000004fd7e : add byte ptr [rdi], cl ; xchg edx, ebp ; adc eax, 0x83480000 ; ret 0x491e
0x000000000015f687 : add byte ptr [rdi], dl ; mov edi, esi ; call qword ptr [rax + 0x17fff78a]
0x000000000010ae9b : add byte ptr [rdx + 0x19], ch ; call qword ptr [rax]
0x0000000000140b3f : add byte ptr [rdx + 0x48028801], cl ; lea eax, dword ptr [rdx] ; ret
0x000000000013c80f : add byte ptr [rdx + 0x48028801], cl ; mov eax, edi ; ret
0x00000000000968ef : add byte ptr [rdx + 0x48178816], cl ; lea eax, dword ptr [rdi + 1] ; ret
0x00000000000bd51b : add byte ptr [rdx + 0x63], cl ; add al, 0xa2 ; add rax, rdx ; jmp rax
0x000000000018ac4b : add byte ptr [rdx + 1], al ; add al, al ; mov dh, bh ; call qword ptr [rdi]
0x000000000019286f : add byte ptr [rdx + 4], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000192c8f : add byte ptr [rdx + 6], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 5
0x00000000000eaef3 : add byte ptr [rdx + rax + 0x5d], dh ; ret
0x0000000000184c6b : add byte ptr [rdx + rax*2 + 1], ah ; add al, al ; div ebp ; call qword ptr [rdx]
0x000000000017cc53 : add byte ptr [rdx + rax*8], cl ; add byte ptr [rax - 0x59], bh ; cld ; call qword ptr [rbx]
0x000000000017649b : add byte ptr [rdx + rbx*2 + 0x13300000], dl ; out dx, eax ; call rdi
0x000000000016cbc7 : add byte ptr [rdx + rbx*2], ah ; int1 ; jmp rsp
0x000000000017e43b : add byte ptr [rdx + rbx*8], dh ; add byte ptr [rax], al ; movsd dword ptr [rdi], dword ptr [rsi] ; jmp qword ptr [rcx]
0x000000000018241b : add byte ptr [rdx + rbx], dl ; add dword ptr [rax], eax ; adc byte ptr [rdi], bh ; cmc ; call rdi
0x0000000000176943 : add byte ptr [rdx + rcx + 0x26480000], dh ; out dx, eax ; call qword ptr [rax]
0x000000000008ac13 : add byte ptr [rdx + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x00000000001520b7 : add byte ptr [rdx + rcx + 0xabf0000], bh ; add byte ptr [rax], al ; ret 0xa
0x0000000000175493 : add byte ptr [rdx + rcx*2 + 0x4de80000], cl ; in eax, dx ; call qword ptr [rdi]
0x000000000017d4a3 : add byte ptr [rdx + rcx*8 - 0x14d80000], bl ; int1 ; call qword ptr [rax]
0x000000000017d48b : add byte ptr [rdx + rcx*8 - 0x14e00000], al ; int1 ; call qword ptr [rdx]
0x000000000017d4bb : add byte ptr [rdx + rcx*8 - 0x14e00000], dh ; int1 ; call qword ptr [rdx]
0x000000000016f0c7 : add byte ptr [rdx + rcx*8 - 8], dl ; jmp rsp
0x000000000016d927 : add byte ptr [rdx + rdi*2 - 0xb], ah ; jmp rsp
0x0000000000180483 : add byte ptr [rdx + rdi*8], bh ; add byte ptr [rax], ch ; retf
0x000000000018441b : add byte ptr [rdx + rdi], dl ; add dword ptr [rax], eax ; xor al, bl ; cmc ; jmp qword ptr [rcx]
0x000000000016c287 : add byte ptr [rdx + rdx - 0x10], ah ; jmp rsp
0x0000000000185c6b : add byte ptr [rdx + rdx*2 + 1], ah ; add al, ah ; xor esi, esi ; jmp qword ptr [rcx]
0x0000000000185c83 : add byte ptr [rdx + rdx*2 + 1], bh ; add al, bh ; xor esi, esi ; jmp qword ptr [rcx]
0x000000000016db37 : add byte ptr [rdx + rdx*2 - 0xa], ah ; call rsp
0x0000000000185c0b : add byte ptr [rdx + rdx*2], al ; add dword ptr [rax], eax ; nop ; xor esi, esi ; jmp qword ptr [rcx]
0x0000000000179cab : add byte ptr [rdx + rdx*4 - 0x38300000], ah ; out dx, eax ; call qword ptr [rdx]
0x000000000016cccf : add byte ptr [rdx + rdx*4 - 0xf], dh ; call rsp
0x000000000016b847 : add byte ptr [rdx + rdx*4], dh ; in al, dx ; jmp rsp
0x00000000000b6084 : add byte ptr [rdx + rdx*8 - 0x76b76a8b], al ; ret
0x00000000001701af : add byte ptr [rdx + rdx*8], ah ; cli ; jmp rsp
0x0000000000173c9b : add byte ptr [rdx + rsi + 0x23600000], dl ; in al, dx ; jmp qword ptr [rsi]
0x0000000000183cb3 : add byte ptr [rdx + rsi - 0x3807ffff], ch ; cmc ; call qword ptr [rbx]
0x000000000017fc9b : add byte ptr [rdx + rsi*8 - 0x7c200000], dl ; call qword ptr [rdx]
0x000000000017fc0b : add byte ptr [rdx + rsi*8], al ; add byte ptr [rax], al ; mov al, 0x82 ; jmp qword ptr [rcx]
0x0000000000173c13 : add byte ptr [rdx + rsi], cl ; add byte ptr [rax], al ; clc ; and ch, ah ; call qword ptr [rcx]
0x0000000000181f2b : add byte ptr [rdx - 0x1bfffff], ah ; hlt ; call qword ptr [rbx]
0x000000000015d340 : add byte ptr [rdx - 0x65ef000d], bl ; jmp qword ptr [rax]
0x0000000000041a5f : add byte ptr [rdx - 1], bh ; mov eax, edx ; ret
0x0000000000010065 : add byte ptr [rdx], ah ; add al, al ; ret 0x39
0x000000000001001d : add byte ptr [rdx], ah ; add al, cl ; ret 0x39
0x0000000000037962 : add byte ptr [rdx], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x000000000002c116 : add byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x0000000000107746 : add byte ptr [rdx], al ; add rsp, 8 ; ret
0x00000000000f0f87 : add byte ptr [rdx], al ; call rax
0x000000000018cec0 : add byte ptr [rdx], al ; clc ; call qword ptr [rdi]
0x000000000002c024 : add byte ptr [rdx], al ; movzx eax, ax ; ret
0x0000000000183c30 : add byte ptr [rdx], al ; or dword ptr [rsi], 0x54028310 ; ret
0x00000000000025b7 : add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x0000000000009097 : add byte ptr [rdx], bl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 3
0x00000000000e627f : add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000015cd28 : add byte ptr [rdx], dh ; jmp rax
0x0000000000000764 : add byte ptr [rdx], dl ; retf
0x000000000015fa8b : add byte ptr [rip + 0x10], al ; retf 8
0x0000000000067e51 : add byte ptr [rip + 0x48000000], al ; mov eax, edx ; pop rbx ; ret
0x0000000000000450 : add byte ptr [rip + 0xc1c107c], al ; ret 0x4412
0x0000000000173f0b : add byte ptr [rsi + 0x2a100000], al ; in al, dx ; jmp qword ptr [rdx]
0x000000000008ec7f : add byte ptr [rsi + 0x44], ah ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000017f0bb : add byte ptr [rsi + 0x4f900000], dh ; jmp qword ptr [rdi]
0x00000000000f55a7 : add byte ptr [rsi + 0x80], bh ; syscall
0x00000000000b84d7 : add byte ptr [rsi + 0x81], bh ; mov eax, r12d ; syscall
0x0000000000114d77 : add byte ptr [rsi + 0xe], bh ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000125c25 : add byte ptr [rsi + 0xf], ah ; cmp ah, byte ptr [rbx - 0x35] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x00000000001442a4 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000e4d0c : add byte ptr [rsi + 0xf], ah ; push rsp ; retf
0x000000000008efac : add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000837d4 : add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x000000000009a94f : add byte ptr [rsi + 0xf], ah ; xlatb ; retf -0x7ab8
0x000000000005338f : add byte ptr [rsi + 1], bh ; jmp rax
0x000000000019418b : add byte ptr [rsi + 2], bh ; add byte ptr [rax], al ; fadd dword ptr [rbx] ; add byte ptr [rax], al ; syscall
0x0000000000191977 : add byte ptr [rsi + 6], bh ; add byte ptr [rax], al ; retf
0x00000000000daf97 : add byte ptr [rsi + 6], dh ; ret
0x000000000019108b : add byte ptr [rsi + rax - 0x215ffffe], al ; clc ; jmp rbx
0x00000000001710bb : add byte ptr [rsi + rax - 0x79100000], dh ; std ; jmp qword ptr [rdx]
0x00000000000b97bc : add byte ptr [rsi + rax*2 - 0x48], dh ; and byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000179093 : add byte ptr [rsi + rax*4 - 0x57d80000], cl ; out dx, eax ; jmp qword ptr [rsi]
0x000000000016d4b7 : add byte ptr [rsi + rax*4], ah ; hlt ; jmp rsp
0x000000000016b747 : add byte ptr [rsi + rax*4], al ; in al, dx ; call rsp
0x000000000017007f : add byte ptr [rsi + rax*8 - 6], ah ; call rsp
0x000000000019103b : add byte ptr [rsi + rax], dh ; add al, byte ptr [rax] ; adc ch, bl ; clc ; call rcx
0x000000000016f3ef : add byte ptr [rsi + rbp - 7], al ; jmp rsp
0x000000000017b8a3 : add byte ptr [rsi + rbp*4 + 0x67b80000], bl ; cli ; call qword ptr [rax]
0x000000000017094f : add byte ptr [rsi + rbp*8], al ; std ; call rsp
0x000000000016b357 : add byte ptr [rsi + rcx - 0x14], dl ; call rsp
0x000000000016cc7f : add byte ptr [rsi + rcx*4], al ; int1 ; jmp rsp
0x000000000016f5e7 : add byte ptr [rsi + rcx*4], dh ; stc ; jmp rsp
0x000000000016d2b7 : add byte ptr [rsi + rcx*8 - 0xd], dh ; jmp rsp
0x000000000017d81b : add byte ptr [rsi + rcx*8], dl ; add byte ptr [rax], al ; loopne 0x17d843 ; call qword ptr [rdx]
0x000000000017d81b : add byte ptr [rsi + rcx*8], dl ; add byte ptr [rax], al ; loopne 0x17d844 ; call qword ptr [rdx]
0x0000000000184873 : add byte ptr [rsi + rdi + 1], ch ; add byte ptr [rax - 0x1a], cl ; cmc ; jmp qword ptr [rcx]
0x000000000018485b : add byte ptr [rsi + rdi + 1], dl ; add byte ptr [rax], dh ; out 0xf5, al ; jmp qword ptr [rcx]
0x00000000001748bb : add byte ptr [rsi + rdi - 0x4d800000], dh ; cli ; jmp qword ptr [rcx]
0x00000000001908ab : add byte ptr [rsi + rdi*8 - 0x3e1fffff], ah ; clc ; call qword ptr [rbx]
0x000000000016c6c7 : add byte ptr [rsi + rdx*4 - 0x10], dh ; jmp rsp
0x000000000017e073 : add byte ptr [rsi + rdx*8], ch ; add byte ptr [rax - 0x51], bh ; cld ; jmp qword ptr [rbx]
0x000000000018203b : add byte ptr [rsi + rdx], dh ; add dword ptr [rax], eax ; sar dh, 1 ; hlt ; jmp qword ptr [rcx]
0x00000000001740bb : add byte ptr [rsi + rsi + 0x2ba00000], dh ; in al, dx ; call qword ptr [rax]
0x00000000001840ab : add byte ptr [rsi + rsi - 0x309fffff], ah ; cmc ; jmp qword ptr [rcx]
0x0000000000184093 : add byte ptr [rsi + rsi - 0x30a7ffff], cl ; cmc ; call qword ptr [rsi]
0x0000000000170467 : add byte ptr [rsi + rsi - 5], ah ; jmp rsp
0x00000000001880b3 : add byte ptr [rsi + rsi*2 + 0x7fe80001], ch ; stc ; jmp qword ptr [rsi]
0x0000000000188083 : add byte ptr [rsi + rsi*2 + 1], bh ; add al, cl ; sal dh, 1 ; jmp qword ptr [rsi]
0x000000000018800b : add byte ptr [rsi + rsi*2], al ; add dword ptr [rax], eax ; push rax ; sal dh, 1 ; jmp qword ptr [rsi]
0x000000000018803b : add byte ptr [rsi + rsi*2], dh ; add dword ptr [rax], eax ; adc al, 0xf6 ; jmp qword ptr [rsi]
0x00000000001800a3 : add byte ptr [rsi + rsi*8 - 0x6f680000], bl ; jmp qword ptr [rcx]
0x000000000018008b : add byte ptr [rsi + rsi*8 - 0x6f800000], al ; jmp qword ptr [rcx]
0x0000000000185890 : add byte ptr [rsi + rsi*8], bl ; jmp qword ptr [rcx]
0x0000000000174013 : add byte ptr [rsi + rsi], cl ; add byte ptr [rax], al ; cwde ; sub ch, ah ; call qword ptr [rsi]
0x000000000016ab70 : add byte ptr [rsi - 0x426f0004], bh ; cld ; jmp qword ptr [rax]
0x00000000000212ad : add byte ptr [rsi - 0x70], ah ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000e97dd : add byte ptr [rsi - 0x70], ah ; mov eax, 0x11f ; syscall
0x00000000000ea63d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x1e ; syscall
0x00000000000e9edd : add byte ptr [rsi - 0x70], ah ; mov eax, 0x30 ; syscall
0x00000000000e9afd : add byte ptr [rsi - 0x70], ah ; mov eax, 0x32 ; syscall
0x00000000000dd0dd : add byte ptr [rsi - 0x70], ah ; mov eax, 0x57 ; syscall
0x00000000000dd01d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x58 ; syscall
0x00000000000e904d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x87 ; syscall
0x00000000000db48d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x89 ; syscall
0x00000000000e482d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x95 ; syscall
0x00000000000e1bed : add byte ptr [rsi - 0x70], ah ; mov eax, 0x99 ; syscall
0x00000000000e911d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x9f ; syscall
0x00000000000e94dd : add byte ptr [rsi - 0x70], ah ; mov eax, 0xb4 ; syscall
0x00000000000e754d : add byte ptr [rsi - 0x70], ah ; mov eax, 0xc2 ; syscall
0x00000000000e75ad : add byte ptr [rsi - 0x70], ah ; mov eax, 0xc3 ; syscall
0x00000000000e748d : add byte ptr [rsi - 0x70], ah ; mov eax, 0xc4 ; syscall
0x00000000000e763d : add byte ptr [rsi - 0x70], ah ; mov eax, 0xc5 ; syscall
0x00000000000e938d : add byte ptr [rsi - 0x70], ah ; mov eax, 0xfe ; syscall
0x0000000000072dcd : add byte ptr [rsi - 0x70], ah ; movsxd rdi, dword ptr [rdi + 0x70] ; xor eax, eax ; syscall
0x00000000000f64cd : add byte ptr [rsi - 0x70], ah ; ret
0x000000000015d054 : add byte ptr [rsi - 0xd], bh ; jmp qword ptr [rax]
0x0000000000169f0c : add byte ptr [rsi - 5], ch ; call rax
0x000000000016a370 : add byte ptr [rsi], bh ; cld ; jmp rax
0x00000000000e0b9e : add byte ptr [rsi], dl ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x000000000018ee53 : add byte ptr [rsp + 1], cl ; add al, bl ; insd dword ptr [rdi], dx ; clc ; call qword ptr [rdx]
0x00000000000da3a9 : add byte ptr [rsp + rax - 0xd], dh ; ret
0x0000000000184e53 : add byte ptr [rsp + rax*2 + 1], cl ; add byte ptr [rax - 5], bl ; cmc ; jmp qword ptr [rdx]
0x0000000000184e8b : add byte ptr [rsp + rax*2 - 0x47fffff], al ; cmc ; call rdx
0x000000000016fd6f : add byte ptr [rsp + rax*4], ah ; cli ; jmp rsp
0x000000000016b70f : add byte ptr [rsp + rax*4], ah ; in al, dx ; call rsp
0x000000000018cebb : add byte ptr [rsp + rax*8 + 0x2000001], dh ; clc ; call qword ptr [rdi]
0x000000000016bfbf : add byte ptr [rsp + rax*8 - 0x11], ah ; call rsp
0x0000000000193f5f : add byte ptr [rsp + rax], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x000000000016d8ef : add byte ptr [rsp + rbp*2 - 0xb], al ; call rsp
0x0000000000177663 : add byte ptr [rsp + rbp*2], bl ; add byte ptr [rax + 0x4c], bh ; out dx, eax ; jmp qword ptr [rdx]
0x000000000016f6bf : add byte ptr [rsp + rbp*4 - 7], ah ; call rsp
0x000000000016cd9f : add byte ptr [rsp + rbp*8 - 0xf], ah ; jmp rsp
0x00000000000d2ea1 : add byte ptr [rsp + rbx*2 - 0xd], dh ; ret
0x000000000016c717 : add byte ptr [rsp + rbx*4 - 0x10], dh ; jmp rsp
0x000000000016e70f : add byte ptr [rsp + rbx*8 - 9], dl ; jmp rsp
0x000000000018466b : add byte ptr [rsp + rdi + 1], ah ; add byte ptr [rax], al ; fcomi st(5) ; jmp qword ptr [rsi]
0x000000000017867b : add byte ptr [rsp + rdi*2], dh ; add byte ptr [rax - 0x7a], ah ; out dx, eax ; call rsi
0x000000000016d627 : add byte ptr [rsp + rdi*4 - 0xc], dl ; jmp rsp
0x000000000016a890 : add byte ptr [rsp + rdi*8 - 0x36c6f01], dl ; jmp qword ptr [rax]
0x0000000000170497 : add byte ptr [rsp + rdi], dl ; sti ; jmp rsp
0x000000000017033f : add byte ptr [rsp + rdx - 5], dh ; jmp rsp
0x0000000000175e13 : add byte ptr [rsp + rdx*2], cl ; add byte ptr [rax], al ; sub bh, ch ; out dx, al ; jmp qword ptr [rcx]
0x000000000016f61f : add byte ptr [rsp + rdx*4], ah ; stc ; jmp rsp
0x000000000016fdbf : add byte ptr [rsp + rdx*4], dl ; cli ; jmp rsp
0x0000000000171e4b : add byte ptr [rsp + rdx], al ; add byte ptr [rax + 0x7b], al ; std ; call qword ptr [rcx]
0x000000000016eb5f : add byte ptr [rsp + rdx], dl ; clc ; call rsp
0x0000000000173eab : add byte ptr [rsp + rsi + 0x29d00000], ah ; in al, dx ; jmp qword ptr [rbx]
0x0000000000173ec3 : add byte ptr [rsp + rsi + 0x29e80000], bh ; in al, dx ; jmp qword ptr [rax]
0x0000000000183eb3 : add byte ptr [rsp + rsi - 0x33e7ffff], ch ; cmc ; jmp qword ptr [rcx]
0x000000000018fe8b : add byte ptr [rsp + rsi*8 - 0x793fffff], al ; clc ; jmp qword ptr [rcx]
0x0000000000182eab : add byte ptr [rsp - 0x79efffff], ah ; cmc ; jmp qword ptr [rcx]
0x0000000000182e93 : add byte ptr [rsp - 0x7a07ffff], cl ; cmc ; jmp qword ptr [rcx]
0x000000000016d8a7 : add byte ptr [rsp - 0xb], al ; jmp rsp
0x000000000016fc4f : add byte ptr [rsp - 6], al ; jmp rsp
0x000000000016f7e7 : add byte ptr [rsp - 7], dl ; jmp rsp
0x000000000016fa6f : add byte ptr [rsp], dl ; cli ; jmp rsp
0x000000000016c0a7 : add byte ptr [rsp], dl ; out dx, eax ; jmp rsp
0x00000000000a6ec5 : add byte ptr cs:[rax + 0x39], cl ; ret
0x00000000000b44eb : add byte ptr cs:[rax - 0x77], cl ; ret 0x9ee9
0x00000000000443c7 : add byte ptr cs:[rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000003f3aa : add byte ptr ds:[rax], al ; add byte ptr [rax - 0x77], cl ; sti ; syscall
0x00000000000e546d : add byte ptr ds:[rdi + rax - 0xd], dh ; ret
0x000000000012bfc5 : add byte ptr es:[rax + 0x39], cl ; retf -0x76b7
0x0000000000131552 : add byte ptr es:[rax + 0x39], cl ; retf -0x7cf1
0x0000000000132d9e : add byte ptr es:[rax + 0x39], cl ; retf 0x377
0x0000000000033aca : add byte ptr es:[rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000001730d5 : add byte ptr es:[rax], al ; cmp byte ptr [rdx], al ; in al, dx ; jmp qword ptr [rcx]
0x0000000000174a6c : add byte ptr fs:[rax], al ; loopne 0x174a3e ; in al, dx ; call rax
0x0000000000102653 : add byte ptr gs:[rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000c6459 : add byte ptr gs:[rdi], cl ; xchg eax, ebp ; ret 0xd201
0x00000000000c5bf0 : add byte ptr gs:[rdi], cl ; xchg eax, ebp ; rol byte ptr [rcx], 0xc0 ; ret
0x0000000000035fd5 : add byte ptr ss:[rax + 0x39], cl ; ret
0x000000000002d745 : add byte ptr ss:[rax + 1], cl ; retf -0x76b8
0x000000000003030b : add byte ptr ss:[rax - 0x77], cl ; ret
0x0000000000174015 : add byte ptr ss:[rax], al ; cwde ; sub ch, ah ; call qword ptr [rsi]
0x00000000001740d5 : add byte ptr ss:[rax], al ; cwde ; sub ebp, esp ; call qword ptr [rdx]
0x0000000000032e54 : add byte ptr ss:[rbp - 0xcf98a40], al ; ret
0x000000000002ac99 : add byte ptr ss:[rcx - 0x77], cl ; ret 0x850f
0x0000000000033c9f : add byte ptr ss:[rcx], bh ; ret 0x237f
0x00000000001730d9 : add ch, ah ; jmp qword ptr [rcx]
0x00000000001524c3 : add ch, al ; or eax, 0xdc80000 ; add byte ptr [rax], al ; retf
0x00000000000c5dc8 : add ch, al ; ret 0xfbe0
0x00000000000ff318 : add ch, al ; ret 0xfff5
0x00000000000b4b58 : add ch, al ; shr byte ptr [rbp - 0x76b7000a], cl ; ret 0x8948
0x0000000000190f20 : add ch, bl ; clc ; call qword ptr [rdi]
0x00000000000b3990 : add ch, bl ; retf
0x000000000003301b : add ch, bl ; retf -0x6f9a
0x00000000000df681 : add ch, bl ; retf -0x76b4
0x00000000000b3f9a : add ch, bl ; salc ; nop dword ptr [rax] ; mov eax, dword ptr [rdi] ; ret
0x000000000015b0fc : add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x000000000015b0fd : add ch, byte ptr [rbp + rbp*2 + 0x5b] ; ret 0x6f9
0x00000000000a8c96 : add ch, byte ptr [rcx] ; ret 0x48d
0x000000000004ab60 : add ch, byte ptr [rcx] ; retf -0x2e77
0x000000000006c20a : add ch, byte ptr [rcx] ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x00000000000fd261 : add ch, byte ptr [rdx] ; add byte ptr [rax], al ; add al, 0 ; add al, ch ; ret
0x0000000000050256 : add ch, byte ptr [rip - 0x7d000000] ; ret
0x0000000000179416 : add ch, byte ptr [rsi + rcx + 0x18] ; ret
0x00000000000269e3 : add ch, cl ; ret 0xfffe
0x000000000016d841 : add ch, dh ; call rsp
0x00000000000f6cf3 : add ch, dh ; dec dword ptr [rax - 0x7f] ; ret
0x0000000000033956 : add cl, 0xe9 ; add esi, ebx ; stosq qword ptr [rdi], rax ; ret
0x00000000001790e6 : add cl, ah ; ret
0x000000000016f2f1 : add cl, bh ; call rsp
0x000000000004cc81 : add cl, bl ; in eax, -0x21 ; loopne 0x4cc16 ; ret 0xe680
0x000000000004e983 : add cl, bl ; in eax, -0x21 ; loopne 0x4e918 ; ret 0xe680
0x000000000015a4ca : add cl, bl ; retf -0x156f
0x00000000000e50cf : add cl, bl ; retf -0x3627
0x00000000000e72c5 : add cl, byte ptr [r8 + 0x39] ; ret 0xf48
0x000000000009124c : add cl, byte ptr [r8 - 0x76b7fdbe] ; clc ; ret
0x0000000000040422 : add cl, byte ptr [r8 - 0x77] ; retf
0x0000000000038264 : add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x000000000003aa8a : add cl, byte ptr [rax + 0x29] ; ret 0x8949
0x0000000000038296 : add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x000000000005099f : add cl, byte ptr [rax + 0x29] ; retf
0x000000000009aea9 : add cl, byte ptr [rax + 0x29] ; retf -0x7ab8
0x000000000009af4d : add cl, byte ptr [rax + 0x29] ; retf 0x57e9
0x000000000009af2d : add cl, byte ptr [rax + 0x29] ; retf 0x77e9
0x00000000001038ab : add cl, byte ptr [rax + 0x39] ; ret 0x1f72
0x000000000010389d : add cl, byte ptr [rax + 0x39] ; ret 0x2d72
0x00000000000e72c6 : add cl, byte ptr [rax + 0x39] ; ret 0xf48
0x00000000000b6545 : add cl, byte ptr [rax + 0x39] ; retf
0x000000000006e31d : add cl, byte ptr [rax + 0x39] ; retf -0x78f1
0x0000000000039658 : add cl, byte ptr [rax + 0x39] ; retf -0x7df1
0x000000000004e7ad : add cl, byte ptr [rax + 0x39] ; retf 0x97e
0x0000000000129544 : add cl, byte ptr [rax + 0x77f8c50f] ; ret
0x000000000017a21d : add cl, byte ptr [rax + 0xe] ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x000000000006d5f2 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x000000000006d4e8 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x00000000000795fb : add cl, byte ptr [rax + 9] ; retf -0x76b7
0x0000000000079a5c : add cl, byte ptr [rax + 9] ; retf -0x76b8
0x00000000000a6333 : add cl, byte ptr [rax - 0x39] ; ret 0xffff
0x000000000004041f : add cl, byte ptr [rax - 0x73] ; add cl, byte ptr [r8 - 0x77] ; retf
0x00000000000a93fd : add cl, byte ptr [rax - 0x73] ; je 0xa9477 ; add byte ptr [rax + 1], cl ; ret
0x000000000009124d : add cl, byte ptr [rax - 0x76b7fdbe] ; clc ; ret
0x00000000000911b9 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000006a61f : add cl, byte ptr [rax - 0x77] ; ret
0x0000000000052679 : add cl, byte ptr [rax - 0x77] ; ret 0x51ff
0x0000000000040423 : add cl, byte ptr [rax - 0x77] ; retf
0x000000000004cef2 : add cl, byte ptr [rax - 0x77] ; retf -0x8b8
0x0000000000075be2 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x00000000000e36fe : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rsi + rsi + 0x48], 0x83 ; ret 0x4808
0x000000000007e920 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x00000000000bac49 : add cl, byte ptr [rax - 0x7d] ; ret 0xe901
0x000000000007e983 : add cl, byte ptr [rax - 0x7d] ; ret 0xe908
0x0000000000117f85 : add cl, byte ptr [rax - 0x7d] ; ret 0xf04
0x0000000000133d62 : add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000171b46 : add cl, byte ptr [rbx + 0xa] ; ret
0x00000000000656d2 : add cl, byte ptr [rcx + 0x440f48c3] ; rol dword ptr [rax], 1 ; ret
0x000000000007cc78 : add cl, byte ptr [rcx + 0xf] ; scasd eax, dword ptr [rdi] ; push rdx ; or byte ptr [rcx - 0x7d], cl ; ret 0x4820
0x00000000000b555e : add cl, byte ptr [rcx - 0x3b7cb710] ; ret
0x000000000005bee3 : add cl, byte ptr [rcx - 0x7d] ; mov byte ptr [rcx], 0xeb ; retf 0x3b48
0x000000000018aee9 : add cl, byte ptr [rdi + 0xe] ; adc byte ptr [rbx + 0xa930202], al ; ret
0x000000000002bfe4 : add cl, byte ptr [rdi] ; mov bh, 0xc0 ; ret
0x00000000000dbd07 : add cl, byte ptr [rdi] ; ret 0xfc3
0x000000000002f13a : add cl, byte ptr [rdi] ; retf -0x76bf
0x00000000000f0783 : add cl, byte ptr [rdi] ; test byte ptr [rax + rax - 0x7cb80000], bh ; ret 0x4830
0x00000000000667f3 : add cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x5389
0x0000000000125c2b : add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x0000000000040bc4 : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x5422
0x0000000000098e83 : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8444
0x00000000000fa5c7 : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8b48
0x0000000000170c3d : add cl, byte ptr [rdx + 0xe] ; sbb byte ptr [rbx + 0xa970203], al ; ret
0x00000000000004b0 : add cl, byte ptr [rdx] ; add dword ptr [rax + rax*4], ecx ; push rbx ; add al, 4 ; ret 0x6080
0x000000000017a09c : add cl, byte ptr [rsi + rcx - 0x80] ; add dword ptr [rdx], eax ; retf -0x7ff2
0x0000000000063d55 : add cl, ch ; adc eax, 0x83ffff96 ; retf
0x0000000000062d69 : add cl, ch ; add dword ptr [rsi - 0x7cb70001], esp ; ret 0xbe08
0x00000000000804be : add cl, ch ; cld ; ret
0x00000000000315c7 : add cl, ch ; imul edi, ecx, -1 ; dec dword ptr [rax - 0x7d] ; retf 0x480a
0x00000000000265cb : add cl, ch ; mov esp, 0x89fffffe ; ret 0xe283
0x000000000005cb3a : add cl, ch ; out dx, eax ; mov bh, 0xff ; dec dword ptr [rax - 0x7d] ; ret 0x4108
0x000000000005043b : add cl, ch ; ret
0x000000000005a9b0 : add cl, ch ; ret 0xffa9
0x0000000000061ca8 : add cl, ch ; ret 0xffb6
0x000000000002f66f : add cl, ch ; ret 0xfff1
0x00000000000308e0 : add cl, ch ; ret 0xfffd
0x00000000000b9a84 : add cl, ch ; retf
0x000000000002f767 : add cl, ch ; retf -0x10
0x0000000000039a0d : add cl, ch ; retf -0x1b
0x00000000000635a0 : add cl, ch ; retf -0x63
0x000000000005abf3 : add cl, ch ; retf -0xf
0x000000000008292f : add cl, ch ; retf -2
0x00000000000cb242 : add cl, ch ; retf -3
0x000000000003af93 : add cl, ch ; syscall
0x0000000000026652 : add cl, ch ; xor eax, 0x89fffffe ; ret 0xe283
0x00000000000f5e96 : add cl, cl ; ret
0x000000000015a383 : add cl, dh ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf -0x6620
0x000000000015a382 : add cl, sil ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf -0x6620
0x000000000003fadb : add dh, al ; add al, 0x10 ; add bl, dh ; ret
0x000000000015616b : add dh, al ; add eax, 0x5c80000 ; add byte ptr [rax], al ; retf 5
0x000000000008e8c7 : add dh, al ; inc dword ptr [r8] ; mov qword ptr [rdx], rcx ; ret
0x000000000015f45b : add dh, bh ; jmp rdi
0x00000000001555b7 : add dh, bh ; xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x0000000000133f13 : add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000072ddf : add dh, bl ; ret
0x000000000009838b : add dh, byte ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x00000000001120f2 : add dh, byte ptr [rbx + rcx - 0x48] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000011eb59 : add dh, byte ptr [rcx + rdx - 0x7d] ; cli ; add al, 0x74 ; jl 0x11eaee ; ret 0x8380
0x00000000000c905d : add dh, byte ptr [rcx] ; imul al ; wait ; mov dl, 0xfb ; call rcx
0x00000000000bd082 : add dh, byte ptr [rcx] ; rol byte ptr [rbx - 0x6bf0fe06], 0xc0 ; ret
0x00000000001751a9 : add dh, byte ptr [rsi + 0xa] ; ret
0x000000000017f16f : add dh, byte ptr [rsi + rcx + 0x38] ; ret
0x00000000001120f1 : add dh, byte ptr ds:[rbx + rcx - 0x48] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000076f46 : add dh, dh ; ret
0x000000000004a312 : add dh, dh ; ret 0x4801
0x00000000000e465f : add dh, dh ; ret 0x7404
0x000000000004a95f : add dh, dh ; ret 0x7450
0x0000000000147637 : add dh, dh ; ret 0x7501
0x0000000000147644 : add dh, dh ; ret 0x7502
0x0000000000147651 : add dh, dh ; ret 0x7504
0x000000000010381d : add dh, dh ; ret 0x7507
0x0000000000147609 : add dh, dh ; ret 0x7510
0x0000000000147616 : add dh, dh ; ret 0x7520
0x00000000000c5119 : add dh, dh ; ret 0x7540
0x00000000000d301a : add dh, dh ; ret 0xf01
0x000000000010c753 : add dh, dh ; ret 0xf04
0x00000000000767db : add dh, dh ; ret 0xf08
0x0000000000078a8f : add dh, dh ; ret 0xf0f
0x00000000000516d7 : add dh, dh ; ret 0xf10
0x000000000008fa52 : add dh, dh ; ret 0xf20
0x00000000000501de : add dh, dh ; ret 0xf40
0x00000000000f24f3 : add dh, dh ; test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rax]
0x00000000000f298a : add dh, dh ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp qword ptr [rax]
0x000000000019229f : add dh, dl ; add eax, 0x2a60000 ; add byte ptr [rax], al ; retf 2
0x0000000000176dc8 : add dl, byte ptr [rax + 0xa] ; ret
0x000000000017a2a5 : add dl, byte ptr [rdi + 0xe] ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00000000001911c1 : add dl, byte ptr [rsi + rcx + 0x10] ; ret
0x0000000000033c82 : add dl, byte ptr [rsi + rsi] ; ret
0x000000000017ac4d : add dl, ch ; ret
0x00000000000324bf : add dl, dh ; mulps xmm1, xmm0 ; movapd xmm0, xmm1 ; ret
0x0000000000026a9e : add dword ptr [eax], eax ; add byte ptr [rax + 0x29], cl ; retf -0x1c7d
0x0000000000098eb9 : add dword ptr [r11 + 0x5d], ebx ; pop r12 ; pop r13 ; ret
0x0000000000190832 : add dword ptr [r15], 3 ; pop rbp ; add dword ptr [rdx], ecx ; ret
0x000000000007d1f8 : add dword ptr [r8 - 0x77], ecx ; retf
0x00000000000383f2 : add dword ptr [r8 - 0x7d], ecx ; ret
0x000000000002257b : add dword ptr [r8 - 0x7d], r9d ; ret
0x0000000000184dad : add dword ptr [r8], eax ; cmp dl, 0xf5 ; jmp qword ptr [rcx]
0x0000000000184d65 : add dword ptr [r8], eax ; cmp dl, bh ; cmc ; jmp qword ptr [rcx]
0x0000000000184dc5 : add dword ptr [r8], eax ; cwde ; cli ; cmc ; jmp qword ptr [rcx]
0x0000000000184d35 : add dword ptr [r8], eax ; fdivr st(1) ; cmc ; jmp qword ptr [rcx]
0x0000000000184ddd : add dword ptr [r8], eax ; mov al, 0xfa ; cmc ; jmp qword ptr [rcx]
0x0000000000184d7d : add dword ptr [r8], eax ; push rax ; cli ; cmc ; jmp qword ptr [rcx]
0x0000000000184d1d : add dword ptr [r8], eax ; sar cl, 0xf5 ; jmp qword ptr [rcx]
0x0000000000184c05 : add dword ptr [r8], eax ; sub bh, dh ; cmc ; call qword ptr [rax]
0x0000000000089a8a : add dword ptr [r9 + 0x39], ecx ; ret 0x8949
0x00000000000c124d : add dword ptr [rax + 0x1b807], ecx ; add byte ptr [rax], al ; ret
0x0000000000140b41 : add dword ptr [rax + 0x28d4802], ecx ; ret
0x00000000000441fa : add dword ptr [rax + 0x29], ecx ; ret 0x8948
0x00000000000b8383 : add dword ptr [rax + 0x38], edi ; syscall
0x00000000000bbab7 : add dword ptr [rax + 0x3948ff50], ecx ; retf
0x0000000000041109 : add dword ptr [rax + 0x39], ecx ; ret
0x000000000004bb97 : add dword ptr [rax + 0x39], ecx ; ret 0x8d0f
0x00000000000c8d07 : add dword ptr [rax + 0x39], ecx ; ret 0xe375
0x000000000008dfcc : add dword ptr [rax + 0x39], ecx ; ret 0xe775
0x000000000004cf12 : add dword ptr [rax + 0x39], ecx ; ret 0xe875
0x000000000008df57 : add dword ptr [rax + 0x39], ecx ; ret 0xeb75
0x000000000008e701 : add dword ptr [rax + 0x39], ecx ; ret 0xeb77
0x00000000000b4665 : add dword ptr [rax + 0x39], ecx ; ret 0xed75
0x00000000000a54b7 : add dword ptr [rax + 0x39], ecx ; ret 0xee75
0x0000000000041f5b : add dword ptr [rax + 0x39], ecx ; ret 0xef75
0x000000000008d2a7 : add dword ptr [rax + 0x39], ecx ; ret 0xef77
0x00000000000a62ba : add dword ptr [rax + 0x39], ecx ; ret 0xf175
0x00000000000efc94 : add dword ptr [rax + 0x39], ecx ; retf
0x000000000006bfa3 : add dword ptr [rax + 0x39], ecx ; retf -0x108b
0x0000000000040356 : add dword ptr [rax + 0x39], ecx ; retf -0x77c0
0x00000000000e6f83 : add dword ptr [rax + 0x39], ecx ; retf -0x7bf1
0x00000000000f1c20 : add dword ptr [rax + 0x39], ecx ; retf -0xd8b
0x00000000000a6676 : add dword ptr [rax + 0x39], ecx ; retf 0x974
0x000000000004cb2d : add dword ptr [rax + 0x58b4801], ebp ; cdq ; ret 0x34
0x00000000000b2182 : add dword ptr [rax + 0x63], ecx ; fisttp dword ptr [rax + 0x39] ; ret
0x00000000000e4c71 : add dword ptr [rax + 0x63], ecx ; ret 0x8941
0x000000000002788a : add dword ptr [rax + 0x63], ecx ; retf
0x00000000000cecb7 : add dword ptr [rax + 0x63], ecx ; ror byte ptr [rax + 0x39], 1 ; retf -0xf8e
0x00000000000410c3 : add dword ptr [rax + 0x75000178], eax ; neg byte ptr [rbx - 0xd] ; ret
0x00000000000f0507 : add dword ptr [rax + 0xf], eax ; ret 0xfc3
0x000000000003c322 : add dword ptr [rax + 0xf], ecx ; fucompp ; retf
0x00000000000a81d3 : add dword ptr [rax + 1], ecx ; ret
0x00000000000200d0 : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x000000000003173e : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x00000000000c11d0 : add dword ptr [rax + 1], edi ; ret
0x00000000000799b6 : add dword ptr [rax + 9], ecx ; ret 0x8949
0x00000000000004b2 : add dword ptr [rax + rax*4], ecx ; push rbx ; add al, 4 ; ret 0x6080
0x000000000008b258 : add dword ptr [rax + rax*8 - 0x76b79c8b], eax ; clc ; ret
0x00000000000be5e8 : add dword ptr [rax + rax], eax ; or byte ptr [rax + 0xf], 0xa3 ; ret 0x830f
0x000000000010d175 : add dword ptr [rax + rcx + 0x31], esi ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000e1b0a : add dword ptr [rax + rcx], ebx ; add byte ptr [rax + 2], bh ; syscall
0x000000000017948e : add dword ptr [rax + rdi*2], 0xa ; ret
0x0000000000159f7b : add dword ptr [rax + rdx*4 + 0x16], edi ; out dx, al ; out 0x78, al ; jnp 0x159fe7 ; retf
0x00000000000fb136 : add dword ptr [rax - 0x18], edx ; ret
0x00000000000ba63e : add dword ptr [rax - 0x6bf08406], eax ; ret 0xb60f
0x000000000002d27d : add dword ptr [rax - 0x6bf0d006], eax ; ret 0xb60f
0x00000000000e72c2 : add dword ptr [rax - 0x73], ecx ; add cl, byte ptr [r8 + 0x39] ; ret 0xf48
0x000000000007bcf8 : add dword ptr [rax - 0x73], ecx ; push rcx ; clc ; cmovne rax, rdx ; ret
0x00000000000ec99d : add dword ptr [rax - 0x75], ecx ; push rsp ; retf -0x74c0
0x0000000000091226 : add dword ptr [rax - 0x776b7fe], ecx ; ret
0x000000000013c7a2 : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000008d107 : add dword ptr [rax - 0x77], ecx ; fiadd dword ptr [rbx + 0x294803e0] ; ret 0x148
0x000000000007143d : add dword ptr [rax - 0x77], ecx ; push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x0000000000080401 : add dword ptr [rax - 0x77], ecx ; ret
0x00000000000408e8 : add dword ptr [rax - 0x77], ecx ; ret 0x294c
0x0000000000118f6b : add dword ptr [rax - 0x77], ecx ; ret 0x6348
0x0000000000072f51 : add dword ptr [rax - 0x77], ecx ; ret 0x850f
0x000000000002e0cd : add dword ptr [rax - 0x77], ecx ; ret 0x8948
0x000000000003df4d : add dword ptr [rax - 0x77], ecx ; ret 0xf41
0x000000000007d1f9 : add dword ptr [rax - 0x77], ecx ; retf
0x0000000000104190 : add dword ptr [rax - 0x78], eax ; ja 0x10419b ; ret
0x0000000000116df5 : add dword ptr [rax - 0x78], eax ; je 0x116e57 ; add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x0000000000116eed : add dword ptr [rax - 0x78], eax ; je 0x116f4f ; add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x000000000014275a : add dword ptr [rax - 0x7d], ecx ; fdivr st(7) ; ret
0x00000000000207fa : add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000102e38 : add dword ptr [rax - 0x7d], ecx ; ret 0x3904
0x00000000000c5511 : add dword ptr [rax - 0x7d], ecx ; ret 0x3920
0x0000000000040104 : add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x00000000000c3e07 : add dword ptr [rax - 0x7d], ecx ; ret 0x4104
0x00000000000281d3 : add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x00000000000232c9 : add dword ptr [rax - 0x7d], ecx ; ret 0x4901
0x0000000000034989 : add dword ptr [rax - 0x7d], ecx ; ret 0x4c01
0x00000000000cf632 : add dword ptr [rax - 0x7d], ecx ; ret 0x4c10
0x00000000000b3104 : add dword ptr [rax - 0x7d], ecx ; ret 0x4c48
0x00000000000ba924 : add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00000000000230a3 : add dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x00000000000bf48a : add dword ptr [rax - 0x7d], ecx ; ret 0xeb01
0x000000000003f62e : add dword ptr [rax - 0x7f], ecx ; ret
0x0000000000030600 : add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x000000000016b7dd : add dword ptr [rax], 0 ; hlt ; mov ebp, esp ; jmp rsp
0x0000000000037b1c : add dword ptr [rax], 0x840f0000 ; ret
0x000000000016b745 : add dword ptr [rax], 0xec860400 ; call rsp
0x00000000000eb283 : add dword ptr [rax], 1 ; ret
0x000000000016d126 : add dword ptr [rax], eax ; adc al, 0x10 ; jmp rsp
0x000000000016eb5e : add dword ptr [rax], eax ; adc al, 0x14 ; clc ; call rsp
0x000000000016cf06 : add dword ptr [rax], eax ; adc al, 0x3d ; call rsp
0x000000000016ed66 : add dword ptr [rax], eax ; adc al, 0x63 ; clc ; call rsp
0x000000000018803e : add dword ptr [rax], eax ; adc al, 0xf6 ; jmp qword ptr [rsi]
0x000000000018a67e : add dword ptr [rax], eax ; adc byte ptr [rdi - 9], bl ; call qword ptr [rdi]
0x000000000018241e : add dword ptr [rax], eax ; adc byte ptr [rdi], bh ; cmc ; call rdi
0x0000000000185c9e : add dword ptr [rax], eax ; adc byte ptr [rsi + rsi*8], dh ; jmp qword ptr [rcx]
0x000000000016cc7e : add dword ptr [rax], eax ; add al, 0x8e ; int1 ; jmp rsp
0x00000000001707f6 : add dword ptr [rax], eax ; add al, 0x8f ; std ; call rsp
0x000000000016cf7e : add dword ptr [rax], eax ; add al, 0xc8 ; call rsp
0x000000000016f0ee : add dword ptr [rax], eax ; add al, 0xcd ; clc ; call rsp
0x000000000017094e : add dword ptr [rax], eax ; add al, 0xee ; std ; call rsp
0x00000000001843ee : add dword ptr [rax], eax ; add al, bl ; cmc ; jmp qword ptr [rcx]
0x000000000013e7cc : add dword ptr [rax], eax ; add bl, al ; ret
0x000000000018466e : add dword ptr [rax], eax ; add bl, bl ; cmc ; jmp qword ptr [rsi]
0x0000000000067511 : add dword ptr [rax], eax ; add bl, dh ; ret
0x00000000001841fe : add dword ptr [rax], eax ; add bl, dl ; cmc ; jmp qword ptr [rcx]
0x0000000000026a9f : add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; retf -0x1c7d
0x0000000000027891 : add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; retf -0x7cbf
0x00000000000689dd : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret
0x00000000001474e1 : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; retf -0x268b
0x00000000000b9793 : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; retf 0x2475
0x00000000000c15bb : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000065748 : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x3948
0x0000000000184a6d : add dword ptr [rax], eax ; add byte ptr [rax + rax*8], al ; retf
0x000000000011bec9 : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000786c8 : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x000000000011f50d : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x00000000000ca633 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; enter -0x72b8, 0x14 ; retf 0x17eb
0x000000000011dc3d : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; fiadd word ptr [rcx + rcx*4 - 0x40] ; syscall
0x000000000011db87 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; fiadd word ptr [rcx + rcx*4 - 8] ; syscall
0x0000000000101a1a : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; stosd dword ptr [rdi], eax ; retf
0x0000000000070e3a : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000ce226 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000b9cf1 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000026df4 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; retf -0x769a
0x0000000000083f6e : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000dfbbc : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; xor esi, esi ; syscall
0x000000000007b2d0 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000006d479 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; retf
0x000000000007b3f8 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x000000000004e4c8 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000026421 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000120eed : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000fff57 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x000000000012739f : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000120e41 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000e2764 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000003149f : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x4809
0x0000000000028429 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret 0x860f
0x000000000006b1ea : add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x000000000018e06e : add dword ptr [rax], eax ; add byte ptr [rax - 8], 0xff ; retf
0x000000000018a30e : add dword ptr [rax], eax ; add byte ptr [rax - 9], dl ; call qword ptr [rbx]
0x000000000005ca27 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x5ce8
0x000000000005b918 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x6be8
0x0000000000021181 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000001555ba : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000015476a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x0000000000154592 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000015458a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x0000000000154d22 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x00000000001545ca : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000001545c2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d4
0x0000000000154d62 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d5
0x000000000009a739 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rbp - 0x10], dh ; ret
0x000000000010d383 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000007d8f3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000da747 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x00000000001495f1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jg 0x149608 ; neg eax ; ret
0x000000000009a181 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jg 0x9a191 ; neg eax ; ret
0x00000000001463d7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jl 0x1463e8 ; neg eax ; ret
0x000000000004721e : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x00000000000b98f3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; js 0xb9907 ; ret
0x00000000000f54ee : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xca ; syscall
0x00000000000b9d7b : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xe5 ; syscall
0x00000000001104d3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000007d13e : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x0000000000048214 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov ecx, 1 ; jmp rax
0x000000000005338c : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov esi, 1 ; jmp rax
0x000000000010d849 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi + 0x20], rcx ; ret
0x0000000000043a66 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x000000000010c1ea : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000f366c : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r13 ; call 0xf00b9
0x00000000000f364e : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r15 ; call 0xf00b9
0x000000000006646c : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x00000000000660c3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000009b251 : add dword ptr [rax], eax ; add byte ptr [rax], al ; movzx eax, al ; ret
0x000000000004e7eb : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007e283 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x0000000000074f83 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000224e5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000006bb50 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000033bb0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000001fa15 : add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000000524ca : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor esi, esi ; jmp rax
0x00000000000c5d98 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x76bb008b], cl ; retf -0x76b8
0x0000000000082168 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000c9c7c : add dword ptr [rax], eax ; add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x00000000000dcbf6 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000003f187 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000010e3e9 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x39], cl ; ret
0x00000000000c163f : add dword ptr [rax], eax ; add byte ptr [rcx + 0x63], cl ; ret
0x000000000007d662 : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x1e], cl ; mov rdi, rcx ; call rax
0x000000000011d689 : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 2], cl ; mov eax, r14d ; syscall
0x000000000003aa68 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000038218 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x00000000001865ce : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; jmp qword ptr [rcx]
0x0000000000105a0e : add dword ptr [rax], eax ; add byte ptr [rcx], bh ; retf
0x00000000000a8dcb : add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x000000000018cebe : add dword ptr [rax], eax ; add byte ptr [rdx], al ; clc ; call qword ptr [rdi]
0x000000000008efaa : add dword ptr [rax], eax ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000018588e : add dword ptr [rax], eax ; add byte ptr [rsi + rsi*8], bl ; jmp qword ptr [rcx]
0x00000000000cb240 : add dword ptr [rax], eax ; add cl, ch ; retf -3
0x00000000000c40ea : add dword ptr [rax], eax ; add dh, dh ; ret
0x0000000000147635 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0x0000000000147642 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7502
0x000000000014764f : add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x0000000000147607 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000147614 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000147621 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x00000000000d3018 : add dword ptr [rax], eax ; add dh, dh ; ret 0xf01
0x000000000016ea76 : add dword ptr [rax], eax ; add eax, edi ; call rsp
0x00000000000dd685 : add dword ptr [rax], eax ; add rsi, qword ptr [r14 + 0x18] ; mov eax, ecx ; syscall
0x00000000000e3c9d : add dword ptr [rax], eax ; add rsp, 0x80 ; ret
0x000000000004f355 : add dword ptr [rax], eax ; add rsp, 0xd8 ; ret
0x000000000016f2ee : add dword ptr [rax], eax ; and al, 0 ; stc ; call rsp
0x000000000016d146 : add dword ptr [rax], eax ; and al, 0x19 ; jmp rsp
0x000000000016ed2e : add dword ptr [rax], eax ; and al, 0x55 ; clc ; call rsp
0x000000000016cbc6 : add dword ptr [rax], eax ; and al, 0x5a ; int1 ; jmp rsp
0x000000000016d4b6 : add dword ptr [rax], eax ; and al, 0x86 ; hlt ; jmp rsp
0x000000000016d4e6 : add dword ptr [rax], eax ; and al, 0x89 ; hlt ; call rsp
0x000000000016f61e : add dword ptr [rax], eax ; and al, 0x94 ; stc ; jmp rsp
0x00000000001843be : add dword ptr [rax], eax ; and bh, dl ; cmc ; jmp rdx
0x00000000001866be : add dword ptr [rax], eax ; and byte ptr [rax - 0xa], cl ; call qword ptr [rdi]
0x000000000018d32e : add dword ptr [rax], eax ; and byte ptr [rdx], cl ; clc ; jmp qword ptr [rdi]
0x0000000000189406 : add dword ptr [rax], eax ; call 0x11188b11
0x0000000000181ba6 : add dword ptr [rax], eax ; call 0x21181094
0x0000000000182056 : add dword ptr [rax], eax ; call 0x22181560
0x0000000000182fc6 : add dword ptr [rax], eax ; call 0x22182558
0x0000000000185e66 : add dword ptr [rax], eax ; call 0x221854a7
0x00000000001865b6 : add dword ptr [rax], eax ; call 0x22185c02
0x00000000001880b6 : add dword ptr [rax], eax ; call 0x27187a41
0x00000000001880e6 : add dword ptr [rax], eax ; call 0x27187a71
0x0000000000188116 : add dword ptr [rax], eax ; call 0x27187aa1
0x0000000000188146 : add dword ptr [rax], eax ; call 0x27187ad1
0x0000000000188176 : add dword ptr [rax], eax ; call 0x27187b01
0x00000000001881a6 : add dword ptr [rax], eax ; call 0x27187b31
0x000000000018e2d6 : add dword ptr [rax], eax ; clc ; call qword ptr [rbx]
0x000000000016ec9e : add dword ptr [rax], eax ; clc ; dec esp ; ret
0x000000000018a346 : add dword ptr [rax], eax ; clc ; idiv r15 ; ret
0x0000000000182e96 : add dword ptr [rax], eax ; clc ; test esi, ebp ; jmp qword ptr [rcx]
0x0000000000185a36 : add dword ptr [rax], eax ; clc ; xor esi, esi ; jmp qword ptr [rcx]
0x000000000016d8a6 : add dword ptr [rax], eax ; cmc ; jmp rsp
0x00000000000833da : add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x0000000000186296 : add dword ptr [rax], eax ; cmp al, 0xf6 ; jmp qword ptr [rcx]
0x0000000000184e8e : add dword ptr [rax], eax ; cmp bl, 0xf5 ; call rdx
0x00000000001860ee : add dword ptr [rax], eax ; cmp byte ptr [rcx], 0xf6 ; jmp qword ptr [rcx]
0x0000000000185ce6 : add dword ptr [rax], eax ; cmp byte ptr [rsi + rsi*8], dh ; jmp qword ptr [rcx]
0x0000000000184dae : add dword ptr [rax], eax ; cmp dl, 0xf5 ; jmp qword ptr [rcx]
0x0000000000184d66 : add dword ptr [rax], eax ; cmp dl, bh ; cmc ; jmp qword ptr [rcx]
0x0000000000180c76 : add dword ptr [rax], eax ; cwde ; and esp, esi ; jmp rdx
0x0000000000184dc6 : add dword ptr [rax], eax ; cwde ; cli ; cmc ; jmp qword ptr [rcx]
0x0000000000186106 : add dword ptr [rax], eax ; cwde ; cmp esi, esi ; jmp qword ptr [rcx]
0x0000000000183e56 : add dword ptr [rax], eax ; cwde ; retf
0x0000000000188056 : add dword ptr [rax], eax ; cwde ; sal dh, 1 ; jmp qword ptr [rsi]
0x0000000000188376 : add dword ptr [rax], eax ; cwde ; sbb edi, esp ; jmp qword ptr [rsi]
0x0000000000185d46 : add dword ptr [rax], eax ; cwde ; xor al, 0xf6 ; jmp qword ptr [rcx]
0x0000000000185966 : add dword ptr [rax], eax ; fcomp dword ptr [rsi + rsi*8] ; jmp qword ptr [rcx]
0x0000000000184d36 : add dword ptr [rax], eax ; fdivr st(1) ; cmc ; jmp qword ptr [rcx]
0x000000000018ea16 : add dword ptr [rax], eax ; fsub dword ptr [rbp - 8] ; call qword ptr [rbx]
0x0000000000184926 : add dword ptr [rax], eax ; fsub st(7) ; cmc ; call qword ptr [rsi]
0x000000000018ee56 : add dword ptr [rax], eax ; fsubr dword ptr [rbp - 8] ; call qword ptr [rdx]
0x0000000000188a96 : add dword ptr [rax], eax ; fsubr st(2) ; idiv bh ; retf
0x000000000016ed7e : add dword ptr [rax], eax ; hlt ; clc ; push rsp ; retf 1
0x000000000016ecfe : add dword ptr [rax], eax ; hlt ; push rdx ; clc ; jmp rsp
0x000000000016f066 : add dword ptr [rax], eax ; hlt ; ret 0xfff8
0x000000000016edc6 : add dword ptr [rax], eax ; hlt ; xchg al, bh ; call rsp
0x000000000016d7be : add dword ptr [rax], eax ; in al, -0x1f ; hlt ; jmp rsp
0x000000000017085e : add dword ptr [rax], eax ; in al, -0x43 ; std ; jmp rsp
0x000000000016cfee : add dword ptr [rax], eax ; in al, -0xf ; call rsp
0x000000000016cd9e : add dword ptr [rax], eax ; in al, dx ; int1 ; jmp rsp
0x000000000016d8ee : add dword ptr [rax], eax ; insb byte ptr [rdi], dx ; cmc ; call rsp
0x000000000016d686 : add dword ptr [rax], eax ; iretd ; hlt ; jmp rsp
0x000000000016ccce : add dword ptr [rax], eax ; je 0x16cc69 ; int1 ; call rsp
0x000000000016cf4e : add dword ptr [rax], eax ; je 0x16cfb9 ; jmp rsp
0x000000000016cf4e : add dword ptr [rax], eax ; je 0x16cfba ; jmp rsp
0x000000000016d2b6 : add dword ptr [rax], eax ; je 0x16d28d ; jmp rsp
0x000000000016ee7e : add dword ptr [rax], eax ; je 0x16ee27 ; clc ; call rsp
0x000000000016eefe : add dword ptr [rax], eax ; je 0x16eeaa ; clc ; jmp rsp
0x000000000016f086 : add dword ptr [rax], eax ; je 0x16f057 ; clc ; call rsp
0x00000000001873be : add dword ptr [rax], eax ; jl 0x1873be ; call rsi
0x00000000000410c6 : add dword ptr [rax], eax ; jne 0x410c6 ; pop rbx ; ret
0x000000000016ed9e : add dword ptr [rax], eax ; jo 0x16eda0 ; call rsp
0x0000000000181fde : add dword ptr [rax], eax ; jo 0x181fe5 ; hlt ; jmp qword ptr [rcx]
0x000000000016d926 : add dword ptr [rax], eax ; jp 0x16d925 ; jmp rsp
0x0000000000181a26 : add dword ptr [rax], eax ; js 0x1819fc ; hlt ; jmp rbx
0x0000000000183546 : add dword ptr [rax], eax ; js 0x1834e9 ; cmc ; jmp qword ptr [rcx]
0x0000000000183776 : add dword ptr [rax], eax ; js 0x183728 ; cmc ; jmp rcx
0x000000000018bb86 : add dword ptr [rax], eax ; js 0x18bbd5 ; stc ; call qword ptr [rax]
0x000000000018f106 : add dword ptr [rax], eax ; js 0x18f180 ; clc ; call qword ptr [rdx]
0x00000000001833ce : add dword ptr [rax], eax ; loopne 0x18336c ; cmc ; jmp qword ptr [rcx]
0x00000000001908ae : add dword ptr [rax], eax ; loopne 0x190878 ; clc ; call qword ptr [rbx]
0x000000000016ec86 : add dword ptr [rax], eax ; mov ah, 0x3e ; clc ; call qword ptr [rbx + rax*8]
0x000000000017097e : add dword ptr [rax], eax ; mov ah, 0xef ; std ; jmp rsp
0x000000000016cdc6 : add dword ptr [rax], eax ; mov ah, 0xf1 ; int1 ; call rsp
0x000000000018f9ae : add dword ptr [rax], eax ; mov al, 0x82 ; clc ; jmp qword ptr [rdi]
0x000000000018328e : add dword ptr [rax], eax ; mov al, 0x8d ; cmc ; jmp qword ptr [rcx]
0x000000000018339e : add dword ptr [rax], eax ; mov al, 0x95 ; cmc ; jmp qword ptr [rcx]
0x0000000000184dde : add dword ptr [rax], eax ; mov al, 0xfa ; cmc ; jmp qword ptr [rcx]
0x000000000018cd2e : add dword ptr [rax], eax ; mov al, 0xfd ; idiv edi ; retf 1
0x0000000000182b66 : add dword ptr [rax], eax ; mov byte ptr [rax - 0xb], bh ; call qword ptr [rax]
0x00000000001850d6 : add dword ptr [rax], eax ; mov byte ptr [rbx], al ; idiv bh ; retf
0x0000000000185316 : add dword ptr [rax], eax ; mov byte ptr [rsi + rsi*8], cl ; call qword ptr [rdx]
0x0000000000181ff6 : add dword ptr [rax], eax ; mov dh, bh ; hlt ; jmp qword ptr [rcx]
0x000000000008e97c : add dword ptr [rax], eax ; mov qword ptr [rdi], rdx ; ret
0x0000000000100cbc : add dword ptr [rax], eax ; mov rdi, r12 ; call rbx
0x000000000016e796 : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; fcompi st(7) ; call rsp
0x000000000016f0d6 : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; retf -8
0x00000000001846fe : add dword ptr [rax], eax ; nop ; fdivr st(5), st(0) ; jmp qword ptr [rsi]
0x000000000018591e : add dword ptr [rax], eax ; nop ; sbb al, 0xf6 ; jmp qword ptr [rcx]
0x0000000000185b0e : add dword ptr [rax], eax ; nop ; xor dh, dh ; jmp qword ptr [rcx]
0x0000000000185c0e : add dword ptr [rax], eax ; nop ; xor esi, esi ; jmp qword ptr [rcx]
0x000000000018d9d6 : add dword ptr [rax], eax ; or byte ptr [rdi], ch ; clc ; jmp rdi
0x000000000018b936 : add dword ptr [rax], eax ; out -5, eax ; jmp qword ptr [rdx]
0x0000000000184876 : add dword ptr [rax], eax ; out 0xf5, al ; jmp qword ptr [rcx]
0x000000000018d3b6 : add dword ptr [rax], eax ; pop rax ; adc edi, eax ; call qword ptr [rsi]
0x0000000000184096 : add dword ptr [rax], eax ; pop rax ; iretd ; cmc ; call qword ptr [rsi]
0x0000000000190936 : add dword ptr [rax], eax ; pop rax ; ret 0xfff8
0x0000000000181986 : add dword ptr [rax], eax ; pop rax ; retf
0x0000000000188236 : add dword ptr [rax], eax ; pop rax ; sal esi, 1 ; jmp qword ptr [rsi]
0x0000000000182b46 : add dword ptr [rax], eax ; pop rax ; sar cl, 1 ; call qword ptr [rax]
0x0000000000184e56 : add dword ptr [rax], eax ; pop rax ; sti ; cmc ; jmp qword ptr [rdx]
0x0000000000182f66 : add dword ptr [rax], eax ; pop rax ; xchg ch, dh ; jmp qword ptr [rcx]
0x000000000008e9fb : add dword ptr [rax], eax ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x000000000018e2ee : add dword ptr [rax], eax ; push rax ; clc ; call qword ptr [rsi]
0x0000000000184d7e : add dword ptr [rax], eax ; push rax ; cli ; cmc ; jmp qword ptr [rcx]
0x000000000018800e : add dword ptr [rax], eax ; push rax ; sal dh, 1 ; jmp qword ptr [rsi]
0x000000000018424e : add dword ptr [rax], eax ; push rax ; sal ebp, cl ; jmp qword ptr [rcx]
0x0000000000185cfe : add dword ptr [rax], eax ; push rax ; xor al, 0xf6 ; jmp qword ptr [rcx]
0x000000000016de3e : add dword ptr [rax], eax ; push rsp ; add esi, edi ; jmp rsp
0x000000000016e70e : add dword ptr [rax], eax ; push rsp ; fdivr st(7), st(0) ; jmp rsp
0x000000000016cb66 : add dword ptr [rax], eax ; push rsp ; push rax ; int1 ; jmp rsp
0x0000000000170886 : add dword ptr [rax], eax ; push rsp ; ret
0x000000000016f0c6 : add dword ptr [rax], eax ; push rsp ; retf -8
0x000000000007e7e2 : add dword ptr [rax], eax ; ret
0x00000000001908fe : add dword ptr [rax], eax ; ret 0xfff8
0x000000000018659e : add dword ptr [rax], eax ; rol byte ptr [rax - 0xa], 1 ; jmp qword ptr [rcx]
0x0000000000187f7e : add dword ptr [rax], eax ; ror bh, 0xf6 ; jmp qword ptr [rsi]
0x0000000000184c6e : add dword ptr [rax], eax ; sal bh, 0xf5 ; call qword ptr [rdx]
0x000000000018db2e : add dword ptr [rax], eax ; sal byte ptr [rbx], 0xf8 ; call qword ptr [rdx]
0x0000000000185b3e : add dword ptr [rax], eax ; sal byte ptr [rdx], 0xf6 ; jmp qword ptr [rcx]
0x000000000018821e : add dword ptr [rax], eax ; sal esi, 1 ; jmp qword ptr [rsi]
0x000000000016f13e : add dword ptr [rax], eax ; sar al, 1 ; call rsp
0x0000000000184d1e : add dword ptr [rax], eax ; sar cl, 0xf5 ; jmp qword ptr [rcx]
0x000000000018203e : add dword ptr [rax], eax ; sar dh, 1 ; hlt ; jmp qword ptr [rcx]
0x0000000000183eb6 : add dword ptr [rax], eax ; sbb ah, cl ; cmc ; jmp qword ptr [rcx]
0x0000000000184406 : add dword ptr [rax], eax ; sbb al, bl ; cmc ; jmp qword ptr [rcx]
0x0000000000180aae : add dword ptr [rax], eax ; sbb byte ptr [rax], 0xf4 ; call rdi
0x000000000018e246 : add dword ptr [rax], eax ; sbb byte ptr [rcx - 8], cl ; jmp qword ptr [rax]
0x00000000001858a6 : add dword ptr [rax], eax ; sbb byte ptr [rsi + rsi*8], bl ; jmp qword ptr [rcx]
0x000000000018454e : add dword ptr [rax], eax ; sbb cl, 0xf5 ; jmp rdx
0x000000000016ebde : add dword ptr [rax], eax ; sbb edi, eax ; call rsp
0x000000000018e9fe : add dword ptr [rax], eax ; shl byte ptr [rbp - 8], 1 ; call qword ptr [rcx]
0x0000000000186f5e : add dword ptr [rax], eax ; shr byte ptr [rax - 0xa], 1 ; call rsi
0x000000000016f3ee : add dword ptr [rax], eax ; stc ; jmp rsp
0x0000000000182b86 : add dword ptr [rax], eax ; sub al, dl ; stc ; call qword ptr [rax]
0x0000000000184c06 : add dword ptr [rax], eax ; sub bh, dh ; cmc ; call qword ptr [rax]
0x00000000001864f6 : add dword ptr [rax], eax ; sub byte ptr [rax - 0xa], al ; jmp qword ptr [rcx]
0x0000000000184356 : add dword ptr [rax], eax ; sub ch, dl ; cmc ; jmp qword ptr [rcx]
0x0000000000188c9e : add dword ptr [rax], eax ; sub dh, 0xf6 ; call qword ptr [rdi]
0x00000000001908e6 : add dword ptr [rax], eax ; sub dl, al ; clc ; jmp qword ptr [rcx]
0x000000000016d86e : add dword ptr [rax], eax ; sub ebp, esi ; call rsp
0x0000000000180ef6 : add dword ptr [rax], eax ; sub spl, sil ; jmp rdx
0x0000000000183576 : add dword ptr [rax], eax ; test al, 0x9a ; cmc ; jmp qword ptr [rcx]
0x000000000018d1c6 : add dword ptr [rax], eax ; test al, 6 ; clc ; jmp rsi
0x000000000016db6e : add dword ptr [rax], eax ; test byte ptr [rdx - 0xa], bl ; call rsp
0x000000000016f39e : add dword ptr [rax], eax ; test byte ptr [rsi], ah ; stc ; jmp rsp
0x0000000000182dd6 : add dword ptr [rax], eax ; test sil, bpl ; jmp qword ptr [rsi]
0x0000000000182f4e : add dword ptr [rax], eax ; xchg bpl, sil ; jmp qword ptr [rcx]
0x000000000016d83e : add dword ptr [rax], eax ; xchg eax, esp ; add ch, dh ; call rsp
0x000000000016e016 : add dword ptr [rax], eax ; xchg eax, esp ; and edi, esi ; jmp rsp
0x000000000016ceb6 : add dword ptr [rax], eax ; xchg eax, esp ; cmp edx, esi ; jmp rsp
0x000000000016da16 : add dword ptr [rax], eax ; xchg eax, esp ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cmc ; jmp rsp
0x000000000017068e : add dword ptr [rax], eax ; xchg eax, esp ; mov edi, ebx ; jmp rsp
0x000000000016e66e : add dword ptr [rax], eax ; xchg eax, esp ; ret 0xfff7
0x000000000016ee2e : add dword ptr [rax], eax ; xchg eax, esp ; sahf ; clc ; jmp rsp
0x0000000000183ece : add dword ptr [rax], eax ; xor ah, cl ; cmc ; jmp qword ptr [rcx]
0x000000000016cc06 : add dword ptr [rax], eax ; xor al, 0x79 ; int1 ; call rsp
0x000000000016f5e6 : add dword ptr [rax], eax ; xor al, 0x8e ; stc ; jmp rsp
0x000000000016d356 : add dword ptr [rax], eax ; xor al, 0xd9 ; call rsp
0x000000000018441e : add dword ptr [rax], eax ; xor al, bl ; cmc ; jmp qword ptr [rcx]
0x000000000018ddce : add dword ptr [rax], eax ; xor byte ptr [rcx], bh ; clc ; call rdx
0x000000000018485e : add dword ptr [rax], eax ; xor dh, ah ; cmc ; jmp qword ptr [rcx]
0x0000000000185aae : add dword ptr [rax], eax ; xor dh, dh ; call qword ptr [rcx]
0x000000000008eb03 : add dword ptr [rax], edi ; adc al, 7 ; je 0x8eb07 ; ret
0x00000000000cdf3c : add dword ptr [rax], edi ; retf 0x1375
0x00000000000cdecc : add dword ptr [rax], edi ; retf 0x3275
0x0000000000184e8d : add dword ptr [rax], r8d ; cmp bl, 0xf5 ; call rdx
0x00000000001850d5 : add dword ptr [rax], r8d ; mov byte ptr [rbx], al ; idiv bh ; retf
0x0000000000184e55 : add dword ptr [rax], r8d ; pop rax ; sti ; cmc ; jmp qword ptr [rdx]
0x0000000000076899 : add dword ptr [rbp + 0x21], ecx ; ret 0x8d4d
0x000000000003cc94 : add dword ptr [rbp + 0x31], eax ; in al, -0x17 ; ret
0x0000000000037a26 : add dword ptr [rbp + 0x31], eax ; rol byte ptr [rbp - 0x6af0be13], cl ; ret 0xf41
0x00000000000c791a : add dword ptr [rbp + 0x38], eax ; loope 0xc799c ; sbb byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000cdeb9 : add dword ptr [rbp + 0x38], eax ; ret
0x000000000008d1ba : add dword ptr [rbp + 0x38], eax ; retf -0x7af1
0x000000000008dc8a : add dword ptr [rbp + 0x38], eax ; retf 0x2475
0x000000000008dfc3 : add dword ptr [rbp + 0x38], eax ; retf 0x2575
0x000000000008de29 : add dword ptr [rbp + 0x38], eax ; retf 0x2675
0x000000000008d15a : add dword ptr [rbp + 0x38], eax ; retf 0x2775
0x000000000008d79c : add dword ptr [rbp + 0x38], eax ; retf 0x2d75
0x000000000008be7a : add dword ptr [rbp + 0x38], eax ; retf 0x3075
0x000000000008de7a : add dword ptr [rbp + 0x38], eax ; retf 0x6275
0x000000000008d7ef : add dword ptr [rbp + 0x38], eax ; retf 0x7175
0x000000000008c6a1 : add dword ptr [rbp + 0x40ea75d2], eax ; or byte ptr [rdi], dh ; ret
0x000000000015a4c4 : add dword ptr [rbp + 0x6c], ebx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf -0x156f
0x00000000000749f2 : add dword ptr [rbp + 0x738948c9], eax ; cmp byte ptr [rdi], cl ; ret 0x389
0x00000000000af143 : add dword ptr [rbp + 1], ecx ; ret
0x0000000000117312 : add dword ptr [rbp - 0x14], esi ; mov rax, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x000000000009a767 : add dword ptr [rbp - 0x1a], esi ; ret
0x00000000000b32c8 : add dword ptr [rbp - 0x1b], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000041f84 : add dword ptr [rbp - 0x1f], esi ; mov eax, 1 ; ret
0x000000000002e8af : add dword ptr [rbp - 0x33fa7640], eax ; ret 0x36
0x00000000000faae2 : add dword ptr [rbp - 0x6bf0fdb8], ecx ; ret 0x8b48
0x000000000007880b : add dword ptr [rbp - 0x77], ecx ; or cl, ch ; ret 0xfffc
0x000000000007bd25 : add dword ptr [rbp - 0x77], ecx ; retf 0xf44
0x0000000000058611 : add dword ptr [rbp - 0x7b], eax ; ror byte ptr [rcx + rcx*4 - 0x38], 0x74 ; retf -0x4e15
0x00000000000f7de4 : add dword ptr [rbp - 0x7b], eax ; sal byte ptr [rsi + rdx + 0x48], 0x39 ; retf -0x168b
0x00000000000e6e49 : add dword ptr [rbp - 0xc], esi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008b28c : add dword ptr [rbp - 0xf], esi ; xor edi, edi ; mov rax, rdi ; ret
0x000000000015a8aa : add dword ptr [rbp - 9], 0x8d626770 ; rcl byte ptr [rdi], cl ; retf
0x0000000000133dd2 : add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x000000000015948a : add dword ptr [rbx + 0x1e40293b], ebp ; cli ; test dl, bh ; retf -0x2081
0x000000000008bba2 : add dword ptr [rbx + 0x294803e0], eax ; ret 0x148
0x00000000000cd707 : add dword ptr [rbx + 0x294803e0], eax ; ret 0x14c
0x0000000000002726 : add dword ptr [rbx + 0x2b], 0x821055b8 ; ret 0x617e
0x0000000000056792 : add dword ptr [rbx + 0x394101e9], eax ; ret
0x0000000000098eba : add dword ptr [rbx + 0x5d], ebx ; pop r12 ; pop r13 ; ret
0x0000000000180f0e : add dword ptr [rbx + rax], 0x33 ; add dword ptr [rdx], ecx ; ret
0x00000000000f4b5c : add dword ptr [rbx + rcx*4 + 0x2c], ecx ; retf -0x76b4
0x0000000000098f04 : add dword ptr [rbx - 0x50f0fe40], eax ; ret 0xda89
0x0000000000031136 : add dword ptr [rbx - 0x7cb70030], eax ; ret
0x00000000000c20e8 : add dword ptr [rbx - 0x7cb7fe3b], eax ; ret
0x00000000000c731a : add dword ptr [rbx - 0x7cb7fe40], eax ; ret 0x4801
0x0000000000187bde : add dword ptr [rbx], 0xa ; ret
0x00000000001915bb : add dword ptr [rbx], ecx ; ret
0x0000000000191554 : add dword ptr [rbx], ecx ; retf
0x00000000001104c1 : add dword ptr [rcx + 0x1b802], ecx ; add byte ptr [rax], al ; ret
0x00000000000eb2f1 : add dword ptr [rcx + 0x1f0fc302], ecx ; add bl, dh ; ret
0x0000000000082aca : add dword ptr [rcx + 0x29], ecx ; ret
0x0000000000056795 : add dword ptr [rcx + 0x39], eax ; ret
0x00000000000c59c6 : add dword ptr [rcx + 0x39], eax ; ret 0x8e0f
0x0000000000089320 : add dword ptr [rcx + 0x39], ecx ; ret
0x0000000000082b27 : add dword ptr [rcx + 0x39], ecx ; ret 0x672
0x00000000000ab189 : add dword ptr [rcx + 0x39], ecx ; ret 0x850f
0x0000000000089a8b : add dword ptr [rcx + 0x39], ecx ; ret 0x8949
0x00000000000c146f : add dword ptr [rcx + 0x5d], eax ; pop r14 ; pop r15 ; ret
0x0000000000108cc2 : add dword ptr [rcx + 0x5d], eax ; pop r14 ; ret
0x00000000000c5ce8 : add dword ptr [rcx + 0x80e1], eax ; add byte ptr [rdi], cl ; ret 0xf35b
0x00000000001052ef : add dword ptr [rcx + 0xf], eax ; xchg eax, edi ; ret
0x00000000001173ac : add dword ptr [rcx + rbx*2 + 0x48], esi ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000009a764 : add dword ptr [rcx + rcx*4 + 1], eax ; jne 0x9a757 ; ret
0x00000000001044c4 : add dword ptr [rcx + rcx*8 + 0x6348e775], eax ; ret 0xc741
0x00000000000c2faa : add dword ptr [rcx - 0x1d], edi ; mov eax, 1 ; ret
0x0000000000040623 : add dword ptr [rcx - 0x3a], eax ; jmp qword ptr [r8]
0x00000000000fa5c3 : add dword ptr [rcx - 0x73], eax ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8b48
0x00000000000cee3a : add dword ptr [rcx - 0x75], ecx ; insd dword ptr [rdi], dx ; adc byte ptr [rax + 0x63], cl ; ret
0x0000000000078f62 : add dword ptr [rcx - 0x75], ecx ; push rax ; or dh, dh ; ret 0xf04
0x0000000000091266 : add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x000000000008d682 : add dword ptr [rcx - 0x77], ecx ; ret
0x00000000000248e1 : add dword ptr [rcx - 0x77], ecx ; ret 0x8348
0x000000000008e2fb : add dword ptr [rcx - 0x77], ecx ; ret 0x8941
0x000000000008d207 : add dword ptr [rcx - 0x77], ecx ; ret 0xb60f
0x000000000008dd1b : add dword ptr [rcx - 0x77], ecx ; ret 0xf40
0x0000000000027018 : add dword ptr [rcx - 0x77], ecx ; retf -0x7cb8
0x00000000000391cf : add dword ptr [rcx - 0x7d], eax ; call qword ptr [rax]
0x00000000001060d1 : add dword ptr [rcx - 0x7d], eax ; ret
0x000000000003df49 : add dword ptr [rcx - 0x7d], ecx ; out dx, al ; add dword ptr [rax - 0x77], ecx ; ret 0xf41
0x00000000000ae9e5 : add dword ptr [rcx - 0x7d], ecx ; ret
0x000000000010448f : add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x000000000009d199 : add dword ptr [rcx - 0x7d], ecx ; ret 0x4104
0x00000000000c5af3 : add dword ptr [rcx - 0x7d], ecx ; ret 0x4504
0x0000000000025857 : add dword ptr [rcx - 0x7d], ecx ; ret 0x4c01
0x0000000000104284 : add dword ptr [rcx - 0x7d], ecx ; ret 0x4c02
0x0000000000188bcd : add dword ptr [rcx], 0xf6ee1000 ; call qword ptr [rbx]
0x0000000000188be5 : add dword ptr [rcx], 0xf6ee1800 ; call qword ptr [rbx]
0x0000000000188bfd : add dword ptr [rcx], 0xf6ee2000 ; call qword ptr [rsi]
0x000000000009a99b : add dword ptr [rcx], eax ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000b394e : add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x000000000002aba1 : add dword ptr [rcx], eax ; ret 0x3948
0x00000000000c5c25 : add dword ptr [rcx], ebx ; rol byte ptr [rbx - 0x3f7cfd20], 8 ; ret
0x00000000000ced0e : add dword ptr [rcx], ecx ; add al, ch ; retf -0xd6
0x0000000000025faf : add dword ptr [rcx], ecx ; retf 0x3948
0x000000000004ef4c : add dword ptr [rcx], edi ; ret
0x0000000000058519 : add dword ptr [rcx], edi ; ret 0x850f
0x00000000000c7661 : add dword ptr [rcx], edi ; ret 0x8e0f
0x0000000000041cd3 : add dword ptr [rcx], edi ; ret 0xc07f
0x00000000000c248a : add dword ptr [rcx], edi ; ret 0xf17f
0x00000000000c60c0 : add dword ptr [rcx], edi ; retf -0x1481
0x000000000015a3d5 : add dword ptr [rcx], edx ; cmp eax, dword ptr [rsi] ; rcl qword ptr [r14 + 0x27], cl ; retf -0x3f02
0x000000000005662c : add dword ptr [rcx], esi ; rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x00000000001038c3 : add dword ptr [rcx], esi ; ror byte ptr [rax - 0x77], 0x37 ; ret
0x0000000000084412 : add dword ptr [rdi + 0x15], esi ; jb 0x84420 ; mov byte ptr [rdi], cl ; ret
0x00000000001181e0 : add dword ptr [rdi + 0x28], 4 ; mov eax, 1 ; ret
0x00000000001181a0 : add dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x000000000011822f : add dword ptr [rdi + 0x28], esi ; mov rax, qword ptr [rdi + 0x18] ; ret
0x000000000014a03a : add dword ptr [rdi + 3], esi ; ret
0x0000000000089d07 : add dword ptr [rdi - 0x1a], edi ; ret
0x000000000008addc : add dword ptr [rdi - 0x27], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000017ff5b : add dword ptr [rdi], 0x76 ; ret
0x0000000000190833 : add dword ptr [rdi], 3 ; pop rbp ; add dword ptr [rdx], ecx ; ret
0x000000000017268a : add dword ptr [rdi], 3 ; ret
0x000000000017e4c6 : add dword ptr [rdi], 3 ; test dword ptr [rcx], eax ; ret
0x000000000010573f : add dword ptr [rdi], ecx ; add eax, 0x48c48348 ; pop rbx ; pop rbp ; ret
0x00000000000c1a08 : add dword ptr [rdi], ecx ; lahf ; ret 0x8feb
0x000000000002c0c5 : add dword ptr [rdi], ecx ; mov bh, 0xc0 ; ret
0x00000000000d44d9 : add dword ptr [rdi], ecx ; ret
0x0000000000111958 : add dword ptr [rdi], ecx ; retf -0x37f1
0x00000000000abcda : add dword ptr [rdi], ecx ; sahf ; ret 0x2941
0x0000000000098f07 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0xda89
0x0000000000098f15 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ror dword ptr [rdi], -0x51 ; ret 0x78e9
0x000000000013e61e : add dword ptr [rdi], ecx ; test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x00000000000d3014 : add dword ptr [rdi], ecx ; test eax, ebp ; add dword ptr [rax], eax ; add dh, dh ; ret 0xf01
0x00000000000e2888 : add dword ptr [rdi], ecx ; xchg byte ptr [rcx], bl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00000000000e2828 : add dword ptr [rdi], ecx ; xchg cl, ch ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00000000001041b5 : add dword ptr [rdi], ecx ; xchg eax, esi ; ret 0x8341
0x0000000000100d19 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret
0x0000000000040d5c : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x3ce9
0x0000000000040cbe : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x9fe9
0x0000000000098de5 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xfd83
0x00000000000992e0 : add dword ptr [rdx + 0x2b], 0xd9748104 ; ret
0x0000000000091224 : add dword ptr [rdx + 0x48028801], ecx ; mov eax, edi ; ret
0x00000000000d2eef : add dword ptr [rdx + 2], edi ; cmove eax, edx ; ret
0x0000000000146c5c : add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x0000000000064df7 : add dword ptr [rdx + 4], 1 ; ret
0x0000000000064e58 : add dword ptr [rdx + 4], 1 ; xor eax, eax ; ret
0x000000000014658d : add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000002f138 : add dword ptr [rdx + rax + 0xf], esi ; retf -0x76bf
0x00000000000eb04b : add dword ptr [rdx + rax*2], 1 ; ret
0x0000000000180cd6 : add dword ptr [rdx + rax], 0x48 ; ret
0x000000000018b91e : add dword ptr [rdx + rax], 0x53 ; ret
0x000000000015a0af : add dword ptr [rdx - 0x36a5831f], esp ; retf
0x0000000000181390 : add dword ptr [rdx], 0x43 ; ret
0x0000000000174a96 : add dword ptr [rdx], 0x44 ; ret
0x000000000017c356 : add dword ptr [rdx], 0x4b ; ret
0x0000000000181387 : add dword ptr [rdx], 0x4d ; ret
0x0000000000185104 : add dword ptr [rdx], 0x53 ; ret
0x00000000001790a4 : add dword ptr [rdx], 0x54 ; ret
0x00000000001883cb : add dword ptr [rdx], 0x5b ; ret
0x0000000000174ab4 : add dword ptr [rdx], 0x60 ; ret
0x000000000018a52c : add dword ptr [rdx], 0x65 ; ret
0x00000000001850e5 : add dword ptr [rdx], 0x67 ; ret
0x000000000018579e : add dword ptr [rdx], 0x69 ; ret
0x000000000017a9e4 : add dword ptr [rdx], 0x6c ; ret
0x0000000000171b3c : add dword ptr [rdx], 0x79 ; ret
0x00000000001751a7 : add dword ptr [rdx], 2 ; jbe 0x1751bb ; ret
0x0000000000182d1c : add dword ptr [rdx], 2 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000018137d : add dword ptr [rdx], 2 ; pop rcx ; ret
0x0000000000174a7c : add dword ptr [rdx], 2 ; ret
0x000000000016f69d : add dword ptr [rdx], eax ; add byte ptr [rax + rbp*4], dl ; stc ; jmp rsp
0x000000000010428f : add dword ptr [rdx], eax ; pop rbx ; ret
0x000000000017e469 : add dword ptr [rdx], eax ; ret
0x000000000017a0a0 : add dword ptr [rdx], eax ; retf -0x7ff2
0x00000000000f13d3 : add dword ptr [rdx], ecx ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000191393 : add dword ptr [rdx], ecx ; jne 0x1913a0 ; retf
0x0000000000191616 : add dword ptr [rdx], ecx ; jne 0x191623 ; retf
0x0000000000180f12 : add dword ptr [rdx], ecx ; ret
0x000000000010428e : add dword ptr [rdx], r8d ; pop rbx ; ret
0x0000000000075f28 : add dword ptr [rip + 0x325815], 1 ; ret
0x00000000000911b5 : add dword ptr [rsi + 0xf], esp ; adc eax, dword ptr [rdx] ; mov rax, rdi ; ret
0x0000000000125f1e : add dword ptr [rsi + 0xf], esp ; cmp byte ptr [rax], al ; retf 0xf66
0x000000000017bee7 : add dword ptr [rsi + rax*4], 3 ; mov word ptr [rdx], es ; push rdx ; ret
0x0000000000067dd1 : add dword ptr [rsi + rbp + 0x48], esi ; mov eax, edx ; pop rbx ; ret
0x000000000017a2c7 : add dword ptr [rsi + rcx + 0x10], ecx ; push rcx ; ret
0x0000000000176b82 : add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x000000000017910c : add dword ptr [rsi + rcx + 0x30], ecx ; add al, byte ptr [rdi + 0xa] ; ret
0x00000000001790e2 : add dword ptr [rsi + rcx + 0x30], ecx ; add cl, ah ; ret
0x0000000000091237 : add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000005b49c : add dword ptr [rsi - 0x7cb70001], edi ; ret 0xbe08
0x0000000000062d6b : add dword ptr [rsi - 0x7cb70001], esp ; ret 0xbe08
0x000000000017dce8 : add dword ptr [rsi], 0x77 ; ret
0x0000000000178ef0 : add dword ptr [rsi], 2 ; pop rsi ; ret
0x000000000018529e : add dword ptr [rsp + rbp*2], 0xa ; ret
0x0000000000184875 : add dword ptr ds:[rax], eax ; out 0xf5, al ; jmp qword ptr [rcx]
0x000000000018485d : add dword ptr ds:[rax], eax ; xor dh, ah ; cmc ; jmp qword ptr [rcx]
0x000000000008d79b : add dword ptr ds:[rbp + 0x38], eax ; retf 0x2d75
0x000000000008d7ee : add dword ptr ds:[rbp + 0x38], eax ; retf 0x7175
0x0000000000128e37 : add dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000184c6c : add dword ptr fs:[rax], eax ; sal bh, 0xf5 ; call qword ptr [rdx]
0x00000000000c4ed5 : add dword ptr gs:[rax - 0x7d], ecx ; ret
0x0000000000186f5d : add dword ptr gs:[rax], eax ; shr byte ptr [rax - 0xa], 1 ; call rsi
0x0000000000184095 : add dword ptr ss:[rax], eax ; pop rax ; iretd ; cmc ; call qword ptr [rsi]
0x00000000000cdf3b : add dword ptr ss:[rax], edi ; retf 0x1375
0x00000000000cdecb : add dword ptr ss:[rax], edi ; retf 0x3275
0x0000000000080a8b : add eax, 0x10 ; ret
0x000000000015fa8c : add eax, 0x10 ; retf 8
0x0000000000080a3f : add eax, 0x109ac ; ret
0x000000000007e7df : add eax, 0x10fec ; ret
0x000000000002b22a : add eax, 0x1367f6 ; ret
0x00000000000203e2 : add eax, 0x141184 ; ret
0x00000000000203f2 : add eax, 0x143049 ; ret
0x00000000000833d7 : add eax, 0x15434 ; cmove rax, rdx ; ret
0x00000000000ab52e : add eax, 0x16d ; ret
0x000000000019214d : add eax, 0x1e60000 ; add byte ptr [rax], al ; ret
0x000000000017ccbc : add eax, 0x2300e55 ; ret
0x0000000000083955 : add eax, 0x26 ; ret
0x000000000011ccd5 : add eax, 0x27d716 ; call qword ptr [rax]
0x000000000011c6a8 : add eax, 0x27dd43 ; call qword ptr [rax]
0x0000000000115162 : add eax, 0x283d31 ; add rsp, 8 ; ret
0x0000000000115132 : add eax, 0x283dc9 ; add rsp, 8 ; ret
0x00000000001150d2 : add eax, 0x283ec1 ; add rsp, 8 ; ret
0x0000000000115102 : add eax, 0x283ee9 ; add rsp, 8 ; ret
0x0000000000082923 : add eax, 0x29000000 ; ret
0x00000000000abd1a : add eax, 0x2907f9c1 ; ret 0x8944
0x0000000000107d32 : add eax, 0x2912c1 ; mov rax, qword ptr fs:[rax] ; ret
0x000000000010af9a : add eax, 0x292e1d ; add rsp, 8 ; ret
0x000000000010af81 : add eax, 0x292e36 ; test eax, eax ; je 0x10af99 ; ret
0x000000000010a396 : add eax, 0x2939a5 ; add rsp, 8 ; ret
0x000000000010a366 : add eax, 0x2939d5 ; add rsp, 8 ; ret
0x000000000010a34a : add eax, 0x2939f1 ; add rsp, 8 ; ret
0x000000000010772b : add eax, 0x296334 ; test eax, eax ; je 0x107741 ; ret
0x00000000001017d2 : add eax, 0x299081 ; ret
0x0000000000100d70 : add eax, 0x299acb ; add rsp, 8 ; ret
0x00000000001922a1 : add eax, 0x2a60000 ; add byte ptr [rax], al ; retf 2
0x00000000000f5e19 : add eax, 0x2a7302 ; pop rbp ; ret
0x00000000000eb922 : add eax, 0x2ad541 ; mov eax, dword ptr [rax + 0x38] ; ret
0x00000000000e4f40 : add eax, 0x2b72db ; add rsp, 0x18 ; ret
0x00000000000e4eec : add eax, 0x2b736f ; pop rbp ; pop r12 ; ret
0x00000000000e49c8 : add eax, 0x2b7803 ; add rsp, 8 ; ret
0x00000000000e4969 : add eax, 0x2b7882 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e21b0 : add eax, 0x2b85cb ; add rsp, 8 ; ret
0x00000000000e379b : add eax, 0x2b8950 ; add rsp, 8 ; ret
0x000000000013e6a4 : add eax, 0x2c5850f ; add byte ptr [rax], al ; ret
0x00000000000a9984 : add eax, 0x2f4b4f ; add rsp, 8 ; ret
0x0000000000082745 : add eax, 0x31913e ; add rsp, 8 ; ret
0x0000000000082703 : add eax, 0x319180 ; ret
0x000000000007ae00 : add eax, 0x31e0db ; mov qword ptr [rax], rdi ; ret
0x0000000000078bb2 : add eax, 0x320211 ; xor edi, edi ; call qword ptr [rax]
0x000000000007ae11 : add eax, 0x32098e ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000075e92 : add eax, 0x324669 ; ret
0x0000000000075f96 : add eax, 0x3257a9 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000f66f2 : add eax, 0x328f9 ; ret
0x00000000000f6622 : add eax, 0x329e9 ; ret
0x00000000000f6552 : add eax, 0x32ab9 ; ret
0x00000000000f6740 : add eax, 0x357fb ; ret
0x00000000000f65a0 : add eax, 0x359bb ; ret
0x0000000000033cbc : add eax, 0x3653cb ; mov eax, edx ; ret
0x0000000000033c81 : add eax, 0x365402 ; ret
0x0000000000033c71 : add eax, 0x365416 ; ret
0x0000000000036992 : add eax, 0x367abf ; add rsp, 8 ; ret
0x000000000002bc5d : add eax, 0x36d186 ; mov qword ptr [rax], rdx ; ret
0x000000000002aec6 : add eax, 0x36fb3d ; mov eax, ecx ; syscall
0x00000000000289a2 : add eax, 0x371f29 ; ret
0x00000000000212d2 : add eax, 0x37d039 ; ret
0x00000000000212c2 : add eax, 0x37d059 ; ret
0x00000000000f6670 : add eax, 0x382bb ; ret
0x00000000000713b4 : add eax, 0x38c48348 ; ret
0x00000000000777ea : add eax, 0x39480000 ; ret
0x000000000003614c : add eax, 0x39480036 ; ret
0x000000000010d6f5 : add eax, 0x3d8d4800 ; ret 0x543
0x000000000010cdf5 : add eax, 0x3d8d4800 ; ret 0x54c
0x0000000000001e6c : add eax, 0x43cdb26c ; push rbp ; salc ; retf 0x559a
0x0000000000067e52 : add eax, 0x48000000 ; mov eax, edx ; pop rbx ; ret
0x00000000000db2d9 : add eax, 0x48000000 ; mov esi, edx ; syscall
0x0000000000140bd8 : add eax, 0x48054289 ; lea eax, dword ptr [rdx + 8] ; ret
0x000000000013c888 : add eax, 0x48054289 ; mov eax, edi ; ret
0x0000000000094596 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x0000000000020bd3 : add eax, 0x488d4800 ; and dword ptr [rax - 0x77], ecx ; ret 0x894c
0x0000000000105741 : add eax, 0x48c48348 ; pop rbx ; pop rbp ; ret
0x000000000011fba7 : add eax, 0x48fffbb2 ; add esp, 0x18 ; ret
0x00000000000805d7 : add eax, 0x49000000 ; mov esi, esp ; call 0x2c8c9
0x00000000000ffe5d : add eax, 0x4c000000 ; mov esi, esi ; call 0x2c8c9
0x00000000000f66cb : add eax, 0x50710 ; ret
0x00000000000f65fb : add eax, 0x50800 ; ret
0x00000000000f652b : add eax, 0x508d0 ; ret
0x00000000000f67d7 : add eax, 0x50ba4 ; ret
0x0000000000140c59 : add eax, 0x5428948 ; lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000013c8c9 : add eax, 0x5428948 ; mov rax, rdi ; ret
0x0000000000109b82 : add eax, 0x57e9e ; ret
0x000000000015615d : add eax, 0x5c00000 ; add byte ptr [rax], al ; ret 5
0x00000000000775f8 : add eax, 0x5c415d5b ; ret
0x0000000000001571 : add eax, 0x5c70000 ; add byte ptr [rax], al ; retf 5
0x000000000015616d : add eax, 0x5c80000 ; add byte ptr [rax], al ; retf 5
0x00000000000d704d : add eax, 0x5d000000 ; pop r12 ; ret
0x00000000000cdeb4 : add eax, 0x5eb60f45 ; add dword ptr [rbp + 0x38], eax ; ret
0x000000000002c427 : add eax, 0x640036cb ; mov qword ptr [rdx], rax ; ret
0x000000000002315a : add eax, 0x74c08500 ; xor byte ptr [rax - 0x7d], cl ; ret
0x00000000000846fb : add eax, 0x80 ; ret
0x0000000000094d9e : add eax, 0x82b850f ; add byte ptr [rax], al ; ret
0x0000000000098ddf : add eax, 0x8307e083 ; clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xfd83
0x0000000000038046 : add eax, 0x83410000 ; call qword ptr [rax]
0x00000000000dcabb : add eax, 0x83480000 ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000003b801 : add eax, 0x83480000 ; in eax, dx ; add dword ptr [rcx - 0x7d], eax ; call qword ptr [rax]
0x0000000000120add : add eax, 0x83480000 ; ret 0x4910
0x0000000000123631 : add eax, 0x83480000 ; ret 0xe910
0x0000000000120a31 : add eax, 0x83480000 ; ret 0xeb10
0x0000000000140bdb : add eax, 0x8428d48 ; ret
0x000000000002e172 : add eax, 0x89480037 ; ret
0x000000000010de0d : add eax, 0x89499000 ; retf 0x334c
0x0000000000081ce8 : add eax, 0x894d0000 ; retf
0x0000000000041a17 : add eax, 0x89fffff7 ; ret 0x3d83
0x000000000016cc7d : add eax, 0x8e040001 ; int1 ; jmp rsp
0x0000000000096442 : add eax, 0x997850f ; add byte ptr [rax], al ; ret
0x0000000000089189 : add eax, 0x9fe92 ; ret
0x0000000000115126 : add eax, 0xa0 ; add rsp, 8 ; ret
0x00000000000891d7 : add eax, 0xa2d94 ; ret
0x00000000000829cc : add eax, 0xa347f ; ret
0x000000000008263c : add eax, 0xa36df ; ret
0x00000000000844c9 : add eax, 0xa4b32 ; ret
0x0000000000083e09 : add eax, 0xa5212 ; ret
0x00000000000801cc : add eax, 0xa5a0f ; ret
0x0000000000084517 : add eax, 0xa7a34 ; ret
0x0000000000115156 : add eax, 0xa8 ; add rsp, 8 ; ret
0x000000000009a1bd : add eax, 0xa973e ; ret
0x000000000009ad79 : add eax, 0xaa842 ; ret
0x0000000000083e57 : add eax, 0xaaae4 ; ret
0x000000000009ad81 : add eax, 0xae26a ; ret
0x000000000008231f : add eax, 0xba5fc ; ret
0x000000000008458f : add eax, 0xbaf0c ; ret
0x00000000000800bf : add eax, 0xbb0ac ; ret
0x00000000000846af : add eax, 0xbc5fc ; ret
0x0000000000089162 : add eax, 0xbdca9 ; ret
0x000000000007ec2f : add eax, 0xc ; ret
0x0000000000144fda : add eax, 0xc0310000 ; ret
0x0000000000083969 : add eax, 0xc0612 ; ret
0x0000000000000451 : add eax, 0xc1c107c ; ret 0x4412
0x00000000000844a2 : add eax, 0xc2949 ; ret
0x0000000000083de2 : add eax, 0xc3029 ; ret
0x00000000000842ce : add eax, 0xc30bd ; ret
0x0000000000083971 : add eax, 0xc3f0a ; ret
0x0000000000140c5d : add eax, 0xc428d48 ; ret
0x0000000000095bdd : add eax, 0xc478d48 ; ret
0x000000000002ec7c : add eax, 0xc7834900 ; or byte ptr [rax + 1], cl ; ret
0x000000000007e9cc : add eax, 0xc8b8f ; ret
0x000000000009ad65 : add eax, 0xcbd6 ; ret
0x000000000008475e : add eax, 0xd ; ret
0x0000000000096a1d : add eax, 0xd478d48 ; ret
0x000000000009a1b5 : add eax, 0xd836 ; ret
0x0000000000190f1d : add eax, 0xdd000002 ; clc ; call qword ptr [rdi]
0x0000000000190f4d : add eax, 0xdd200002 ; clc ; call qword ptr [rbx]
0x0000000000184b65 : add eax, 0xe5040000 ; retf 0
0x0000000000080513 : add eax, 0xe8000000 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000002bef5 : add eax, 0xe8000000 ; ret 9
0x00000000000804bb : add eax, 0xe9000000 ; cld ; ret
0x000000000015e308 : add eax, 0xecfff544 ; cmc ; call qword ptr [rdi]
0x0000000000133dc3 : add eax, 0xf7f0ff3 ; ret
0x0000000000083e30 : add eax, 0xfb ; ret
0x00000000000f6719 : add eax, 0xfff8d7e2 ; ret
0x00000000000f6649 : add eax, 0xfff8d8d2 ; ret
0x00000000000f6579 : add eax, 0xfff8d9a2 ; ret
0x00000000001915b6 : add eax, 0xffff0000 ; add dword ptr [rbx], ecx ; ret
0x000000000019154f : add eax, 0xffff0000 ; add dword ptr [rbx], ecx ; retf
0x000000000019138e : add eax, 0xffff0000 ; add dword ptr [rdx], ecx ; jne 0x1913a5 ; retf
0x0000000000191611 : add eax, 0xffff0000 ; add dword ptr [rdx], ecx ; jne 0x191628 ; retf
0x00000000000891b0 : add eax, 0xffffad7b ; ret
0x00000000000844f0 : add eax, 0xfffffa1b ; ret
0x00000000000db117 : add eax, 0xffffffb4 ; cmove rax, rdx ; ret
0x000000000008eb01 : add eax, 1 ; cmp byte ptr [rdi + rax], dl ; je 0x8eb09 ; ret
0x0000000000041cd1 : add eax, 1 ; cmp edx, eax ; jg 0x41ca0 ; ret
0x00000000000eb2ef : add eax, 1 ; mov dword ptr [rdx], eax ; ret
0x00000000000eb2c3 : add eax, 1 ; mov word ptr [rdx], ax ; ret
0x0000000000021165 : add eax, 1 ; push rax ; call rbx
0x000000000008453b : add eax, 1 ; ret
0x000000000009a458 : add eax, 2 ; ret
0x000000000009a471 : add eax, 3 ; ret
0x0000000000104569 : add eax, 8 ; cmp esi, 0x7f ; cmova eax, edi ; ret
0x00000000000c5c2b : add eax, 8 ; ret
0x00000000000205c9 : add eax, dword ptr [0] ; ret
0x000000000004a95c : add eax, dword ptr [r8] ; add dh, dh ; ret 0x7450
0x0000000000099167 : add eax, dword ptr [rax + 0xf48f0e5] ; ret 0xc35b
0x000000000002504f : add eax, dword ptr [rax] ; add bh, dh ; ret 0xf800
0x000000000003f61a : add eax, dword ptr [rax] ; add byte ptr [rax + 0x29], cl ; retf
0x000000000007a72b : add eax, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000007a70d : add eax, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; retf 0x2575
0x00000000000fe160 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x2e66
0x0000000000102d18 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x0000000000120c7d : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001237d1 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000120ca1 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001111de : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000010dccb : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x00000000000eac56 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000f5b37 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; cmovne eax, edx ; ret
0x0000000000102273 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov esi, dword ptr fs:[rdx] ; syscall
0x00000000000dfa5d : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov r13d, edi ; call 0xdbd69
0x00000000000b38a7 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov r8d, dword ptr fs:[rsi] ; syscall
0x00000000000e736f : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r8 ; mov eax, esi ; syscall
0x0000000000072295 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; movsxd rdi, dword ptr [rbx + 0x70] ; syscall
0x000000000009a4b3 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000001fad6 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000121c78 : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000c82df : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x00000000000a30c2 : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x71f0e706], al ; ret
0x0000000000040775 : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x7bf0fd08], al ; retf 3
0x000000000011520f : add eax, dword ptr [rax] ; add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8e0f
0x00000000000f5505 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x000000000001fd06 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; rol dword ptr [rcx - 0x77], cl ; ret 0x8341
0x000000000003a866 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x00000000000c1d8d : add eax, dword ptr [rax] ; add byte ptr [rcx], bh ; retf
0x00000000000c1e70 : add eax, dword ptr [rax] ; add byte ptr [rcx], cl ; ret
0x00000000000f55a5 : add eax, dword ptr [rax] ; add byte ptr [rsi + 0x80], bh ; syscall
0x000000000004a95d : add eax, dword ptr [rax] ; add dh, dh ; ret 0x7450
0x00000000000b9d98 : add eax, dword ptr [rax] ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000e1c97 : add eax, dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x0000000000099120 : add eax, dword ptr [rax] ; pop rbx ; ret
0x00000000000f6555 : add eax, dword ptr [rax] ; ret
0x000000000017f8c3 : add eax, dword ptr [rbx + 0xa810204] ; ret
0x0000000000179162 : add eax, dword ptr [rbx + 0xe] ; and byte ptr [rbx + 0xa4b0204], al ; ret
0x000000000010418d : add eax, dword ptr [rbx - 0x77bffe12] ; ja 0x10419e ; ret
0x000000000013e669 : add eax, dword ptr [rbx] ; add byte ptr [rax], al ; ret
0x0000000000171f82 : add eax, dword ptr [rcx + 0xe] ; and byte ptr [rbx + 0xa410204], al ; ret
0x000000000001fed1 : add eax, dword ptr [rcx + 0xf] ; xchg eax, esp ; rol byte ptr [rcx + rcx*4 - 0x3e], 0x21 ; retf -0x7abb
0x00000000000ec38a : add eax, dword ptr [rcx + rdx] ; ret
0x00000000000e0ed0 : add eax, dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000192c50 : add eax, dword ptr [rcx] ; add byte ptr [rax], al ; ret
0x00000000000db3eb : add eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x000000000016cc05 : add eax, dword ptr [rcx] ; add byte ptr [rcx + rdi*2], dh ; int1 ; call rsp
0x00000000000319e0 : add eax, dword ptr [rdi + 0x20] ; ret
0x000000000018506a : add eax, dword ptr [rdi + 0xe] ; and byte ptr [rdx], al ; retf
0x000000000011f47f : add eax, dword ptr [rdx + 8] ; add rsp, 0x28 ; ret
0x000000000011fafa : add eax, dword ptr [rdx + 8] ; add rsp, 0x38 ; ret
0x00000000000ec166 : add eax, dword ptr [rdx + rcx] ; ret
0x000000000013e769 : add eax, dword ptr [rdx] ; add byte ptr [rax], al ; ret
0x000000000018133d : add eax, dword ptr [rsi + 0x180e4702] ; ret
0x0000000000181350 : add eax, dword ptr [rsi + 0x180e4d02] ; ret
0x0000000000177a3a : add eax, dword ptr [rsi + 0x180e6e02] ; ret
0x00000000001755f2 : add eax, dword ptr [rsi + 0xe] ; and byte ptr [rsi + rcx + 0x18], bh ; ret
0x000000000018ce92 : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rax + rdi*2], 0xa ; ret
0x0000000000187bda : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rbx], 0xa ; ret
0x0000000000180cd2 : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rdx + rax], 0x48 ; ret
0x000000000018b91a : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rdx + rax], 0x53 ; ret
0x000000000018529a : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rsp + rbp*2], 0xa ; ret
0x0000000000128c2f : add eax, dword ptr cs:[rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000004a270 : add eax, eax ; mov eax, r8d ; ret
0x00000000000c14f6 : add eax, eax ; or eax, esi ; jne 0xc1507 ; ret
0x000000000008f1c8 : add eax, eax ; ret
0x0000000000119f33 : add eax, ebp ; push rdi ; and dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000002ce77 : add eax, ebp ; ret
0x000000000005d078 : add eax, ebp ; ret 0x8ee
0x00000000000f6817 : add eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000044202 : add eax, ecx ; add rsp, 0x28 ; ret
0x0000000000044fcf : add eax, ecx ; jmp rax
0x000000000008368a : add eax, ecx ; ret
0x0000000000047219 : add eax, ecx ; xor ecx, ecx ; mov edx, 1 ; jmp rax
0x000000000008f1c5 : add eax, edi ; add rax, r8 ; ret
0x0000000000083687 : add eax, edi ; add rax, rcx ; ret
0x000000000016ea79 : add eax, edi ; call rsp
0x0000000000047d5b : add eax, edi ; jmp rax
0x000000000005333a : add eax, edi ; mov r15d, 1 ; jmp rax
0x000000000008238b : add eax, edi ; ret
0x0000000000125c3b : add eax, edi ; sub rax, r8 ; ret
0x0000000000125e90 : add eax, edi ; sub rax, rdx ; ret
0x00000000000db0bd : add eax, edx ; cmp rdi, rsi ; ja 0xdb060 ; pop rbx ; ret
0x00000000000db0ed : add eax, edx ; cmp rdi, rsi ; ja 0xdb0e8 ; ret
0x00000000000209a1 : add eax, edx ; jmp rax
0x000000000010d13e : add eax, edx ; ret
0x00000000000807e6 : add eax, edx ; sub rax, rdi ; ret
0x00000000000e1c95 : add eax, esi ; add eax, dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x00000000000485cf : add eax, esi ; jmp rax
0x00000000000484e8 : add eax, esi ; mov r8d, 1 ; jmp rax
0x00000000000a8b37 : add eax, esi ; ret
0x0000000000049f48 : add ebp, 0x30 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000017373b : add ebp, dword ptr [rbp + 0x41380e01] ; ret
0x00000000000a80b4 : add ebp, dword ptr [rcx] ; ret 0x48d
0x00000000000efb39 : add ebp, dword ptr [rdi - 0x7cb70009] ; ret
0x0000000000159017 : add ebp, ebp ; retf
0x0000000000003192 : add ebp, esi ; mov eax, 0xa1a3e95a ; ret 0xba88
0x000000000011f512 : add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x00000000000a81d5 : add ebx, eax ; mov qword ptr [rbp], rbx ; call r12
0x00000000000f4e5c : add ebx, eax ; nop ; xor eax, eax ; ret
0x00000000000e8d07 : add ebx, eax ; xor ebp, ebp ; pop rax ; pop rdi ; call rax
0x00000000000037a2 : add ebx, ebp ; in al, -0x12 ; jne 0x3788 ; ret 0x975
0x00000000000e4df1 : add ebx, ebp ; ret
0x00000000000204c8 : add ebx, ebp ; ret 0x1f0f
0x000000000006f703 : add ebx, ebp ; retf
0x000000000005bee7 : add ebx, ebp ; retf 0x3b48
0x0000000000133f83 : add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000000a79c7 : add ebx, esi ; ret
0x00000000000843f7 : add ecx, 0x40 ; cmp rdx, rcx ; jne 0x843ec ; ret
0x00000000000d9fef : add ecx, 0x50 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00000000000912ba : add ecx, dword ptr [r9 - 0x76b7fcbe] ; clc ; ret
0x0000000000077894 : add ecx, dword ptr [rax + 0x29] ; ret
0x000000000008bba5 : add ecx, dword ptr [rax + 0x29] ; ret 0x148
0x00000000000cd70a : add ecx, dword ptr [rax + 0x29] ; ret 0x14c
0x00000000000ff7e8 : add ecx, dword ptr [rax + 0x29] ; ret 0x8948
0x000000000008abff : add ecx, dword ptr [rax + 0x29] ; ret 0x8949
0x0000000000181c82 : add ecx, dword ptr [rax + 0xe] ; and byte ptr [rbx + 0xa7a0204], al ; ret
0x00000000001046dc : add ecx, dword ptr [rax - 0x68] ; shr rax, 4 ; ret
0x00000000000e2f94 : add ecx, dword ptr [rax - 0x77] ; adc bl, dh ; ret
0x000000000009aeea : add ecx, dword ptr [rax - 0x77] ; clc ; jne 0x9af04 ; ret
0x00000000000912be : add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x0000000000024963 : add ecx, dword ptr [rax - 0x77] ; ret 0x3b89
0x00000000000f2c37 : add ecx, dword ptr [rax - 0x77] ; ret 0xe883
0x0000000000132da4 : add ecx, dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], 1 ; retf -0x7eb8
0x00000000000e6d14 : add ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], cl ; ret 0xc148
0x0000000000023f9a : add ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rdi + rcx + 0x49], cl ; ret 0xc149
0x000000000004a7b5 : add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000015ff8b : add ecx, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000011f7e2 : add ecx, dword ptr [rbp - 0x88] ; call rax
0x0000000000133cf2 : add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000001119e1 : add ecx, dword ptr [rbx + 0xf042454] ; retf 0x5089
0x00000000000207f3 : add ecx, dword ptr [rbx - 0x7cb77efc] ; ret 0x4801
0x0000000000094534 : add ecx, dword ptr [rcx + 0x357890f] ; ret
0x00000000000656e3 : add ecx, dword ptr [rcx + rbp - 0x1e] ; syscall
0x00000000000f3dd0 : add ecx, dword ptr [rcx - 0x75] ; sbb byte ptr [rax + 1], r9b ; ret 0x8949
0x00000000000912bb : add ecx, dword ptr [rcx - 0x76b7fcbe] ; clc ; ret
0x00000000001060cd : add ecx, dword ptr [rcx - 0x7d] ; ret 0x4101
0x000000000005f5b2 : add ecx, dword ptr [rdi] ; test byte ptr [rbx], dh ; adc byte ptr [rax], al ; add al, ch ; retf 3
0x0000000000094d60 : add ecx, dword ptr [rdi] ; test dword ptr [rcx + 8], ebp ; add byte ptr [rax], al ; ret
0x0000000000103152 : add ecx, dword ptr [rdi] ; xchg cl, al ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000008ed05 : add ecx, eax ; jmp r9
0x000000000002ab9a : add ecx, eax ; ret 0x4809
0x000000000005b49a : add ecx, ebp ; add dword ptr [rsi - 0x7cb70001], edi ; ret 0xbe08
0x00000000000f16ff : add ecx, ebp ; ret
0x000000000003d33f : add ecx, ebp ; ret 0xfffc
0x0000000000040df3 : add ecx, ebp ; retf
0x000000000012bf8b : add ecx, ebx ; jmp r9
0x0000000000143fa2 : add ecx, ebx ; jmp rcx
0x00000000000e53d4 : add ecx, ebx ; ret
0x00000000000e50e9 : add ecx, ebx ; ret 0x3941
0x0000000000041ca4 : add ecx, esi ; cmp r9d, 0x2f ; jmp rcx
0x00000000000990f4 : add ecx, esi ; jmp rcx
0x0000000000110efd : add edi, 0x10 ; jmp rcx
0x000000000010a92f : add edi, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x000000000010c95a : add edi, 0x23b0 ; xor eax, eax ; jmp rcx
0x0000000000113494 : add edi, 0x58 ; jmp rcx
0x0000000000112bb4 : add edi, 0x68 ; jmp rcx
0x0000000000110357 : add edi, 0xc8 ; jmp rcx
0x0000000000149673 : add edi, dword ptr [rbp + 0x10] ; call rbx
0x0000000000179fba : add edi, dword ptr [rbp + 0x41380e02] ; ret
0x00000000001044d4 : add edi, eax ; mov eax, edx ; mov qword ptr [r9], rdi ; ret
0x00000000001702b9 : add edi, ebx ; call rsp
0x00000000000cf625 : add edi, ebx ; jmp rdi
0x00000000000f02bf : add edi, ecx ; dec dword ptr [rax - 0x77] ; ret
0x000000000012bf88 : add edi, edx ; add r9, r11 ; jmp r9
0x000000000003372c : add edi, esi ; ret 0
0x0000000000103e71 : add edx, 0xc ; cmp rdx, r8 ; jne 0x103e62 ; ret
0x000000000010573d : add edx, 1 ; syscall
0x000000000010451e : add edx, 2 ; mov dword ptr [r8], ecx ; mov qword ptr [r9], r10 ; ret
0x0000000000104491 : add edx, 2 ; mov dword ptr [r8], edx ; mov qword ptr [r9], r10 ; ret
0x0000000000099329 : add edx, 4 ; test r8d, r8d ; jne 0x99329 ; ret
0x00000000000fee6d : add edx, dword ptr [rbp + 6] ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x000000000008f0c8 : add edx, eax ; jl 0x8f137 ; add rax, rdi ; ret
0x000000000008f0d8 : add edx, eax ; jl 0x8f139 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000008f0f8 : add edx, eax ; jl 0x8f139 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000008f118 : add edx, eax ; jl 0x8f139 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000000aeb6d : add edx, eax ; jmp rdx
0x0000000000042e32 : add edx, eax ; mov rax, rdx ; pop rbx ; ret
0x00000000000664c0 : add edx, ecx ; jmp rdx
0x00000000000a7f65 : add edx, ecx ; mov rax, rdx ; add rsp, 0x18 ; ret
0x0000000000030ebb : add edx, edi ; jmp rdx
0x000000000005adbc : add edx, edx ; jmp 0x57033
0x00000000000311a2 : add edx, edx ; jmp rdx
0x0000000000066403 : add edx, esi ; jmp rdx
0x00000000000ced41 : add edx, esp ; jmp rdx
0x0000000000111ee5 : add esi, 0x38 ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x00000000001038c1 : add esi, 1 ; xor eax, eax ; mov qword ptr [rdi], rsi ; ret
0x00000000000c2eaf : add esi, 8 ; call 0x1f93d
0x00000000000f69d1 : add esi, dword ptr [r13 - 0x6d] ; mov rax, rdi ; ret
0x00000000000983e9 : add esi, dword ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000f69d2 : add esi, dword ptr [rbp - 0x6d] ; mov rax, rdi ; ret
0x0000000000180f10 : add esi, dword ptr [rbx] ; add dword ptr [rdx], ecx ; ret
0x0000000000114652 : add esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; cmp byte ptr [rbx + 0x5d], bl ; ret
0x0000000000036a8c : add esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000dd688 : add esi, dword ptr [rsi + 0x18] ; mov eax, ecx ; syscall
0x000000000010c682 : add esi, dword ptr [rsi + 0xb] ; mov eax, 2 ; ret
0x00000000000c2bcf : add esi, dword ptr [rsi + rax - 0xd] ; ret
0x00000000001024ce : add esi, dword ptr [rsi - 0x7d] ; ret 0x8103
0x0000000000020687 : add esi, eax ; add byte ptr [rdi], ch ; mov byte ptr [rdi], 0 ; pop rbx ; pop rbp ; ret
0x00000000000206bb : add esi, eax ; add byte ptr [rdi], ch ; mov byte ptr [rdi], 0 ; ret
0x000000000008e97a : add esi, eax ; add dword ptr [rax], eax ; mov qword ptr [rdi], rdx ; ret
0x000000000008e9f9 : add esi, eax ; add dword ptr [rax], eax ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x00000000000f16fa : add esi, eax ; and al, 0xc ; add ecx, ebp ; ret
0x0000000000040923 : add esi, eax ; jmp qword ptr [rax]
0x000000000002a58b : add esi, eax ; jmp rsi
0x0000000000117ec3 : add esi, eax ; mov qword ptr [rdi + 0x18], rsi ; ret
0x0000000000133ea3 : add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000083ee5 : add esi, ebx ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000011ed43 : add esi, ebx ; movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x000000000006c34c : add esi, ebx ; ret
0x0000000000033959 : add esi, ebx ; stosq qword ptr [rdi], rax ; ret
0x00000000001895d1 : add esi, edi ; call qword ptr [rcx]
0x00000000001463dc : add esi, edi ; fadd st(3) ; ret
0x00000000000991ff : add esi, edi ; int1 ; pop rbx ; mov eax, eax ; ret
0x000000000016de41 : add esi, edi ; jmp rsp
0x000000000012bf85 : add esi, edx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x00000000000c5cbf : add esi, esi ; ret
0x00000000000db1c3 : add esp, 0x10 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000010d2b7 : add esp, 0x10 ; mov eax, 1 ; pop rbx ; ret
0x000000000007d824 : add esp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x0000000000118436 : add esp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x00000000000714c6 : add esp, 0x10 ; movzx eax, al ; neg eax ; pop rbx ; ret
0x0000000000074771 : add esp, 0x10 ; pop rbx ; jmp rax
0x0000000000028c36 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000333ee : add esp, 0x10 ; pop rbx ; ret
0x0000000000103a72 : add esp, 0x10 ; ret
0x0000000000028c07 : add esp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a68b1 : add esp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x00000000000834cf : add esp, 0x100 ; ret
0x000000000008026d : add esp, 0x100 ; sub rax, rdx ; ret
0x0000000000064713 : add esp, 0x1000 ; pop rbx ; ret
0x0000000000064721 : add esp, 0x1000 ; xor eax, eax ; pop rbx ; ret
0x000000000003352c : add esp, 0x108 ; ret
0x00000000000dc8fe : add esp, 0x120 ; pop rbx ; ret
0x0000000000033759 : add esp, 0x140 ; pop rbx ; ret
0x0000000000032ef9 : add esp, 0x148 ; ret
0x0000000000114e12 : add esp, 0x18 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000100930 : add esp, 0x18 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000004c96d : add esp, 0x18 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x00000000000f7d2b : add esp, 0x18 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000002c872 : add esp, 0x18 ; mov rax, rdi ; ret
0x0000000000069221 : add esp, 0x18 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000064cf6 : add esp, 0x18 ; movzx eax, al ; neg eax ; ret
0x00000000001173fa : add esp, 0x18 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000001183ac : add esp, 0x18 ; movzx eax, al ; ret
0x00000000000446e7 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010b422 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r13 ; pop r14 ; ret
0x0000000000036a25 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000002c859 : add esp, 0x18 ; ret
0x0000000000041188 : add esp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000dbed7 : add esp, 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000074efd : add esp, 0x20 ; mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x0000000000074cad : add esp, 0x20 ; pop rbx ; jmp rax
0x0000000000074f36 : add esp, 0x20 ; pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x0000000000068ad4 : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006b658 : add esp, 0x20 ; pop rbx ; ret
0x0000000000111be9 : add esp, 0x20 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000dbe84 : add esp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x000000000002056e : add esp, 0x28 ; jmp rax
0x0000000000064636 : add esp, 0x28 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000002016a : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000003ed85 : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000032687 : add esp, 0x28 ; ret
0x00000000000e0875 : add esp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x000000000010225a : add esp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010a31b : add esp, 0x30 ; pop rbx ; ret
0x0000000000102289 : add esp, 0x30 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b9d9b : add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000713b6 : add esp, 0x38 ; ret
0x000000000010b350 : add esp, 0x40 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000337dc : add esp, 0x40 ; pop rbx ; ret
0x00000000000eb9e8 : add esp, 0x40 ; ret
0x000000000010b2a8 : add esp, 0x40 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e6648 : add esp, 0x408 ; ret
0x00000000000440ac : add esp, 0x440 ; pop rbx ; ret
0x00000000000dcfb2 : add esp, 0x48 ; movzx eax, al ; ret
0x000000000010dbb7 : add esp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000105743 : add esp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000000b5562 : add esp, 0x48 ; ret
0x000000000009afeb : add esp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000dbd5b : add esp, 0x50 ; ret
0x00000000000e0bab : add esp, 0x60 ; mov rax, rbx ; pop rbx ; ret
0x00000000000db7e7 : add esp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000dbd9a : add esp, 0x68 ; ret
0x0000000000114526 : add esp, 0x78 ; ret
0x000000000004e8a3 : add esp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x000000000006edb0 : add esp, 0x80 ; mov eax, edx ; ret
0x0000000000065441 : add esp, 0x80 ; mov eax, esi ; pop rbx ; ret
0x000000000003f473 : add esp, 0x80 ; pop rbx ; ret
0x0000000000064e99 : add esp, 0x80 ; ret
0x000000000003581f : add esp, 0x80 ; xor eax, eax ; pop rbx ; ret
0x00000000000335e2 : add esp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000115b05 : add esp, 0x88 ; ret
0x00000000000ea446 : add esp, 0x90 ; pop rbx ; ret
0x0000000000033d51 : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0x0000000000064762 : add esp, 0x98 ; ret
0x0000000000114274 : add esp, 0xa8 ; pop rbx ; pop rbp ; ret
0x00000000000340fd : add esp, 0xa8 ; ret
0x00000000000a8a75 : add esp, 0xd0 ; mov eax, edx ; pop rbx ; ret
0x000000000006500d : add esp, 0xd0 ; mov eax, esi ; pop rbx ; ret
0x00000000000a8ade : add esp, 0xd0 ; pop rbx ; ret
0x000000000003324a : add esp, 0xd0 ; ret
0x000000000003fc74 : add esp, 0xd8 ; ret
0x000000000008278d : add esp, 8 ; jmp rax
0x000000000010441d : add esp, 8 ; lea eax, dword ptr [rbx + rbp] ; pop rbx ; pop rbp ; ret
0x0000000000049e8f : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000069d5d : add esp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00000000000a6bf8 : add esp, 8 ; mov eax, ecx ; pop rbx ; pop rbp ; ret
0x0000000000020af8 : add esp, 8 ; mov eax, edi ; neg eax ; ret
0x000000000006708d : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000006515e : add esp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x0000000000082830 : add esp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000030354 : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000007afc9 : add esp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00000000000abc94 : add esp, 8 ; mov rax, rdx ; ret
0x0000000000035b20 : add esp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x0000000000117189 : add esp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000006bd77 : add esp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000001111a3 : add esp, 8 ; movzx eax, al ; add eax, 1 ; ret
0x00000000000e8fe6 : add esp, 8 ; movzx eax, al ; neg eax ; ret
0x000000000010da97 : add esp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000003f4a6 : add esp, 8 ; movzx eax, al ; ret
0x0000000000106e1a : add esp, 8 ; movzx eax, ax ; ret
0x000000000010d139 : add esp, 8 ; pop rbx ; pop rbp ; add eax, edx ; ret
0x000000000007b06e : add esp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000000228b9 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000212b1 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000033473 : add esp, 8 ; pop rbx ; ret
0x0000000000032c97 : add esp, 8 ; ret
0x000000000011c401 : add esp, 8 ; sar eax, 0x1f ; ret
0x00000000001184a4 : add esp, 8 ; shr eax, 0x1f ; ret
0x00000000000224d4 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000d1fbb : add esp, 8 ; xor eax, eax ; ret
0x00000000000da0aa : add esp, 8 ; xor edx, edx ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000015a70b : add esp, dword ptr [rbx + 0x74] ; or dword ptr [rdx + 2], edx ; rcr dword ptr [rcx], cl ; retf -0x4466
0x00000000000c3d32 : add esp, edi ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000230a2 : add qword ptr [r8 - 0x7d], rcx ; ret 0x8801
0x0000000000185965 : add qword ptr [r8], r8 ; fcomp dword ptr [rsi + rsi*8] ; jmp qword ptr [rcx]
0x000000000018591d : add qword ptr [r8], r8 ; nop ; sbb al, 0xf6 ; jmp qword ptr [rcx]
0x0000000000026df3 : add qword ptr [r8], rax ; add byte ptr [rax - 0x77], cl ; retf -0x769a
0x0000000000038217 : add qword ptr [r8], rax ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x000000000016d685 : add qword ptr [r8], rax ; iretd ; hlt ; jmp rsp
0x0000000000185315 : add qword ptr [r8], rax ; mov byte ptr [rsi + rsi*8], cl ; call qword ptr [rdx]
0x0000000000027890 : add qword ptr [rax], r8 ; add byte ptr [rax + 0x29], cl ; retf -0x7cbf
0x000000000018588d : add qword ptr [rax], r8 ; add byte ptr [rsi + rsi*8], bl ; jmp qword ptr [rcx]
0x00000000001858a5 : add qword ptr [rax], r8 ; sbb byte ptr [rsi + rsi*8], bl ; jmp qword ptr [rcx]
0x000000000017ff5a : add qword ptr [rdi], 0x76 ; ret
0x000000000013e61d : add qword ptr [rdi], rcx ; test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x0000000000133f82 : add r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x00000000000c2eae : add r14, 8 ; call 0x1f93e
0x0000000000133f12 : add r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000133ea2 : add r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000125860 : add r8, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000121cf4 : add r8, qword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000008ede4 : add r8b, byte ptr [r8] ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000008ed54 : add r8b, byte ptr [r8] ; mov rax, rdi ; ret
0x00000000001701ad : add r8b, byte ptr [rax] ; and al, 0xd2 ; cli ; jmp rsp
0x000000000004a26f : add r8d, eax ; mov eax, r8d ; ret
0x000000000011f7e1 : add r9, qword ptr [rbp - 0x88] ; call rax
0x000000000012bf8a : add r9, r11 ; jmp r9
0x000000000008ed04 : add r9, rax ; jmp r9
0x000000000015a4c9 : add r9b, bl ; retf -0x156f
0x000000000010389c : add r9b, byte ptr [rax + 0x39] ; ret 0x2d72
0x00000000000c67df : add r9b, r13b ; ret
0x0000000000184b64 : add rax, -0x1afc0000 ; retf 0
0x0000000000128a12 : add rax, -0x7cb80000 ; ret 0xe910
0x000000000013e6a3 : add rax, 0x2c5850f ; add byte ptr [rax], al ; ret
0x0000000000041cd0 : add rax, 1 ; cmp edx, eax ; jg 0x41ca1 ; ret
0x000000000009a460 : add rax, 1 ; ret
0x000000000009a457 : add rax, 2 ; ret
0x000000000009a470 : add rax, 3 ; ret
0x00000000000205c8 : add rax, qword ptr [0] ; ret
0x00000000000319df : add rax, qword ptr [rdi + 0x20] ; ret
0x000000000011f47e : add rax, qword ptr [rdx + 8] ; add rsp, 0x28 ; ret
0x000000000011faf9 : add rax, qword ptr [rdx + 8] ; add rsp, 0x38 ; ret
0x00000000000205c7 : add rax, qword ptr fs:[0] ; ret
0x000000000008ec4f : add rax, r10 ; jmp rax
0x000000000007c097 : add rax, r14 ; jmp rax
0x000000000008f1c7 : add rax, r8 ; ret
0x0000000000044201 : add rax, r9 ; add rsp, 0x28 ; ret
0x00000000000f6816 : add rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000044fce : add rax, rcx ; jmp rax
0x0000000000083689 : add rax, rcx ; ret
0x000000000008f1c4 : add rax, rdi ; add rax, r8 ; ret
0x0000000000083686 : add rax, rdi ; add rax, rcx ; ret
0x0000000000047d5a : add rax, rdi ; jmp rax
0x0000000000053339 : add rax, rdi ; mov r15d, 1 ; jmp rax
0x000000000008238a : add rax, rdi ; ret
0x0000000000125c3a : add rax, rdi ; sub rax, r8 ; ret
0x0000000000125e8f : add rax, rdi ; sub rax, rdx ; ret
0x00000000000209a0 : add rax, rdx ; jmp rax
0x00000000000807e5 : add rax, rdx ; sub rax, rdi ; ret
0x00000000000485ce : add rax, rsi ; jmp rax
0x00000000000484e7 : add rax, rsi ; mov r8d, 1 ; jmp rax
0x00000000000a81d4 : add rbx, rax ; mov qword ptr [rbp], rbx ; call r12
0x0000000000143fa1 : add rcx, r11 ; jmp rcx
0x0000000000041ca3 : add rcx, rsi ; cmp r9d, 0x2f ; jmp rcx
0x00000000000990f3 : add rcx, rsi ; jmp rcx
0x0000000000110efc : add rdi, 0x10 ; jmp rcx
0x000000000010a92e : add rdi, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x000000000010c959 : add rdi, 0x23b0 ; xor eax, eax ; jmp rcx
0x0000000000113493 : add rdi, 0x58 ; jmp rcx
0x0000000000112bb3 : add rdi, 0x68 ; jmp rcx
0x0000000000110356 : add rdi, 0xc8 ; jmp rcx
0x0000000000149672 : add rdi, qword ptr [r13 + 0x10] ; call rbx
0x00000000001044d3 : add rdi, rax ; mov eax, edx ; mov qword ptr [r9], rdi ; ret
0x00000000000cf624 : add rdi, rbx ; jmp rdi
0x000000000012bf87 : add rdi, rdx ; add r9, r11 ; jmp r9
0x000000000010573c : add rdx, 1 ; syscall
0x00000000000311a1 : add rdx, r10 ; jmp rdx
0x00000000000ced40 : add rdx, r12 ; jmp rdx
0x00000000000aeb6c : add rdx, r8 ; jmp rdx
0x0000000000042e31 : add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x000000000008f0c7 : add rdx, rax ; jl 0x8f138 ; add rax, rdi ; ret
0x000000000008f0c6 : add rdx, rax ; jl 0x8f139 ; add rax, rdi ; ret
0x00000000000664bf : add rdx, rcx ; jmp rdx
0x0000000000030eba : add rdx, rdi ; jmp rdx
0x000000000005adbb : add rdx, rdx ; jmp 0x57034
0x0000000000066402 : add rdx, rsi ; jmp rdx
0x0000000000111ee4 : add rsi, 0x38 ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x00000000001038c0 : add rsi, 1 ; xor eax, eax ; mov qword ptr [rdi], rsi ; ret
0x00000000000dd687 : add rsi, qword ptr [r14 + 0x18] ; mov eax, ecx ; syscall
0x000000000002a58a : add rsi, r8 ; jmp rsi
0x0000000000117ec2 : add rsi, rax ; mov qword ptr [rdi + 0x18], rsi ; ret
0x000000000007d823 : add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x0000000000118435 : add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x0000000000074770 : add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000028c35 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000333ed : add rsp, 0x10 ; pop rbx ; ret
0x0000000000103a71 : add rsp, 0x10 ; ret
0x00000000000a68b0 : add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x00000000000834ce : add rsp, 0x100 ; ret
0x0000000000064712 : add rsp, 0x1000 ; pop rbx ; ret
0x000000000003352b : add rsp, 0x108 ; ret
0x00000000000dc8fd : add rsp, 0x120 ; pop rbx ; ret
0x0000000000033758 : add rsp, 0x140 ; pop rbx ; ret
0x0000000000032ef8 : add rsp, 0x148 ; ret
0x0000000000114e11 : add rsp, 0x18 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000010092f : add rsp, 0x18 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000004c96c : add rsp, 0x18 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x00000000000f7d2a : add rsp, 0x18 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000002c871 : add rsp, 0x18 ; mov rax, rdi ; ret
0x0000000000069220 : add rsp, 0x18 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000064cf5 : add rsp, 0x18 ; movzx eax, al ; neg eax ; ret
0x00000000001173f9 : add rsp, 0x18 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000001183ab : add rsp, 0x18 ; movzx eax, al ; ret
0x0000000000036a24 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000002c858 : add rsp, 0x18 ; ret
0x0000000000041187 : add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000074efc : add rsp, 0x20 ; mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x0000000000074cac : add rsp, 0x20 ; pop rbx ; jmp rax
0x0000000000074f35 : add rsp, 0x20 ; pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x0000000000068ad3 : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006b657 : add rsp, 0x20 ; pop rbx ; ret
0x00000000000dbe83 : add rsp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x000000000002056d : add rsp, 0x28 ; jmp rax
0x0000000000064635 : add rsp, 0x28 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000003ed84 : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000032686 : add rsp, 0x28 ; ret
0x00000000000e0874 : add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x0000000000102259 : add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010a31a : add rsp, 0x30 ; pop rbx ; ret
0x00000000000b9d9a : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000713b5 : add rsp, 0x38 ; ret
0x000000000010b34f : add rsp, 0x40 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000337db : add rsp, 0x40 ; pop rbx ; ret
0x00000000000eb9e7 : add rsp, 0x40 ; ret
0x00000000000e6647 : add rsp, 0x408 ; ret
0x00000000000440ab : add rsp, 0x440 ; pop rbx ; ret
0x00000000000dcfb1 : add rsp, 0x48 ; movzx eax, al ; ret
0x0000000000105742 : add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000000b5561 : add rsp, 0x48 ; ret
0x000000000009afea : add rsp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000dbd5a : add rsp, 0x50 ; ret
0x00000000000e0baa : add rsp, 0x60 ; mov rax, rbx ; pop rbx ; ret
0x00000000000db7e6 : add rsp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000dbd99 : add rsp, 0x68 ; ret
0x0000000000114525 : add rsp, 0x78 ; ret
0x000000000006edaf : add rsp, 0x80 ; mov eax, edx ; ret
0x000000000003f472 : add rsp, 0x80 ; pop rbx ; ret
0x0000000000064e98 : add rsp, 0x80 ; ret
0x00000000000335e1 : add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000115b04 : add rsp, 0x88 ; ret
0x00000000000ea445 : add rsp, 0x90 ; pop rbx ; ret
0x0000000000033d50 : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x0000000000064761 : add rsp, 0x98 ; ret
0x0000000000114273 : add rsp, 0xa8 ; pop rbx ; pop rbp ; ret
0x00000000000340fc : add rsp, 0xa8 ; ret
0x00000000000a8add : add rsp, 0xd0 ; pop rbx ; ret
0x0000000000033249 : add rsp, 0xd0 ; ret
0x000000000003fc73 : add rsp, 0xd8 ; ret
0x000000000008278c : add rsp, 8 ; jmp rax
0x000000000010441c : add rsp, 8 ; lea eax, dword ptr [rbx + rbp] ; pop rbx ; pop rbp ; ret
0x0000000000049e8e : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000069d5c : add rsp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00000000000a6bf7 : add rsp, 8 ; mov eax, ecx ; pop rbx ; pop rbp ; ret
0x0000000000020af7 : add rsp, 8 ; mov eax, edi ; neg eax ; ret
0x000000000006708c : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000006515d : add rsp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000008282f : add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000030353 : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000007afc8 : add rsp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00000000000abc93 : add rsp, 8 ; mov rax, rdx ; ret
0x0000000000035b1f : add rsp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x0000000000117188 : add rsp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000006bd76 : add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000000e8fe5 : add rsp, 8 ; movzx eax, al ; neg eax ; ret
0x000000000010da96 : add rsp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000003f4a5 : add rsp, 8 ; movzx eax, al ; ret
0x0000000000106e19 : add rsp, 8 ; movzx eax, ax ; ret
0x000000000010d138 : add rsp, 8 ; pop rbx ; pop rbp ; add eax, edx ; ret
0x000000000007b06d : add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000000212b0 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000033472 : add rsp, 8 ; pop rbx ; ret
0x0000000000032c96 : add rsp, 8 ; ret
0x000000000011c400 : add rsp, 8 ; sar eax, 0x1f ; ret
0x00000000001184a3 : add rsp, 8 ; shr eax, 0x1f ; ret
0x00000000000224d3 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000d1fba : add rsp, 8 ; xor eax, eax ; ret
0x00000000000516d6 : add sil, sil ; ret 0xf10
0x00000000000eb2db : add word ptr [rax], 1 ; ret
0x00000000000eb04a : add word ptr [rdx + rax*2], 1 ; ret
0x00000000000325e3 : addps xmm0, xmm0 ; mov dword ptr [rdi], ecx ; ret
0x000000000003264b : addps xmm0, xmm0 ; ret
0x00000000000325e2 : addsd xmm0, xmm0 ; mov dword ptr [rdi], ecx ; ret
0x000000000003264a : addsd xmm0, xmm0 ; ret
0x0000000000032930 : addss xmm0, xmm0 ; ret
0x000000000016a425 : and ah, bh ; call rax
0x0000000000175320 : and ah, dh ; in al, dx ; jmp rcx
0x00000000000c9e40 : and al, 0 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000190a2c : and al, 0 ; add al, byte ptr [rax] ; nop ; ret
0x0000000000091a71 : and al, 0 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00000000000d664a : and al, 0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000000a298 : and al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x0000000000037913 : and al, 0 ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000190a28 : and al, 0 ; add byte ptr [rax], al ; and al, 0 ; add al, byte ptr [rax] ; nop ; ret
0x0000000000190a00 : and al, 0 ; add byte ptr [rax], al ; cld ; inc dword ptr [rcx] ; add byte ptr [rax], bl ; ret
0x000000000018cdf0 : and al, 0 ; add byte ptr [rax], al ; in al, dx ; ret
0x000000000017e970 : and al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; fild word ptr [rax] ; add al, ch ; retf
0x00000000000ab441 : and al, 0 ; add byte ptr [rax], al ; syscall
0x0000000000086c25 : and al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000008ac12 : and al, 0 ; je 0x8ac29 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000016f2f0 : and al, 0 ; stc ; call rsp
0x00000000000c2e72 : and al, 0x10 ; call 0x1f93c
0x00000000000789c1 : and al, 0x10 ; call qword ptr [rax]
0x000000000011ee40 : and al, 0x10 ; call rax
0x0000000000032a87 : and al, 0x10 ; fld xword ptr [rsp + 8] ; ret
0x000000000008eca2 : and al, 0x10 ; mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000f0f82 : and al, 0x10 ; mov edi, 0x2000004 ; call rax
0x0000000000078b89 : and al, 0x10 ; mov qword ptr [rsp + 8], r8 ; call rdx
0x00000000000e59cc : and al, 0x10 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000006e446 : and al, 0x10 ; mov rdi, r12 ; call rbx
0x000000000010a9fa : and al, 0x10 ; mov rdi, rbp ; call r14
0x00000000000f0e7e : and al, 0x10 ; mov rsi, qword ptr [rsp + 8] ; call rax
0x0000000000077626 : and al, 0x10 ; pop r12 ; ret
0x000000000011f42b : and al, 0x18 ; add rsp, 0x20 ; pop rbx ; ret
0x000000000007b06b : and al, 0x18 ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000000f38c8 : and al, 0x18 ; call 0x6fae4
0x00000000000f38c7 : and al, 0x18 ; call 0x6fae5
0x0000000000078793 : and al, 0x18 ; call qword ptr [rax]
0x00000000000202dd : and al, 0x18 ; call rax
0x0000000000078b07 : and al, 0x18 ; call rcx
0x000000000008ec60 : and al, 0x18 ; mov dword ptr [rdi + 4], eax ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000dc592 : and al, 0x18 ; mov eax, 3 ; syscall
0x00000000000210e0 : and al, 0x18 ; mov r9, r14 ; call rbx
0x00000000000a858c : and al, 0x18 ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000006e522 : and al, 0x18 ; mov rdi, r12 ; call rbx
0x000000000009b88f : and al, 0x18 ; mov rdx, r13 ; mov rdi, rbp ; call rbx
0x000000000009bb4f : and al, 0x18 ; mov rdx, r14 ; mov rdi, rbp ; call rbx
0x000000000016d148 : and al, 0x19 ; jmp rsp
0x000000000010b22b : and al, 0x1c ; call qword ptr [rax]
0x0000000000000975 : and al, 0x20 ; add byte ptr [rax], al ; ret
0x00000000000233de : and al, 0x20 ; call r15
0x0000000000024fe4 : and al, 0x20 ; call rax
0x000000000009b545 : and al, 0x20 ; call rbx
0x000000000009b1c1 : and al, 0x20 ; lea rcx, qword ptr [rax + 4] ; call rbx
0x00000000000e1678 : and al, 0x20 ; mov eax, 0x10e ; syscall
0x0000000000078b02 : and al, 0x20 ; mov qword ptr [rsp + 0x18], r10 ; call rcx
0x00000000000f38c3 : and al, 0x20 ; mov qword ptr [rsp + 0x18], rax ; call 0x6fae9
0x000000000007878e : and al, 0x20 ; mov qword ptr [rsp + 0x18], rcx ; call qword ptr [rax]
0x00000000000b486f : and al, 0x20 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000159244 : and al, 0x26 ; outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x000000000011f3b6 : and al, 0x28 ; add byte ptr [rbp + 5], dh ; add rsp, 0x38 ; ret
0x00000000001108b7 : and al, 0x28 ; call rcx
0x000000000009b08f : and al, 0x28 ; lea rcx, qword ptr [rax + 1] ; call rbx
0x00000000000233d9 : and al, 0x28 ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x000000000007bba3 : and al, 0x28 ; mov rdi, r12 ; call rax
0x000000000009ba1c : and al, 0x28 ; mov rdi, rbp ; call rbx
0x00000000000c351e : and al, 0x28 ; or eax, ebp ; retf -3
0x000000000011835b : and al, 0x28 ; sub rsp, -0x80 ; pop rbx ; mov eax, eax ; ret
0x00000000001707f4 : and al, 0x30 ; add dword ptr [rax], eax ; add al, 0x8f ; std ; call rsp
0x00000000000ce224 : and al, 0x30 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000cc7c8 : and al, 0x30 ; add rax, rcx ; jmp rax
0x000000000010b87d : and al, 0x30 ; call qword ptr [rax]
0x0000000000023b92 : and al, 0x30 ; call r14
0x0000000000024483 : and al, 0x30 ; call r15
0x0000000000023d7e : and al, 0x30 ; call rbx
0x000000000011069d : and al, 0x30 ; call rcx
0x0000000000118339 : and al, 0x30 ; mov qword ptr [rsp + 8], rax ; xor eax, eax ; call rdx
0x00000000000a77c1 : and al, 0x30 ; mov rdi, qword ptr [rax] ; call r14
0x000000000016cb08 : and al, 0x35 ; int1 ; jmp rsp
0x0000000000023964 : and al, 0x38 ; call r14
0x0000000000023825 : and al, 0x38 ; call r15
0x00000000000253e1 : and al, 0x38 ; call rbx
0x00000000000e1d85 : and al, 0x38 ; mov eax, edx ; add rsp, 0x48 ; ret
0x0000000000025c2a : and al, 0x38 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000024fdf : and al, 0x38 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000023b8d : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call r14
0x000000000002447e : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call r15
0x0000000000023d79 : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000114f11 : and al, 0x3a ; call qword ptr [rax]
0x000000000004179b : and al, 0x3c ; call rax
0x000000000010e3e7 : and al, 0x40 ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x39], cl ; ret
0x00000000001071b1 : and al, 0x40 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002395f : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000023820 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x00000000000253dc : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x00000000000fef3b : and al, 0x44 ; call 0xdb964
0x0000000000074798 : and al, 0x48 ; add esp, 0x10 ; pop rbx ; jmp rax
0x0000000000028c34 : and al, 0x48 ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b81f2 : and al, 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000daffe : and al, 0x48 ; add esp, 0x18 ; ret
0x0000000000068ad2 : and al, 0x48 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000eb985 : and al, 0x48 ; add esp, 0x38 ; ret
0x00000000000eb9e6 : and al, 0x48 ; add esp, 0x40 ; ret
0x0000000000027246 : and al, 0x48 ; call r14
0x00000000000247ae : and al, 0x48 ; call r15
0x000000000011f28d : and al, 0x48 ; mov eax, dword ptr [rax + 0x130] ; jmp rax
0x000000000009ab74 : and al, 0x48 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000043c25 : and al, 0x48 ; mov ebx, edx ; call 0x80656
0x00000000000d4a7a : and al, 0x48 ; mov edi, dword ptr [rbp - 0xb8] ; call r14
0x0000000000071fe5 : and al, 0x48 ; mov edi, ebx ; call rax
0x00000000000e9306 : and al, 0x48 ; mov edx, eax ; call 0xf5566
0x00000000000d420a : and al, 0x48 ; mov esi, ebx ; call r14
0x00000000000b2eb2 : and al, 0x48 ; test edi, edi ; je 0xb2ecd ; call 0x1f940
0x00000000000d9ef8 : and al, 0x49 ; mov edx, ecx ; mov eax, 0x11 ; syscall
0x00000000000e95f8 : and al, 0x49 ; mov edx, ecx ; mov eax, 0x113 ; syscall
0x00000000000e9688 : and al, 0x49 ; mov edx, ecx ; mov eax, 0x114 ; syscall
0x00000000000e03b8 : and al, 0x49 ; mov edx, ecx ; mov eax, 0x115 ; syscall
0x00000000000e9748 : and al, 0x49 ; mov edx, ecx ; mov eax, 0x116 ; syscall
0x00000000000d9f58 : and al, 0x49 ; mov edx, ecx ; mov eax, 0x12 ; syscall
0x00000000000e1128 : and al, 0x49 ; mov edx, ecx ; mov eax, 0x127 ; syscall
0x00000000000e1188 : and al, 0x49 ; mov edx, ecx ; mov eax, 0x128 ; syscall
0x00000000000e15f8 : and al, 0x49 ; mov edx, ecx ; mov eax, 0x17 ; syscall
0x00000000000e9e78 : and al, 0x49 ; mov edx, ecx ; mov eax, 0x2c ; syscall
0x00000000000e9c18 : and al, 0x49 ; mov edx, ecx ; mov eax, 0x2d ; syscall
0x00000000000ea488 : and al, 0x49 ; mov edx, ecx ; mov eax, 0x45 ; syscall
0x00000000000ea4e8 : and al, 0x49 ; mov edx, ecx ; mov eax, 0x46 ; syscall
0x00000000000e92f8 : and al, 0x49 ; mov edx, ecx ; mov eax, 0xe8 ; syscall
0x0000000000027241 : and al, 0x50 ; mov rdi, qword ptr [rsp + 0x48] ; call r14
0x00000000000247a9 : and al, 0x50 ; mov rdi, qword ptr [rsp + 0x48] ; call r15
0x000000000003e1e8 : and al, 0x50 ; sbb eax, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; retf -0x7cf1
0x000000000016ed30 : and al, 0x55 ; clc ; call rsp
0x000000000016cbc8 : and al, 0x5a ; int1 ; jmp rsp
0x000000000007d50c : and al, 0x5b ; pop rbp ; pop r12 ; ret
0x00000000001151bc : and al, 0x5d ; pop r12 ; ret
0x000000000011f716 : and al, 0x70 ; add al, 0 ; add byte ptr [rax - 0x7f], cl ; ret
0x000000000009b753 : and al, 0x70 ; mov rdi, rbp ; call rbx
0x000000000007d4f7 : and al, 0x74 ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x00000000000da12d : and al, 0x74 ; xor byte ptr [rax + 0x63], cl ; ret 0xc283
0x000000000003fa7d : and al, 0x75 ; fcomi st(3) ; ret
0x00000000000406c7 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x8b44
0x000000000004d4d2 : and al, 0x83 ; ret
0x000000000016fd70 : and al, 0x84 ; cli ; jmp rsp
0x000000000016b710 : and al, 0x84 ; in al, dx ; call rsp
0x000000000016d4b8 : and al, 0x86 ; hlt ; jmp rsp
0x00000000000cd6ae : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x6348
0x00000000000cb23e : and al, 0x88 ; add dword ptr [rax], eax ; add cl, ch ; retf -3
0x000000000016d4e8 : and al, 0x89 ; hlt ; call rsp
0x00000000000c6525 : and al, 0x89 ; ret
0x00000000000b3c20 : and al, 0x89 ; ret 0x8b48
0x00000000000da8dc : and al, 0x89 ; ret 0xe283
0x000000000016f620 : and al, 0x94 ; stc ; jmp rsp
0x00000000000c8663 : and al, 0x98 ; add byte ptr [rax], al ; add al, ch ; retf
0x0000000000028735 : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x00000000000f63cc : and al, 0xa0 ; add byte ptr [rax], al ; add al, ch ; retf -0x154
0x0000000000040d40 : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x8b4c
0x00000000000a4b86 : and al, 0xac ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x00000000000e06b2 : and al, 0xb0 ; mov eax, ebx ; syscall
0x00000000000e1ea2 : and al, 0xb0 ; ret
0x00000000000e10c5 : and al, 0xb8 ; adc al, 0 ; add byte ptr [rax], al ; syscall
0x00000000000e1065 : and al, 0xb8 ; adc eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000db705 : and al, 0xb8 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000db925 : and al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x00000000000db985 : and al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000000dbf45 : and al, 0xb8 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000b8225 : and al, 0xb8 ; and al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000b8285 : and al, 0xb8 ; and eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000f5cdc : and al, 0xb8 ; out 0, al ; add byte ptr [rax], al ; mov r10, rcx ; syscall
0x00000000000e4765 : and al, 0xb8 ; sbb al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000e1e76 : and al, 0xb8 ; sbb byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x00000000000e9a35 : and al, 0xb8 ; sub al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000e99a5 : and al, 0xb8 ; sub eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000e9895 : and al, 0xb8 ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x00000000000f16fd : and al, 0xc ; add ecx, ebp ; ret
0x00000000000333eb : and al, 0xc ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000c36e4 : and al, 0xc ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000363ed : and al, 0xc ; add rsp, 0x18 ; ret
0x000000000011f3df : and al, 0xc ; add rsp, 0x38 ; ret
0x0000000000068c84 : and al, 0xc ; mov eax, 3 ; syscall
0x00000000000d9d35 : and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000016d268 : and al, 0xc2 ; ljmp ptr [rsi + rbp + 1] ; add ah, dl ; ret
0x000000000018cd2c : and al, 0xc3 ; add dword ptr [rax], eax ; mov al, 0xfd ; idiv edi ; retf 1
0x00000000000021d9 : and al, 0xc7 ; jno 0x222a ; ret 0x1dd4
0x00000000000e8c95 : and al, 0xc8 ; mov qword ptr [rsp - 0x30], r9 ; syscall
0x000000000018d32c : and al, 0xc9 ; add dword ptr [rax], eax ; and byte ptr [rdx], cl ; clc ; jmp qword ptr [rdi]
0x0000000000170148 : and al, 0xcf ; cli ; jmp rsp
0x00000000000e060c : and al, 0xd0 ; syscall
0x000000000018db2c : and al, 0xd1 ; add dword ptr [rax], eax ; sal byte ptr [rbx], 0xf8 ; call qword ptr [rdx]
0x00000000001701b0 : and al, 0xd2 ; cli ; jmp rsp
0x0000000000002d4e : and al, 0xd7 ; cmp ecx, dword ptr [rip + 0x1954b385] ; retf 0x172
0x00000000000688b2 : and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x00000000000fef7c : and al, 0xe0 ; add byte ptr [rax], al ; add al, ch ; retf -0x7ea
0x000000000006b1e8 : and al, 0xe0 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x0000000000032aef : and al, 0xe8 ; fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x0000000000032b8b : and al, 0xe8 ; fstp xword ptr [rdi] ; ret
0x00000000000f9332 : and al, 0xe8 ; mov eax, 0x83 ; syscall
0x000000000007a545 : and al, 0xe8 ; movsd dword ptr [rdi], dword ptr [rsi] ; retf -1
0x0000000000032b69 : and al, 0xe8 ; ret
0x0000000000030b6f : and al, 0xe8 ; retf
0x000000000004d895 : and al, 0xe8 ; xchg eax, ebp ; outsb dx, byte ptr [rsi] ; add al, byte ptr [rax] ; jmp 0x4d867
0x0000000000089ab7 : and al, 0xe8 ; xor ebx, dword ptr [rbx - 0x76b70001] ; ret 0xc031
0x0000000000043e30 : and al, 0xe9 ; ret 0xfffe
0x0000000000043bec : and al, 0xec ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000037c40 : and al, 0xf ; xchg eax, edx ; ret 0x894d
0x00000000000be2fa : and al, 0xf ; xchg eax, esp ; ror byte ptr [rcx + rdi - 0x3a], 0xf ; xchg eax, esp ; ret 0xd009
0x0000000000032b87 : and al, 0xf0 ; fld xword ptr [rsp - 0x18] ; fstp xword ptr [rdi] ; ret
0x0000000000032b65 : and al, 0xf0 ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000032c50 : and al, 0xf0 ; mov dword ptr [rdi], edx ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000a7fd6 : and al, 0xf0 ; movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x00000000000a7fdc : and al, 0xf0 ; ret
0x00000000000b979a : and al, 0xf3 ; ret
0x00000000000dbd05 : and al, 0xf8 ; add cl, byte ptr [rdi] ; ret 0xfc3
0x0000000000043ba1 : and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x0000000000043ba7 : and al, 0xf8 ; ret
0x000000000016fa71 : and al, 0xfa ; jmp rsp
0x0000000000105c9f : and al, 0xfc ; mov dword ptr [rsi], eax ; mov eax, 1 ; ret
0x0000000000043b5b : and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x0000000000043b61 : and al, 0xfc ; ret
0x0000000000032d07 : and al, 0xfe ; fldcw word ptr [rsp - 2] ; ret
0x0000000000032d0b : and al, 0xfe ; ret
0x000000000007b59b : and al, 0xff ; loopne 0x7b60b ; nop ; ret
0x0000000000182e95 : and al, 1 ; add al, bh ; test esi, ebp ; jmp qword ptr [rcx]
0x000000000016d125 : and al, 1 ; add byte ptr [rax + rdx], dl ; jmp rsp
0x00000000000dbfe1 : and al, 1 ; add byte ptr [rax], al ; syscall
0x0000000000182ead : and al, 1 ; add byte ptr [rax], dl ; xchg ch, dh ; jmp qword ptr [rcx]
0x00000000000cc3a5 : and al, 1 ; retf 0x6348
0x0000000000193f60 : and al, 4 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x000000000010b401 : and al, 4 ; mov eax, 3 ; syscall
0x0000000000094ea8 : and al, 7 ; add byte ptr [rax], al ; ret
0x00000000000a68c6 : and al, 8 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000002c86f : and al, 8 ; add rsp, 0x18 ; mov rax, rdi ; ret
0x000000000003689c : and al, 8 ; add rsp, 0x18 ; ret
0x0000000000074cdd : and al, 8 ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000000000010b5fc : and al, 8 ; call 0x118054
0x000000000010b5fb : and al, 8 ; call 0x118055
0x0000000000022209 : and al, 8 ; call 0x7ec44
0x0000000000022208 : and al, 8 ; call 0x7ec45
0x000000000010cec7 : and al, 8 ; call qword ptr [rax]
0x000000000007e2b2 : and al, 8 ; call qword ptr [rdx]
0x00000000000a8591 : and al, 8 ; call rax
0x00000000001137cb : and al, 8 ; call rcx
0x0000000000078b8e : and al, 8 ; call rdx
0x0000000000032bca : and al, 8 ; fscale ; fstp st(1) ; ret
0x0000000000071340 : and al, 8 ; jmp 0x71312
0x000000000007133f : and al, 8 ; jmp 0x71313
0x0000000000108923 : and al, 8 ; jne 0x108918 ; add rsp, 0x18 ; ret
0x00000000000e8cf8 : and al, 8 ; mov eax, 0x38 ; syscall
0x0000000000031b7d : and al, 8 ; mov eax, 2 ; syscall
0x00000000000c6625 : and al, 8 ; mov eax, dword ptr [rbx + 4] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000033f20 : and al, 8 ; mov eax, ecx ; syscall
0x00000000000676a5 : and al, 8 ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x00000000001006db : and al, 8 ; mov rdi, r13 ; call r12
0x000000000006d461 : and al, 8 ; mov rdi, r15 ; call rax
0x0000000000117427 : and al, 8 ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000032a8b : and al, 8 ; ret
0x00000000000e4465 : and al, 8 ; syscall
0x00000000000b832c : and al, 8 ; test rax, rax ; je 0xb833c ; call rax
0x00000000000b832b : and al, 8 ; test rax, rax ; je 0xb833d ; call rax
0x000000000011833e : and al, 8 ; xor eax, eax ; call rdx
0x00000000000e6d85 : and al, 8 ; xor eax, eax ; syscall
0x0000000000078ab2 : and al, 8 ; xor edi, edi ; call qword ptr [rax]
0x000000000000e658 : and al, bh ; or al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000008588 : and al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000032682 : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000000000032cd4 : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000001928bc : and al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000b820a : and al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000086dce : and al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000016d0b5 : and al, byte ptr [rcx] ; add ah, dl ; or bl, dh ; jmp rsp
0x00000000000e8fa1 : and al, byte ptr [rcx] ; add byte ptr [rax], al ; syscall
0x000000000007e99a : and al, byte ptr [rsp - 0xb7f68c] ; ret 0xc148
0x00000000000c6fa3 : and al, ch ; ret
0x00000000000b36ce : and al, ch ; ret 0xfff6
0x000000000002c0c2 : and ax, 0x100 ; movzx eax, ax ; ret
0x000000000002c0e2 : and ax, 0x1000 ; movzx eax, ax ; ret
0x000000000002c022 : and ax, 0x200 ; movzx eax, ax ; ret
0x000000000002c0a2 : and ax, 0x2000 ; movzx eax, ax ; ret
0x000000000002bfc2 : and ax, 0x400 ; movzx eax, ax ; ret
0x000000000002c062 : and ax, 0x4000 ; movzx eax, ax ; ret
0x000000000002c002 : and ax, 0x800 ; movzx eax, ax ; ret
0x000000000002c042 : and ax, 0x8000 ; movzx eax, ax ; ret
0x000000000016a469 : and bh, ah ; call qword ptr [rax - 0x1f0003dd]
0x0000000000050254 : and bh, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x0000000000024fe5 : and bh, bh ; rol byte ptr [rbx - 0x76befb08], 1 ; ret
0x0000000000002fa8 : and bh, byte ptr [rax - 0x52] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00000000001843c0 : and bh, dl ; cmc ; jmp rdx
0x0000000000095487 : and bl, al ; nop dword ptr [rax] ; ret
0x000000000017d490 : and bl, ch ; int1 ; call qword ptr [rdx]
0x000000000017d460 : and bl, ch ; int1 ; jmp qword ptr [rax]
0x0000000000066323 : and bl, ch ; retf 0x2e66
0x00000000000a8d41 : and bl, dh ; ret
0x0000000000071cd6 : and byte ptr [r13 + 0x31], r8b ; dec dword ptr [rax + 0x39] ; ret 0x860f
0x0000000000098706 : and byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000cf39a : and byte ptr [r8], r8b ; add byte ptr [rax], al ; add al, ch ; retf
0x000000000006d686 : and byte ptr [r9 - 0x77], r9b ; xor byte ptr [r8 + 1], r9b ; ret 0x8b49
0x00000000000e1679 : and byte ptr [rax + 0x10e], bh ; syscall
0x000000000007d3c5 : and byte ptr [rax + 0x31], cl ; ret 0x93be
0x0000000000034749 : and byte ptr [rax + 0x39], cl ; ret
0x0000000000073fd4 : and byte ptr [rax + 0x39], cl ; retf
0x000000000006d247 : and byte ptr [rax + 0x39], cl ; retf -0x418b
0x000000000010d1bb : and byte ptr [rax + 0x63], cl ; ror byte ptr [rax + 0x29], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0xc031
0x0000000000044816 : and byte ptr [rax + 1], cl ; ret
0x000000000008f0f6 : and byte ptr [rax + 1], cl ; ret 0x347c
0x00000000000806b8 : and byte ptr [rax + 9], cl ; retf -0x76b8
0x00000000000807dd : and byte ptr [rax + 9], cl ; retf 0xf48
0x000000000008099e : and byte ptr [rax + 9], cl ; retf 0xf4c
0x00000000000334d4 : and byte ptr [rax + rax], cl ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000038292 : and byte ptr [rax - 0x3f], cl ; cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x0000000000035908 : and byte ptr [rax - 0x3f], cl ; retf 0x6411
0x0000000000169fc4 : and byte ptr [rax - 0x4dff0005], dh ; sti ; jmp rax
0x00000000000b4870 : and byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x000000000006c31a : and byte ptr [rax - 0x75], cl ; or byte ptr [rax + 0x39], cl ; retf 0x776
0x0000000000079033 : and byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0xf04
0x00000000000f38c4 : and byte ptr [rax - 0x77], cl ; and al, 0x18 ; call 0x6fae8
0x000000000007878f : and byte ptr [rax - 0x77], cl ; and al, 0x18 ; call qword ptr [rax]
0x000000000010b5f8 : and byte ptr [rax - 0x77], cl ; and al, 8 ; call 0x118058
0x000000000010b5f7 : and byte ptr [rax - 0x77], cl ; and al, 8 ; call 0x118059
0x0000000000067856 : and byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000d1285 : and byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0xfaf3
0x000000000007e58b : and byte ptr [rax - 0x77], cl ; jae 0x7e5a1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001137c4 : and byte ptr [rax - 0x77], cl ; out dx, eax ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x00000000000306da : and byte ptr [rax - 0x77], cl ; ret
0x00000000000ac5b6 : and byte ptr [rax - 0x77], cl ; ret 0x1e74
0x00000000000efd47 : and byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000040927 : and byte ptr [rax - 0x77], cl ; ret 0x294c
0x000000000011ce12 : and byte ptr [rax - 0x77], cl ; ret 0x3d83
0x00000000000cd858 : and byte ptr [rax - 0x77], cl ; ret 0x8944
0x00000000000c99ab : and byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000b6244 : and byte ptr [rax - 0x77], cl ; retf -0x118b
0x0000000000037ea8 : and byte ptr [rax - 0x77], cl ; retf -0x158b
0x000000000010a771 : and byte ptr [rax - 0x77], cl ; retf -0x168b
0x00000000000ac5d4 : and byte ptr [rax - 0x77], cl ; retf -0x198b
0x00000000000d249b : and byte ptr [rax - 0x77], cl ; retf -0x7af1
0x00000000000d2356 : and byte ptr [rax - 0x77], cl ; retf 0x1674
0x00000000000ac799 : and byte ptr [rax - 0x77], cl ; retf 0x1a74
0x000000000010a756 : and byte ptr [rax - 0x77], cl ; retf 0x1b74
0x000000000002aa54 : and byte ptr [rax - 0x77], cl ; sti ; test rax, rax ; je 0x2aa68 ; call rax
0x000000000007e3eb : and byte ptr [rax - 0x77], cl ; sub byte ptr [rax - 0x77], cl ; retf -0x72b8
0x00000000000223d6 : and byte ptr [rax - 0x7d], cl ; ret
0x00000000000cde67 : and byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000040def : and byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0xe9 ; retf
0x00000000001866c0 : and byte ptr [rax - 0xa], cl ; call qword ptr [rdi]
0x0000000000072562 : and byte ptr [rax - 1], bh ; pop rbx ; ret
0x000000000016ab04 : and byte ptr [rax - 4], bh ; jmp qword ptr [rax + 0x20fffc79]
0x000000000016a514 : and byte ptr [rax - 4], ch ; jmp qword ptr [rax]
0x000000000016a424 : and byte ptr [rax], 0xfc ; call rax
0x0000000000002d35 : and byte ptr [rax], ah ; or edx, ebp ; clc ; ret
0x00000000000d4019 : and byte ptr [rax], al ; add byte ptr [rax + 9], cl ; retf -0x76b8
0x00000000000cf39b : and byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; retf
0x0000000000052866 : and byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x00000000000991d4 : and byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000b97c0 : and byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000dbf81 : and byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000008701e : and byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000965bc : and byte ptr [rax], cl ; add byte ptr [rax], al ; ret
0x0000000000098707 : and byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x0000000000071cd7 : and byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x860f
0x000000000015e800 : and byte ptr [rbp - 0x420f000b], bh ; cmc ; jmp qword ptr [rax]
0x000000000015e7f4 : and byte ptr [rbp - 0x42cf000b], bh ; cmc ; jmp qword ptr [rax]
0x000000000016adac : and byte ptr [rbp - 0x4b5f0004], dh ; cld ; jmp qword ptr [rax]
0x000000000016aa78 : and byte ptr [rbp - 0x735f0004], cl ; cld ; jmp qword ptr [rax]
0x000000000016ab50 : and byte ptr [rbp - 4], bh ; jmp qword ptr [rax + 0x20fffc7e]
0x000000000016aafc : and byte ptr [rbp - 4], dh ; jmp qword ptr [rax + 0x20fffc76]
0x0000000000169f4c : and byte ptr [rbp - 5], bh ; call qword ptr [rax]
0x00000000001911cb : and byte ptr [rbx + 0x100e4402], al ; ret
0x000000000015afe8 : and byte ptr [rbx + 0x3d], bh ; retf
0x0000000000068ad6 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000171f85 : and byte ptr [rbx + 0xa410204], al ; ret
0x0000000000179165 : and byte ptr [rbx + 0xa4b0204], al ; ret
0x0000000000176dc5 : and byte ptr [rbx + 0xa500204], al ; ret
0x0000000000181c85 : and byte ptr [rbx + 0xa7a0204], al ; ret
0x000000000018260d : and byte ptr [rbx + 0xa890204], al ; ret
0x000000000011f430 : and byte ptr [rbx - 0x3d], bl ; nop dword ptr [rax + rax] ; call qword ptr [rbx]
0x000000000016adbc : and byte ptr [rbx - 0x4d5f0004], dh ; cld ; jmp qword ptr [rax]
0x00000000000b052a : and byte ptr [rbx - 0x70f0fe08], al ; retf
0x000000000016aa88 : and byte ptr [rbx - 0x755f0004], cl ; cld ; jmp qword ptr [rax]
0x000000000016ab0c : and byte ptr [rbx - 4], bh ; jmp qword ptr [rax + 0x20fffc7c]
0x000000000016a3ec : and byte ptr [rbx], bh ; cld ; call qword ptr [rax]
0x000000000002844b : and byte ptr [rcx + 0x39], cl ; ret 0x860f
0x0000000000001d94 : and byte ptr [rcx + 0x72b02084], bh ; retf
0x0000000000176323 : and byte ptr [rcx + 0xa], al ; ret
0x0000000000118dd4 : and byte ptr [rcx + 1], al ; retf -0x72b3
0x000000000004ce4d : and byte ptr [rcx + 9], cl ; ret 0x940f
0x0000000000078b03 : and byte ptr [rcx + rcx*4 + 0x54], cl ; and al, 0x18 ; call rcx
0x00000000000facd8 : and byte ptr [rcx + rcx*4 - 0x19], cl ; call 0x107786
0x00000000000321dd : and byte ptr [rcx + rcx*4 - 0x40], al ; syscall
0x0000000000043be9 : and byte ptr [rcx - 0x2413dbbc], cl ; insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x0000000000074eff : and byte ptr [rcx - 0x2dcea42f], cl ; jmp rax
0x0000000000035f38 : and byte ptr [rcx - 0x2ff6b740], cl ; ret
0x00000000000021c3 : and byte ptr [rcx - 0x4273d1ae], ah ; out dx, al ; nop ; retf 0x3844
0x000000000016adcc : and byte ptr [rcx - 0x4f5f0004], dh ; cld ; call qword ptr [rax]
0x000000000006d687 : and byte ptr [rcx - 0x77], cl ; xor byte ptr [r8 + 1], r9b ; ret 0x8b49
0x000000000016a3d8 : and byte ptr [rcx - 4], al ; jmp qword ptr [rax]
0x000000000016ab30 : and byte ptr [rcx - 4], dh ; jmp qword ptr [rax + 0x20fffc72]
0x0000000000182add : and byte ptr [rcx], al ; add al, al ; js 0x182ade ; call qword ptr [rsi]
0x00000000000dc900 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000ea1b1 : and byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x00000000000b8382 : and byte ptr [rcx], al ; mov eax, 0x38 ; syscall
0x000000000004d2a9 : and byte ptr [rcx], ch ; ret
0x00000000000f91a3 : and byte ptr [rcx], ch ; retf 0x44e9
0x000000000007013b : and byte ptr [rcx], ch ; retf 0x55e9
0x00000000000e07a3 : and byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000b2f91 : and byte ptr [rcx], dh ; test byte ptr [rcx - 0x7d], 0xc6 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000015e3c8 : and byte ptr [rdi - 0x48ef000b], dh ; cmc ; call qword ptr [rax]
0x000000000016af98 : and byte ptr [rdi - 0x516f0004], ch ; cld ; jmp qword ptr [rax]
0x000000000016aaa8 : and byte ptr [rdi - 0x716f0004], cl ; cld ; call qword ptr [rax]
0x000000000016a4c0 : and byte ptr [rdi - 4], bl ; jmp rax
0x000000000016aaec : and byte ptr [rdi - 4], ch ; jmp qword ptr [rax + 0x20fffc70]
0x000000000016ab40 : and byte ptr [rdi - 4], dh ; jmp qword ptr [rax + 0x20fffc78]
0x000000000016a478 : and byte ptr [rdi], 0xfc ; call rax
0x00000000000f236e : and byte ptr [rdi], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000016a3d4 : and byte ptr [rdi], bh ; cld ; jmp qword ptr [rax]
0x00000000000a6db8 : and byte ptr [rdi], ch ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000084151 : and byte ptr [rdi], cl ; adc dword ptr [rdi + 0x30], edi ; movups xmmword ptr [r11], xmm8 ; ret
0x000000000002c0a5 : and byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x000000000010c534 : and byte ptr [rdi], cl ; retf 0x5089
0x00000000000fe15c : and byte ptr [rdi], cl ; test bl, ch ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x2e66
0x0000000000101ada : and byte ptr [rdi], cl ; test byte ptr [rax - 0x77000000], ah ; retf -0x72b8
0x0000000000095179 : and byte ptr [rdi], cl ; test dword ptr [rax + 4], edx ; add byte ptr [rax], al ; ret
0x0000000000147610 : and byte ptr [rdi], cl ; test ebx, ecx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000119d22 : and byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000000e2783 : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8041
0x0000000000106584 : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x93c
0x000000000016a404 : and byte ptr [rdi], dh ; cld ; push rax ; cmp ah, bh ; call rax
0x000000000016adc4 : and byte ptr [rdx - 0x4e5f0004], dh ; cld ; jmp qword ptr [rax]
0x000000000016a548 : and byte ptr [rdx - 4], ah ; inc dword ptr [rax] ; cld ; jmp rax
0x000000000016ab48 : and byte ptr [rdx - 4], bh ; jmp qword ptr [rax + 0x20fffc7b]
0x000000000016a518 : and byte ptr [rdx - 4], ch ; jmp qword ptr [rax]
0x000000000016aaf4 : and byte ptr [rdx - 4], dh ; jmp qword ptr [rax + 0x20fffc73]
0x000000000018506d : and byte ptr [rdx], al ; retf
0x000000000000031b : and byte ptr [rdx], bl ; adc byte ptr [rax - 0x80], bl ; retf 0x4244
0x000000000018d330 : and byte ptr [rdx], cl ; clc ; jmp qword ptr [rdi]
0x000000000017a59e : and byte ptr [rsi + 0xa], ah ; ret
0x000000000014403a : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001755f5 : and byte ptr [rsi + rcx + 0x18], bh ; ret
0x0000000000002c16 : and byte ptr [rsi - 0x32], dh ; clc ; ret
0x000000000016aa70 : and byte ptr [rsi - 0x725f0004], cl ; cld ; jmp qword ptr [rax]
0x000000000016ab14 : and byte ptr [rsi - 4], bh ; jmp qword ptr [rax + 0x20fffc7f]
0x000000000016ab28 : and byte ptr [rsi - 4], ch ; jmp qword ptr [rax + 0x20fffc6f]
0x00000000000e3071 : and byte ptr [rsp + rbp*8 + 0x41], dh ; mov byte ptr [rax - 1], 0 ; ret
0x000000000016adb4 : and byte ptr [rsp + rdi*8 - 0x34c5f01], dh ; jmp qword ptr [rax]
0x000000000016aa80 : and byte ptr [rsp + rdi*8 - 0x3745f01], cl ; jmp qword ptr [rax]
0x000000000016a36c : and byte ptr [rsp + rdi*8], bh ; inc dword ptr [rax] ; cld ; jmp rax
0x000000000009a452 : and ch, 0xf ; je 0x9a479 ; add rax, 2 ; ret
0x0000000000099168 : and ch, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x0000000000173b69 : and ch, ah ; call qword ptr [rcx]
0x0000000000190f50 : and ch, bl ; clc ; call qword ptr [rbx]
0x0000000000003d60 : and ch, byte ptr [rcx] ; in eax, 0x3a ; retf -0x2f76
0x000000000015de71 : and ch, dh ; call rsp
0x000000000015dee9 : and ch, dh ; ljmp ptr [rbx] ; and dh, ch ; call rsp
0x000000000009a43d : and cl, 0xf ; je 0x9a465 ; ret
0x000000000000396a : and cl, ah ; ret
0x00000000000da1bb : and cl, byte ptr [rax + 0x63] ; ret 0xc283
0x000000000011e65c : and cl, byte ptr [rax - 0x7d] ; ret
0x00000000000f0573 : and cl, byte ptr [rax - 0x7d] ; ret 0xeb01
0x0000000000089328 : and cl, byte ptr [rcx + rcx*4 - 0x28] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000083a5d : and cl, byte ptr [rcx - 0x77] ; ret
0x000000000004af00 : and cl, ch ; ret
0x000000000015deed : and dh, ch ; call rsp
0x000000000015df79 : and dh, ch ; dec dword ptr [rbp + 0x22] ; cmc ; call rsp
0x000000000015defd : and dh, ch ; jmp qword ptr [rbx - 0x2b000ade]
0x000000000015df91 : and dh, ch ; push qword ptr [rcx + 0x11] ; cmc ; call rsp
0x0000000000050253 : and dil, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x000000000016a468 : and dil, spl ; call qword ptr [rax - 0x1f0003dd]
0x00000000000c3456 : and dword ptr [rax - 0x77], ecx ; ret
0x0000000000020bd8 : and dword ptr [rax - 0x77], ecx ; ret 0x894c
0x0000000000177fdd : and dword ptr [rax], eax ; add byte ptr [rax + 0x73], al ; out dx, eax ; jmp qword ptr [rcx]
0x0000000000119f36 : and dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000013c939 : and dword ptr [rax], eax ; add byte ptr [rax - 0x7bf0ffc7], al ; retf
0x000000000000fef0 : and dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d
0x0000000000010e68 : and dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x42
0x0000000000009cc8 : and dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x0000000000008b70 : and dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x14
0x00000000000dbfb1 : and dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x0000000000178015 : and dword ptr [rax], eax ; add byte ptr [rax], bh ; je 0x178010 ; jmp qword ptr [rsi]
0x0000000000138f7e : and dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000015ad62 : and dword ptr [rax], edx ; jmp qword ptr [rdi]
0x00000000000d2138 : and dword ptr [rbx - 0x7cb7f717], eax ; ret 0x4801
0x000000000006c05c : and dword ptr [rbx], 0xffffffef ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000006c0b8 : and dword ptr [rbx], 0xffffffef ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000182b45 : and dword ptr [rcx], eax ; add byte ptr [rax - 0x30], bl ; stc ; call qword ptr [rax]
0x0000000000010928 : and dword ptr [rcx], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0xf
0x00000000000e8f6c : and dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x0000000000182b85 : and dword ptr [rcx], eax ; add byte ptr [rax], ch ; sar cl, 1 ; call qword ptr [rax]
0x0000000000033926 : and dword ptr [rdi + rdx*8], eax ; xor eax, eax ; ret
0x00000000000713d0 : and dword ptr [rdi], 0xffffffcf ; ret
0x0000000000033a58 : and dword ptr [rdi], eax ; xor eax, eax ; ret
0x00000000000a98d3 : and dword ptr [rdi], ebp ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000075fce : and dword ptr [rdi], ecx ; mov dh, 0 ; ret
0x000000000016fab5 : and dword ptr [rdx], eax ; add ah, ah ; sub edx, edi ; jmp rsp
0x0000000000157e19 : and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000094fab : and dword ptr [rsi], eax ; add byte ptr [rax], al ; ret
0x000000000015ad61 : and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000013c938 : and dword ptr fs:[rax], eax ; add byte ptr [rax - 0x7bf0ffc7], al ; retf
0x000000000014a026 : and eax, 0 ; add bl, dh ; ret
0x00000000000205cb : and eax, 0 ; ret
0x00000000000e04a3 : and eax, 0x100f ; ret
0x000000000016d145 : and eax, 0x19240001 ; jmp rsp
0x000000000015dd05 : and eax, 0x1f86fff5 ; cmc ; jmp qword ptr [rsi]
0x0000000000032cea : and eax, 0x200 ; ret
0x000000000011cc7b : and eax, 0x27b980 ; ret
0x0000000000020568 : and eax, 0x30 ; add rsp, 0x28 ; jmp rax
0x0000000000082787 : and eax, 0x30 ; add rsp, 8 ; jmp rax
0x00000000000202fe : and eax, 0x30 ; call rax
0x0000000000035911 : and eax, 0x30 ; call rdx
0x000000000002c6c4 : and eax, 0x30 ; jmp rax
0x0000000000041794 : and eax, 0x30 ; mov edi, dword ptr [rsp + 0x3c] ; call rax
0x000000000002d143 : and eax, 0x30 ; mov rdi, r14 ; call rax
0x0000000000046f88 : and eax, 0x30 ; xor esi, esi ; call rax
0x0000000000146c66 : and eax, 0x39480025 ; retf -0x78f1
0x0000000000076c5c : and eax, 0x39480032 ; ret
0x000000000009911d : and eax, 0x3fc00 ; pop rbx ; ret
0x0000000000149da3 : and eax, 0x5be17500 ; ret
0x0000000000074a7a : and eax, 0x5c415d5b ; ret
0x00000000001783ed : and eax, 0x7e500000 ; out dx, eax ; jmp qword ptr [rcx]
0x000000000002c1b2 : and eax, 0x7f ; ret
0x0000000000099214 : and eax, 0x7ff80000 ; div ecx ; mov eax, eax ; ret
0x00000000000326a4 : and eax, 0x80 ; ret
0x0000000000032769 : and eax, 0x80000000 ; movd xmm0, eax ; ret
0x0000000000070832 : and eax, 0x804 ; ret
0x0000000000182f4d : and eax, 0x86400001 ; cmc ; jmp qword ptr [rcx]
0x0000000000182f65 : and eax, 0x86580001 ; cmc ; jmp qword ptr [rcx]
0x0000000000182fad : and eax, 0x86d00001 ; cmc ; jmp qword ptr [rcx]
0x0000000000182fc5 : and eax, 0x86e80001 ; cmc ; jmp qword ptr [rcx]
0x0000000000078433 : and eax, 0x950f4100 ; ret
0x00000000000f5587 : and eax, 0xc ; cmp eax, 4 ; je 0xf5598 ; ret
0x00000000000f5758 : and eax, 0xc ; pop rbp ; pop r12 ; ret
0x00000000000df164 : and eax, 0xe8ef8948 ; retf
0x00000000000d2f54 : and eax, 0xf ; ret
0x000000000014a035 : and eax, 0xff834800 ; add dword ptr [rdi + 3], esi ; ret
0x00000000000e8e41 : and eax, 0xfff ; or eax, edi ; ret
0x00000000000f9755 : and eax, 0xffffff ; or eax, edi ; bswap eax ; ret
0x00000000000f96e8 : and eax, 0xffffff ; ret
0x00000000001038e3 : and eax, 0xfffffff8 ; add eax, 0x10 ; ret
0x00000000000e4def : and eax, 1 ; jmp 0xe4dbb
0x00000000000c146d : and eax, 1 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002c162 : and eax, 1 ; ret
0x00000000000c5c28 : and eax, 2 ; add eax, 8 ; ret
0x000000000002bfe2 : and eax, 2 ; movzx eax, ax ; ret
0x000000000002c082 : and eax, 4 ; movzx eax, ax ; ret
0x000000000002bfa2 : and eax, 8 ; movzx eax, ax ; ret
0x00000000000329c4 : and eax, 8 ; ret
0x00000000000b826a : and eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000138dd5 : and eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000182dd5 : and eax, dword ptr [rcx] ; add byte ptr [rax - 0x7c], cl ; cmc ; jmp qword ptr [rsi]
0x00000000000e9271 : and eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x0000000000182dbd : and eax, dword ptr [rcx] ; add byte ptr [rax], dh ; test dh, ch ; jmp qword ptr [rcx]
0x000000000013e749 : and eax, dword ptr [rdx] ; add byte ptr [rax], al ; ret
0x0000000000002d1f : and eax, ebp ; clc ; ret
0x00000000000322f2 : and eax, ecx ; ret
0x00000000000323b6 : and eax, edx ; movq xmm0, rax ; ret
0x0000000000032340 : and eax, edx ; sub rax, rdx ; shr rax, 0x3f ; ret
0x000000000002c37d : and eax, esi ; ret
0x000000000006c05d : and ebp, edi ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000006c0b9 : and ebp, edi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000015df71 : and ebp, esi ; call rsp
0x000000000015df6d : and ebp, esi ; dec esi ; and ebp, esi ; call rsp
0x0000000000173ca1 : and ebp, esp ; jmp qword ptr [rsi]
0x00000000000f5522 : and ebx, 0xffffffbb ; cmp r11d, 0xa ; je 0xf5535 ; ret
0x0000000000056ff1 : and ebx, 0xffffffff ; dec dword ptr [rax - 0x39] ; ret
0x0000000000159514 : and ebx, dword ptr [rbx] ; xor dword ptr [rax - 0x7d993651], ebp ; retf -0x1b6a
0x00000000000376de : and ebx, esi ; ret
0x0000000000036872 : and ecx, 0x3ff ; xor eax, ecx ; ret
0x00000000001455b5 : and ecx, 0xff ; sub eax, ecx ; ret
0x0000000000144ce8 : and ecx, 0xffff ; sub eax, ecx ; ret
0x000000000006ecd0 : and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x00000000000f1c0c : and ecx, dword ptr [rax - 0x77] ; ret 0xbeb
0x00000000000f0048 : and ecx, dword ptr [rcx + 0x29] ; ret 0x8949
0x0000000000028aa4 : and ecx, dword ptr [rdi] ; mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x1a76
0x000000000003f0e8 : and ecx, dword ptr [rdi] ; mov cl, 0x35 ; nop ; ret
0x000000000004c8f2 : and ecx, dword ptr [rdi] ; mov cl, 0x35 ; retf 0x34ed
0x0000000000106f46 : and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0x2c3c
0x0000000000106f6d : and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xf980
0x000000000002c1c2 : and edi, 0xffffff80 ; sete al ; ret
0x000000000016e019 : and edi, esi ; jmp rsp
0x00000000000e8e93 : and edi, esi ; or rax, rdi ; ret
0x000000000016a46d : and edi, esp ; jmp rax
0x000000000006edc3 : and edx, 1 ; mov eax, edx ; ret
0x000000000009aee8 : and edx, 3 ; mov rax, rdi ; jne 0x9af06 ; ret
0x00000000000b9770 : and edx, dword ptr [rcx + 0xffb8] ; add byte ptr [rax + 0x39], cl ; retf 0x1f74
0x0000000000002c01 : and edx, esp ; bswap ebx ; clc ; ret
0x000000000010394e : and esi, esi ; ret
0x000000000016a429 : and esp, edi ; jmp qword ptr [rax]
0x0000000000180c79 : and esp, esi ; jmp rdx
0x00000000000b860e : and esp, esi ; mov rdi, rdx ; mov eax, r8d ; syscall
0x0000000000020bd7 : and qword ptr [rax - 0x77], rcx ; ret 0x894c
0x0000000000177fdc : and qword ptr [rax], r8 ; add byte ptr [rax + 0x73], al ; out dx, eax ; jmp qword ptr [rcx]
0x0000000000033925 : and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x0000000000033a57 : and qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000a8d40 : and r11b, r14b ; ret
0x000000000015de70 : and r13b, sil ; call rsp
0x000000000015df7c : and r14b, r13b ; call rsp
0x00000000000323b5 : and rax, rdx ; movq xmm0, rax ; ret
0x00000000000e8e92 : and rdi, rsi ; or rax, rdi ; ret
0x000000000003272b : andnps xmm3, xmm1 ; orps xmm0, xmm3 ; ret
0x0000000000032728 : andps xmm0, xmm3 ; andnps xmm3, xmm1 ; orps xmm0, xmm3 ; ret
0x000000000008a55a : bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x00000000000838c0 : bsf eax, eax ; add rax, rdi ; ret
0x00000000000838d0 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x00000000000838e0 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x00000000000838b0 : bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x00000000000837ff : bsf eax, eax ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000008a753 : bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x0000000000084535 : bsf eax, edi ; cmove eax, edx ; add eax, 1 ; ret
0x0000000000080686 : bsf eax, edx ; ret
0x00000000000807e2 : bsf edx, edx ; add rax, rdx ; sub rax, rdi ; ret
0x000000000008a870 : bsf rax, rax ; lea rax, qword ptr [rdi + rax] ; ret
0x00000000000806d2 : bsf rax, rdx ; ret
0x000000000008f1c1 : bsr eax, eax ; add rax, rdi ; add rax, r8 ; ret
0x0000000000082387 : bsr eax, eax ; add rax, rdi ; ret
0x000000000008f090 : bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x000000000008f0a0 : bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x000000000008f0b0 : bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x30] ; ret
0x000000000008260b : bsr eax, esi ; add rax, rdi ; ret
0x0000000000082519 : bsr esi, esi ; lea rax, qword ptr [rcx + rsi] ; ret
0x0000000000082415 : bsr esi, esi ; lea rax, qword ptr [rdi + rsi] ; ret
0x0000000000082386 : bsr rax, rax ; add rax, rdi ; ret
0x000000000008260a : bsr rax, rsi ; add rax, rdi ; ret
0x0000000000082518 : bsr rsi, rsi ; lea rax, qword ptr [rcx + rsi] ; ret
0x0000000000082414 : bsr rsi, rsi ; lea rax, qword ptr [rdi + rsi] ; ret
0x00000000001135bd : bswap eax ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000000f96c2 : bswap eax ; ret
0x0000000000002c03 : bswap ebx ; clc ; ret
0x00000000000facdc : call 0x107782
0x00000000000fc1f0 : call 0x108ce2
0x00000000000ecc47 : call 0x108e72
0x00000000000fc533 : call 0x109002
0x0000000000189408 : call 0x11188b0f
0x0000000000118651 : call 0x115112
0x000000000010bdd2 : call 0x118032
0x000000000010b5cc : call 0x118052
0x000000000017f008 : call 0x1417e35e
0x0000000000175498 : call 0x181741ed
0x00000000000b36bd : call 0x1f93a
0x00000000000b42c8 : call 0x20512
0x0000000000104a73 : call 0x21104a79
0x0000000000173ec8 : call 0x21172af9
0x0000000000181ba8 : call 0x21181092
0x0000000000182058 : call 0x2218155e
0x0000000000182fc8 : call 0x22182556
0x0000000000185e68 : call 0x221854a5
0x00000000001865b8 : call 0x22185c00
0x0000000000173ce8 : call 0x27172913
0x00000000001880b8 : call 0x27187a3f
0x00000000001880e8 : call 0x27187a6f
0x0000000000188118 : call 0x27187a9f
0x0000000000188148 : call 0x27187acf
0x0000000000188178 : call 0x27187aff
0x00000000001881a8 : call 0x27187b2f
0x0000000000020164 : call 0x2c3e2
0x00000000000805de : call 0x2c8c2
0x000000000003782c : call 0x342c2
0x0000000000037132 : call 0x43c02
0x00000000000d7e18 : call 0x440e2
0x000000000008281a : call 0x4f242
0x0000000000112898 : call 0x4f362
0x00000000000531a3 : call 0x4f482
0x000000000004c611 : call 0x68822
0x000000000005f97a : call 0x6bc52
0x00000000000f38ca : call 0x6fae2
0x00000000000748a0 : call 0x71362
0x000000000005862d : call 0x748b2
0x00000000000f8db4 : call 0x75052
0x000000000007a479 : call 0x766c2
0x000000000007a517 : call 0x76f22
0x000000000007a546 : call 0x76ff2
0x000000000002220b : call 0x7ec42
0x0000000000043c29 : call 0x80652
0x0000000000078004 : call 0x84302
0x00000000001082e9 : call 0x845a2
0x000000000002da2f : call 0x8a502
0x000000000005e9ed : call 0x9b492
0x000000000005f5b9 : call 0x9c002
0x00000000000c7008 : call 0xc32f2
0x00000000000fef3d : call 0xdb962
0x00000000000fef3c : call 0xdb963
0x00000000000dfa64 : call 0xdbd62
0x0000000000077c9f : call 0xe47a2
0x0000000000149ca7 : call 0xe5fa2
0x000000000005ff0b : call 0xec112
0x00000000000f2fe7 : call 0xefae2
0x00000000000f3655 : call 0xf00b2
0x00000000001089f3 : call 0xf54b2
0x0000000000068a3d : call 0xf54e2
0x00000000000e92f0 : call 0xf5502
0x00000000000e930a : call 0xf5562
0x000000000015a6ba : call 0xffffffffab2371b0
0x0000000000094de4 : call 0xffffffffc3094df4
0x0000000000098d56 : call 0xffffffffc30e1aac
0x0000000000098d6f : call 0xffffffffc30e1ac5
0x0000000000041108 : call 0xffffffffc33d5912
0x000000000005bba5 : call 0xffffffffc33f07af
0x000000000008e2ea : call 0xffffffffc3422ff7
0x000000000009dbf9 : call 0xffffffffc343240a
0x00000000000e241a : call 0xffffffffc3476c24
0x0000000000072cd5 : call 0xffffffffc3636e3b
0x000000000010463e : call 0xffffffffc3998b4b
0x0000000000141505 : call 0xffffffffc39a241e
0x0000000000142585 : call 0xffffffffc39a349e
0x0000000000084677 : call 0xffffffffc3d8cfc8
0x000000000007e9a7 : call 0xffffffffc40072f8
0x00000000000801a7 : call 0xffffffffc4008af8
0x000000000017d368 : call 0xffffffffd817c555
0x0000000000032aa8 : call 0xffffffffe284ed38
0x00000000000f2ac7 : call 0xffffffffead0ed57
0x000000000011442f : call qword ptr [r10]
0x0000000000076d5f : call qword ptr [r14]
0x00000000000ba867 : call qword ptr [r15]
0x000000000015e39b : call qword ptr [rax + 0x10fff534]
0x000000000015e3d3 : call qword ptr [rax + 0x10fff5b7]
0x000000000016aacb : call qword ptr [rax + 0x10fffc8a]
0x000000000016aac3 : call qword ptr [rax + 0x10fffc8b]
0x000000000016aabb : call qword ptr [rax + 0x10fffc8c]
0x000000000016aab3 : call qword ptr [rax + 0x10fffc8d]
0x000000000016aaab : call qword ptr [rax + 0x10fffc8e]
0x000000000015f68b : call qword ptr [rax + 0x17fff78a]
0x000000000016a4bb : call qword ptr [rax + 0x20fffc6c]
0x000000000016a893 : call qword ptr [rax + 0x20fffc93]
0x000000000016a67b : call qword ptr [rax + 0x20fffc96]
0x000000000016af9b : call qword ptr [rax + 0x20fffcae]
0x000000000016ad8b : call qword ptr [rax + 0x20fffcba]
0x000000000016ab73 : call qword ptr [rax + 0x20fffcbd]
0x00000000000a661e : call qword ptr [rax - 0x16fe3d7d]
0x000000000016a637 : call qword ptr [rax - 0x1f0003b1]
0x000000000016a5e3 : call qword ptr [rax - 0x1f0003b8]
0x000000000016a457 : call qword ptr [rax - 0x1f0003cf]
0x000000000016a46b : call qword ptr [rax - 0x1f0003dd]
0x0000000000169feb : call qword ptr [rax - 0x1f00043b]
0x0000000000169f1b : call qword ptr [rax - 0x2f00049c]
0x00000000000f7f2e : call qword ptr [rax - 0x3c0776b8]
0x0000000000107f2e : call qword ptr [rax - 0x3c41f0b8]
0x000000000003246c : call qword ptr [rax - 0x3d]
0x000000000000306f : call qword ptr [rax]
0x000000000015edef : call qword ptr [rbx + 0x13fff6d4]
0x000000000016ec8b : call qword ptr [rbx + rax*8]
0x000000000000359e : call qword ptr [rbx]
0x0000000000007081 : call qword ptr [rcx]
0x000000000015f807 : call qword ptr [rdi + 0x10fff787]
0x00000000000aeb94 : call qword ptr [rdi]
0x000000000016a727 : call qword ptr [rdx + 0x22fffc98]
0x000000000007e2b4 : call qword ptr [rdx]
0x000000000016a6c3 : call qword ptr [rsi + 0x26fffc95]
0x000000000016abbb : call qword ptr [rsi + 0x26fffcbc]
0x0000000000076d60 : call qword ptr [rsi]
0x0000000000028959 : call r12
0x0000000000021470 : call r14
0x00000000000233e0 : call r15
0x0000000000066473 : call r8
0x00000000000202df : call rax
0x00000000000210e5 : call rbx
0x0000000000021ad7 : call rcx
0x00000000000233e1 : call rdi
0x0000000000035916 : call rdx
0x0000000000021471 : call rsi
0x000000000002895a : call rsp
0x000000000012ac87 : cdq ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000e2763 : cdq ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000018a30d : cdq ; add dword ptr [rax], eax ; add byte ptr [rax - 9], dl ; call qword ptr [rbx]
0x000000000018a345 : cdq ; add dword ptr [rax], eax ; clc ; idiv r15 ; ret
0x000000000015d30d : cdq ; call rax
0x000000000016a725 : cdq ; cld ; call qword ptr [rdx + 0x22fffc98]
0x0000000000035f44 : cdq ; idiv rsi ; ret
0x000000000015a5c0 : cdq ; in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x000000000015d32d : cdq ; inc eax ; cdq ; call rax
0x000000000015d335 : cdq ; jmp rax
0x00000000000bafd3 : cdq ; mov dr1, esp ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000f802a : cdq ; mov rax, rdi ; ret
0x00000000000631ce : cdq ; ret
0x000000000004cb33 : cdq ; ret 0x34
0x00000000000e037e : cdqe ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x00000000001046dd : cdqe ; shr rax, 4 ; ret
0x000000000003df0f : clc ; adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8348
0x00000000000e1b48 : clc ; add al, 0xf ; xchg eax, ebp ; ret 0xdaf7
0x000000000004b351 : clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000376d8 : clc ; add byte ptr [rax + rax], cl ; add byte ptr [rbp + 0x21], dh ; ret
0x00000000000a6ec4 : clc ; add byte ptr cs:[rax + 0x39], cl ; ret
0x000000000006a61e : clc ; add cl, byte ptr [rax - 0x77] ; ret
0x0000000000052678 : clc ; add cl, byte ptr [rax - 0x77] ; ret 0x51ff
0x00000000000dbd06 : clc ; add cl, byte ptr [rdi] ; ret 0xfc3
0x0000000000089d35 : clc ; add dword ptr [rax - 0x77], ecx ; ret
0x0000000000117311 : clc ; add dword ptr [rbp - 0x14], esi ; mov rax, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x00000000000faae1 : clc ; add dword ptr [rbp - 0x6bf0fdb8], ecx ; ret 0x8b48
0x000000000007bd24 : clc ; add dword ptr [rbp - 0x77], ecx ; retf 0xf44
0x0000000000031135 : clc ; add dword ptr [rbx - 0x7cb70030], eax ; ret
0x00000000000fa5c2 : clc ; add dword ptr [rcx - 0x73], eax ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8b48
0x000000000008addb : clc ; add dword ptr [rdi - 0x27], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000098de4 : clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xfd83
0x00000000001038e5 : clc ; add eax, 0x10 ; ret
0x00000000000abd19 : clc ; add eax, 0x2907f9c1 ; ret 0x8944
0x000000000010c681 : clc ; add esi, dword ptr [rsi + 0xb] ; mov eax, 2 ; ret
0x00000000000c2bce : clc ; add esi, dword ptr [rsi + rax - 0xd] ; ret
0x000000000008f1c6 : clc ; add rax, r8 ; ret
0x0000000000083688 : clc ; add rax, rcx ; ret
0x000000000002c857 : clc ; add rsp, 0x18 ; ret
0x00000000000e2782 : clc ; and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8041
0x0000000000173c18 : clc ; and ch, ah ; call qword ptr [rcx]
0x000000000002c1b1 : clc ; and eax, 0x7f ; ret
0x00000000000f96e7 : clc ; and eax, 0xffffff ; ret
0x00000000000f96c1 : clc ; bswap eax ; ret
0x000000000016ec8a : clc ; call qword ptr [rbx + rax*8]
0x000000000018df02 : clc ; call qword ptr [rbx]
0x000000000018ea02 : clc ; call qword ptr [rcx]
0x000000000018cec2 : clc ; call qword ptr [rdi]
0x000000000018db32 : clc ; call qword ptr [rdx]
0x000000000018d3ba : clc ; call qword ptr [rsi]
0x0000000000190c7a : clc ; call rbx
0x0000000000191042 : clc ; call rcx
0x000000000018ddd2 : clc ; call rdx
0x000000000016ea7a : clc ; call rsp
0x0000000000033c02 : clc ; clc ; jne 0x33bf6 ; xor eax, eax ; ret
0x0000000000033c52 : clc ; clc ; jne 0x33c46 ; xor eax, eax ; ret
0x0000000000042311 : clc ; clc ; jne 0x42307 ; mov rax, rdx ; ret
0x0000000000103721 : clc ; cmc ; je 0x10371d ; pop rbx ; ret
0x000000000007bcfc : clc ; cmovne rax, rdx ; ret
0x0000000000003b06 : clc ; cmp eax, ecx ; mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x0000000000145559 : clc ; cmp rcx, rax ; jne 0x14558b ; xor eax, eax ; ret
0x0000000000145558 : clc ; cmp rcx, rax ; jne 0x14558c ; xor eax, eax ; ret
0x0000000000146399 : clc ; cmp rcx, rax ; jne 0x1463cb ; xor eax, eax ; ret
0x0000000000146398 : clc ; cmp rcx, rax ; jne 0x1463cc ; xor eax, eax ; ret
0x0000000000035f42 : clc ; cqo ; idiv rsi ; ret
0x000000000007d040 : clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x00000000000726b6 : clc ; dec dword ptr [rax + 0xf] ; ret 0x938b
0x0000000000103788 : clc ; dec dword ptr [rax - 0x75] ; add byte ptr [r8 + 1], r9b ; ret
0x000000000002be27 : clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000078905 : clc ; dec dword ptr [rax - 0x77] ; ret 0x8b4c
0x000000000006d47e : clc ; dec dword ptr [rax - 0x77] ; retf
0x0000000000052e72 : clc ; dec dword ptr [rax - 0x77] ; ror dword ptr [rdi], -0x7c ; ret
0x00000000000e3133 : clc ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf 0
0x000000000003fffd : clc ; dec dword ptr [rdi] ; ret 0x8341
0x0000000000115249 : clc ; dec dword ptr [rdi] ; test byte ptr [rdi - 0x7d000000], al ; ret 0x3901
0x000000000006f39d : clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x000000000016f0c2 : clc ; dec esp ; fild dword ptr [rcx] ; add byte ptr [rdx + rcx*8 - 8], dl ; jmp rsp
0x000000000016eca2 : clc ; dec esp ; ret
0x000000000016eefa : clc ; dec esp ; rol dword ptr [rcx], 1 ; add byte ptr [rbx - 8], dh ; jmp rsp
0x0000000000161074 : clc ; hlt ; cli ; call qword ptr [rax]
0x000000000018a348 : clc ; idiv r15 ; ret
0x0000000000003030 : clc ; imul ebp, dword ptr [rsi], -0x74 ; int1 ; mov dr0, word ptr [rax] ; retf
0x000000000016ed9a : clc ; inc dword ptr [rbx + rcx*8 + 0x70640001] ; clc ; call rsp
0x000000000016ed62 : clc ; inc dword ptr [rcx + rcx*8 + 0x63140001] ; clc ; call rsp
0x000000000016f0d2 : clc ; inc dword ptr [rsp + rbx*8] ; add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; retf -8
0x0000000000025ac3 : clc ; jg 0x25a56 ; sal dword ptr [rsi - 0x29], 0x2d ; ret 0
0x0000000000099217 : clc ; jg 0x99217 ; int1 ; mov eax, eax ; ret
0x000000000018e1e2 : clc ; jmp qword ptr [rax]
0x000000000018faf2 : clc ; jmp qword ptr [rbx]
0x000000000018fe92 : clc ; jmp qword ptr [rcx]
0x000000000018d332 : clc ; jmp qword ptr [rdi]
0x000000000018e5d2 : clc ; jmp qword ptr [rdx]
0x0000000000047d5c : clc ; jmp rax
0x0000000000191092 : clc ; jmp rbx
0x000000000018d632 : clc ; jmp rdi
0x000000000018d1ca : clc ; jmp rsi
0x000000000016ec82 : clc ; jmp rsp
0x00000000001494ea : clc ; jne 0x1495f7 ; ret
0x00000000001494e9 : clc ; jne 0x1495f8 ; ret
0x0000000000171ac8 : clc ; jne 0x171ab9 ; call qword ptr [rdx]
0x0000000000033c03 : clc ; jne 0x33bf5 ; xor eax, eax ; ret
0x0000000000033c53 : clc ; jne 0x33c45 ; xor eax, eax ; ret
0x0000000000042312 : clc ; jne 0x42306 ; mov rax, rdx ; ret
0x000000000009aeed : clc ; jne 0x9af01 ; ret
0x000000000016f062 : clc ; lcall ptr [rcx + rbx*8 + 1] ; add ah, dh ; ret 0xfff8
0x000000000016f0ea : clc ; lcall ptr [rsp + rbx*8 - 0x32fbffff] ; clc ; call rsp
0x00000000000b89e8 : clc ; leave ; ret
0x000000000016f2ea : clc ; ljmp ptr [rax + rbp*8 + 0x240001] ; stc ; call rsp
0x00000000000e3010 : clc ; mov byte ptr [r8 - 1], 0 ; ret
0x000000000008ed88 : clc ; mov byte ptr [rdi + 6], 0 ; ret
0x0000000000159222 : clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x000000000006a294 : clc ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001201df : clc ; mov eax, 0x3e ; syscall
0x000000000011aa52 : clc ; mov eax, 3 ; syscall
0x000000000015f828 : clc ; mov esi, edi ; call qword ptr [rax]
0x0000000000003834 : clc ; mov gs, word ptr [rbx] ; retf 0x707d
0x000000000012d9d7 : clc ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000012e347 : clc ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000133297 : clc ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000012e547 : clc ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000133207 : clc ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000012e747 : clc ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000133177 : clc ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000012d9f3 : clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000008441e : clc ; mov qword ptr [rdi], rcx ; ret
0x000000000012955d : clc ; mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x000000000014655c : clc ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x0000000000083f9a : clc ; mov qword ptr [rdi], rsi ; ret
0x000000000005333b : clc ; mov r15d, 1 ; jmp rax
0x0000000000043ba2 : clc ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x0000000000020afc : clc ; neg eax ; ret
0x000000000000e659 : clc ; or al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000d584f : clc ; or byte ptr [rax - 0x77], cl ; ret 0x830f
0x00000000000d3843 : clc ; or cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xd108
0x000000000006a2af : clc ; or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000074c5d : clc ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000076c75 : clc ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006baf4 : clc ; push qword ptr [rax + rcx + 0x5b] ; ret
0x0000000000074a77 : clc ; push qword ptr [rbp + 0x5b] ; pop rbp ; pop r12 ; ret
0x000000000006dbea : clc ; push qword ptr [rbp + 2] ; pop rbx ; ret
0x0000000000066e20 : clc ; push qword ptr [rbp + rbp*4 - 0x77] ; ret 0xe283
0x000000000011e6bf : clc ; push qword ptr [rbp + rcx + 0x48] ; add esp, 8 ; ret
0x00000000000b3fed : clc ; push qword ptr [rbp + rsi - 0x77] ; ret 0xe283
0x00000000000f5ea1 : clc ; push qword ptr [rbp - 0xe] ; xor eax, eax ; leave ; ret
0x000000000010164c : clc ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000016ef92 : clc ; push qword ptr [rsp + rdx*8 - 0x537bffff] ; clc ; call rsp
0x000000000016ed82 : clc ; push rsp ; retf 1
0x0000000000002bd9 : clc ; ret
0x0000000000169612 : clc ; ret 0x6e1f
0x00000000001261b4 : clc ; rol ch, 1 ; jns 0x126195 ; retf -0x152d
0x0000000000126304 : clc ; rol ch, 1 ; jns 0x1262e5 ; retf -0x152d
0x0000000000126454 : clc ; rol ch, 1 ; jns 0x126435 ; retf -0x152d
0x00000000001265a4 : clc ; rol ch, 1 ; jns 0x126585 ; retf -0x152d
0x00000000001266f4 : clc ; rol ch, 1 ; jns 0x1266d5 ; retf -0x152d
0x0000000000126844 : clc ; rol ch, 1 ; jns 0x126825 ; retf -0x152d
0x0000000000126994 : clc ; rol ch, 1 ; jns 0x126975 ; retf -0x152d
0x0000000000126ae4 : clc ; rol ch, 1 ; jns 0x126ac5 ; retf -0x152d
0x0000000000126c34 : clc ; rol ch, 1 ; jns 0x126c15 ; retf -0x152d
0x0000000000126d84 : clc ; rol ch, 1 ; jns 0x126d65 ; retf -0x152d
0x0000000000126ed4 : clc ; rol ch, 1 ; jns 0x126eb5 ; retf -0x152d
0x0000000000127024 : clc ; rol ch, 1 ; jns 0x127005 ; retf -0x152d
0x0000000000127174 : clc ; rol ch, 1 ; jns 0x127155 ; retf -0x152d
0x00000000001272c4 : clc ; rol ch, 1 ; jns 0x1272a5 ; retf -0x152d
0x0000000000127414 : clc ; rol ch, 1 ; jns 0x1273f5 ; retf -0x152d
0x0000000000127884 : clc ; rol ch, 1 ; jns 0x127865 ; retf -0x152d
0x0000000000127a04 : clc ; rol ch, 1 ; jns 0x1279e5 ; retf -0x152d
0x0000000000127b84 : clc ; rol ch, 1 ; jns 0x127b65 ; retf -0x152d
0x0000000000127d04 : clc ; rol ch, 1 ; jns 0x127ce5 ; retf -0x152d
0x0000000000127e84 : clc ; rol ch, 1 ; jns 0x127e65 ; retf -0x152d
0x0000000000128004 : clc ; rol ch, 1 ; jns 0x127fe5 ; retf -0x152d
0x0000000000128184 : clc ; rol ch, 1 ; jns 0x128165 ; retf -0x152d
0x0000000000128304 : clc ; rol ch, 1 ; jns 0x1282e5 ; retf -0x152d
0x0000000000128484 : clc ; rol ch, 1 ; jns 0x128465 ; retf -0x152d
0x0000000000128604 : clc ; rol ch, 1 ; jns 0x1285e5 ; retf -0x152d
0x0000000000128784 : clc ; rol ch, 1 ; jns 0x128765 ; retf -0x152d
0x0000000000128904 : clc ; rol ch, 1 ; jns 0x1288e5 ; retf -0x152d
0x0000000000128a84 : clc ; rol ch, 1 ; jns 0x128a65 ; retf -0x152d
0x0000000000128c04 : clc ; rol ch, 1 ; jns 0x128be5 ; retf -0x152d
0x0000000000128d84 : clc ; rol ch, 1 ; jns 0x128d65 ; retf -0x152d
0x00000000000f96d1 : clc ; ror ax, 8 ; ret
0x00000000000038fc : clc ; salc ; jb 0x3980 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x0000000000035ee3 : clc ; sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x00000000000f939b : clc ; sar rax, 6 ; ret
0x00000000000c0824 : clc ; sbb cl, al ; cli ; sbb byte ptr [rcx], bh ; ret 0x850f
0x0000000000116d02 : clc ; sbb dword ptr [rcx + 0xf], eax ; ret 0x91eb
0x000000000004282a : clc ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x00000000000f9767 : clc ; shr eax, 0x18 ; ret
0x0000000000003cd4 : clc ; sub al, 0x58 ; mov esi, 0xcf8cb236 ; retf
0x0000000000125c3c : clc ; sub rax, r8 ; ret
0x0000000000125e91 : clc ; sub rax, rdx ; ret
0x0000000000032fc0 : clc ; syscall
0x0000000000182e98 : clc ; test esi, ebp ; jmp qword ptr [rcx]
0x0000000000029ae4 : clc ; test rax, rax ; je 0x29af2 ; call rax
0x0000000000174238 : clc ; xor ebp, esp ; call qword ptr [rax]
0x0000000000185a38 : clc ; xor esi, esi ; jmp qword ptr [rcx]
0x0000000000067da0 : cld ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x38b
0x0000000000175f8c : cld ; add byte ptr [rax], al ; add al, dh ; out dx, al ; jmp qword ptr [rcx]
0x00000000000b9722 : cld ; add byte ptr [rax], al ; ret
0x0000000000174104 : cld ; add byte ptr ss:[rax], al ; cwde ; sub ebp, esp ; call qword ptr [rdx]
0x000000000002ac98 : cld ; add byte ptr ss:[rcx - 0x77], cl ; ret 0x850f
0x0000000000184c04 : cld ; add dword ptr [r8], eax ; sub bh, dh ; cmc ; call qword ptr [rax]
0x000000000009911f : cld ; add eax, dword ptr [rax] ; pop rbx ; ret
0x00000000000e2848 : cld ; and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8041
0x000000000016aaca : cld ; call qword ptr [rax + 0x10fffc8a]
0x000000000016aac2 : cld ; call qword ptr [rax + 0x10fffc8b]
0x000000000016aaba : cld ; call qword ptr [rax + 0x10fffc8c]
0x000000000016aab2 : cld ; call qword ptr [rax + 0x10fffc8d]
0x000000000016aaaa : cld ; call qword ptr [rax + 0x10fffc8e]
0x000000000016a4ba : cld ; call qword ptr [rax + 0x20fffc6c]
0x000000000016a892 : cld ; call qword ptr [rax + 0x20fffc93]
0x000000000016a67a : cld ; call qword ptr [rax + 0x20fffc96]
0x000000000016af9a : cld ; call qword ptr [rax + 0x20fffcae]
0x000000000016ad8a : cld ; call qword ptr [rax + 0x20fffcba]
0x000000000016ab72 : cld ; call qword ptr [rax + 0x20fffcbd]
0x000000000016a636 : cld ; call qword ptr [rax - 0x1f0003b1]
0x000000000016a5e2 : cld ; call qword ptr [rax - 0x1f0003b8]
0x000000000016a456 : cld ; call qword ptr [rax - 0x1f0003cf]
0x000000000016a46a : cld ; call qword ptr [rax - 0x1f0003dd]
0x000000000016a2fe : cld ; call qword ptr [rax]
0x000000000017cc5a : cld ; call qword ptr [rbx]
0x000000000016a726 : cld ; call qword ptr [rdx + 0x22fffc98]
0x000000000016a746 : cld ; call qword ptr [rdx]
0x000000000016a6c2 : cld ; call qword ptr [rsi + 0x26fffc95]
0x000000000016abba : cld ; call qword ptr [rsi + 0x26fffcbc]
0x000000000016a6a2 : cld ; call qword ptr [rsi]
0x000000000016a302 : cld ; call rax
0x000000000016a736 : cld ; call rdx
0x000000000016a6d2 : cld ; call rsi
0x000000000016a7fe : cld ; call rsp
0x0000000000184404 : cld ; cmp dword ptr [rcx], eax ; add byte ptr [rax], bl ; fdiv st(5) ; jmp qword ptr [rcx]
0x00000000001495e2 : cld ; cmp eax, dword ptr [rsi - 4] ; jne 0x1495f8 ; xor eax, eax ; ret
0x00000000001495e1 : cld ; cmp eax, dword ptr [rsi - 4] ; jne 0x1495f9 ; xor eax, eax ; ret
0x00000000000c314c : cld ; cmp esi, dword ptr [rdi + 4] ; jl 0xc3147 ; ret
0x00000000000aa88e : cld ; dec dword ptr [rax + 0x39] ; ret
0x00000000000b9bc0 : cld ; dec dword ptr [rax - 0x77] ; ret
0x00000000000bb929 : cld ; dec dword ptr [rax - 0x77] ; ret 0x16eb
0x000000000011bb3f : cld ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000bafd5 : cld ; dec dword ptr [rax - 0x7d] ; ret
0x000000000016ab5e : cld ; dec esi ; mov eax, 0xbf50fffc ; cld ; jmp rax
0x000000000016a7da : cld ; dec esi ; xchg eax, edx ; cld ; push qword ptr [rdx + rdx*4 - 4] ; jmp rsp
0x0000000000032bc7 : cld ; fld xword ptr [rsp + 8] ; fscale ; fstp st(1) ; ret
0x000000000015dabd : cld ; hlt ; jmp rsp
0x000000000017f004 : cld ; in eax, 0 ; add al, ch ; call qword ptr [rbx]
0x000000000016a466 : cld ; inc dword ptr [rax + 0x22] ; cld ; call qword ptr [rax - 0x1f0003dd]
0x000000000016a452 : cld ; inc dword ptr [rax + 0x30] ; cld ; call qword ptr [rax - 0x1f0003cf]
0x000000000016a3e6 : cld ; inc dword ptr [rax + 0x39] ; cld ; jmp qword ptr [rax]
0x000000000016a366 : cld ; inc dword ptr [rax + 0x3a] ; cld ; jmp qword ptr [rax]
0x000000000016a336 : cld ; inc dword ptr [rax + 0x42] ; cld ; inc dword ptr [rax + 0x44] ; cld ; call rax
0x000000000016a33a : cld ; inc dword ptr [rax + 0x44] ; cld ; call rax
0x000000000016a632 : cld ; inc dword ptr [rax + 0x4e] ; cld ; call qword ptr [rax - 0x1f0003b1]
0x000000000016a542 : cld ; inc dword ptr [rax + 0x60] ; cld ; jmp qword ptr [rax]
0x000000000016a50e : cld ; inc dword ptr [rax + 0x66] ; cld ; jmp qword ptr [rax]
0x000000000016a642 : cld ; inc dword ptr [rax - 0x2f0003ad] ; push rsp ; cld ; jmp qword ptr [rax]
0x000000000016a5ee : cld ; inc dword ptr [rax - 0x2f0003b4] ; cld ; jmp qword ptr [rax]
0x000000000016a476 : cld ; inc dword ptr [rax - 0x2f0003d9] ; sub ah, bh ; jmp qword ptr [rax]
0x000000000016a422 : cld ; inc dword ptr [rax - 0x2f0003e0] ; and esp, edi ; jmp qword ptr [rax]
0x000000000016ab7e : cld ; inc dword ptr [rax - 0x44] ; cld ; call rax
0x000000000016ad96 : cld ; inc dword ptr [rax - 0x47] ; cld ; call rax
0x000000000016a686 : cld ; inc dword ptr [rax - 0x6b] ; cld ; call rax
0x000000000016a2f6 : cld ; inc dword ptr [rax - 0x7f0003be] ; cld ; call qword ptr [rax]
0x000000000016a36e : cld ; inc dword ptr [rax] ; cld ; jmp rax
0x000000000016aa9e : cld ; inc dword ptr [rax] ; mov ah, bh ; jmp qword ptr [rax + 0x20fffc8f]
0x000000000016ad86 : cld ; inc dword ptr [rax] ; mov ebx, 0xba90fffc ; cld ; jmp qword ptr [rax]
0x000000000016ab6e : cld ; inc dword ptr [rax] ; mov esi, 0xbd90fffc ; cld ; jmp qword ptr [rax]
0x000000000016a676 : cld ; inc dword ptr [rax] ; xchg eax, edi ; cld ; call qword ptr [rax + 0x20fffc96]
0x000000000016a88e : cld ; inc dword ptr [rax] ; xchg eax, esp ; cld ; call qword ptr [rax + 0x20fffc93]
0x000000000016acf2 : cld ; inc dword ptr [rbp + rdi*4 - 4] ; call rsp
0x00000000000991fd : cld ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x0000000000103211 : cld ; inc dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000190a04 : cld ; inc dword ptr [rcx] ; add byte ptr [rax], bl ; ret
0x000000000016ac2a : cld ; inc dword ptr [rdx - 0x42] ; cld ; call rdx
0x000000000016a732 : cld ; inc dword ptr [rdx - 0x69] ; cld ; call rdx
0x000000000016a722 : cld ; inc dword ptr [rdx] ; cdq ; cld ; call qword ptr [rdx + 0x22fffc98]
0x000000000016a7fa : cld ; inc dword ptr [rsi + rdx*4 - 4] ; call rsp
0x000000000016abc6 : cld ; inc dword ptr [rsi - 0x45] ; cld ; call rsi
0x000000000016a6ce : cld ; inc dword ptr [rsi - 0x6c] ; cld ; call rsi
0x000000000016abb6 : cld ; inc dword ptr [rsi] ; mov ebp, 0xbc96fffc ; cld ; jmp qword ptr [rsi]
0x000000000016a6be : cld ; inc dword ptr [rsi] ; xchg eax, esi ; cld ; call qword ptr [rsi + 0x26fffc95]
0x000000000016ad76 : cld ; inc eax ; mov esp, 0xbc50fffc ; cld ; jmp rax
0x000000000016a652 : cld ; inc eax ; pop rax ; cld ; call qword ptr [rax]
0x000000000016a5fe : cld ; inc eax ; push rcx ; cld ; call qword ptr [rax]
0x000000000016a486 : cld ; inc eax ; sub al, 0xfc ; call qword ptr [rax]
0x000000000016ac4a : cld ; inc edx ; mov edx, 0xba52fffc ; cld ; jmp rdx
0x000000000016aba6 : cld ; inc esi ; mov esi, 0xbe56fffc ; cld ; jmp rsi
0x000000000016ad12 : cld ; inc esp ; mov ecx, 0xb954fffc ; cld ; jmp rsp
0x0000000000188204 : cld ; ja 0x18820f ; add byte ptr [rax], ch ; sal esi, 1 ; jmp qword ptr [rsi]
0x000000000016afd2 : cld ; jmp qword ptr [rax + 0x10fffcaf]
0x000000000016adce : cld ; jmp qword ptr [rax + 0x10fffcb0]
0x000000000016ab22 : cld ; jmp qword ptr [rax + 0x20fffc6c]
0x000000000016aae6 : cld ; jmp qword ptr [rax + 0x20fffc6d]
0x000000000016ab2a : cld ; jmp qword ptr [rax + 0x20fffc6f]
0x000000000016aaee : cld ; jmp qword ptr [rax + 0x20fffc70]
0x000000000016ab32 : cld ; jmp qword ptr [rax + 0x20fffc72]
0x000000000016aaf6 : cld ; jmp qword ptr [rax + 0x20fffc73]
0x000000000016ab3a : cld ; jmp qword ptr [rax + 0x20fffc75]
0x000000000016aafe : cld ; jmp qword ptr [rax + 0x20fffc76]
0x000000000016ab42 : cld ; jmp qword ptr [rax + 0x20fffc78]
0x000000000016ab06 : cld ; jmp qword ptr [rax + 0x20fffc79]
0x000000000016ab4a : cld ; jmp qword ptr [rax + 0x20fffc7b]
0x000000000016ab0e : cld ; jmp qword ptr [rax + 0x20fffc7c]
0x000000000016ab52 : cld ; jmp qword ptr [rax + 0x20fffc7e]
0x000000000016ab16 : cld ; jmp qword ptr [rax + 0x20fffc7f]
0x000000000016aa8a : cld ; jmp qword ptr [rax + 0x20fffc8a]
0x000000000016aa82 : cld ; jmp qword ptr [rax + 0x20fffc8b]
0x000000000016aa7a : cld ; jmp qword ptr [rax + 0x20fffc8c]
0x000000000016aa72 : cld ; jmp qword ptr [rax + 0x20fffc8d]
0x000000000016aa6a : cld ; jmp qword ptr [rax + 0x20fffc8e]
0x000000000016aaa2 : cld ; jmp qword ptr [rax + 0x20fffc8f]
0x000000000016adc6 : cld ; jmp qword ptr [rax + 0x20fffcb1]
0x000000000016adbe : cld ; jmp qword ptr [rax + 0x20fffcb2]
0x000000000016adb6 : cld ; jmp qword ptr [rax + 0x20fffcb3]
0x000000000016adae : cld ; jmp qword ptr [rax + 0x20fffcb4]
0x000000000016a36a : cld ; jmp qword ptr [rax]
0x000000000017e07a : cld ; jmp qword ptr [rbx]
0x000000000016a72a : cld ; jmp qword ptr [rdx]
0x000000000016a69e : cld ; jmp qword ptr [rsi + 0x16fffc92]
0x000000000016a6c6 : cld ; jmp qword ptr [rsi]
0x000000000016a2e2 : cld ; jmp rax
0x000000000016a75a : cld ; jmp rdx
0x000000000016a6b6 : cld ; jmp rsi
0x000000000016a7e2 : cld ; jmp rsp
0x00000000001461a6 : cld ; jne 0x1463df ; xor eax, eax ; ret
0x00000000001495e5 : cld ; jne 0x1495f5 ; xor eax, eax ; ret
0x00000000001495e4 : cld ; jne 0x1495f6 ; xor eax, eax ; ret
0x0000000000149505 : cld ; jne 0x1495f7 ; ret
0x0000000000149504 : cld ; jne 0x1495f8 ; ret
0x00000000000c388b : cld ; lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000016af5a : cld ; lcall ptr [rdx + 0x2afffcae] ; scasb al, byte ptr [rdi] ; cld ; call rax
0x000000000016a91a : cld ; ljmp ptr [rax + rcx*4 - 0x77c30004] ; cld ; jmp rdx
0x000000000016af5e : cld ; ljmp ptr [rdx] ; scasb al, byte ptr [rdi] ; cld ; call rax
0x000000000016aeda : cld ; ljmp ptr [rsi + 0x3efffcae] ; scasb al, byte ptr [rdi] ; cld ; jmp rsp
0x0000000000159fa5 : cld ; lodsb al, byte ptr [rsi] ; loop 0x159f74 ; retf
0x000000000017bc04 : cld ; mov cl, 0 ; add byte ptr [rax], bh ; jrcxz 0x17bc02 ; jmp rbx
0x0000000000189404 : cld ; mov dword ptr [rcx], eax ; add al, ch ; push rsi ; call qword ptr [rax]
0x000000000012e162 : cld ; mov dword ptr [rdi - 4], edx ; ret
0x000000000012e365 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012e565 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012e765 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000084426 : cld ; mov dword ptr [rdi], ecx ; ret
0x0000000000129568 : cld ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x000000000014656e : cld ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x0000000000083fa8 : cld ; mov dword ptr [rdi], esi ; ret
0x0000000000105ca0 : cld ; mov dword ptr [rsi], eax ; mov eax, 1 ; ret
0x0000000000073320 : cld ; mov eax, 3 ; syscall
0x0000000000083fa2 : cld ; mov esi, dword ptr [rsi] ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000012dd96 : cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000133426 : cld ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012df76 : cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001333a6 : cld ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012e156 : cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000133326 : cld ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012dbb6 : cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001334a6 : cld ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000082320 : cld ; movsd dword ptr [rdi], dword ptr [rsi] ; or eax, dword ptr [rax] ; ret
0x0000000000043b5c : cld ; movss xmm0, dword ptr [rsp - 4] ; ret
0x000000000018f104 : cld ; out 1, al ; add byte ptr [rax + 0x71], bh ; clc ; call qword ptr [rdx]
0x000000000016a482 : cld ; push qword ptr [rax + 0x2b] ; cld ; inc eax ; sub al, 0xfc ; call qword ptr [rax]
0x000000000016a3fe : cld ; push qword ptr [rax + 0x35] ; cld ; jmp qword ptr [rax]
0x000000000016a37e : cld ; push qword ptr [rax + 0x36] ; cld ; push qword ptr [rax] ; cmp ah, bh ; call qword ptr [rax]
0x000000000016a3e2 : cld ; push qword ptr [rax + 0x37] ; cld ; inc dword ptr [rax + 0x39] ; cld ; jmp qword ptr [rax]
0x000000000016a682 : cld ; push qword ptr [rax + 0x40fffc95] ; xchg eax, ebp ; cld ; call rax
0x000000000016a5fa : cld ; push qword ptr [rax + 0x50] ; cld ; inc eax ; push rcx ; cld ; call qword ptr [rax]
0x000000000016a89a : cld ; push qword ptr [rax + 0x50fffc92] ; mov ah, bh ; call qword ptr [rax]
0x000000000016a64e : cld ; push qword ptr [rax + 0x57] ; cld ; inc eax ; pop rax ; cld ; call qword ptr [rax]
0x000000000016a34e : cld ; push qword ptr [rax] ; cld ; call qword ptr [rax]
0x000000000016a382 : cld ; push qword ptr [rax] ; cmp ah, bh ; call qword ptr [rax]
0x000000000016afce : cld ; push qword ptr [rax] ; mov al, 0xfc ; jmp qword ptr [rax + 0x10fffcaf]
0x000000000016a5aa : cld ; push qword ptr [rax] ; movsxd rdi, esp ; jmp qword ptr [rax]
0x000000000016acee : cld ; push qword ptr [rbp + rdi*4 - 0x42bb0004] ; cld ; call rsp
0x00000000000c3d33 : cld ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000016a72e : cld ; push qword ptr [rdx + 0x42fffc97] ; xchg eax, edi ; cld ; call rdx
0x000000000016a7de : cld ; push qword ptr [rdx + rdx*4 - 4] ; jmp rsp
0x000000000016ae4e : cld ; push qword ptr [rdx - 0x50] ; cld ; jmp rdx
0x000000000016a6ca : cld ; push qword ptr [rsi + 0x46fffc94] ; xchg eax, esp ; cld ; call rsi
0x000000000016a7f6 : cld ; push qword ptr [rsi + rdx*4 - 0x69bb0004] ; cld ; call rsp
0x000000000016a406 : cld ; push rax ; cmp ah, bh ; call rax
0x000000000016a38a : cld ; push rax ; cmp edi, esp ; call rax
0x000000000016ab8a : cld ; push rax ; mov edx, 0xba80fffc ; cld ; call qword ptr [rax]
0x000000000016ad62 : cld ; push rax ; mov esi, 0xbe80fffc ; cld ; call qword ptr [rax]
0x000000000016ae4a : cld ; push rdx ; mov al, 0xfc ; push qword ptr [rdx - 0x50] ; cld ; jmp rdx
0x000000000016ac36 : cld ; push rdx ; mov esp, 0xbc82fffc ; cld ; call qword ptr [rdx]
0x0000000000186104 : cld ; push rsi ; add dword ptr [rax], eax ; cwde ; cmp esi, esi ; jmp qword ptr [rcx]
0x000000000016abd2 : cld ; push rsi ; mov ecx, 0xb986fffc ; cld ; call qword ptr [rsi]
0x0000000000043b62 : cld ; ret
0x000000000005cc59 : cld ; retf
0x000000000017d504 : cld ; retf 0
0x000000000018d504 : cld ; retf 1
0x0000000000077ca0 : cld ; retf 6
0x00000000001586c3 : cld ; shr al, cl ; add al, 0x3d ; retf
0x0000000000173404 : cld ; sub dword ptr [rax], eax ; add byte ptr [rax + 7], cl ; in al, dx ; jmp qword ptr [rsi]
0x0000000000183604 : cld ; sub eax, dword ptr [rcx] ; add byte ptr [rax], bh ; wait ; cmc ; jmp qword ptr [rcx]
0x00000000001586d6 : cld ; test al, 0x97 ; xchg eax, esp ; ret
0x0000000000180104 : cld ; test byte ptr [rax], 0 ; cwde ; nop ; jmp qword ptr [rcx]
0x00000000000a7a0e : cld ; test edx, edx ; mov dword ptr [rsi + rcx], edx ; jne 0xa7a11 ; ret
0x0000000000146ff2 : cld ; vzeroupper ; ret
0x000000000003cf23 : cld ; xor byte ptr [rcx - 0x39], cl ; ret 0xffff
0x0000000000071680 : cld ; xor eax, 0x39480000 ; ret
0x00000000000365ed : cli ; adc byte ptr [rcx], ch ; ret 0xc269
0x00000000000a8a5c : cli ; adc cl, byte ptr [rax + 0x29] ; ret 0x6948
0x00000000000a89de : cli ; adc cl, byte ptr [rax + 0x29] ; ret 0x8948
0x000000000010573a : cli ; add al, 0x48 ; add edx, 1 ; syscall
0x000000000011eb5d : cli ; add al, 0x74 ; jl 0x11eaea ; ret 0x8380
0x00000000000da459 : cli ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret 0x4b01
0x00000000000a8c51 : cli ; add al, byte ptr [rbp + 0x29] ; out 0x29, eax ; retf -0x72bf
0x0000000000030626 : cli ; add al, byte ptr [rcx - 0xccc1e] ; inc dword ptr [rcx] ; ret 0xd089
0x00000000000a8c95 : cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x000000000004ab5f : cli ; add ch, byte ptr [rcx] ; retf -0x2e77
0x0000000000038263 : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x000000000003aa89 : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8949
0x0000000000038295 : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x000000000004e7ac : cli ; add cl, byte ptr [rax + 0x39] ; retf 0x97e
0x000000000006d4e7 : cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x0000000000098e82 : cli ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8444
0x0000000000084411 : cli ; add dword ptr [rdi + 0x15], esi ; jb 0x84421 ; mov byte ptr [rdi], cl ; ret
0x0000000000146c5b : cli ; add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x000000000014658c : cli ; add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000020bd2 : cli ; add eax, 0x488d4800 ; and dword ptr [rax - 0x77], ecx ; ret 0x894c
0x00000000000a80b3 : cli ; add ebp, dword ptr [rcx] ; ret 0x48d
0x00000000000037a1 : cli ; add ebx, ebp ; in al, -0x12 ; jne 0x3789 ; ret 0x975
0x0000000000118dd3 : cli ; and byte ptr [rcx + 1], al ; retf -0x72b3
0x00000000000e3070 : cli ; and byte ptr [rsp + rbp*8 + 0x41], dh ; mov byte ptr [rax - 1], 0 ; ret
0x000000000007a516 : cli ; call 0x76f23
0x000000000015a6b9 : cli ; call 0xffffffffab2371b1
0x0000000000161076 : cli ; call qword ptr [rax]
0x000000000017cbe2 : cli ; call qword ptr [rbx]
0x0000000000173b52 : cli ; call qword ptr [rdi]
0x000000000015ff9a : cli ; call rax
0x000000000016f93a : cli ; call rsp
0x0000000000184d69 : cli ; cmc ; jmp qword ptr [rcx]
0x00000000000d1505 : cli ; dec dword ptr [rax + 0x39] ; or byte ptr [r15], 0x84 ; retf
0x00000000000dd71b : cli ; dec dword ptr [rax + 0x39] ; ret
0x00000000000362a1 : cli ; dec dword ptr [rax + 0xf] ; ret
0x00000000000d1167 : cli ; dec dword ptr [rax + 1] ; ret
0x000000000007133b : cli ; dec dword ptr [rax - 0x75] ; and al, 8 ; jmp 0x71317
0x00000000000dee92 : cli ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf
0x00000000000e2c9f : cli ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rbx + 0x48], 0x39 ; ret
0x000000000017003a : cli ; dec dword ptr [rbp + rax*2 + 2] ; add ah, dl ; ret
0x00000000000dd592 : cli ; dec dword ptr [rbp + rcx*4 + 0x24] ; sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x000000000016fdba : cli ; dec dword ptr [rbp + rsi - 0x6bebfffe] ; cli ; jmp rsp
0x0000000000105a09 : cli ; dec dword ptr [rdi] ; test cl, bh ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; retf
0x000000000016fb6a : cli ; dec dword ptr [rsi + 0x48940002] ; cli ; jmp rsp
0x0000000000161042 : cli ; dec eax ; cli ; jmp rax
0x000000000016106a : cli ; dec eax ; hlt ; cli ; jmp rax
0x0000000000170142 : cli ; dec esp ; add al, byte ptr [rax] ; and al, 0xcf ; cli ; jmp rsp
0x00000000001701aa : cli ; dec esp ; add r8b, byte ptr [rax] ; and al, 0xd2 ; cli ; jmp rsp
0x000000000016fd6a : cli ; dec esp ; xor eax, dword ptr [rdx] ; add byte ptr [rsp + rax*4], ah ; cli ; jmp rsp
0x000000000015d979 : cli ; hlt ; call qword ptr [rdx]
0x000000000015dab8 : cli ; in al, -0xc ; jmp rsp
0x000000000014abd1 : cli ; in eax, dx ; call rax
0x000000000014abcd : cli ; in eax, dx ; lcall ptr [rax - 6] ; in eax, dx ; call rax
0x000000000014abe1 : cli ; in eax, dx ; lcall ptr [rax] ; cli ; in eax, dx ; call rax
0x000000000016fbda : cli ; inc dword ptr [rcx + rbp + 0x59d40002] ; cli ; call rsp
0x000000000016feea : cli ; inc dword ptr [rsp + rdi - 0x562bfffe] ; cli ; call rsp
0x000000000015ff9e : cli ; inc eax ; ret 0xfffa
0x00000000001700ca : cli ; inc esp ; add al, byte ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; retf
0x0000000000129099 : cli ; jg 0x1290ac ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000129552 : cli ; jg 0x129562 ; vzeroupper ; ret
0x0000000000146547 : cli ; jg 0x14655a ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x0000000000146c26 : cli ; jg 0x146c38 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000146f21 : cli ; jg 0x146f34 ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000147528 : cli ; jg 0x147538 ; vzeroupper ; ret
0x000000000015ff96 : cli ; jmp qword ptr [rax - 0x2f00053e]
0x00000000001748c2 : cli ; jmp qword ptr [rcx]
0x000000000017c9d2 : cli ; jmp qword ptr [rdi]
0x000000000015ff92 : cli ; jmp rax
0x0000000000030ebc : cli ; jmp rdx
0x000000000016fa1a : cli ; jmp rsp
0x0000000000033bac : cli ; jne 0x33ba8 ; mov eax, 1 ; ret
0x00000000000ba640 : cli ; jnp 0xba656 ; xchg eax, esp ; ret 0xb60f
0x000000000016fe32 : cli ; lcall ptr [rax + rdi - 0x62cbfffe] ; cli ; call rsp
0x000000000016fa12 : cli ; lcall ptr [rbp + rbx + 0x1f440002] ; cli ; jmp rsp
0x000000000016f96a : cli ; lcall ptr [rcx + rbx + 0xf940002] ; cli ; call rsp
0x000000000016f932 : cli ; lcall ptr [rdi + rdx + 0x4e40002] ; cli ; call rsp
0x000000000017007a : cli ; lcall ptr [rsi + rax*2 - 0x399bfffe] ; cli ; call rsp
0x000000000016fc4a : cli ; lcall ptr [rsp + rbp + 0x64440002] ; cli ; jmp rsp
0x00000000000260ad : cli ; loopne 0x260c8 ; test dword ptr [rax - 0x76fffffe], ecx ; retf 0x3bb
0x000000000012e568 : cli ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000f04c2 : cli ; mov rsi, r13 ; mov rdi, rbx ; call r14
0x00000000000fdae0 : cli ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x0000000000083a78 : cli ; movzx edx, dl ; sub eax, edx ; ret
0x000000000002a5da : cli ; or al, 0x76 ; ret 0x25e9
0x0000000000121546 : cli ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000a7a9e : cli ; or cl, byte ptr [rax + 0x29] ; ret 0x8941
0x000000000003df30 : cli ; or dword ptr [rdi], ecx ; xchg eax, edi ; ret 0xd284
0x00000000000802f8 : cli ; or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0x3145
0x000000000008029e : cli ; or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0xf631
0x000000000015ab41 : cli ; push 0x6e ; ja 0x15aace ; ret 0x48f
0x00000000001700ba : cli ; push qword ptr [rax + rcx*2 + 2] ; add ah, dl ; retf -6
0x0000000000161066 : cli ; push qword ptr [rax - 0x3700050c] ; hlt ; cli ; jmp rax
0x000000000015ffa2 : cli ; push rax ; ret 0xfffa
0x0000000000084339 : cli ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000002b21f : cli ; ret
0x00000000001595e5 : cli ; ret 0xac65
0x0000000000101b1b : cli ; retf 0
0x00000000000c0827 : cli ; sbb byte ptr [rcx], bh ; ret 0x850f
0x00000000000f4edb : cli ; setae al ; ret
0x000000000010012a : cli ; std ; jbe 0x100134 ; ret
0x00000000000f5b25 : cli ; syscall
0x0000000000159490 : cli ; test dl, bh ; retf -0x2081
0x000000000015822a : cli ; xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x0000000000125ab8 : cmc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000016c9ad : cmc ; add byte ptr [rax], al ; je 0x16c9c0 ; int1 ; jmp rsp
0x000000000014a54a : cmc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000015e39a : cmc ; call qword ptr [rax + 0x10fff534]
0x000000000015e3d2 : cmc ; call qword ptr [rax + 0x10fff5b7]
0x000000000015e39e : cmc ; call qword ptr [rax]
0x0000000000183cba : cmc ; call qword ptr [rbx]
0x000000000015dfa6 : cmc ; call qword ptr [rcx]
0x000000000015e30e : cmc ; call qword ptr [rdi]
0x000000000015e48a : cmc ; call qword ptr [rdx]
0x000000000015e382 : cmc ; call qword ptr [rsi]
0x000000000015e3ba : cmc ; call rax
0x000000000015e59e : cmc ; call rdi
0x0000000000184e92 : cmc ; call rdx
0x000000000015ddde : cmc ; call rsp
0x000000000002ac97 : cmc ; cld ; add byte ptr ss:[rcx - 0x77], cl ; ret 0x850f
0x0000000000161041 : cmc ; cli ; dec eax ; cli ; jmp rax
0x000000000015e8c9 : cmc ; cmc ; jmp rsp
0x00000000000cee99 : cmc ; dec dword ptr [rax + 0x63] ; ret
0x00000000000c529f : cmc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c8802 : cmc ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000000f6cf4 : cmc ; dec dword ptr [rax - 0x7f] ; ret
0x000000000015df7a : cmc ; dec dword ptr [rbp + 0x22] ; cmc ; call rsp
0x0000000000184b62 : cmc ; dec dword ptr [rbp + 5] ; add byte ptr [rax], al ; add al, 0xe5 ; retf 0
0x000000000015dd42 : cmc ; dec dword ptr [rbp + rbx - 0xb] ; jmp qword ptr [rsi]
0x000000000015e8c6 : cmc ; dec dword ptr [rbp + rsi*8 - 0xb] ; jmp rsp
0x00000000000c2e77 : cmc ; dec dword ptr [rcx + rcx*4 - 0x19] ; call 0x1f93f
0x00000000000c2ea0 : cmc ; dec dword ptr [rcx - 0x75] ; jge 0xc2eb6 ; call 0x1f940
0x000000000016d8a2 : cmc ; dec dword ptr [rsi + rdx*2 + 1] ; add byte ptr [rsp - 0xb], al ; jmp rsp
0x000000000015e59a : cmc ; dec ebp ; mov esi, 0xbed7fff5 ; cmc ; jmp rcx
0x000000000015e412 : cmc ; dec edi ; mov edx, 0xbad9fff5 ; cmc ; jmp rbx
0x000000000015df6e : cmc ; dec esi ; and ebp, esi ; call rsp
0x00000000000c2c84 : cmc ; inc dword ptr [rax + 0x7500637b] ; add al, 0x5b ; ret
0x000000000015e812 : cmc ; inc dword ptr [rax] ; mov ebp, 0xbd00fff5 ; cmc ; jmp qword ptr [rax]
0x000000000015e816 : cmc ; inc dword ptr [rax] ; mov ebp, 0xbd20fff5 ; cmc ; jmp rax
0x000000000015de6e : cmc ; inc dword ptr [rcx + 0x20] ; cmc ; call rsp
0x000000000015df76 : cmc ; inc dword ptr [rdi] ; and dh, ch ; dec dword ptr [rbp + 0x22] ; cmc ; call rsp
0x000000000015e306 : cmc ; inc dword ptr [rip - 0x13000abc] ; cmc ; call qword ptr [rdi]
0x000000000015e3be : cmc ; inc eax ; mov dh, 0xf5 ; call qword ptr [rax]
0x000000000015e3b6 : cmc ; inc eax ; mov dh, 0xf5 ; call rax
0x000000000015e596 : cmc ; inc ecx ; mov esi, 0xbecdfff5 ; cmc ; call rdi
0x000000000015ccc9 : cmc ; int1 ; ljmp ptr [rbx + rsi*8 - 0xf] ; jmp qword ptr [rsi]
0x0000000000103722 : cmc ; je 0x10371c ; pop rbx ; ret
0x000000000015e33a : cmc ; jmp qword ptr [rax]
0x000000000015defe : cmc ; jmp qword ptr [rbx - 0x2b000ade]
0x0000000000182d4a : cmc ; jmp qword ptr [rcx]
0x000000000015e2fe : cmc ; jmp qword ptr [rdi]
0x00000000001841a2 : cmc ; jmp qword ptr [rdx]
0x000000000015dd0a : cmc ; jmp qword ptr [rsi]
0x000000000015e3ae : cmc ; jmp rax
0x000000000015e41a : cmc ; jmp rbx
0x000000000015df6a : cmc ; jmp rcx
0x000000000015e89a : cmc ; jmp rdi
0x00000000001843c2 : cmc ; jmp rdx
0x000000000015e8a2 : cmc ; jmp rsp
0x000000000015e386 : cmc ; lcall ptr [rax + 0x2efff540] ; sub esi, ebp ; call qword ptr [rsi]
0x00000000000f97d4 : cmc ; lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x000000000016d8ea : cmc ; lcall ptr [rax + rbx*2 + 0x6c440001] ; cmc ; call rsp
0x00000000000c2f51 : cmc ; lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000015df8e : cmc ; lcall ptr [rsi + 0x22] ; cmc ; push qword ptr [rcx + 0x11] ; cmc ; call rsp
0x000000000015dd3e : cmc ; lcall ptr [rsi] ; adc dh, ch ; dec dword ptr [rbp + rbx - 0xb] ; jmp qword ptr [rsi]
0x000000000015e48e : cmc ; lcall ptr [rsp + rdi*4] ; cmc ; jmp qword ptr [rsi]
0x00000000000e322f : cmc ; lea ebp, dword ptr [rbx] ; add byte ptr [rax - 0x76b7ffc8], al ; ret
0x0000000000184c22 : cmc ; ljmp ptr [rbp] ; add byte ptr [rax], al ; add al, 0x51 ; retf 0
0x000000000015e336 : cmc ; ljmp ptr [rbx + rbp] ; cmc ; jmp qword ptr [rax]
0x000000000015df9a : cmc ; ljmp ptr [rbx] ; adc ch, dh ; call rsp
0x000000000015deea : cmc ; ljmp ptr [rbx] ; and dh, ch ; call rsp
0x000000000016d8ca : cmc ; ljmp ptr [rdi + rdx*2 + 0x68640001] ; cmc ; jmp rsp
0x000000000015ddd6 : cmc ; ljmp ptr [rsi + 0x63fff514] ; adc ebp, esi ; call rsp
0x000000000015e38a : cmc ; ljmp ptr [rsi] ; sub esi, ebp ; call qword ptr [rsi]
0x000000000015e332 : cmc ; ljmp ptr [rsi] ; sub esi, ebp ; ljmp ptr [rbx + rbp] ; cmc ; jmp qword ptr [rax]
0x00000000000028ef : cmc ; mov al, 0x1f ; retf
0x000000000015af69 : cmc ; mov ch, 0xab ; ret
0x00000000000e3a47 : cmc ; mov cl, 0xf9 ; inc dword ptr [rbp - 0x7cee8b40] ; ret
0x00000000001333aa : cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012ddee : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000f7d5d : cmc ; mov rbx, rax ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000148af3 : cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000157e17 : cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000015e3a6 : cmc ; push qword ptr [rax + 0x70fff5b6] ; mov dh, 0xf5 ; jmp rax
0x000000000015e3aa : cmc ; push qword ptr [rax - 0x4a] ; cmc ; jmp rax
0x000000000015e7f6 : cmc ; push qword ptr [rax] ; mov ebp, 0xbd20fff5 ; cmc ; jmp qword ptr [rax]
0x000000000015df92 : cmc ; push qword ptr [rcx + 0x11] ; cmc ; call rsp
0x000000000016da12 : cmc ; push qword ptr [rcx - 0x596bffff] ; cmc ; jmp rsp
0x000000000015defa : cmc ; push qword ptr [rsi - 0x5c000ade] ; and dh, ch ; call rsp
0x000000000015e3e6 : cmc ; push rax ; mov dh, 0xf5 ; call qword ptr [rax]
0x000000000015e3e2 : cmc ; push rax ; mov dh, 0xf5 ; push rax ; mov dh, 0xf5 ; call qword ptr [rax]
0x000000000015e802 : cmc ; push rax ; mov ebp, 0xbd20fff5 ; cmc ; jmp qword ptr [rax]
0x000000000015e7e2 : cmc ; push rax ; mov esp, 0xbcd0fff5 ; cmc ; jmp rax
0x000000000015e7de : cmc ; push rax ; mov esp, 0xbcf0fff5 ; cmc ; call rax
0x000000000015e8c2 : cmc ; push rcx ; hlt ; cmc ; dec dword ptr [rbp + rsi*8 - 0xb] ; jmp rsp
0x0000000000118886 : cmc ; ret 4
0x0000000000068f47 : cmc ; retf
0x0000000000148af7 : cmc ; sub eax, edx ; ret
0x000000000015a5a5 : cmc ; xlatb ; ret 0x4e27
0x000000000010456f : cmova eax, edi ; ret
0x00000000000f5c9c : cmova eax, edx ; add rsp, 0x28 ; ret
0x00000000000d2071 : cmova eax, edx ; ret
0x00000000000f9730 : cmova eax, esi ; bswap eax ; ret
0x00000000000a8b31 : cmova esi, edx ; imul esi, esi, 0x3c ; add eax, esi ; ret
0x0000000000076489 : cmovae eax, dword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000043fed : cmovae eax, edi ; ret
0x000000000010471c : cmovae eax, edx ; ret
0x0000000000076488 : cmovae rax, qword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000043fec : cmovae rax, rdi ; ret
0x000000000010471b : cmovae rax, rdx ; ret
0x00000000000d2059 : cmovb eax, edx ; ret
0x00000000000ea3fb : cmovb rax, rdx ; ret
0x000000000008037f : cmovbe eax, edx ; ret
0x000000000003652f : cmovbe edx, eax ; xor eax, eax ; mov qword ptr [rdi + 8], rdx ; ret
0x00000000000d1f8b : cmovbe esi, ecx ; mov eax, ecx ; syscall
0x00000000000d1f8a : cmovbe rsi, r9 ; mov eax, ecx ; syscall
0x0000000000064cc4 : cmove eax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x00000000000daffb : cmove eax, dword ptr [rsp] ; add rsp, 0x18 ; ret
0x00000000000e1cca : cmove eax, ebx ; pop rbx ; ret
0x0000000000099144 : cmove eax, ecx ; pop rbx ; ret
0x00000000000376f2 : cmove eax, ecx ; ret
0x0000000000084538 : cmove eax, edx ; add eax, 1 ; ret
0x00000000000a8872 : cmove eax, edx ; add rsp, 0x28 ; ret
0x000000000007d043 : cmove eax, edx ; add rsp, 8 ; ret
0x000000000009910c : cmove eax, edx ; pop rbx ; ret
0x000000000002bb9b : cmove eax, edx ; ret
0x00000000000c3001 : cmove eax, esi ; ret
0x0000000000073131 : cmove ebp, esp ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008ed21 : cmove ecx, dword ptr [rcx - 0x76b7fbb9] ; clc ; ret
0x000000000007092c : cmove edx, ecx ; mov dword ptr [rdi], edx ; ret
0x000000000006e3b0 : cmove r8, rcx ; ret
0x00000000000daffa : cmove rax, qword ptr [rsp] ; add rsp, 0x18 ; ret
0x00000000000e1cc9 : cmove rax, rbx ; pop rbx ; ret
0x0000000000099143 : cmove rax, rcx ; pop rbx ; ret
0x000000000009ad24 : cmove rax, rcx ; ret
0x0000000000084549 : cmove rax, rdx ; add eax, 1 ; ret
0x00000000000a8871 : cmove rax, rdx ; add rsp, 0x28 ; ret
0x000000000007d042 : cmove rax, rdx ; add rsp, 8 ; ret
0x000000000009910b : cmove rax, rdx ; pop rbx ; ret
0x000000000002bb9a : cmove rax, rdx ; ret
0x000000000006b58b : cmovg eax, ecx ; test rdx, rdx ; jne 0x6b589 ; ret
0x000000000007441b : cmovg eax, ecx ; test rdx, rdx ; jne 0x74419 ; ret
0x000000000009a6a2 : cmovg eax, edx ; ret
0x00000000000a82bc : cmovge eax, edx ; pop rbx ; ret
0x00000000000a82bb : cmovge rax, rdx ; pop rbx ; ret
0x00000000000b6b94 : cmovle eax, ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000a8291 : cmovle eax, edx ; pop rbx ; ret
0x00000000000a8290 : cmovle rax, rdx ; pop rbx ; ret
0x00000000001058a5 : cmovne eax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x00000000000362a4 : cmovne eax, ebx ; pop rbx ; ret
0x000000000003771e : cmovne eax, ecx ; ret
0x00000000000f9705 : cmovne eax, edi ; ret
0x000000000011c5f6 : cmovne eax, edx ; add rsp, 8 ; ret
0x000000000009916c : cmovne eax, edx ; pop rbx ; ret
0x000000000007bcfe : cmovne eax, edx ; ret
0x00000000000f06bc : cmovne eax, esi ; ret
0x00000000000362a3 : cmovne rax, rbx ; pop rbx ; ret
0x000000000011c5f5 : cmovne rax, rdx ; add rsp, 8 ; ret
0x000000000009916b : cmovne rax, rdx ; pop rbx ; ret
0x000000000007bcfd : cmovne rax, rdx ; ret
0x00000000000f03f2 : cmovns eax, dword ptr [rbx + 0x28] ; pop rbx ; ret
0x00000000000bebcf : cmovns eax, dword ptr [rcx] ; retf -0x74bd
0x00000000000e1459 : cmovns eax, dword ptr [rsp] ; add rsp, 0x18 ; ret
0x00000000000e0e0d : cmovns eax, edx ; ret
0x00000000000f03f1 : cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x00000000000e1458 : cmovns rax, qword ptr [rsp] ; add rsp, 0x18 ; ret
0x000000000008363d : cmovs eax, dword ptr [rbx + 0x148f0e7] ; retf -0x7cb8
0x000000000004831c : cmovs eax, dword ptr [rbx + 0x149f0e0] ; ret
0x00000000000531fd : cmovs eax, dword ptr [rbx + 0x149f0e0] ; ret 0x8b48
0x0000000000107d90 : cmovs eax, dword ptr [rbx + 0x5d5b80ec] ; pop r12 ; ret
0x0000000000114e10 : cmovs eax, dword ptr [rbx - 0x2776e73c] ; pop rbx ; pop rbp ; ret
0x0000000000035f96 : cmovs eax, edx ; pop rbx ; ret
0x000000000002320c : cmovs eax, edx ; ret
0x0000000000077a02 : cmovs ebp, dword ptr [rcx] ; ret 0x14c
0x0000000000068f6c : cmovs ecx, dword ptr [rcx + 0x415d5bd8] ; pop rsp ; ret
0x00000000000990ee : cmovs esp, dword ptr [rbx + 0xc] ; xchg byte ptr [rax + 1], cl ; int1 ; jmp rcx
0x0000000000099186 : cmovs esp, dword ptr [rbx + 4] ; xchg eax, esi ; add rax, rsi ; jmp rax
0x000000000016a385 : cmp ah, bh ; call qword ptr [rax]
0x000000000016a409 : cmp ah, bh ; call rax
0x000000000016a365 : cmp ah, bh ; inc dword ptr [rax + 0x3a] ; cld ; jmp qword ptr [rax]
0x0000000000125db3 : cmp ah, byte ptr [rbx - 0x25] ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x0000000000125c28 : cmp ah, byte ptr [rbx - 0x35] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x0000000000125c8f : cmp ah, byte ptr [rbx - 0x37] ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x000000000015df10 : cmp ah, byte ptr [rdx] ; cmc ; call rsp
0x00000000000c3168 : cmp al, 0x11 ; je 0xc3176 ; xor eax, eax ; ret
0x0000000000182b44 : cmp al, 0x21 ; add dword ptr [rax], eax ; pop rax ; sar cl, 1 ; call qword ptr [rax]
0x0000000000022145 : cmp al, 0x24 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9e9
0x0000000000074797 : cmp al, 0x24 ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000033dc6 : cmp al, 0x24 ; mov eax, ecx ; syscall
0x000000000011f28c : cmp al, 0x24 ; mov rax, qword ptr [rax + 0x130] ; jmp rax
0x00000000000e9305 : cmp al, 0x24 ; mov rdx, rax ; call 0xf5567
0x00000000000b2eb1 : cmp al, 0x24 ; test rdi, rdi ; je 0xb2ece ; call 0x1f941
0x00000000001083ed : cmp al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000183544 : cmp al, 0x2b ; add dword ptr [rax], eax ; js 0x1834eb ; cmc ; jmp qword ptr [rcx]
0x00000000000bd04c : cmp al, 0x3f ; jne 0xbd035 ; mov eax, 1 ; ret
0x0000000000159220 : cmp al, 0x46 ; clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x0000000000185d44 : cmp al, 0x53 ; add dword ptr [rax], eax ; cwde ; xor al, 0xf6 ; jmp qword ptr [rcx]
0x0000000000158123 : cmp al, 0x66 ; movsb byte ptr [rdi], byte ptr [rsi] ; sub eax, 0xea4ca798 ; retf
0x0000000000188144 : cmp al, 0x77 ; add dword ptr [rax], eax ; call 0x27187ad3
0x000000000016a920 : cmp al, 0x88 ; cld ; jmp rdx
0x000000000005d493 : cmp al, 0x89 ; ret
0x0000000000020160 : cmp al, 0x8a ; or al, 0 ; call 0x2c3e6
0x000000000015ac0b : cmp al, 0x93 ; in al, dx ; retf -0x51ce
0x000000000018a344 : cmp al, 0x99 ; add dword ptr [rax], eax ; clc ; idiv r15 ; ret
0x00000000000cf622 : cmp al, 0xbb ; add rdi, rbx ; jmp rdi
0x000000000018e244 : cmp al, 0xd8 ; add dword ptr [rax], eax ; sbb byte ptr [rcx - 8], cl ; jmp qword ptr [rax]
0x00000000000df523 : cmp al, 0xe8 ; xlatb ; retf
0x0000000000186299 : cmp al, 0xf6 ; jmp qword ptr [rcx]
0x0000000000170499 : cmp al, 0xfb ; jmp rsp
0x000000000016a36d : cmp al, 0xfc ; inc dword ptr [rax] ; cld ; jmp rax
0x000000000016a34d : cmp al, 0xfc ; push qword ptr [rax] ; cld ; call qword ptr [rax]
0x000000000018466d : cmp al, 1 ; add byte ptr [rax], al ; fcomi st(5) ; jmp qword ptr [rsi]
0x000000000016d4b5 : cmp al, 1 ; add byte ptr [rsi + rax*4], ah ; hlt ; jmp rsp
0x00000000000a9420 : cmp al, 1 ; ret 0xb70f
0x0000000000146183 : cmp al, 2 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000095090 : cmp al, 5 ; add byte ptr [rax], al ; ret
0x000000000017068c : cmp al, 8 ; add dword ptr [rax], eax ; xchg eax, esp ; mov edi, ebx ; jmp rsp
0x000000000006ad7b : cmp al, byte ptr [rax + 0xf] ; mov dh, 0xc7 ; ret
0x0000000000027090 : cmp al, byte ptr [rax + rax] ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x00000000000b85b2 : cmp al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000f6cf2 : cmp al, byte ptr [rax] ; cmc ; dec dword ptr [rax - 0x7f] ; ret
0x000000000008d796 : cmp al, byte ptr [rbp + 0xf] ; mov dh, 0x4c ; add dword ptr ds:[rbp + 0x38], eax ; retf 0x2d75
0x000000000018441d : cmp al, byte ptr [rcx] ; add byte ptr [rax], dh ; fdiv st(5) ; jmp qword ptr [rcx]
0x0000000000148fb6 : cmp al, byte ptr [rsi - 1] ; jne 0x148fdc ; xor eax, eax ; ret
0x0000000000111f60 : cmp al, ch ; retf 0x60
0x00000000000c2d5c : cmp al, ch ; salc ; retf
0x000000000017b0c1 : cmp al, dh ; jmp qword ptr [rdx]
0x00000000000838b6 : cmp al, dh ; ret
0x00000000000838b5 : cmp al, r14b ; ret
0x0000000000032a66 : cmp bh, 0xff ; inc eax ; shr eax, 0x1f ; ret
0x000000000016a369 : cmp bh, ah ; jmp qword ptr [rax]
0x000000000016a389 : cmp bh, ah ; push rax ; cmp edi, esp ; call rax
0x00000000000f06ba : cmp bh, cl ; cmovne eax, esi ; ret
0x00000000000f0684 : cmp bh, dl ; cmovne eax, ecx ; ret
0x0000000000184e90 : cmp bl, 0xf5 ; call rdx
0x0000000000171578 : cmp bl, bpl ; call rbx
0x0000000000157100 : cmp bl, byte ptr [rcx - 0x13] ; ljmp ptr [rdx] ; pop rcx ; in eax, dx ; call rcx
0x0000000000002cb5 : cmp bl, byte ptr [rip - 0x165c2f47] ; rcl byte ptr [rbx - 0x7a], 1 ; retf -0x2fb1
0x0000000000171579 : cmp bl, ch ; call rbx
0x000000000009a166 : cmp byte ptr [r11], r15b ; cmp byte ptr [rbp + 0x13], r14b ; ret
0x000000000006d11b : cmp byte ptr [r8 - 0x77], cl ; ret 0x348
0x00000000000f3273 : cmp byte ptr [r8 - 0x77], r9b ; ret 0x2b49
0x00000000000cf0f2 : cmp byte ptr [r8 - 0x77], r9b ; retf -0x7cb8
0x00000000000cf8d9 : cmp byte ptr [r8], cl ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000069062 : cmp byte ptr [rax + 0x39], cl ; ret
0x00000000000410c4 : cmp byte ptr [rax + 1], 0 ; jne 0x410c8 ; pop rbx ; ret
0x00000000001134f6 : cmp byte ptr [rax + 1], bh ; ret
0x00000000000838f7 : cmp byte ptr [rax + 1], cl ; clc ; ret
0x00000000000a851e : cmp byte ptr [rax + 1], cl ; ret 0x8948
0x00000000000c99a6 : cmp byte ptr [rax - 0x73], cl ; jl 0xc99d7 ; and byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000025c2b : cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000024fe0 : cmp byte ptr [rax - 0x75], cl ; and al, 0x20 ; call rax
0x000000000011a37b : cmp byte ptr [rax - 0x77], cl ; jl 0x11a3ab ; adc al, ch ; retf -0x99e
0x0000000000112a94 : cmp byte ptr [rax - 0x77], cl ; ret
0x00000000000f3274 : cmp byte ptr [rax - 0x77], cl ; ret 0x2b49
0x000000000006d11c : cmp byte ptr [rax - 0x77], cl ; ret 0x348
0x000000000008b0ea : cmp byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000cf0f3 : cmp byte ptr [rax - 0x77], cl ; retf -0x7cb8
0x000000000006d451 : cmp byte ptr [rax - 0x77], cl ; retf 0x775
0x000000000010abf5 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x000000000010c71e : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], cl ; mov edi, ebp ; call rdx
0x000000000011206c : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x4c], 0x89 ; out dx, eax ; call rax
0x0000000000142758 : cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x00000000000838e6 : cmp byte ptr [rax], ah ; ret
0x0000000000174235 : cmp byte ptr [rax], al ; add al, bh ; xor ebp, esp ; call qword ptr [rax]
0x000000000017424d : cmp byte ptr [rax], al ; add al, dh ; xor ebp, esp ; call qword ptr [rdx]
0x000000000011d65c : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; retf -0x41a
0x000000000003f064 : cmp byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x0000000000074a33 : cmp byte ptr [rax], al ; je 0x74a44 ; ret
0x0000000000125e04 : cmp byte ptr [rax], al ; retf 0xf66
0x0000000000115bb9 : cmp byte ptr [rax], bl ; je 0x115bc4 ; ret
0x00000000000cf8da : cmp byte ptr [rax], cl ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007ea30 : cmp byte ptr [rax], dh ; cmovne rax, rdx ; ret
0x000000000008f0b6 : cmp byte ptr [rax], dh ; ret
0x00000000000838d6 : cmp byte ptr [rax], dl ; ret
0x00000000000838d5 : cmp byte ptr [rax], r10b ; ret
0x00000000000838e5 : cmp byte ptr [rax], r12b ; ret
0x000000000008f0b5 : cmp byte ptr [rax], r14b ; ret
0x000000000017424c : cmp byte ptr [rax], r8b ; add al, dh ; xor ebp, esp ; call qword ptr [rdx]
0x000000000007ea2f : cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x000000000009a16a : cmp byte ptr [rbp + 0x13], dh ; ret
0x000000000009a169 : cmp byte ptr [rbp + 0x13], r14b ; ret
0x00000000000e744e : cmp byte ptr [rbp - 0x3dbbf040], al ; ret
0x0000000000089a48 : cmp byte ptr [rbp - 0x77], cl ; retf -0x1817
0x000000000002b219 : cmp byte ptr [rbx + 0x13], dh ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x000000000017e4c5 : cmp byte ptr [rbx + 0x1850307], al ; ret
0x00000000000b9d9d : cmp byte ptr [rbx + 0x5d], bl ; ret
0x00000000000c2c86 : cmp byte ptr [rbx + 0x63], 0 ; jne 0xc2c97 ; pop rbx ; ret
0x000000000009a167 : cmp byte ptr [rbx], bh ; cmp byte ptr [rbp + 0x13], r14b ; ret
0x000000000009d210 : cmp byte ptr [rcx + 0x39], cl ; ret 0x840f
0x00000000000cc710 : cmp byte ptr [rcx + 0x63], cl ; retf -0x49f1
0x00000000000cc70f : cmp byte ptr [rcx + 0x63], r9b ; retf -0x49f1
0x0000000000030b6b : cmp byte ptr [rcx + rcx*4 + 4], cl ; and al, 0xe8 ; retf
0x0000000000110696 : cmp byte ptr [rcx + rcx*4 - 0x19], cl ; mov rcx, qword ptr [rsp + 0x30] ; call rcx
0x00000000000e1d86 : cmp byte ptr [rcx - 0x3b7cb730], cl ; ret
0x00000000001860f0 : cmp byte ptr [rcx], 0xf6 ; jmp qword ptr [rcx]
0x0000000000002c00 : cmp byte ptr [rcx], ah ; loop 0x2c17 ; retf
0x00000000001842f5 : cmp byte ptr [rcx], al ; add byte ptr [rax - 0x2c], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001842dd : cmp byte ptr [rcx], al ; add byte ptr [rax - 0x2c], dl ; cmc ; jmp qword ptr [rcx]
0x000000000018424d : cmp byte ptr [rcx], al ; add byte ptr [rax - 0x2d], dl ; cmc ; jmp qword ptr [rcx]
0x00000000000cca24 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; adc al, ch ; ret 0xff68
0x0000000000142759 : cmp byte ptr [rcx], al ; sbb rax, -1 ; ret
0x000000000004d265 : cmp byte ptr [rcx], ch ; ret
0x00000000000964a4 : cmp byte ptr [rcx], cl ; add byte ptr [rax], al ; ret
0x000000000018424c : cmp byte ptr [rcx], r8b ; add byte ptr [rax - 0x2d], dl ; cmc ; jmp qword ptr [rcx]
0x00000000000c5bee : cmp byte ptr [rdi + 0x65], 0 ; setne al ; add eax, eax ; ret
0x000000000008eb04 : cmp byte ptr [rdi + rax], dl ; je 0x8eb06 ; ret
0x0000000000002058 : cmp byte ptr [rdi - 0x19ade7f3], dl ; ret
0x0000000000035f68 : cmp byte ptr [rdi], 0 ; jne 0x35f76 ; pop rbx ; ret
0x00000000000749f8 : cmp byte ptr [rdi], cl ; ret 0x389
0x00000000000c40e6 : cmp byte ptr [rdi], cl ; test byte ptr [rbx], dl ; add dword ptr [rax], eax ; add dh, dh ; ret
0x000000000009d435 : cmp byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf883
0x0000000000144a2d : cmp byte ptr [rdi], dl ; ret
0x0000000000145540 : cmp byte ptr [rdi], dl ; ret 0x2373
0x0000000000145529 : cmp byte ptr [rdi], dl ; ret 0x3a73
0x0000000000145512 : cmp byte ptr [rdi], dl ; ret 0x5173
0x0000000000143fce : cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000a66d4 : cmp byte ptr [rdx + 4], bl ; add byte ptr [rbp + 0x29dc75db], al ; ret
0x00000000001730d8 : cmp byte ptr [rdx], al ; in al, dx ; jmp qword ptr [rcx]
0x00000000000c7006 : cmp byte ptr [rdx], cl ; call 0xc32f4
0x00000000000c1280 : cmp byte ptr [rsi + 0x30], 0x11 ; je 0xc1298 ; xor eax, eax ; ret
0x0000000000185ce8 : cmp byte ptr [rsi + rsi*8], dh ; jmp qword ptr [rcx]
0x0000000000173dc8 : cmp byte ptr [rsi], ah ; in al, dx ; jmp rsp
0x000000000017d0d8 : cmp ch, bl ; int1 ; jmp qword ptr [rdi]
0x0000000000125c92 : cmp ch, byte ptr [rcx] ; ret 0xd089
0x000000000005a625 : cmp cl, 0xff ; dec dword ptr [rdi] ; test esi, esp ; ret
0x000000000007bd75 : cmp cl, al ; jne 0x7bd68 ; sub rax, 0x10 ; ret
0x0000000000111cc8 : cmp cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000006f9e0 : cmp cl, byte ptr [rax - 0x7f] ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000064dd8 : cmp cl, byte ptr [rax - 0x7f] ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf
0x00000000000f8a09 : cmp cl, byte ptr [rax - 0x7f] ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf -0x36
0x000000000012c591 : cmp cl, byte ptr [rdi] ; retf 0x6601
0x000000000012c6e1 : cmp cl, byte ptr [rdi] ; retf 0x6602
0x000000000012c831 : cmp cl, byte ptr [rdi] ; retf 0x6603
0x000000000012c981 : cmp cl, byte ptr [rdi] ; retf 0x6604
0x000000000012cad1 : cmp cl, byte ptr [rdi] ; retf 0x6605
0x000000000012cc21 : cmp cl, byte ptr [rdi] ; retf 0x6606
0x000000000012cd71 : cmp cl, byte ptr [rdi] ; retf 0x6607
0x000000000012cec1 : cmp cl, byte ptr [rdi] ; retf 0x6608
0x000000000012d011 : cmp cl, byte ptr [rdi] ; retf 0x6609
0x000000000012d161 : cmp cl, byte ptr [rdi] ; retf 0x660a
0x000000000012d2b1 : cmp cl, byte ptr [rdi] ; retf 0x660b
0x000000000012d401 : cmp cl, byte ptr [rdi] ; retf 0x660c
0x000000000012d551 : cmp cl, byte ptr [rdi] ; retf 0x660d
0x000000000012d6a1 : cmp cl, byte ptr [rdi] ; retf 0x660e
0x000000000012d7f1 : cmp cl, byte ptr [rdi] ; retf 0x660f
0x00000000001317ca : cmp cl, byte ptr [rdi] ; retf 0xf01
0x000000000013194a : cmp cl, byte ptr [rdi] ; retf 0xf02
0x0000000000131aca : cmp cl, byte ptr [rdi] ; retf 0xf03
0x0000000000131c4a : cmp cl, byte ptr [rdi] ; retf 0xf04
0x0000000000131dca : cmp cl, byte ptr [rdi] ; retf 0xf05
0x0000000000131f4a : cmp cl, byte ptr [rdi] ; retf 0xf06
0x00000000001320ca : cmp cl, byte ptr [rdi] ; retf 0xf07
0x000000000013224a : cmp cl, byte ptr [rdi] ; retf 0xf08
0x00000000001323ca : cmp cl, byte ptr [rdi] ; retf 0xf09
0x000000000013254a : cmp cl, byte ptr [rdi] ; retf 0xf0a
0x00000000001326ca : cmp cl, byte ptr [rdi] ; retf 0xf0b
0x000000000013284a : cmp cl, byte ptr [rdi] ; retf 0xf0c
0x00000000001329ca : cmp cl, byte ptr [rdi] ; retf 0xf0d
0x0000000000132b4a : cmp cl, byte ptr [rdi] ; retf 0xf0e
0x0000000000132cca : cmp cl, byte ptr [rdi] ; retf 0xf0f
0x000000000015afe6 : cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x00000000000c5d06 : cmp cl, byte ptr [rsi] ; je 0xc5c9e ; ret
0x0000000000073b58 : cmp cl, ch ; ret
0x00000000000a8263 : cmp cl, dl ; je 0xa8275 ; pop rbx ; ret
0x000000000007bd74 : cmp cl, r8b ; jne 0x7bd69 ; sub rax, 0x10 ; ret
0x00000000000d20ab : cmp cx, 0xa ; je 0xd2108 ; ret
0x000000000017eab0 : cmp dh, 0xf2 ; call qword ptr [rax]
0x00000000000f13ed : cmp dh, al ; add ah, byte ptr [rax] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000f13d1 : cmp dh, al ; add dword ptr [rdx], ecx ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000055492 : cmp dh, byte ptr [rax + rax] ; call rax
0x0000000000035f65 : cmp dh, byte ptr [rcx] ; rol byte ptr [rax + 0x375003f], 0x5b ; ret
0x000000000014750a : cmp dh, byte ptr [rdx + 2] ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x0000000000186091 : cmp dh, dh ; call qword ptr [rsi]
0x0000000000186001 : cmp dh, dh ; jmp qword ptr [rcx]
0x00000000000ca9a8 : cmp dh, dh ; ret 0x7420
0x000000000008fa35 : cmp dh, dh ; ret 0x7501
0x00000000000f06ee : cmp dh, dl ; cmovne eax, ecx ; ret
0x00000000000f06b9 : cmp dil, cl ; cmovne eax, esi ; ret
0x00000000000f0683 : cmp dil, dl ; cmovne eax, ecx ; ret
0x000000000016a368 : cmp dil, spl ; jmp qword ptr [rax]
0x0000000000184db0 : cmp dl, 0xf5 ; jmp qword ptr [rcx]
0x00000000000637ea : cmp dl, 0xff ; inc dword ptr [rbp - 0x77] ; in eax, -0x18 ; retf -0x6b
0x0000000000084410 : cmp dl, 1 ; ja 0x84433 ; jb 0x84422 ; mov byte ptr [rdi], cl ; ret
0x000000000014658b : cmp dl, 1 ; jb 0x14659d ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000146c5a : cmp dl, 1 ; jb 0x146c68 ; mov byte ptr [rdi], cl ; ret
0x0000000000080345 : cmp dl, 3 ; je 0x80368 ; movsx eax, dl ; ret
0x0000000000184d68 : cmp dl, bh ; cmc ; jmp qword ptr [rcx]
0x0000000000002b8e : cmp dl, byte ptr [rdi] ; ret
0x000000000015cca4 : cmp dl, dh ; int1 ; jmp rax
0x00000000000c623c : cmp dword ptr [rax + 0x63], ecx ; retf 0xeeb
0x000000000012bae7 : cmp dword ptr [rax + rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000121407 : cmp dword ptr [rax + rax], ecx ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000aea26 : cmp dword ptr [rax - 0x7d], ecx ; ret
0x0000000000115bb8 : cmp dword ptr [rax], 0x18 ; je 0x115bc5 ; ret
0x0000000000132ee8 : cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x00000000000eb370 : cmp dword ptr [rcx + 0x10], esi ; cmovb eax, edx ; ret
0x000000000008e9b9 : cmp dword ptr [rcx - 0x77], eax ; retf -0x76bf
0x00000000001843bd : cmp dword ptr [rcx], eax ; add byte ptr [rax], ah ; xlatb ; cmc ; jmp rdx
0x00000000001843ed : cmp dword ptr [rcx], eax ; add byte ptr [rax], al ; fdiv st(5) ; jmp qword ptr [rcx]
0x0000000000184405 : cmp dword ptr [rcx], eax ; add byte ptr [rax], bl ; fdiv st(5) ; jmp qword ptr [rcx]
0x00000000000f1771 : cmp dword ptr [rdi + 0x10], 0 ; je 0xf1788 ; xor eax, eax ; ret
0x000000000010778d : cmp dword ptr [rdi + 0x10], 2 ; je 0x10779e ; ret
0x00000000000d2056 : cmp dword ptr [rdi + 0x10], ecx ; cmovb eax, edx ; ret
0x0000000000070814 : cmp dword ptr [rdi + 0x18], 0 ; setne al ; ret
0x0000000000074a31 : cmp dword ptr [rdi + 0x38], 0 ; je 0x74a46 ; ret
0x00000000000a79e1 : cmp dword ptr [rdi + 8], edx ; jne 0xa79c3 ; ret
0x00000000000f4e7a : cmp dword ptr [rdi], 0 ; je 0xf4e8e ; ret
0x00000000001934a4 : cmp dword ptr [rdi], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 8
0x00000000000f5e8f : cmp dword ptr [rdx + rcx*8 - 8], 1 ; sbb eax, 0 ; leave ; ret
0x00000000001147c3 : cmp dword ptr [rdx], ebp ; add byte ptr [rax], al ; mov rdi, rbx ; call qword ptr [rax]
0x000000000007dfb1 : cmp dword ptr [rip + 0x31d898], 0 ; je 0x7dfc9 ; ret
0x0000000000071381 : cmp dword ptr [rip + 0x32cf58], 0 ; je 0x71399 ; ret
0x0000000000111830 : cmp dword ptr [rsi + 0x10], 0xc ; je 0x111848 ; xor eax, eax ; ret
0x000000000006bad8 : cmp dword ptr [rsi + 0x30], 0 ; je 0x6bae6 ; ret
0x00000000000e546c : cmp dword ptr [rsi], 0 ; je 0xe547e ; ret
0x0000000000003846 : cmp dword ptr [rsi], ecx ; pop rsp ; ret
0x00000000000dbd03 : cmp dword ptr [rsp - 8], 2 ; cmovne eax, edx ; ret
0x0000000000115bb7 : cmp dword ptr fs:[rax], 0x18 ; je 0x115bc6 ; ret
0x0000000000003bb7 : cmp eax, 0x12c401fe ; mov cl, 0x22 ; xchg eax, ebp ; ret
0x00000000000289e2 : cmp eax, 0x13c819 ; mov eax, ecx ; syscall
0x0000000000149ca2 : cmp eax, 0x250f59 ; call 0xe5fa7
0x0000000000100df2 : cmp eax, 0x29c905 ; call rax
0x00000000000e443b : cmp eax, 0x2b4dc8 ; ret
0x00000000000776a2 : cmp eax, 0x324131 ; jae 0x77663 ; ret
0x000000000016a3f1 : cmp eax, 0x3ee0fffc ; cld ; jmp rax
0x000000000016a3d1 : cmp eax, 0x3f20fffc ; cld ; jmp qword ptr [rax]
0x00000000000fc52e : cmp eax, 0x68104 ; call 0x109007
0x00000000000b989b : cmp eax, 0x7275 ; jne 0xb9884 ; xor eax, eax ; ret
0x00000000000e7329 : cmp eax, 0x7c4e2 ; sub rsp, 0x68 ; syscall
0x00000000000e70c6 : cmp eax, 0x7c715 ; mov eax, ebx ; syscall
0x00000000000e6fc0 : cmp eax, 0x7c810 ; mov eax, ebx ; syscall
0x00000000000e44e5 : cmp eax, 0x7d092 ; mov eax, ecx ; syscall
0x0000000000108045 : cmp eax, 0x840fdfa8 ; ret 0
0x000000000016d4e5 : cmp eax, 0x89240001 ; hlt ; call rsp
0x00000000000b69ca : cmp eax, 0x8948002e ; ret 0x9ee9
0x00000000000b3ffa : cmp eax, 0x89e18948 ; ret 0xf631
0x00000000000fffbf : cmp eax, 0x8b0029d6 ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00000000000dfbcd : cmp eax, 0xa1 ; je 0xdfbf0 ; neg eax ; pop rbx ; ret
0x000000000016ff1d : cmp eax, 0xabb40002 ; cli ; call rsp
0x000000000015850b : cmp eax, 0xaf6a2574 ; xlatb ; out 0xb3, al ; retf 0xe80
0x00000000000376d7 : cmp eax, 0xc00 ; jne 0x37709 ; ret
0x0000000000039ee7 : cmp eax, 0xc00 ; jne 0x39f19 ; ret
0x000000000003c697 : cmp eax, 0xc00 ; jne 0x3c6c9 ; ret
0x000000000009cc07 : cmp eax, 0xc00 ; jne 0x9cc39 ; ret
0x000000000009f297 : cmp eax, 0xc00 ; jne 0x9f2c9 ; ret
0x00000000000a1827 : cmp eax, 0xc00 ; jne 0xa1859 ; ret
0x00000000000c7318 : cmp eax, 0xc0830100 ; add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x0000000000042a22 : cmp eax, 0xc5834900 ; or byte ptr [rax - 0x7d], cl ; ret
0x0000000000103720 : cmp eax, 0xf5 ; je 0x10371e ; pop rbx ; ret
0x0000000000033c01 : cmp eax, 0xf8 ; jne 0x33bf7 ; xor eax, eax ; ret
0x0000000000033c51 : cmp eax, 0xf8 ; jne 0x33c47 ; xor eax, eax ; ret
0x0000000000042310 : cmp eax, 0xf8 ; jne 0x42308 ; mov rax, rdx ; ret
0x00000000000a3eaa : cmp eax, 0xff ; cmove eax, edx ; ret
0x000000000011e6be : cmp eax, 0xff ; je 0x11e6d9 ; add rsp, 8 ; ret
0x000000000006baf3 : cmp eax, 0xff ; je 0x6bb06 ; pop rbx ; ret
0x0000000000074a76 : cmp eax, 0xff ; je 0x74aa9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006dbe9 : cmp eax, 0xff ; jne 0x6dbf6 ; pop rbx ; ret
0x00000000000f5ea0 : cmp eax, 0xff ; jne 0xf5e9f ; xor eax, eax ; leave ; ret
0x00000000000332e1 : cmp eax, 0xfffff000 ; ja 0x332f8 ; ret
0x000000000003334d : cmp eax, 0xfffff000 ; ja 0x33368 ; ret
0x0000000000033397 : cmp eax, 0xfffff000 ; ja 0x333a7 ; ret
0x0000000000071a4c : cmp eax, 0xfffff000 ; ja 0x71a60 ; ret
0x00000000000722a0 : cmp eax, 0xfffff000 ; ja 0x722b8 ; pop rbx ; ret
0x0000000000072dd9 : cmp eax, 0xfffff000 ; ja 0x72dea ; ret
0x00000000000a88a8 : cmp eax, 0xfffff000 ; ja 0xa88c0 ; ret
0x00000000000b3a08 : cmp eax, 0xfffff000 ; ja 0xb3a20 ; pop rbx ; ret
0x00000000000b4c02 : cmp eax, 0xfffff000 ; ja 0xb4c17 ; ret
0x00000000000b7f61 : cmp eax, 0xfffff000 ; ja 0xb7f77 ; ret
0x00000000000b7ffb : cmp eax, 0xfffff000 ; ja 0xb800f ; ret
0x00000000000b80ec : cmp eax, 0xfffff000 ; ja 0xb80ff ; ret
0x00000000000b8fb4 : cmp eax, 0xfffff000 ; ja 0xb8fc7 ; ret
0x00000000000b9024 : cmp eax, 0xfffff000 ; ja 0xb9037 ; ret
0x00000000000b9278 : cmp eax, 0xfffff000 ; ja 0xb9287 ; ret
0x00000000000b92f8 : cmp eax, 0xfffff000 ; ja 0xb9307 ; ret
0x00000000000db296 : cmp eax, 0xfffff000 ; ja 0xdb2a8 ; ret
0x00000000000db2e3 : cmp eax, 0xfffff000 ; ja 0xdb2f8 ; ret
0x00000000000db336 : cmp eax, 0xfffff000 ; ja 0xdb348 ; ret
0x00000000000db391 : cmp eax, 0xfffff000 ; ja 0xdb3a8 ; ret
0x00000000000db3f2 : cmp eax, 0xfffff000 ; ja 0xdb408 ; ret
0x00000000000db44c : cmp eax, 0xfffff000 ; ja 0xdb460 ; ret
0x00000000000db62a : cmp eax, 0xfffff000 ; ja 0xdb640 ; ret
0x00000000000dbcd3 : cmp eax, 0xfffff000 ; ja 0xdbd18 ; ret
0x00000000000dfc43 : cmp eax, 0xfffff000 ; ja 0xdfc58 ; ret
0x00000000000dfc97 : cmp eax, 0xfffff000 ; ja 0xdfca8 ; ret
0x00000000000e040b : cmp eax, 0xfffff000 ; ja 0xe041f ; ret
0x00000000000e090f : cmp eax, 0xfffff000 ; ja 0xe0927 ; ret
0x00000000000e11d6 : cmp eax, 0xfffff000 ; ja 0xe11e7 ; ret
0x00000000000e1246 : cmp eax, 0xfffff000 ; ja 0xe1257 ; ret
0x00000000000e12c7 : cmp eax, 0xfffff000 ; ja 0xe12d8 ; ret
0x00000000000e1377 : cmp eax, 0xfffff000 ; ja 0xe1388 ; ret
0x00000000000e18c7 : cmp eax, 0xfffff000 ; ja 0xe18d8 ; ret
0x00000000000e2cd8 : cmp eax, 0xfffff000 ; ja 0xe2cf0 ; ret
0x00000000000e2d6c : cmp eax, 0xfffff000 ; ja 0xe2d80 ; ret
0x00000000000e2e0c : cmp eax, 0xfffff000 ; ja 0xe2e20 ; ret
0x00000000000e2e60 : cmp eax, 0xfffff000 ; ja 0xe2e78 ; ret
0x00000000000e6b9f : cmp eax, 0xfffff000 ; ja 0xe6bb8 ; ret
0x00000000000e8c9f : cmp eax, 0xfffff000 ; ja 0xe8cb8 ; ret
0x00000000000e8ec1 : cmp eax, 0xfffff000 ; ja 0xe8ed7 ; ret
0x00000000000e8f73 : cmp eax, 0xfffff000 ; ja 0xe8f88 ; ret
0x00000000000e9b4e : cmp eax, 0xfffff000 ; ja 0xe9b67 ; ret
0x00000000000e9c68 : cmp eax, 0xfffff000 ; ja 0xe9c77 ; ret
0x00000000000e9d0e : cmp eax, 0xfffff000 ; ja 0xe9d27 ; ret
0x00000000000e9dc8 : cmp eax, 0xfffff000 ; ja 0xe9dd7 ; ret
0x00000000000ea1b8 : cmp eax, 0xfffff000 ; ja 0xea1c7 ; ret
0x00000000000ea25a : cmp eax, 0xfffff000 ; ja 0xea26f ; ret
0x00000000000ea30a : cmp eax, 0xfffff000 ; ja 0xea31f ; ret
0x00000000000f5b5b : cmp eax, 0xfffff000 ; ja 0xf5b70 ; ret
0x00000000000f5c08 : cmp eax, 0xfffff000 ; ja 0xf5c32 ; ret
0x00000000000f79ad : cmp eax, 0xfffff000 ; ja 0xf79c8 ; ret
0x00000000000f7a7d : cmp eax, 0xfffff000 ; ja 0xf7a98 ; ret
0x000000000011c43b : cmp eax, 0xfffff001 ; jae 0x11c44a ; ret
0x000000000011c48b : cmp eax, 0xfffff001 ; jae 0x11c49a ; ret
0x0000000000033318 : cmp eax, 0xfffff001 ; jae 0x33327 ; ret
0x00000000000337f8 : cmp eax, 0xfffff001 ; jae 0x33807 ; ret
0x0000000000041b32 : cmp eax, 0xfffff001 ; jae 0x41b45 ; xor eax, eax ; ret
0x0000000000064d48 : cmp eax, 0xfffff001 ; jae 0x64d57 ; ret
0x0000000000064d7b : cmp eax, 0xfffff001 ; jae 0x64d8a ; ret
0x00000000000a8988 : cmp eax, 0xfffff001 ; jae 0xa8997 ; ret
0x00000000000ab448 : cmp eax, 0xfffff001 ; jae 0xab457 ; ret
0x00000000000ab478 : cmp eax, 0xfffff001 ; jae 0xab487 ; ret
0x00000000000b7ec8 : cmp eax, 0xfffff001 ; jae 0xb7ed7 ; ret
0x00000000000b80ab : cmp eax, 0xfffff001 ; jae 0xb80ba ; ret
0x00000000000b8188 : cmp eax, 0xfffff001 ; jae 0xb8197 ; ret
0x00000000000b8211 : cmp eax, 0xfffff001 ; jae 0xb8250 ; ret
0x00000000000b8271 : cmp eax, 0xfffff001 ; jae 0xb82b0 ; ret
0x00000000000b85b9 : cmp eax, 0xfffff001 ; jae 0xb85c8 ; ret
0x00000000000b8648 : cmp eax, 0xfffff001 ; jae 0xb8657 ; ret
0x00000000000b8f78 : cmp eax, 0xfffff001 ; jae 0xb8f87 ; ret
0x00000000000b9118 : cmp eax, 0xfffff001 ; jae 0xb9127 ; ret
0x00000000000b9148 : cmp eax, 0xfffff001 ; jae 0xb9157 ; ret
0x00000000000b91a8 : cmp eax, 0xfffff001 ; jae 0xb91b7 ; ret
0x00000000000b91d8 : cmp eax, 0xfffff001 ; jae 0xb91e7 ; ret
0x00000000000b9208 : cmp eax, 0xfffff001 ; jae 0xb9217 ; ret
0x00000000000b9238 : cmp eax, 0xfffff001 ; jae 0xb9247 ; ret
0x00000000000d1df8 : cmp eax, 0xfffff001 ; jae 0xd1e07 ; ret
0x00000000000d1e28 : cmp eax, 0xfffff001 ; jae 0xd1e37 ; ret
0x00000000000d1e58 : cmp eax, 0xfffff001 ; jae 0xd1e67 ; ret
0x00000000000d1e88 : cmp eax, 0xfffff001 ; jae 0xd1e97 ; ret
0x00000000000d1eb8 : cmp eax, 0xfffff001 ; jae 0xd1ec7 ; ret
0x00000000000d1ee8 : cmp eax, 0xfffff001 ; jae 0xd1ef7 ; ret
0x00000000000d1f18 : cmp eax, 0xfffff001 ; jae 0xd1f27 ; ret
0x00000000000d1f48 : cmp eax, 0xfffff001 ; jae 0xd1f57 ; ret
0x00000000000d9ee4 : cmp eax, 0xfffff001 ; jae 0xd9f26 ; ret
0x00000000000d9f44 : cmp eax, 0xfffff001 ; jae 0xd9f86 ; ret
0x00000000000db1f8 : cmp eax, 0xfffff001 ; jae 0xdb207 ; ret
0x00000000000db498 : cmp eax, 0xfffff001 ; jae 0xdb4a7 ; ret
0x00000000000db4c8 : cmp eax, 0xfffff001 ; jae 0xdb4d7 ; ret
0x00000000000db598 : cmp eax, 0xfffff001 ; jae 0xdb5a7 ; ret
0x00000000000db5c8 : cmp eax, 0xfffff001 ; jae 0xdb5d7 ; ret
0x00000000000db688 : cmp eax, 0xfffff001 ; jae 0xdb697 ; ret
0x00000000000db6b8 : cmp eax, 0xfffff001 ; jae 0xdb6c7 ; ret
0x00000000000db6f1 : cmp eax, 0xfffff001 ; jae 0xdb730 ; ret
0x00000000000db911 : cmp eax, 0xfffff001 ; jae 0xdb950 ; ret
0x00000000000db971 : cmp eax, 0xfffff001 ; jae 0xdb9b0 ; ret
0x00000000000db9c8 : cmp eax, 0xfffff001 ; jae 0xdb9d7 ; ret
0x00000000000dbde8 : cmp eax, 0xfffff001 ; jae 0xdbdf7 ; ret
0x00000000000dbf31 : cmp eax, 0xfffff001 ; jae 0xdbf70 ; ret
0x00000000000dbf88 : cmp eax, 0xfffff001 ; jae 0xdbf97 ; ret
0x00000000000dbfb8 : cmp eax, 0xfffff001 ; jae 0xdbfc7 ; ret
0x00000000000dbfe8 : cmp eax, 0xfffff001 ; jae 0xdbff7 ; ret
0x00000000000dc018 : cmp eax, 0xfffff001 ; jae 0xdc027 ; ret
0x00000000000dc048 : cmp eax, 0xfffff001 ; jae 0xdc057 ; ret
0x00000000000dc081 : cmp eax, 0xfffff001 ; jae 0xdc0c0 ; ret
0x00000000000dc0d8 : cmp eax, 0xfffff001 ; jae 0xdc0e7 ; ret
0x00000000000dc108 : cmp eax, 0xfffff001 ; jae 0xdc117 ; ret
0x00000000000dc958 : cmp eax, 0xfffff001 ; jae 0xdc967 ; ret
0x00000000000dc988 : cmp eax, 0xfffff001 ; jae 0xdc997 ; ret
0x00000000000dc9b8 : cmp eax, 0xfffff001 ; jae 0xdc9c7 ; ret
0x00000000000dc9eb : cmp eax, 0xfffff001 ; jae 0xdc9fa ; ret
0x00000000000dcfc8 : cmp eax, 0xfffff001 ; jae 0xdcfd7 ; ret
0x00000000000dcffb : cmp eax, 0xfffff001 ; jae 0xdd00a ; ret
0x00000000000dd028 : cmp eax, 0xfffff001 ; jae 0xdd037 ; ret
0x00000000000dd058 : cmp eax, 0xfffff001 ; jae 0xdd067 ; ret
0x00000000000dd088 : cmp eax, 0xfffff001 ; jae 0xdd097 ; ret
0x00000000000dd0bb : cmp eax, 0xfffff001 ; jae 0xdd0ca ; ret
0x00000000000dd0e8 : cmp eax, 0xfffff001 ; jae 0xdd0f7 ; ret
0x00000000000dd118 : cmp eax, 0xfffff001 ; jae 0xdd127 ; ret
0x00000000000dd148 : cmp eax, 0xfffff001 ; jae 0xdd157 ; ret
0x00000000000df8a1 : cmp eax, 0xfffff001 ; jae 0xdf8e0 ; ret
0x00000000000dfc0b : cmp eax, 0xfffff001 ; jae 0xdfc1a ; ret
0x00000000000e03a4 : cmp eax, 0xfffff001 ; jae 0xe03e6 ; ret
0x00000000000e0ad8 : cmp eax, 0xfffff001 ; jae 0xe0ae7 ; ret
0x00000000000e0b08 : cmp eax, 0xfffff001 ; jae 0xe0b17 ; ret
0x00000000000e0b38 : cmp eax, 0xfffff001 ; jae 0xe0b47 ; ret
0x00000000000e0e38 : cmp eax, 0xfffff001 ; jae 0xe0e47 ; ret
0x00000000000e1018 : cmp eax, 0xfffff001 ; jae 0xe1027 ; ret
0x00000000000e1051 : cmp eax, 0xfffff001 ; jae 0xe1090 ; ret
0x00000000000e10b1 : cmp eax, 0xfffff001 ; jae 0xe10f0 ; ret
0x00000000000e1114 : cmp eax, 0xfffff001 ; jae 0xe1156 ; ret
0x00000000000e1174 : cmp eax, 0xfffff001 ; jae 0xe11b6 ; ret
0x00000000000e1508 : cmp eax, 0xfffff001 ; jae 0xe1517 ; ret
0x00000000000e15a8 : cmp eax, 0xfffff001 ; jae 0xe15b7 ; ret
0x00000000000e15e4 : cmp eax, 0xfffff001 ; jae 0xe1626 ; ret
0x00000000000e1738 : cmp eax, 0xfffff001 ; jae 0xe1747 ; ret
0x00000000000e1768 : cmp eax, 0xfffff001 ; jae 0xe1777 ; ret
0x00000000000e17a1 : cmp eax, 0xfffff001 ; jae 0xe17e0 ; ret
0x00000000000e17f8 : cmp eax, 0xfffff001 ; jae 0xe1807 ; ret
0x00000000000e1831 : cmp eax, 0xfffff001 ; jae 0xe1870 ; ret
0x00000000000e1888 : cmp eax, 0xfffff001 ; jae 0xe1897 ; ret
0x00000000000e1bf8 : cmp eax, 0xfffff001 ; jae 0xe1c07 ; ret
0x00000000000e1c28 : cmp eax, 0xfffff001 ; jae 0xe1c37 ; ret
0x00000000000e1c58 : cmp eax, 0xfffff001 ; jae 0xe1c67 ; ret
0x00000000000e2e98 : cmp eax, 0xfffff001 ; jae 0xe2ea7 ; ret
0x00000000000e2ec8 : cmp eax, 0xfffff001 ; jae 0xe2ed7 ; ret
0x00000000000e446a : cmp eax, 0xfffff001 ; jae 0xe4479 ; ret
0x00000000000e46e8 : cmp eax, 0xfffff001 ; jae 0xe46f7 ; ret
0x00000000000e4718 : cmp eax, 0xfffff001 ; jae 0xe4727 ; ret
0x00000000000e4751 : cmp eax, 0xfffff001 ; jae 0xe4790 ; ret
0x00000000000e47a8 : cmp eax, 0xfffff001 ; jae 0xe47b7 ; ret
0x00000000000e47d8 : cmp eax, 0xfffff001 ; jae 0xe47e7 ; ret
0x00000000000e480b : cmp eax, 0xfffff001 ; jae 0xe481a ; ret
0x00000000000e4838 : cmp eax, 0xfffff001 ; jae 0xe4847 ; ret
0x00000000000e4868 : cmp eax, 0xfffff001 ; jae 0xe4877 ; ret
0x00000000000e4898 : cmp eax, 0xfffff001 ; jae 0xe48a7 ; ret
0x00000000000e48c8 : cmp eax, 0xfffff001 ; jae 0xe48d7 ; ret
0x00000000000e746b : cmp eax, 0xfffff001 ; jae 0xe747a ; ret
0x00000000000e7498 : cmp eax, 0xfffff001 ; jae 0xe74a7 ; ret
0x00000000000e74c8 : cmp eax, 0xfffff001 ; jae 0xe74d7 ; ret
0x00000000000e74fb : cmp eax, 0xfffff001 ; jae 0xe750a ; ret
0x00000000000e752b : cmp eax, 0xfffff001 ; jae 0xe753a ; ret
0x00000000000e7558 : cmp eax, 0xfffff001 ; jae 0xe7567 ; ret
0x00000000000e758b : cmp eax, 0xfffff001 ; jae 0xe759a ; ret
0x00000000000e75b8 : cmp eax, 0xfffff001 ; jae 0xe75c7 ; ret
0x00000000000e75e8 : cmp eax, 0xfffff001 ; jae 0xe75f7 ; ret
0x00000000000e761b : cmp eax, 0xfffff001 ; jae 0xe762a ; ret
0x00000000000e7648 : cmp eax, 0xfffff001 ; jae 0xe7657 ; ret
0x00000000000e767b : cmp eax, 0xfffff001 ; jae 0xe768a ; ret
0x00000000000e8c08 : cmp eax, 0xfffff001 ; jae 0xe8c17 ; ret
0x00000000000e8c38 : cmp eax, 0xfffff001 ; jae 0xe8c47 ; ret
0x00000000000e8d38 : cmp eax, 0xfffff001 ; jae 0xe8d47 ; ret
0x00000000000e8d78 : cmp eax, 0xfffff001 ; jae 0xe8d87 ; ret
0x00000000000e8da8 : cmp eax, 0xfffff001 ; jae 0xe8db7 ; ret
0x00000000000e8dd8 : cmp eax, 0xfffff001 ; jae 0xe8de7 ; ret
0x00000000000e8e08 : cmp eax, 0xfffff001 ; jae 0xe8e17 ; ret
0x00000000000e8fa8 : cmp eax, 0xfffff001 ; jae 0xe8fb7 ; ret
0x00000000000e902b : cmp eax, 0xfffff001 ; jae 0xe903a ; ret
0x00000000000e9058 : cmp eax, 0xfffff001 ; jae 0xe9067 ; ret
0x00000000000e9088 : cmp eax, 0xfffff001 ; jae 0xe9097 ; ret
0x00000000000e90b8 : cmp eax, 0xfffff001 ; jae 0xe90c7 ; ret
0x00000000000e90fb : cmp eax, 0xfffff001 ; jae 0xe910a ; ret
0x00000000000e9128 : cmp eax, 0xfffff001 ; jae 0xe9137 ; ret
0x00000000000e9158 : cmp eax, 0xfffff001 ; jae 0xe9167 ; ret
0x00000000000e9188 : cmp eax, 0xfffff001 ; jae 0xe9197 ; ret
0x00000000000e91b8 : cmp eax, 0xfffff001 ; jae 0xe91c7 ; ret
0x00000000000e91e8 : cmp eax, 0xfffff001 ; jae 0xe91f7 ; ret
0x00000000000e9218 : cmp eax, 0xfffff001 ; jae 0xe9227 ; ret
0x00000000000e9248 : cmp eax, 0xfffff001 ; jae 0xe9257 ; ret
0x00000000000e9278 : cmp eax, 0xfffff001 ; jae 0xe9287 ; ret
0x00000000000e92ab : cmp eax, 0xfffff001 ; jae 0xe92ba ; ret
0x00000000000e92e4 : cmp eax, 0xfffff001 ; jae 0xe9326 ; ret
0x00000000000e9338 : cmp eax, 0xfffff001 ; jae 0xe9347 ; ret
0x00000000000e936b : cmp eax, 0xfffff001 ; jae 0xe937a ; ret
0x00000000000e9398 : cmp eax, 0xfffff001 ; jae 0xe93a7 ; ret
0x00000000000e93c8 : cmp eax, 0xfffff001 ; jae 0xe93d7 ; ret
0x00000000000e93f8 : cmp eax, 0xfffff001 ; jae 0xe9407 ; ret
0x00000000000e9428 : cmp eax, 0xfffff001 ; jae 0xe9437 ; ret
0x00000000000e9458 : cmp eax, 0xfffff001 ; jae 0xe9467 ; ret
0x00000000000e948b : cmp eax, 0xfffff001 ; jae 0xe949a ; ret
0x00000000000e94bb : cmp eax, 0xfffff001 ; jae 0xe94ca ; ret
0x00000000000e94e8 : cmp eax, 0xfffff001 ; jae 0xe94f7 ; ret
0x00000000000e9518 : cmp eax, 0xfffff001 ; jae 0xe9527 ; ret
0x00000000000e954b : cmp eax, 0xfffff001 ; jae 0xe955a ; ret
0x00000000000e957b : cmp eax, 0xfffff001 ; jae 0xe958a ; ret
0x00000000000e95ab : cmp eax, 0xfffff001 ; jae 0xe95ba ; ret
0x00000000000e95e4 : cmp eax, 0xfffff001 ; jae 0xe9626 ; ret
0x00000000000e9638 : cmp eax, 0xfffff001 ; jae 0xe9647 ; ret
0x00000000000e9674 : cmp eax, 0xfffff001 ; jae 0xe96b6 ; ret
0x00000000000e96c8 : cmp eax, 0xfffff001 ; jae 0xe96d7 ; ret
0x00000000000e96f8 : cmp eax, 0xfffff001 ; jae 0xe9707 ; ret
0x00000000000e9734 : cmp eax, 0xfffff001 ; jae 0xe9776 ; ret
0x00000000000e9788 : cmp eax, 0xfffff001 ; jae 0xe9797 ; ret
0x00000000000e97bb : cmp eax, 0xfffff001 ; jae 0xe97ca ; ret
0x00000000000e97e8 : cmp eax, 0xfffff001 ; jae 0xe97f7 ; ret
0x00000000000e9818 : cmp eax, 0xfffff001 ; jae 0xe9827 ; ret
0x00000000000e984b : cmp eax, 0xfffff001 ; jae 0xe985a ; ret
0x00000000000e9881 : cmp eax, 0xfffff001 ; jae 0xe98c0 ; ret
0x00000000000e98d8 : cmp eax, 0xfffff001 ; jae 0xe98e7 ; ret
0x00000000000e990b : cmp eax, 0xfffff001 ; jae 0xe991a ; ret
0x00000000000e993b : cmp eax, 0xfffff001 ; jae 0xe994a ; ret
0x00000000000e9991 : cmp eax, 0xfffff001 ; jae 0xe99d0 ; ret
0x00000000000e99e8 : cmp eax, 0xfffff001 ; jae 0xe99f7 ; ret
0x00000000000e9a21 : cmp eax, 0xfffff001 ; jae 0xe9a60 ; ret
0x00000000000e9a78 : cmp eax, 0xfffff001 ; jae 0xe9a87 ; ret
0x00000000000e9aa8 : cmp eax, 0xfffff001 ; jae 0xe9ab7 ; ret
0x00000000000e9adb : cmp eax, 0xfffff001 ; jae 0xe9aea ; ret
0x00000000000e9b08 : cmp eax, 0xfffff001 ; jae 0xe9b17 ; ret
0x00000000000e9c04 : cmp eax, 0xfffff001 ; jae 0xe9c46 ; ret
0x00000000000e9e64 : cmp eax, 0xfffff001 ; jae 0xe9ea6 ; ret
0x00000000000e9ebb : cmp eax, 0xfffff001 ; jae 0xe9eca ; ret
0x00000000000e9ee8 : cmp eax, 0xfffff001 ; jae 0xe9ef7 ; ret
0x00000000000e9f18 : cmp eax, 0xfffff001 ; jae 0xe9f27 ; ret
0x00000000000e9f4b : cmp eax, 0xfffff001 ; jae 0xe9f5a ; ret
0x00000000000ea474 : cmp eax, 0xfffff001 ; jae 0xea4b6 ; ret
0x00000000000ea4d4 : cmp eax, 0xfffff001 ; jae 0xea516 ; ret
0x00000000000ea528 : cmp eax, 0xfffff001 ; jae 0xea537 ; ret
0x00000000000ea558 : cmp eax, 0xfffff001 ; jae 0xea567 ; ret
0x00000000000ea588 : cmp eax, 0xfffff001 ; jae 0xea597 ; ret
0x00000000000ea5b8 : cmp eax, 0xfffff001 ; jae 0xea5c7 ; ret
0x00000000000ea5eb : cmp eax, 0xfffff001 ; jae 0xea5fa ; ret
0x00000000000ea61b : cmp eax, 0xfffff001 ; jae 0xea62a ; ret
0x00000000000ea648 : cmp eax, 0xfffff001 ; jae 0xea657 ; ret
0x00000000000ea678 : cmp eax, 0xfffff001 ; jae 0xea687 ; ret
0x00000000000ea6a8 : cmp eax, 0xfffff001 ; jae 0xea6b7 ; ret
0x00000000000ea6d8 : cmp eax, 0xfffff001 ; jae 0xea6e7 ; ret
0x00000000000f5e78 : cmp eax, 0xfffffe93 ; call rax
0x0000000000117310 : cmp eax, 1 ; jne 0x11730a ; mov rax, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x000000000009924f : cmp eax, 2 ; je 0x99267 ; xor eax, eax ; ret
0x0000000000117301 : cmp eax, 2 ; sete al ; movzx eax, al ; ret
0x00000000000c2bcd : cmp eax, 3 ; je 0xc2bde ; ret
0x00000000000f558a : cmp eax, 4 ; je 0xf5595 ; ret
0x00000000000b8641 : cmp eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000008d7e9 : cmp eax, dword ptr [rbp + 0xf] ; mov dh, 0x4c ; add dword ptr ds:[rbp + 0x38], eax ; retf 0x7175
0x00000000000c20e5 : cmp eax, dword ptr [rbx - 0x3a7cfe3f] ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000c2a71 : cmp eax, dword ptr [rcx] ; ret 0xc083
0x0000000000072d35 : cmp eax, dword ptr [rdi + 0x10] ; jae 0x72d48 ; movzx eax, byte ptr [rax] ; ret
0x000000000009a08e : cmp eax, dword ptr [rsi + 0x10] ; jne 0x9a189 ; ret
0x000000000009a0a3 : cmp eax, dword ptr [rsi + 0x14] ; jne 0x9a189 ; ret
0x000000000009a0b8 : cmp eax, dword ptr [rsi + 0x18] ; jne 0x9a189 ; ret
0x000000000009a0d3 : cmp eax, dword ptr [rsi + 0x1c] ; jne 0x9a189 ; ret
0x000000000009a0ee : cmp eax, dword ptr [rsi + 0x20] ; jne 0x9a189 ; ret
0x000000000009a103 : cmp eax, dword ptr [rsi + 0x24] ; jne 0x9a185 ; ret
0x000000000009a118 : cmp eax, dword ptr [rsi + 0x28] ; jne 0x9a185 ; ret
0x000000000009a123 : cmp eax, dword ptr [rsi + 0x2c] ; jne 0x9a185 ; ret
0x000000000009a13e : cmp eax, dword ptr [rsi + 0x30] ; jne 0x9a185 ; ret
0x000000000009a153 : cmp eax, dword ptr [rsi + 0x34] ; jne 0x9a185 ; ret
0x000000000009a168 : cmp eax, dword ptr [rsi + 0x38] ; jne 0x9a185 ; ret
0x000000000009a173 : cmp eax, dword ptr [rsi + 0x3c] ; jne 0x9a185 ; ret
0x000000000009a073 : cmp eax, dword ptr [rsi + 0xc] ; jne 0x9a189 ; ret
0x000000000009a043 : cmp eax, dword ptr [rsi + 4] ; jne 0x9a189 ; ret
0x000000000009a058 : cmp eax, dword ptr [rsi + 8] ; jne 0x9a189 ; ret
0x00000000001494ba : cmp eax, dword ptr [rsi - 0x10] ; jne 0x1495f9 ; ret
0x00000000001494d3 : cmp eax, dword ptr [rsi - 0xc] ; jne 0x1495f9 ; ret
0x00000000001495e3 : cmp eax, dword ptr [rsi - 4] ; jne 0x1495f7 ; xor eax, eax ; ret
0x0000000000149503 : cmp eax, dword ptr [rsi - 4] ; jne 0x1495f9 ; ret
0x00000000001494e8 : cmp eax, dword ptr [rsi - 8] ; jne 0x1495f9 ; ret
0x000000000009a02d : cmp eax, dword ptr [rsi] ; jne 0x9a188 ; ret
0x000000000015a3d7 : cmp eax, dword ptr [rsi] ; rcl qword ptr [r14 + 0x27], cl ; retf -0x3f02
0x00000000000da218 : cmp eax, ebx ; setg al ; pop rbx ; ret
0x000000000008eb7d : cmp eax, ecx ; je 0x8eb65 ; ret
0x0000000000003b07 : cmp eax, ecx ; mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x0000000000148fd3 : cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x000000000018ddd1 : cmp eax, edi ; call rdx
0x0000000000075fcb : cmp eax, edx ; jae 0x75ff7 ; movzx eax, byte ptr [rax] ; ret
0x00000000000f4dfb : cmp eax, edx ; jb 0xf4df6 ; xor eax, eax ; ret
0x00000000001150c1 : cmp eax, edx ; je 0x1150d8 ; add rsp, 8 ; ret
0x000000000009a685 : cmp eax, edx ; jne 0x9a676 ; xor eax, eax ; ret
0x00000000000f54c0 : cmp eax, edx ; jne 0xf54d4 ; mov eax, 0xca ; syscall
0x000000000015e898 : cmp eax, esi ; cmc ; jmp rdi
0x00000000000f00b9 : cmp eax, esi ; jb 0xf00d1 ; mov eax, 1 ; ret
0x000000000002cb6b : cmp ebp, 0x8948ffff ; ret
0x0000000000113671 : cmp ebp, eax ; test eax, 0xebfffc88 ; retf
0x0000000000068e9d : cmp ebp, edi ; je 0x68eb3 ; mov eax, esi ; syscall
0x00000000000f5526 : cmp ebx, 0xa ; je 0xf5531 ; ret
0x00000000000775f5 : cmp ebx, eax ; je 0x77606 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000149dfd : cmp ebx, ebp ; jae 0x149e10 ; call qword ptr [rbx]
0x0000000000149e2c : cmp ebx, ebp ; jb 0x149e26 ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000003fa7b : cmp ecx, 0x24 ; jne 0x3fa61 ; ret
0x0000000000041ca7 : cmp ecx, 0x2f ; jmp rcx
0x00000000000d20ac : cmp ecx, 0xa ; je 0xd2107 ; ret
0x000000000004297c : cmp ecx, 0xff ; jne 0x42978 ; mov rax, rdx ; ret
0x000000000009aecc : cmp ecx, 0xff ; jne 0x9aec9 ; sub rax, 4 ; ret
0x000000000010ae95 : cmp ecx, dword ptr [rax - 0x75] ; or byte ptr [r10], r13b ; push 0x19 ; call qword ptr [rax]
0x000000000010b5d4 : cmp ecx, dword ptr [rax - 0x75] ; sbb ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000111c62 : cmp ecx, dword ptr [rax - 0x7b] ; push qword ptr [rbp + rax - 0x18] ; retf
0x00000000000c4c32 : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000375a2 : cmp ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000c44bf : cmp ecx, dword ptr [rax - 0x7d] ; ret 0x4808
0x00000000000d2f2c : cmp ecx, dword ptr [rax - 0xc] ; jne 0xd2f28 ; mov eax, dword ptr [rdx + 8] ; ret
0x000000000014a57b : cmp ecx, dword ptr [rbx - 0x3f7aefb9] ; jne 0x14a591 ; pop rbx ; ret
0x00000000000a8b30 : cmp ecx, dword ptr [rdi] ; imul esi, esi, 0x3c ; add eax, esi ; ret
0x000000000010c706 : cmp ecx, dword ptr [rdi] ; retf -0x57f
0x000000000006e3ae : cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x0000000000002d50 : cmp ecx, dword ptr [rip + 0x1954b385] ; retf 0x172
0x000000000009a6a0 : cmp ecx, eax ; cmovg eax, edx ; ret
0x000000000001fb09 : cmp ecx, eax ; je 0x1faae ; jmp 0x1fad7
0x000000000014555b : cmp ecx, eax ; jne 0x145589 ; xor eax, eax ; ret
0x000000000014639b : cmp ecx, eax ; jne 0x1463c9 ; xor eax, eax ; ret
0x00000000001463cf : cmp ecx, eax ; jne 0x1463dc ; xor eax, eax ; ret
0x0000000000117fa3 : cmp ecx, edx ; jae 0x117fb6 ; xor eax, eax ; ret
0x0000000000117fe3 : cmp ecx, edx ; jae 0x117ff6 ; xor eax, eax ; ret
0x000000000008eb28 : cmp ecx, edx ; je 0x8eb29 ; cmp ecx, esi ; je 0x8eb29 ; ret
0x0000000000089e09 : cmp ecx, edx ; jne 0x89e05 ; ret
0x000000000008eb2c : cmp ecx, esi ; je 0x8eb25 ; ret
0x000000000009a69f : cmp ecx, r8d ; cmovg eax, edx ; ret
0x000000000009b0f9 : cmp edi, 0x7f ; ja 0x9b10f ; mov eax, edi ; ret
0x00000000000c602b : cmp edi, 0x83486675 ; ret 0xeb04
0x0000000000106e88 : cmp edi, 0xff ; je 0x106ea5 ; mov eax, r13d ; syscall
0x000000000014a038 : cmp edi, 1 ; ja 0x14a045 ; ret
0x00000000000ebcbd : cmp edi, 9 ; setbe al ; ret
0x00000000000776a1 : cmp edi, dword ptr [rip + 0x324131] ; jae 0x77664 ; ret
0x0000000000043e9a : cmp edi, eax ; jbe 0x43e95 ; ret
0x0000000000043efa : cmp edi, eax ; jbe 0x43ef8 ; nop ; pop rbx ; ret
0x00000000000e6b93 : cmp edi, eax ; jne 0xe6bd1 ; mov eax, 0x88 ; syscall
0x000000000004a25d : cmp edi, ecx ; ja 0x4a247 ; mov eax, r8d ; ret
0x000000000010e702 : cmp edi, ecx ; jne 0x10e6f5 ; ret
0x00000000000e0f01 : cmp edi, edx ; ja 0xe0f35 ; ret
0x0000000000083ee2 : cmp edi, edx ; jb 0x83eef ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000e76d5 : cmp edi, edx ; jne 0xe76d0 ; mov rax, qword ptr [rax + 8] ; ret
0x00000000000db0c0 : cmp edi, esi ; ja 0xdb05d ; pop rbx ; ret
0x00000000000db0f0 : cmp edi, esi ; ja 0xdb0e5 ; ret
0x0000000000043fe7 : cmp edi, esi ; mov rax, rsi ; cmovae rax, rdi ; ret
0x000000000016a3ed : cmp edi, esp ; call qword ptr [rax]
0x000000000016a38d : cmp edi, esp ; call rax
0x00000000000f96ff : cmp edx, 0x80000000 ; cmovne eax, edi ; ret
0x0000000000100129 : cmp edx, 0xfd ; jbe 0x100135 ; ret
0x00000000000362a0 : cmp edx, 0xff ; cmovne rax, rbx ; pop rbx ; ret
0x00000000000bd085 : cmp edx, 1 ; sete al ; ret
0x000000000002bd0b : cmp edx, dword ptr [rdi + 4] ; jb 0x2bd1e ; ret
0x00000000000c2f75 : cmp edx, dword ptr [rsi + 4] ; je 0xc2f86 ; ret
0x000000000007aeb3 : cmp edx, eax ; ja 0x7aeaf ; xor eax, eax ; ret
0x00000000001038ad : cmp edx, eax ; jb 0x1038d9 ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000041cd4 : cmp edx, eax ; jg 0x41c9d ; ret
0x0000000000103e75 : cmp edx, eax ; jne 0x103e5e ; ret
0x0000000000041f5d : cmp edx, eax ; jne 0x41f56 ; xor eax, eax ; ret
0x000000000004203d : cmp edx, eax ; jne 0x42036 ; xor eax, eax ; ret
0x000000000007ac7a : cmp edx, eax ; jne 0x7ac45 ; ret
0x00000000000f57e2 : cmp edx, eax ; jne 0xf57c5 ; ret
0x00000000000f79a1 : cmp edx, ecx ; ja 0xf79dd ; movsxd rdi, edi ; xor eax, eax ; syscall
0x00000000000f7a71 : cmp edx, ecx ; ja 0xf7aad ; mov eax, 0x59 ; syscall
0x0000000000117e8f : cmp edx, ecx ; je 0x117ea5 ; ret
0x0000000000129522 : cmp edx, ecx ; jne 0x12950e ; vzeroupper ; ret
0x00000000001474e5 : cmp edx, ecx ; jne 0x1474c9 ; vzeroupper ; ret
0x00000000000843fb : cmp edx, ecx ; jne 0x843e8 ; ret
0x00000000000b9797 : cmp edx, ecx ; jne 0xb97c4 ; ret
0x0000000000033bab : cmp edx, edi ; jne 0x33ba9 ; mov eax, 1 ; ret
0x00000000000f4eda : cmp edx, edi ; setae al ; ret
0x0000000000104456 : cmp edx, esi ; jb 0x10444d ; mov eax, 0xffffffff ; ret
0x00000000001044ed : cmp edx, esi ; jb 0x1044bd ; mov eax, 0xffffffff ; ret
0x000000000009bf96 : cmp edx, esi ; je 0x9bfa7 ; test edx, edx ; jne 0x9bf99 ; ret
0x000000000016ceb9 : cmp edx, esi ; jmp rsp
0x000000000010456c : cmp esi, 0x7f ; cmova eax, edi ; ret
0x000000000006c379 : cmp esi, 0xff ; setne al ; neg eax ; ret
0x0000000000070929 : cmp esi, 2 ; cmove edx, ecx ; mov dword ptr [rdi], edx ; ret
0x00000000000290f4 : cmp esi, 3 ; je 0x29105 ; ret
0x0000000000062031 : cmp esi, dword ptr [rbx - 0x7cb70001] ; ret 0xbe08
0x00000000000c314d : cmp esi, dword ptr [rdi + 4] ; jl 0xc3146 ; ret
0x000000000009ad21 : cmp esi, dword ptr [rdi + 8] ; cmove rax, rcx ; ret
0x000000000010d00a : cmp esi, dword ptr [rdx + 0x28] ; ja 0x10d001 ; mov qword ptr [rdx + 0x20], rsi ; ret
0x0000000000129085 : cmp esi, dword ptr [rdx + 5] ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000015a5a4 : cmp esi, ebp ; xlatb ; ret 0x4e27
0x000000000006c13a : cmp esi, ecx ; jb 0x6c137 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000007673f : cmp esi, ecx ; jb 0x76728 ; mov byte ptr [rax + rsi], r10b ; ret
0x0000000000125f48 : cmp esi, ecx ; jle 0x125e8d ; ret
0x000000000007531a : cmp esi, ecx ; jne 0x75317 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000000b3121 : cmp esi, edi ; jge 0xb3108 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001860c1 : cmp esi, esi ; jmp qword ptr [rcx]
0x000000000016a3e9 : cmp esp, edi ; jmp qword ptr [rax]
0x00000000000e3131 : cmp esp, esi ; clc ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf 0
0x00000000000eb36f : cmp qword ptr [rcx + 0x10], rsi ; cmovb eax, edx ; ret
0x00000000000f1770 : cmp qword ptr [rdi + 0x10], 0 ; je 0xf1789 ; xor eax, eax ; ret
0x0000000000070813 : cmp qword ptr [rdi + 0x18], 0 ; setne al ; ret
0x0000000000074a30 : cmp qword ptr [rdi + 0x38], 0 ; je 0x74a47 ; ret
0x00000000000f4e79 : cmp qword ptr [rdi], 0 ; je 0xf4e8f ; ret
0x000000000006bad7 : cmp qword ptr [rsi + 0x30], 0 ; je 0x6bae7 ; ret
0x00000000000e546b : cmp qword ptr [rsi], 0 ; je 0xe547f ; ret
0x0000000000080344 : cmp r10b, 3 ; je 0x80369 ; movsx eax, dl ; ret
0x00000000000f5525 : cmp r11d, 0xa ; je 0xf5532 ; ret
0x000000000004230f : cmp r8, 0xf8 ; jne 0x42309 ; mov rax, rdx ; ret
0x000000000008eb7c : cmp r8d, ecx ; je 0x8eb66 ; ret
0x000000000001fb08 : cmp r9, rax ; je 0x1faaf ; jmp 0x1fad8
0x00000000000f1261 : cmp r9b, r13b ; ret
0x0000000000041ca6 : cmp r9d, 0x2f ; jmp rcx
0x00000000000332e0 : cmp rax, -0x1000 ; ja 0x332f9 ; ret
0x000000000003334c : cmp rax, -0x1000 ; ja 0x33369 ; ret
0x0000000000033396 : cmp rax, -0x1000 ; ja 0x333a8 ; ret
0x0000000000071a4b : cmp rax, -0x1000 ; ja 0x71a61 ; ret
0x000000000007229f : cmp rax, -0x1000 ; ja 0x722b9 ; pop rbx ; ret
0x0000000000072dd8 : cmp rax, -0x1000 ; ja 0x72deb ; ret
0x00000000000a88a7 : cmp rax, -0x1000 ; ja 0xa88c1 ; ret
0x00000000000b3a07 : cmp rax, -0x1000 ; ja 0xb3a21 ; pop rbx ; ret
0x00000000000b4c01 : cmp rax, -0x1000 ; ja 0xb4c18 ; ret
0x00000000000b7f60 : cmp rax, -0x1000 ; ja 0xb7f78 ; ret
0x00000000000b7ffa : cmp rax, -0x1000 ; ja 0xb8010 ; ret
0x00000000000b80eb : cmp rax, -0x1000 ; ja 0xb8100 ; ret
0x00000000000b8fb3 : cmp rax, -0x1000 ; ja 0xb8fc8 ; ret
0x00000000000b9023 : cmp rax, -0x1000 ; ja 0xb9038 ; ret
0x00000000000b9277 : cmp rax, -0x1000 ; ja 0xb9288 ; ret
0x00000000000b92f7 : cmp rax, -0x1000 ; ja 0xb9308 ; ret
0x00000000000db295 : cmp rax, -0x1000 ; ja 0xdb2a9 ; ret
0x00000000000db2e2 : cmp rax, -0x1000 ; ja 0xdb2f9 ; ret
0x00000000000db335 : cmp rax, -0x1000 ; ja 0xdb349 ; ret
0x00000000000db390 : cmp rax, -0x1000 ; ja 0xdb3a9 ; ret
0x00000000000db3f1 : cmp rax, -0x1000 ; ja 0xdb409 ; ret
0x00000000000db44b : cmp rax, -0x1000 ; ja 0xdb461 ; ret
0x00000000000db629 : cmp rax, -0x1000 ; ja 0xdb641 ; ret
0x00000000000dbcd2 : cmp rax, -0x1000 ; ja 0xdbd19 ; ret
0x00000000000dfc42 : cmp rax, -0x1000 ; ja 0xdfc59 ; ret
0x00000000000dfc96 : cmp rax, -0x1000 ; ja 0xdfca9 ; ret
0x00000000000e040a : cmp rax, -0x1000 ; ja 0xe0420 ; ret
0x00000000000e090e : cmp rax, -0x1000 ; ja 0xe0928 ; ret
0x00000000000e11d5 : cmp rax, -0x1000 ; ja 0xe11e8 ; ret
0x00000000000e1245 : cmp rax, -0x1000 ; ja 0xe1258 ; ret
0x00000000000e12c6 : cmp rax, -0x1000 ; ja 0xe12d9 ; ret
0x00000000000e1376 : cmp rax, -0x1000 ; ja 0xe1389 ; ret
0x00000000000e18c6 : cmp rax, -0x1000 ; ja 0xe18d9 ; ret
0x00000000000e2cd7 : cmp rax, -0x1000 ; ja 0xe2cf1 ; ret
0x00000000000e2d6b : cmp rax, -0x1000 ; ja 0xe2d81 ; ret
0x00000000000e2e0b : cmp rax, -0x1000 ; ja 0xe2e21 ; ret
0x00000000000e2e5f : cmp rax, -0x1000 ; ja 0xe2e79 ; ret
0x00000000000e6b9e : cmp rax, -0x1000 ; ja 0xe6bb9 ; ret
0x00000000000e8c9e : cmp rax, -0x1000 ; ja 0xe8cb9 ; ret
0x00000000000e8ec0 : cmp rax, -0x1000 ; ja 0xe8ed8 ; ret
0x00000000000e8f72 : cmp rax, -0x1000 ; ja 0xe8f89 ; ret
0x00000000000e9b4d : cmp rax, -0x1000 ; ja 0xe9b68 ; ret
0x00000000000e9c67 : cmp rax, -0x1000 ; ja 0xe9c78 ; ret
0x00000000000e9d0d : cmp rax, -0x1000 ; ja 0xe9d28 ; ret
0x00000000000e9dc7 : cmp rax, -0x1000 ; ja 0xe9dd8 ; ret
0x00000000000ea1b7 : cmp rax, -0x1000 ; ja 0xea1c8 ; ret
0x00000000000ea259 : cmp rax, -0x1000 ; ja 0xea270 ; ret
0x00000000000ea309 : cmp rax, -0x1000 ; ja 0xea320 ; ret
0x00000000000f5b5a : cmp rax, -0x1000 ; ja 0xf5b71 ; ret
0x00000000000f5c07 : cmp rax, -0x1000 ; ja 0xf5c33 ; ret
0x00000000000f79ac : cmp rax, -0x1000 ; ja 0xf79c9 ; ret
0x00000000000f7a7c : cmp rax, -0x1000 ; ja 0xf7a99 ; ret
0x000000000011c43a : cmp rax, -0xfff ; jae 0x11c44b ; ret
0x000000000011c48a : cmp rax, -0xfff ; jae 0x11c49b ; ret
0x0000000000033317 : cmp rax, -0xfff ; jae 0x33328 ; ret
0x00000000000337f7 : cmp rax, -0xfff ; jae 0x33808 ; ret
0x0000000000064d47 : cmp rax, -0xfff ; jae 0x64d58 ; ret
0x0000000000064d7a : cmp rax, -0xfff ; jae 0x64d8b ; ret
0x00000000000a8987 : cmp rax, -0xfff ; jae 0xa8998 ; ret
0x00000000000ab447 : cmp rax, -0xfff ; jae 0xab458 ; ret
0x00000000000ab477 : cmp rax, -0xfff ; jae 0xab488 ; ret
0x00000000000b7ec7 : cmp rax, -0xfff ; jae 0xb7ed8 ; ret
0x00000000000b80aa : cmp rax, -0xfff ; jae 0xb80bb ; ret
0x00000000000b8187 : cmp rax, -0xfff ; jae 0xb8198 ; ret
0x00000000000b8210 : cmp rax, -0xfff ; jae 0xb8251 ; ret
0x00000000000b8270 : cmp rax, -0xfff ; jae 0xb82b1 ; ret
0x00000000000b8647 : cmp rax, -0xfff ; jae 0xb8658 ; ret
0x00000000000b8f77 : cmp rax, -0xfff ; jae 0xb8f88 ; ret
0x00000000000b9117 : cmp rax, -0xfff ; jae 0xb9128 ; ret
0x00000000000b9147 : cmp rax, -0xfff ; jae 0xb9158 ; ret
0x00000000000b91a7 : cmp rax, -0xfff ; jae 0xb91b8 ; ret
0x00000000000b91d7 : cmp rax, -0xfff ; jae 0xb91e8 ; ret
0x00000000000b9207 : cmp rax, -0xfff ; jae 0xb9218 ; ret
0x00000000000b9237 : cmp rax, -0xfff ; jae 0xb9248 ; ret
0x00000000000d1df7 : cmp rax, -0xfff ; jae 0xd1e08 ; ret
0x00000000000d1e27 : cmp rax, -0xfff ; jae 0xd1e38 ; ret
0x00000000000d1e57 : cmp rax, -0xfff ; jae 0xd1e68 ; ret
0x00000000000d1e87 : cmp rax, -0xfff ; jae 0xd1e98 ; ret
0x00000000000d1eb7 : cmp rax, -0xfff ; jae 0xd1ec8 ; ret
0x00000000000d1ee7 : cmp rax, -0xfff ; jae 0xd1ef8 ; ret
0x00000000000d1f17 : cmp rax, -0xfff ; jae 0xd1f28 ; ret
0x00000000000d1f47 : cmp rax, -0xfff ; jae 0xd1f58 ; ret
0x00000000000d9ee3 : cmp rax, -0xfff ; jae 0xd9f27 ; ret
0x00000000000d9f43 : cmp rax, -0xfff ; jae 0xd9f87 ; ret
0x00000000000db1f7 : cmp rax, -0xfff ; jae 0xdb208 ; ret
0x00000000000db497 : cmp rax, -0xfff ; jae 0xdb4a8 ; ret
0x00000000000db4c7 : cmp rax, -0xfff ; jae 0xdb4d8 ; ret
0x00000000000db597 : cmp rax, -0xfff ; jae 0xdb5a8 ; ret
0x00000000000db5c7 : cmp rax, -0xfff ; jae 0xdb5d8 ; ret
0x00000000000db687 : cmp rax, -0xfff ; jae 0xdb698 ; ret
0x00000000000db6b7 : cmp rax, -0xfff ; jae 0xdb6c8 ; ret
0x00000000000db6f0 : cmp rax, -0xfff ; jae 0xdb731 ; ret
0x00000000000db910 : cmp rax, -0xfff ; jae 0xdb951 ; ret
0x00000000000db970 : cmp rax, -0xfff ; jae 0xdb9b1 ; ret
0x00000000000db9c7 : cmp rax, -0xfff ; jae 0xdb9d8 ; ret
0x00000000000dbde7 : cmp rax, -0xfff ; jae 0xdbdf8 ; ret
0x00000000000dbf30 : cmp rax, -0xfff ; jae 0xdbf71 ; ret
0x00000000000dbf87 : cmp rax, -0xfff ; jae 0xdbf98 ; ret
0x00000000000dbfb7 : cmp rax, -0xfff ; jae 0xdbfc8 ; ret
0x00000000000dbfe7 : cmp rax, -0xfff ; jae 0xdbff8 ; ret
0x00000000000dc017 : cmp rax, -0xfff ; jae 0xdc028 ; ret
0x00000000000dc047 : cmp rax, -0xfff ; jae 0xdc058 ; ret
0x00000000000dc080 : cmp rax, -0xfff ; jae 0xdc0c1 ; ret
0x00000000000dc0d7 : cmp rax, -0xfff ; jae 0xdc0e8 ; ret
0x00000000000dc107 : cmp rax, -0xfff ; jae 0xdc118 ; ret
0x00000000000dc957 : cmp rax, -0xfff ; jae 0xdc968 ; ret
0x00000000000dc987 : cmp rax, -0xfff ; jae 0xdc998 ; ret
0x00000000000dc9b7 : cmp rax, -0xfff ; jae 0xdc9c8 ; ret
0x00000000000dc9ea : cmp rax, -0xfff ; jae 0xdc9fb ; ret
0x00000000000dcfc7 : cmp rax, -0xfff ; jae 0xdcfd8 ; ret
0x00000000000dcffa : cmp rax, -0xfff ; jae 0xdd00b ; ret
0x00000000000dd027 : cmp rax, -0xfff ; jae 0xdd038 ; ret
0x00000000000dd057 : cmp rax, -0xfff ; jae 0xdd068 ; ret
0x00000000000dd087 : cmp rax, -0xfff ; jae 0xdd098 ; ret
0x00000000000dd0ba : cmp rax, -0xfff ; jae 0xdd0cb ; ret
0x00000000000dd0e7 : cmp rax, -0xfff ; jae 0xdd0f8 ; ret
0x00000000000dd117 : cmp rax, -0xfff ; jae 0xdd128 ; ret
0x00000000000dd147 : cmp rax, -0xfff ; jae 0xdd158 ; ret
0x00000000000df8a0 : cmp rax, -0xfff ; jae 0xdf8e1 ; ret
0x00000000000dfc0a : cmp rax, -0xfff ; jae 0xdfc1b ; ret
0x00000000000e03a3 : cmp rax, -0xfff ; jae 0xe03e7 ; ret
0x00000000000e0ad7 : cmp rax, -0xfff ; jae 0xe0ae8 ; ret
0x00000000000e0b07 : cmp rax, -0xfff ; jae 0xe0b18 ; ret
0x00000000000e0b37 : cmp rax, -0xfff ; jae 0xe0b48 ; ret
0x00000000000e0e37 : cmp rax, -0xfff ; jae 0xe0e48 ; ret
0x00000000000e1017 : cmp rax, -0xfff ; jae 0xe1028 ; ret
0x00000000000e1050 : cmp rax, -0xfff ; jae 0xe1091 ; ret
0x00000000000e10b0 : cmp rax, -0xfff ; jae 0xe10f1 ; ret
0x00000000000e1113 : cmp rax, -0xfff ; jae 0xe1157 ; ret
0x00000000000e1173 : cmp rax, -0xfff ; jae 0xe11b7 ; ret
0x00000000000e1507 : cmp rax, -0xfff ; jae 0xe1518 ; ret
0x00000000000e15a7 : cmp rax, -0xfff ; jae 0xe15b8 ; ret
0x00000000000e15e3 : cmp rax, -0xfff ; jae 0xe1627 ; ret
0x00000000000e1737 : cmp rax, -0xfff ; jae 0xe1748 ; ret
0x00000000000e1767 : cmp rax, -0xfff ; jae 0xe1778 ; ret
0x00000000000e17a0 : cmp rax, -0xfff ; jae 0xe17e1 ; ret
0x00000000000e17f7 : cmp rax, -0xfff ; jae 0xe1808 ; ret
0x00000000000e1830 : cmp rax, -0xfff ; jae 0xe1871 ; ret
0x00000000000e1887 : cmp rax, -0xfff ; jae 0xe1898 ; ret
0x00000000000e1bf7 : cmp rax, -0xfff ; jae 0xe1c08 ; ret
0x00000000000e1c27 : cmp rax, -0xfff ; jae 0xe1c38 ; ret
0x00000000000e1c57 : cmp rax, -0xfff ; jae 0xe1c68 ; ret
0x00000000000e2e97 : cmp rax, -0xfff ; jae 0xe2ea8 ; ret
0x00000000000e2ec7 : cmp rax, -0xfff ; jae 0xe2ed8 ; ret
0x00000000000e4469 : cmp rax, -0xfff ; jae 0xe447a ; ret
0x00000000000e46e7 : cmp rax, -0xfff ; jae 0xe46f8 ; ret
0x00000000000e4717 : cmp rax, -0xfff ; jae 0xe4728 ; ret
0x00000000000e4750 : cmp rax, -0xfff ; jae 0xe4791 ; ret
0x00000000000e47a7 : cmp rax, -0xfff ; jae 0xe47b8 ; ret
0x00000000000e47d7 : cmp rax, -0xfff ; jae 0xe47e8 ; ret
0x00000000000e480a : cmp rax, -0xfff ; jae 0xe481b ; ret
0x00000000000e4837 : cmp rax, -0xfff ; jae 0xe4848 ; ret
0x00000000000e4867 : cmp rax, -0xfff ; jae 0xe4878 ; ret
0x00000000000e4897 : cmp rax, -0xfff ; jae 0xe48a8 ; ret
0x00000000000e48c7 : cmp rax, -0xfff ; jae 0xe48d8 ; ret
0x00000000000e746a : cmp rax, -0xfff ; jae 0xe747b ; ret
0x00000000000e7497 : cmp rax, -0xfff ; jae 0xe74a8 ; ret
0x00000000000e74c7 : cmp rax, -0xfff ; jae 0xe74d8 ; ret
0x00000000000e74fa : cmp rax, -0xfff ; jae 0xe750b ; ret
0x00000000000e752a : cmp rax, -0xfff ; jae 0xe753b ; ret
0x00000000000e7557 : cmp rax, -0xfff ; jae 0xe7568 ; ret
0x00000000000e758a : cmp rax, -0xfff ; jae 0xe759b ; ret
0x00000000000e75b7 : cmp rax, -0xfff ; jae 0xe75c8 ; ret
0x00000000000e75e7 : cmp rax, -0xfff ; jae 0xe75f8 ; ret
0x00000000000e761a : cmp rax, -0xfff ; jae 0xe762b ; ret
0x00000000000e7647 : cmp rax, -0xfff ; jae 0xe7658 ; ret
0x00000000000e767a : cmp rax, -0xfff ; jae 0xe768b ; ret
0x00000000000e8c07 : cmp rax, -0xfff ; jae 0xe8c18 ; ret
0x00000000000e8c37 : cmp rax, -0xfff ; jae 0xe8c48 ; ret
0x00000000000e8d37 : cmp rax, -0xfff ; jae 0xe8d48 ; ret
0x00000000000e8d77 : cmp rax, -0xfff ; jae 0xe8d88 ; ret
0x00000000000e8da7 : cmp rax, -0xfff ; jae 0xe8db8 ; ret
0x00000000000e8dd7 : cmp rax, -0xfff ; jae 0xe8de8 ; ret
0x00000000000e8e07 : cmp rax, -0xfff ; jae 0xe8e18 ; ret
0x00000000000e8fa7 : cmp rax, -0xfff ; jae 0xe8fb8 ; ret
0x00000000000e902a : cmp rax, -0xfff ; jae 0xe903b ; ret
0x00000000000e9057 : cmp rax, -0xfff ; jae 0xe9068 ; ret
0x00000000000e9087 : cmp rax, -0xfff ; jae 0xe9098 ; ret
0x00000000000e90b7 : cmp rax, -0xfff ; jae 0xe90c8 ; ret
0x00000000000e90fa : cmp rax, -0xfff ; jae 0xe910b ; ret
0x00000000000e9127 : cmp rax, -0xfff ; jae 0xe9138 ; ret
0x00000000000e9157 : cmp rax, -0xfff ; jae 0xe9168 ; ret
0x00000000000e9187 : cmp rax, -0xfff ; jae 0xe9198 ; ret
0x00000000000e91b7 : cmp rax, -0xfff ; jae 0xe91c8 ; ret
0x00000000000e91e7 : cmp rax, -0xfff ; jae 0xe91f8 ; ret
0x00000000000e9217 : cmp rax, -0xfff ; jae 0xe9228 ; ret
0x00000000000e9247 : cmp rax, -0xfff ; jae 0xe9258 ; ret
0x00000000000e9277 : cmp rax, -0xfff ; jae 0xe9288 ; ret
0x00000000000e92aa : cmp rax, -0xfff ; jae 0xe92bb ; ret
0x00000000000e92e3 : cmp rax, -0xfff ; jae 0xe9327 ; ret
0x00000000000e9337 : cmp rax, -0xfff ; jae 0xe9348 ; ret
0x00000000000e936a : cmp rax, -0xfff ; jae 0xe937b ; ret
0x00000000000e9397 : cmp rax, -0xfff ; jae 0xe93a8 ; ret
0x00000000000e93c7 : cmp rax, -0xfff ; jae 0xe93d8 ; ret
0x00000000000e93f7 : cmp rax, -0xfff ; jae 0xe9408 ; ret
0x00000000000e9427 : cmp rax, -0xfff ; jae 0xe9438 ; ret
0x00000000000e9457 : cmp rax, -0xfff ; jae 0xe9468 ; ret
0x00000000000e948a : cmp rax, -0xfff ; jae 0xe949b ; ret
0x00000000000e94ba : cmp rax, -0xfff ; jae 0xe94cb ; ret
0x00000000000e94e7 : cmp rax, -0xfff ; jae 0xe94f8 ; ret
0x00000000000e9517 : cmp rax, -0xfff ; jae 0xe9528 ; ret
0x00000000000e954a : cmp rax, -0xfff ; jae 0xe955b ; ret
0x00000000000e957a : cmp rax, -0xfff ; jae 0xe958b ; ret
0x00000000000e95aa : cmp rax, -0xfff ; jae 0xe95bb ; ret
0x00000000000e95e3 : cmp rax, -0xfff ; jae 0xe9627 ; ret
0x00000000000e9637 : cmp rax, -0xfff ; jae 0xe9648 ; ret
0x00000000000e9673 : cmp rax, -0xfff ; jae 0xe96b7 ; ret
0x00000000000e96c7 : cmp rax, -0xfff ; jae 0xe96d8 ; ret
0x00000000000e96f7 : cmp rax, -0xfff ; jae 0xe9708 ; ret
0x00000000000e9733 : cmp rax, -0xfff ; jae 0xe9777 ; ret
0x00000000000e9787 : cmp rax, -0xfff ; jae 0xe9798 ; ret
0x00000000000e97ba : cmp rax, -0xfff ; jae 0xe97cb ; ret
0x00000000000e97e7 : cmp rax, -0xfff ; jae 0xe97f8 ; ret
0x00000000000e9817 : cmp rax, -0xfff ; jae 0xe9828 ; ret
0x00000000000e984a : cmp rax, -0xfff ; jae 0xe985b ; ret
0x00000000000e9880 : cmp rax, -0xfff ; jae 0xe98c1 ; ret
0x00000000000e98d7 : cmp rax, -0xfff ; jae 0xe98e8 ; ret
0x00000000000e990a : cmp rax, -0xfff ; jae 0xe991b ; ret
0x00000000000e993a : cmp rax, -0xfff ; jae 0xe994b ; ret
0x00000000000e9990 : cmp rax, -0xfff ; jae 0xe99d1 ; ret
0x00000000000e99e7 : cmp rax, -0xfff ; jae 0xe99f8 ; ret
0x00000000000e9a20 : cmp rax, -0xfff ; jae 0xe9a61 ; ret
0x00000000000e9a77 : cmp rax, -0xfff ; jae 0xe9a88 ; ret
0x00000000000e9aa7 : cmp rax, -0xfff ; jae 0xe9ab8 ; ret
0x00000000000e9ada : cmp rax, -0xfff ; jae 0xe9aeb ; ret
0x00000000000e9b07 : cmp rax, -0xfff ; jae 0xe9b18 ; ret
0x00000000000e9c03 : cmp rax, -0xfff ; jae 0xe9c47 ; ret
0x00000000000e9e63 : cmp rax, -0xfff ; jae 0xe9ea7 ; ret
0x00000000000e9eba : cmp rax, -0xfff ; jae 0xe9ecb ; ret
0x00000000000e9ee7 : cmp rax, -0xfff ; jae 0xe9ef8 ; ret
0x00000000000e9f17 : cmp rax, -0xfff ; jae 0xe9f28 ; ret
0x00000000000e9f4a : cmp rax, -0xfff ; jae 0xe9f5b ; ret
0x00000000000ea473 : cmp rax, -0xfff ; jae 0xea4b7 ; ret
0x00000000000ea4d3 : cmp rax, -0xfff ; jae 0xea517 ; ret
0x00000000000ea527 : cmp rax, -0xfff ; jae 0xea538 ; ret
0x00000000000ea557 : cmp rax, -0xfff ; jae 0xea568 ; ret
0x00000000000ea587 : cmp rax, -0xfff ; jae 0xea598 ; ret
0x00000000000ea5b7 : cmp rax, -0xfff ; jae 0xea5c8 ; ret
0x00000000000ea5ea : cmp rax, -0xfff ; jae 0xea5fb ; ret
0x00000000000ea61a : cmp rax, -0xfff ; jae 0xea62b ; ret
0x00000000000ea647 : cmp rax, -0xfff ; jae 0xea658 ; ret
0x00000000000ea677 : cmp rax, -0xfff ; jae 0xea688 ; ret
0x00000000000ea6a7 : cmp rax, -0xfff ; jae 0xea6b8 ; ret
0x00000000000ea6d7 : cmp rax, -0xfff ; jae 0xea6e8 ; ret
0x0000000000033c00 : cmp rax, 0xf8 ; jne 0x33bf8 ; xor eax, eax ; ret
0x0000000000033c50 : cmp rax, 0xf8 ; jne 0x33c48 ; xor eax, eax ; ret
0x0000000000072d34 : cmp rax, qword ptr [rdi + 0x10] ; jae 0x72d49 ; movzx eax, byte ptr [rax] ; ret
0x00000000000da217 : cmp rax, rbx ; setg al ; pop rbx ; ret
0x0000000000075fca : cmp rax, rdx ; jae 0x75ff8 ; movzx eax, byte ptr [rax] ; ret
0x00000000000f4dfa : cmp rax, rdx ; jb 0xf4df7 ; xor eax, eax ; ret
0x00000000000f4df9 : cmp rax, rdx ; jb 0xf4df8 ; xor eax, eax ; ret
0x00000000001150c0 : cmp rax, rdx ; je 0x1150d9 ; add rsp, 8 ; ret
0x000000000009a684 : cmp rax, rdx ; jne 0x9a677 ; xor eax, eax ; ret
0x00000000000775f4 : cmp rbx, rax ; je 0x77607 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000149dfc : cmp rbx, rbp ; jae 0x149e11 ; call qword ptr [rbx]
0x0000000000149e2b : cmp rbx, rbp ; jb 0x149e27 ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000004297b : cmp rcx, 0xff ; jne 0x42979 ; mov rax, rdx ; ret
0x000000000006e3ad : cmp rcx, qword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000014555a : cmp rcx, rax ; jne 0x14558a ; xor eax, eax ; ret
0x000000000014639a : cmp rcx, rax ; jne 0x1463ca ; xor eax, eax ; ret
0x0000000000089e08 : cmp rcx, rdx ; jne 0x89e06 ; ret
0x000000000014a037 : cmp rdi, 1 ; ja 0x14a046 ; ret
0x0000000000043e99 : cmp rdi, r8 ; jbe 0x43e96 ; ret
0x0000000000043ef9 : cmp rdi, r8 ; jbe 0x43ef9 ; nop ; pop rbx ; ret
0x000000000010e701 : cmp rdi, rcx ; jne 0x10e6f6 ; ret
0x00000000000e0f00 : cmp rdi, rdx ; ja 0xe0f36 ; ret
0x0000000000083ee1 : cmp rdi, rdx ; jb 0x83ef0 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000e76d4 : cmp rdi, rdx ; jne 0xe76d1 ; mov rax, qword ptr [rax + 8] ; ret
0x00000000000db0bf : cmp rdi, rsi ; ja 0xdb05e ; pop rbx ; ret
0x00000000000db0ef : cmp rdi, rsi ; ja 0xdb0e6 ; ret
0x0000000000100128 : cmp rdx, 0xfd ; jbe 0x100136 ; ret
0x0000000000103e74 : cmp rdx, r8 ; jne 0x103e5f ; ret
0x000000000007ac79 : cmp rdx, r8 ; jne 0x7ac46 ; ret
0x000000000007aeb2 : cmp rdx, rax ; ja 0x7aeb0 ; xor eax, eax ; ret
0x0000000000041f5c : cmp rdx, rax ; jne 0x41f57 ; xor eax, eax ; ret
0x000000000004203c : cmp rdx, rax ; jne 0x42037 ; xor eax, eax ; ret
0x00000000000f57e1 : cmp rdx, rax ; jne 0xf57c6 ; ret
0x0000000000117e8e : cmp rdx, rcx ; je 0x117ea6 ; ret
0x0000000000129521 : cmp rdx, rcx ; jne 0x12950f ; vzeroupper ; ret
0x00000000001474e4 : cmp rdx, rcx ; jne 0x1474ca ; vzeroupper ; ret
0x00000000000843fa : cmp rdx, rcx ; jne 0x843e9 ; ret
0x00000000000843f9 : cmp rdx, rcx ; jne 0x843ea ; ret
0x00000000000b9796 : cmp rdx, rcx ; jne 0xb97c5 ; ret
0x00000000000f4ed9 : cmp rdx, rdi ; setae al ; ret
0x000000000006c139 : cmp rsi, rcx ; jb 0x6c138 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000007673e : cmp rsi, rcx ; jb 0x76729 ; mov byte ptr [rax + rsi], r10b ; ret
0x0000000000075319 : cmp rsi, rcx ; jne 0x75318 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000000f06ed : cmp sil, dl ; cmovne eax, ecx ; ret
0x0000000000127ab7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000127db7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000128cb7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000101dde : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x00000000001289b7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0x83480000 ; ret 0x4910
0x0000000000144fd9 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x000000000017b8d9 : cmpsb byte ptr [rsi], byte ptr [rdi] ; cli ; call qword ptr [rax]
0x00000000000c529e : cmpsb byte ptr [rsi], byte ptr [rdi] ; cmc ; dec dword ptr [rax - 0x77] ; ret
0x000000000016da19 : cmpsb byte ptr [rsi], byte ptr [rdi] ; cmc ; jmp rsp
0x000000000017c941 : cmpsb byte ptr [rsi], byte ptr [rdi] ; int1 ; jmp rbx
0x00000000001585d6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x1585a2 ; mov ecx, 0x5b92ac50 ; retf
0x00000000001230e6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001286b7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001283b7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000015a6f1 : cmpsb byte ptr [rsi], byte ptr [rdi] ; out dx, al ; or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf -0x6283
0x000000000007c286 : cmpsb byte ptr [rsi], byte ptr [rdi] ; retf
0x000000000016a6a0 : cmpsb byte ptr [rsi], byte ptr [rdi] ; xchg eax, edx ; cld ; call qword ptr [rsi]
0x000000000017b17d : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; xor byte ptr [rax - 0x10], dl ; jmp qword ptr [rdx]
0x000000000012e9f5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr es:[rax + 0x39], cl ; retf -0x76b7
0x000000000016e66d : cmpsd dword ptr [rsi], dword ptr [rdi] ; add dword ptr [rax], eax ; xchg eax, esp ; ret 0xfff7
0x0000000000091a70 : cmpsd dword ptr [rsi], dword ptr [rdi] ; and al, 0 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x000000000017cc59 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; call qword ptr [rbx]
0x000000000016b8a9 : cmpsd dword ptr [rsi], dword ptr [rdi] ; in al, dx ; jmp rsp
0x00000000001580bf : cmpsd dword ptr [rsi], dword ptr [rdi] ; mov bx, 0xf32d ; retf
0x00000000000621c5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; mov cl, 0xff ; dec dword ptr [rax - 0x7d] ; ret 0xbe08
0x000000000006fe85 : cmpsd dword ptr [rsi], dword ptr [rdi] ; outsb dx, byte ptr [rsi] ; std ; dec dword ptr [rax - 0x7f] ; ret
0x0000000000003902 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x49ec
0x00000000000f368d : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xfff2
0x00000000000802bd : cmpsd dword ptr [rsi], dword ptr [rdi] ; retf 0xd
0x0000000000003901 : cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x0000000000149dd9 : cmpxchg dword ptr [rip + 0x251a80], edx ; je 0x149dec ; ret
0x0000000000035f43 : cqo ; idiv rsi ; ret
0x000000000011e894 : cwde ; adc al, dh ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c8664 : cwde ; add byte ptr [rax], al ; add al, ch ; retf
0x0000000000110be7 : cwde ; add byte ptr [rax], al ; add bl, ch ; ret 0x8b48
0x000000000006cb7a : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf -0x7df1
0x000000000011320f : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000028736 : cwde ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x0000000000033d53 : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000000fd260 : cwde ; add ch, byte ptr [rdx] ; add byte ptr [rax], al ; add al, 0 ; add al, ch ; ret
0x0000000000180c78 : cwde ; and esp, esi ; jmp rdx
0x000000000015d2f5 : cwde ; call qword ptr [rax]
0x000000000017e049 : cwde ; call qword ptr [rsi]
0x000000000015d2ed : cwde ; call rax
0x000000000016a729 : cwde ; cld ; jmp qword ptr [rdx]
0x000000000016a66d : cwde ; cld ; jmp rax
0x0000000000184dc8 : cwde ; cli ; cmc ; jmp qword ptr [rcx]
0x000000000015ccc8 : cwde ; cmc ; int1 ; ljmp ptr [rbx + rsi*8 - 0xf] ; jmp qword ptr [rsi]
0x000000000015e388 : cwde ; cmc ; ljmp ptr [rsi] ; sub esi, ebp ; call qword ptr [rsi]
0x0000000000186108 : cwde ; cmp esi, esi ; jmp qword ptr [rcx]
0x000000000017b8d8 : cwde ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cli ; call qword ptr [rax]
0x000000000007dfb3 : cwde ; fdiv dword ptr [rcx] ; add byte ptr [rax], al ; je 0x7dfc7 ; ret
0x0000000000180291 : cwde ; jmp rcx
0x000000000017b9c8 : cwde ; mov al, 0xf0 ; call qword ptr [rax]
0x000000000017b7b8 : cwde ; mov esi, eax ; jmp rbx
0x00000000000e037f : cwde ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x00000000001800a8 : cwde ; nop ; jmp qword ptr [rcx]
0x00000000000fda52 : cwde ; nop dword ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x000000000009af14 : cwde ; nop dword ptr [rax] ; ret
0x000000000003d2db : cwde ; or eax, 0x2ddb0000 ; stosd dword ptr [rdi], eax ; ret
0x0000000000109b24 : cwde ; pop rbp ; int1 ; dec dword ptr [rax - 0x77] ; ret
0x000000000015d2f1 : cwde ; push rax ; cwde ; call qword ptr [rax]
0x0000000000003b0d : cwde ; ret
0x000000000002e8e4 : cwde ; ret 0x36
0x0000000000003c15 : cwde ; retf
0x000000000000238e : cwde ; retf -0x7e40
0x0000000000188058 : cwde ; sal dh, 1 ; jmp qword ptr [rsi]
0x0000000000188378 : cwde ; sbb edi, esp ; jmp qword ptr [rsi]
0x00000000001046de : cwde ; shr rax, 4 ; ret
0x0000000000174018 : cwde ; sub ch, ah ; call qword ptr [rsi]
0x00000000001740d8 : cwde ; sub ebp, esp ; call qword ptr [rdx]
0x0000000000185d48 : cwde ; xor al, 0xf6 ; jmp qword ptr [rcx]
0x00000000000a8bf2 : dec byte ptr [r13 - 0x77] ; retf 0x694d
0x0000000000047876 : dec byte ptr [r15] ; xchg eax, esp ; ret 0xd284
0x0000000000092fb9 : dec byte ptr [r8 + 0x29] ; ret 0x149
0x0000000000090fa1 : dec byte ptr [r8 + 0x29] ; ret 0x280f
0x000000000009ffaf : dec byte ptr [r8 - 0x77] ; retf -0x76bc
0x0000000000092fba : dec byte ptr [rax + 0x29] ; ret 0x149
0x0000000000090fa2 : dec byte ptr [rax + 0x29] ; ret 0x280f
0x000000000007d11b : dec byte ptr [rax + 0x39] ; ret 0x2f74
0x0000000000146fed : dec byte ptr [rax + 0x7f] ; jl 0x147012 ; cld ; vzeroupper ; ret
0x0000000000080619 : dec byte ptr [rax - 0x77] ; ret
0x00000000000474af : dec byte ptr [rax - 0x77] ; ret 0x8948
0x000000000009ffb0 : dec byte ptr [rax - 0x77] ; retf -0x76bc
0x0000000000027996 : dec byte ptr [rax - 0x7d] ; ret 0xf01
0x00000000000a8bf3 : dec byte ptr [rbp - 0x77] ; retf 0x694d
0x0000000000044d0d : dec byte ptr [rcx + rcx*4 - 9] ; call rax
0x000000000006e25d : dec byte ptr [rdi] ; test byte ptr [rax + rax + 0x39480000], dl ; retf 0xf48
0x0000000000047877 : dec byte ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x000000000004b96a : dec dword ptr [r8 - 0x77] ; ret 0xf748
0x00000000000b037d : dec dword ptr [rax + 0x29] ; fmul dword ptr [rcx - 0x7d] ; ret
0x000000000006d48e : dec dword ptr [rax + 0x29] ; ret
0x000000000009313a : dec dword ptr [rax + 0x29] ; ret 0x149
0x00000000000910e2 : dec dword ptr [rax + 0x29] ; ret 0x280f
0x0000000000050d15 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x00000000000399b1 : dec dword ptr [rax + 0x29] ; ret 0x894c
0x00000000000bba86 : dec dword ptr [rax + 0x29] ; ret 0x8d48
0x00000000000d1506 : dec dword ptr [rax + 0x39] ; or byte ptr [r15], 0x84 ; retf
0x00000000000380ba : dec dword ptr [rax + 0x39] ; ret
0x0000000000071cda : dec dword ptr [rax + 0x39] ; ret 0x860f
0x0000000000103497 : dec dword ptr [rax + 0x39] ; ret 0xf375
0x00000000000bbaba : dec dword ptr [rax + 0x39] ; retf
0x0000000000101b94 : dec dword ptr [rax + 0x39] ; retf -0x78f1
0x000000000005f03c : dec dword ptr [rax + 0x39] ; retf -0x7bf1
0x00000000000505a2 : dec dword ptr [rax + 0x39] ; ror dword ptr [rdi], -0x7b ; ret 0xfffd
0x000000000004411e : dec dword ptr [rax + 0x48e57506] ; mov eax, esi ; ret
0x000000000011b5ee : dec dword ptr [rax + 0x63] ; clc ; mov eax, 3 ; syscall
0x00000000000513fc : dec dword ptr [rax + 0x63] ; ret
0x00000000000ea8af : dec dword ptr [rax + 0x63] ; retf -0x74b8
0x000000000005adb7 : dec dword ptr [rax + 0x63] ; ror byte ptr [rax + 1], 1 ; shr cl, cl ; insb byte ptr [rdi], dx ; ret 0xffff
0x00000000000dbb2f : dec dword ptr [rax + 0x63] ; sar byte ptr [rax + 0x10d], cl ; syscall
0x00000000000e9dbc : dec dword ptr [rax + 0x63] ; sar byte ptr [rax + 0x2e], cl ; syscall
0x00000000000e9c5c : dec dword ptr [rax + 0x63] ; sar byte ptr [rax + 0x2f], cl ; syscall
0x0000000000032fd2 : dec dword ptr [rax + 0x63] ; sar dword ptr [rax + 0xea], cl ; syscall
0x00000000000b39fc : dec dword ptr [rax + 0x63] ; sti ; mov eax, 3 ; syscall
0x0000000000082609 : dec dword ptr [rax + 0xf] ; mov ebp, 0xf80148c6 ; ret
0x0000000000084544 : dec dword ptr [rax + 0xf] ; mov esp, 0x440f48c7 ; ret 0xc083
0x00000000000362a2 : dec dword ptr [rax + 0xf] ; ret
0x00000000000db11b : dec dword ptr [rax + 0xf] ; ret 0x66c3
0x000000000007d041 : dec dword ptr [rax + 0xf] ; ret 0x8348
0x000000000011e8ed : dec dword ptr [rax + 0xf] ; ret 0x8d4c
0x000000000002bb99 : dec dword ptr [rax + 0xf] ; ret 0x90c3
0x00000000000726b7 : dec dword ptr [rax + 0xf] ; ret 0x938b
0x00000000000eb7a2 : dec dword ptr [rax + 0xf] ; ret 0xc748
0x000000000002ece9 : dec dword ptr [rax + 1] ; ret
0x00000000000f7cfc : dec dword ptr [rax + 9] ; retf -0x7cb8
0x0000000000033a53 : dec dword ptr [rax - 0x2d] ; ror byte ptr [rax + 0x21], 7 ; xor eax, eax ; ret
0x000000000015cf77 : dec dword ptr [rax - 0x37000238] ; retf -3
0x000000000005bee1 : dec dword ptr [rax - 0x397cb6fe] ; add ebx, ebp ; retf 0x3b48
0x0000000000050474 : dec dword ptr [rax - 0x39] ; ret
0x000000000008e370 : dec dword ptr [rax - 0x39] ; ret 0xffff
0x00000000000e037d : dec dword ptr [rax - 0x68] ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x00000000000e2344 : dec dword ptr [rax - 0x73] ; adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x0000000000039b1a : dec dword ptr [rax - 0x73] ; inc dword ptr [r9 - 0x7d] ; call qword ptr [rax]
0x00000000000b65df : dec dword ptr [rax - 0x73] ; or byte ptr [r8 + 0x39], r9b ; ret
0x000000000010c4ff : dec dword ptr [rax - 0x75] ; adc ecx, dword ptr [rdi] ; retf 0x1089
0x0000000000103789 : dec dword ptr [rax - 0x75] ; add byte ptr [r8 + 1], r9b ; ret
0x000000000007133c : dec dword ptr [rax - 0x75] ; and al, 8 ; jmp 0x71316
0x0000000000118585 : dec dword ptr [rax - 0x75] ; cmp byte ptr [rax - 0x77], cl ; ret
0x00000000000f125e : dec dword ptr [rax - 0x75] ; cmp r9b, r13b ; ret
0x0000000000022e78 : dec dword ptr [rax - 0x75] ; jge 0x22e3c ; call 0x1f93f
0x00000000000b36c1 : dec dword ptr [rax - 0x75] ; jnp 0xb36e5 ; call 0x1f93f
0x00000000000b36ca : dec dword ptr [rax - 0x75] ; jnp 0xb36f6 ; call 0x1f93f
0x000000000004fe8a : dec dword ptr [rax - 0x75] ; mov ebp, 0xfffffb60 ; call rax
0x000000000008df0f : dec dword ptr [rax - 0x75] ; pop rbp ; mov byte ptr [rax + 0x29], cl ; ret
0x0000000000103819 : dec dword ptr [rax - 0x75] ; push rbp ; add dh, dh ; ret 0x7507
0x000000000008dbd6 : dec dword ptr [rax - 0x75] ; push rbp ; mov byte ptr [rax + 0x29], cl ; ret 0x6348
0x000000000008cedb : dec dword ptr [rax - 0x75] ; push rbp ; mov byte ptr [rax + 0x29], cl ; ret 0x634c
0x000000000008e838 : dec dword ptr [rax - 0x75] ; push rbp ; mov byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000010c518 : dec dword ptr [rax - 0x75] ; push rbx ; adc byte ptr [rdi], cl ; retf 0x5089
0x00000000000d4576 : dec dword ptr [rax - 0x75] ; xor dword ptr [rax - 0x7d], ecx ; ret
0x000000000007a541 : dec dword ptr [rax - 0x77] ; adc al, 0x24 ; call 0x76ff7
0x000000000002c854 : dec dword ptr [rax - 0x77] ; clc ; add rsp, 0x18 ; ret
0x000000000008b290 : dec dword ptr [rax - 0x77] ; clc ; ret
0x00000000000e0f9a : dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000007db14 : dec dword ptr [rax - 0x77] ; fimul dword ptr [rcx + rcx*4 - 0x12] ; call rax
0x000000000011806c : dec dword ptr [rax - 0x77] ; fimul word ptr [rax - 0x77] ; out dx, eax ; call rcx
0x00000000001170e9 : dec dword ptr [rax - 0x77] ; fimul word ptr [rcx + rcx*4 - 1] ; call r14
0x00000000000b36d3 : dec dword ptr [rax - 0x77] ; fistp word ptr [rbx - 0x17] ; pop rbx ; ret 0xfff6
0x00000000000efdfc : dec dword ptr [rax - 0x77] ; fmul dword ptr [rax - 0x7d] ; ret
0x00000000000b89e1 : dec dword ptr [rax - 0x77] ; fmul qword ptr [rax - 0x75] ; pop rbp ; clc ; leave ; ret
0x00000000000f3688 : dec dword ptr [rax - 0x77] ; fucompi st(0) ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xfff2
0x00000000000e41e1 : dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret
0x00000000000b42c4 : dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret 0xfff6
0x000000000014966e : dec dword ptr [rax - 0x77] ; out dx, eax ; add rdi, qword ptr [r13 + 0x10] ; call rbx
0x0000000000031269 : dec dword ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x39], cl ; ret 0xfffe
0x0000000000026ba3 : dec dword ptr [rax - 0x77] ; ret
0x000000000005aee3 : dec dword ptr [rax - 0x77] ; ret 0x12e9
0x00000000000db194 : dec dword ptr [rax - 0x77] ; ret 0x1677
0x00000000000bb92a : dec dword ptr [rax - 0x77] ; ret 0x16eb
0x00000000000e0eee : dec dword ptr [rax - 0x77] ; ret 0x1c77
0x0000000000046e10 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x00000000000d1ff1 : dec dword ptr [rax - 0x77] ; ret 0x2977
0x0000000000062639 : dec dword ptr [rax - 0x77] ; ret 0x2ee8
0x00000000000703e3 : dec dword ptr [rax - 0x77] ; ret 0x38b
0x0000000000079b67 : dec dword ptr [rax - 0x77] ; ret 0x3d83
0x0000000000033f2b : dec dword ptr [rax - 0x77] ; ret 0x4577
0x0000000000040dc6 : dec dword ptr [rax - 0x77] ; ret 0x45e9
0x00000000000e441f : dec dword ptr [rax - 0x77] ; ret 0x48e8
0x0000000000033dd1 : dec dword ptr [rax - 0x77] ; ret 0x4f77
0x00000000000b9e9c : dec dword ptr [rax - 0x77] ; ret 0x6b8
0x0000000000111ea4 : dec dword ptr [rax - 0x77] ; ret 0x8148
0x00000000000fe666 : dec dword ptr [rax - 0x77] ; ret 0x8348
0x000000000007b050 : dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000033163 : dec dword ptr [rax - 0x77] ; ret 0x870f
0x0000000000050cec : dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000008ae26 : dec dword ptr [rax - 0x77] ; ret 0x8949
0x000000000004c4be : dec dword ptr [rax - 0x77] ; ret 0x894c
0x000000000002c778 : dec dword ptr [rax - 0x77] ; ret 0x8b4c
0x00000000000a824d : dec dword ptr [rax - 0x77] ; ret 0x8d48
0x000000000004c883 : dec dword ptr [rax - 0x77] ; ret 0xb5e9
0x000000000011ebdc : dec dword ptr [rax - 0x77] ; ret 0xb60f
0x00000000000b4e94 : dec dword ptr [rax - 0x77] ; ret 0xbb
0x0000000000089abc : dec dword ptr [rax - 0x77] ; ret 0xc031
0x00000000000c4f19 : dec dword ptr [rax - 0x77] ; ret 0xc148
0x00000000000de1aa : dec dword ptr [rax - 0x77] ; ret 0xc1eb
0x000000000007cfee : dec dword ptr [rax - 0x77] ; ret 0xcb8
0x00000000000e439c : dec dword ptr [rax - 0x77] ; ret 0xcbe8
0x00000000000db1e3 : dec dword ptr [rax - 0x77] ; ret 0xcd77
0x0000000000061b85 : dec dword ptr [rax - 0x77] ; ret 0xe2e8
0x000000000004b96b : dec dword ptr [rax - 0x77] ; ret 0xf748
0x000000000008e468 : dec dword ptr [rax - 0x77] ; ret 0xf76
0x000000000010d0fa : dec dword ptr [rax - 0x77] ; ret 0xffb8
0x000000000006d47f : dec dword ptr [rax - 0x77] ; retf
0x00000000000f304f : dec dword ptr [rax - 0x77] ; retf -0x76b4
0x0000000000047e2b : dec dword ptr [rax - 0x77] ; retf -0x76b8
0x0000000000052e73 : dec dword ptr [rax - 0x77] ; ror dword ptr [rdi], -0x7c ; ret
0x00000000000591a1 : dec dword ptr [rax - 0x77] ; test dword ptr [rax - 0x16000005], esi ; ret 0xfffe
0x00000000000a886d : dec dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8348
0x00000000000f5e0f : dec dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8948
0x0000000000056d13 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x00000000000dee93 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf
0x00000000000e3134 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf 0
0x000000000014301c : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x85 ; retf -0xa
0x00000000000f761c : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x8e ; retf 0
0x00000000000e2ca0 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rbx + 0x48], 0x39 ; ret
0x000000000006755c : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rdi*2 + 0x48], 0x89 ; ret
0x00000000000e2120 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rsi + 0x48], 0x89 ; ret
0x00000000000e20c0 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rdx + rsi + 0x48], 0x89 ; ret
0x00000000000e7279 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rsi + rsi*2 + 0x48], 0x39 ; ret
0x00000000000ea71f : dec dword ptr [rax - 0x7b] ; sal byte ptr [rsp + rdx + 0x48], 0x89 ; ret
0x0000000000089d32 : dec dword ptr [rax - 0x7d] ; clc ; add dword ptr [rax - 0x77], ecx ; ret
0x00000000000d29db : dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000100127 : dec dword ptr [rax - 0x7d] ; cli ; std ; jbe 0x100137 ; ret
0x0000000000024c9c : dec dword ptr [rax - 0x7d] ; ret
0x000000000005b28a : dec dword ptr [rax - 0x7d] ; ret 0x4108
0x000000000002671a : dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000cb462 : dec dword ptr [rax - 0x7d] ; ret 0x4808
0x00000000000ab1e8 : dec dword ptr [rax - 0x7d] ; ret 0x4909
0x000000000005ab56 : dec dword ptr [rax - 0x7d] ; ret 0xbe08
0x000000000005b155 : dec dword ptr [rax - 0x7d] ; ret 0xbf08
0x000000000003160b : dec dword ptr [rax - 0x7d] ; retf -0x14f5
0x00000000000dac1b : dec dword ptr [rax - 0x7d] ; retf -0x7601
0x00000000000315cc : dec dword ptr [rax - 0x7d] ; retf 0x480a
0x00000000000d532c : dec dword ptr [rax - 0x7d] ; retf 0x48ff
0x00000000000c2486 : dec dword ptr [rax - 0x7d] ; rol byte ptr [rcx], 0x39 ; ret 0xf17f
0x0000000000029878 : dec dword ptr [rax - 0x7d] ; rol byte ptr [rcx], 0x83 ; ret 0x4801
0x000000000006fe88 : dec dword ptr [rax - 0x7f] ; ret
0x0000000000132eec : dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000015df7b : dec dword ptr [rbp + 0x22] ; cmc ; call rsp
0x000000000016bdbb : dec dword ptr [rbp + 0x35d40000] ; out dx, al ; call rsp
0x00000000000f2f87 : dec dword ptr [rbp + 0x63] ; in al, -0x18 ; push rax ; retf
0x00000000000e468c : dec dword ptr [rbp + 0x63] ; sar byte ptr [rax + 9], cl ; syscall
0x0000000000184b63 : dec dword ptr [rbp + 5] ; add byte ptr [rax], al ; add al, 0xe5 ; retf 0
0x000000000017003b : dec dword ptr [rbp + rax*2 + 2] ; add ah, dl ; ret
0x000000000015dd43 : dec dword ptr [rbp + rbx - 0xb] ; jmp qword ptr [rsi]
0x00000000000dd593 : dec dword ptr [rbp + rcx*4 + 0x24] ; sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x000000000009b45f : dec dword ptr [rbp + rcx*4 + 0x35] ; pop rcx ; retf 0x2f
0x000000000016fdbb : dec dword ptr [rbp + rsi - 0x6bebfffe] ; cli ; jmp rsp
0x000000000015e8c7 : dec dword ptr [rbp + rsi*8 - 0xb] ; jmp rsp
0x0000000000042624 : dec dword ptr [rbp - 0x75] ; add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x48f8
0x000000000005adaf : dec dword ptr [rbp - 0x77] ; loopne 0x5ada3 ; pop rsi ; retf
0x0000000000034898 : dec dword ptr [rbp - 0x77] ; retf
0x00000000000a4ddd : dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000021823 : dec dword ptr [rbx + 0x458b905d] ; test al, 0x39 ; ret
0x000000000011f3dc : dec dword ptr [rbx + 0x480c2444] ; add esp, 0x38 ; ret
0x00000000000be32f : dec dword ptr [rbx + 0x75c9850f] ; ret 0x8b48
0x00000000000e6d48 : dec dword ptr [rbx + rcx*4 + 0x6d] ; add byte ptr [rax - 0x77], cl ; ret 0xabe
0x00000000000dfc37 : dec dword ptr [rbx - 0x2f] ; mov eax, 0x118 ; syscall
0x00000000000ea1ac : dec dword ptr [rbx - 0x2f] ; mov eax, 0x120 ; syscall
0x00000000000ea24e : dec dword ptr [rbx - 0x2f] ; mov eax, 0x12b ; syscall
0x00000000000ea2fe : dec dword ptr [rbx - 0x2f] ; mov eax, 0x133 ; syscall
0x00000000000df9e2 : dec dword ptr [rbx - 0x2f] ; mov eax, 0xdd ; syscall
0x000000000006be9c : dec dword ptr [rbx - 0x3b7cb7fe] ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000028f6e : dec dword ptr [rbx - 0x76f7dbbc] ; ret
0x00000000000c0788 : dec dword ptr [rbx - 0x7af3db8c] ; test byte ptr [rdi], 0x84 ; ret
0x00000000000bd14f : dec dword ptr [rbx - 0x7cb7f3ad] ; ret
0x00000000000db61f : dec dword ptr [rcx + 0x10cb8d2] ; add byte ptr [rax], al ; syscall
0x0000000000089a06 : dec dword ptr [rcx + 0x29] ; retf 0x1deb
0x0000000000048de9 : dec dword ptr [rcx + 0x39] ; ret
0x0000000000052b73 : dec dword ptr [rcx + 0x39] ; ret 0x850f
0x000000000005b1c0 : dec dword ptr [rcx + 0x39] ; retf -0x79f1
0x0000000000066c41 : dec dword ptr [rcx + 0x415d5be8] ; pop rsp ; ret
0x0000000000068dc1 : dec dword ptr [rcx + 0x63] ; std ; mov eax, 3 ; syscall
0x00000000000e11cb : dec dword ptr [rcx + 0x71b8f6] ; add byte ptr [rax], al ; syscall
0x00000000000e123b : dec dword ptr [rcx + 0x72b8f6] ; add byte ptr [rax], al ; syscall
0x00000000000b926d : dec dword ptr [rcx + 0x75b8d2] ; add byte ptr [rax], al ; syscall
0x00000000000b92ed : dec dword ptr [rcx + 0x77b8d2] ; add byte ptr [rax], al ; syscall
0x00000000000e0df2 : dec dword ptr [rcx + 0x8cb8f6] ; add byte ptr [rax], al ; syscall
0x00000000000d1f89 : dec dword ptr [rcx + 0xf] ; int1 ; mov eax, ecx ; syscall
0x000000000004f4cc : dec dword ptr [rcx + rcx*4 + 0x17] ; ret
0x00000000000facd5 : dec dword ptr [rcx + rcx*4 + 0x20] ; mov rdi, r12 ; call 0x107789
0x00000000000c2e78 : dec dword ptr [rcx + rcx*4 - 0x19] ; call 0x1f93e
0x00000000000eaa7b : dec dword ptr [rcx + rcx*4 - 0x19] ; mov eax, 3 ; syscall
0x00000000000dc18f : dec dword ptr [rcx + rcx*4 - 1] ; mov eax, 0x4f ; syscall
0x0000000000044d0a : dec dword ptr [rcx + rcx*4 - 2] ; mov rdi, r14 ; call rax
0x000000000005f19a : dec dword ptr [rcx + rcx*4 - 9] ; call 0x6bc56
0x00000000000f2fe3 : dec dword ptr [rcx + rcx*4 - 9] ; call 0xefae6
0x000000000004784e : dec dword ptr [rcx - 0x4df73] ; inc dword ptr [rcx + 0x29] ; retf
0x00000000000f3270 : dec dword ptr [rcx - 0x75] ; cmp byte ptr [r8 - 0x77], r9b ; ret 0x2b49
0x00000000000c2ea1 : dec dword ptr [rcx - 0x75] ; jge 0xc2eb5 ; call 0x1f93f
0x00000000000d1281 : dec dword ptr [rcx - 0x75] ; pop rsi ; and byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0xfaf3
0x00000000000d5774 : dec dword ptr [rcx - 0x75] ; push rsi ; sub byte ptr [rax - 0x7d], cl ; ret
0x000000000007d508 : dec dword ptr [rcx - 0x77] ; add al, 0x24 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009d8e8 : dec dword ptr [rcx - 0x77] ; fmul qword ptr [rax - 0x77] ; ret
0x00000000000a6446 : dec dword ptr [rcx - 0x77] ; ret
0x000000000004cec6 : dec dword ptr [rcx - 0x77] ; ret 0x8d48
0x000000000010a73a : dec dword ptr [rcx - 0x77] ; ror dword ptr [rax - 0x75], 5 ; retf
0x000000000007854d : dec dword ptr [rcx - 0x7b] ; ret 0x840f
0x000000000005bba2 : dec dword ptr [rcx - 0x7d] ; call 0xffffffffc33f07b2
0x00000000000c54e7 : dec dword ptr [rcx - 0x7d] ; ret
0x000000000002584c : dec dword ptr [rcx - 0x7d] ; ret 0x4904
0x00000000000c721e : dec dword ptr [rcx - 0x7d] ; ret 0x4c20
0x0000000000076956 : dec dword ptr [rcx - 9] ; ret
0x00000000000677b8 : dec dword ptr [rcx] ; out dx, al ; mov dword ptr [rbx], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003f13c : dec dword ptr [rcx] ; ret
0x00000000000732b5 : dec dword ptr [rcx] ; ret 0xfd81
0x000000000011eb54 : dec dword ptr [rcx] ; retf -0x57d
0x00000000000ebcbe : dec dword ptr [rcx] ; setbe al ; ret
0x00000000000e8e42 : dec dword ptr [rdi] ; add byte ptr [rax], al ; or eax, edi ; ret
0x000000000002c1d6 : dec dword ptr [rdi] ; mov bh, 4 ; js 0x2c167 ; loopne 0x2c1e7 ; ret
0x00000000000ec4fd : dec dword ptr [rdi] ; mov bh, 4 ; js 0xec48e ; loopne 0xec50e ; ret
0x00000000000404b8 : dec dword ptr [rdi] ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000055bef : dec dword ptr [rdi] ; ret
0x0000000000119474 : dec dword ptr [rdi] ; ret 0x3145
0x000000000002320b : dec dword ptr [rdi] ; ret 0x41c3
0x000000000003fffe : dec dword ptr [rdi] ; ret 0x8341
0x00000000000af4b2 : dec dword ptr [rdi] ; ret 0x8348
0x00000000000b11fa : dec dword ptr [rdi] ; ret 0x8349
0x0000000000101b29 : dec dword ptr [rdi] ; ret 0x9e9
0x000000000008037e : dec dword ptr [rdi] ; ret 0xb8c3
0x000000000002b0b0 : dec dword ptr [rdi] ; retf 0xd88
0x0000000000102d14 : dec dword ptr [rdi] ; test bl, dh ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x000000000003b83b : dec dword ptr [rdi] ; test byte ptr [rcx + rcx], cl ; add byte ptr [rax - 0x48], cl ; retf -2
0x0000000000025063 : dec dword ptr [rdi] ; test byte ptr [rcx - 0x8fffffc], bh ; ret 0
0x000000000011524a : dec dword ptr [rdi] ; test byte ptr [rdi - 0x7d000000], al ; ret 0x3901
0x0000000000025057 : dec dword ptr [rdi] ; test byte ptr [rdx - 0x8fffffc], dh ; ret 0
0x00000000001035c7 : dec dword ptr [rdi] ; test cl, bh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3904
0x0000000000105a0a : dec dword ptr [rdi] ; test cl, bh ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; retf
0x0000000000025640 : dec dword ptr [rdi] ; test cl, cl ; add al, byte ptr [rax] ; add bh, dh ; ret 0
0x0000000000100015 : dec dword ptr [rdi] ; test dh, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x000000000002564c : dec dword ptr [rdi] ; test dl, cl ; add al, byte ptr [rax] ; add bh, dh ; ret 0
0x0000000000148e60 : dec dword ptr [rdi] ; test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000005a628 : dec dword ptr [rdi] ; test esi, esp ; ret
0x000000000004525b : dec dword ptr [rdi] ; xchg byte ptr [rax], bl ; adc eax, 0x89480000 ; retf -0x76b8
0x0000000000048792 : dec dword ptr [rdi] ; xchg byte ptr [rbx], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; retf -0x76b8
0x000000000008b04f : dec dword ptr [rdi] ; xchg eax, ebp ; ret
0x000000000009e585 : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0x2941
0x00000000000390aa : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0x941
0x00000000000d206a : dec dword ptr [rdi] ; xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rdi], 0x47 ; ret 0x90c3
0x000000000006c37b : dec dword ptr [rdi] ; xchg eax, ebp ; sal bh, 0xd8 ; ret
0x000000000006f39e : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00000000000556d9 : dec dword ptr [rdx + 0x63] ; add al, 0xa2 ; add rax, rdx ; jmp rax
0x00000000000cbeec : dec dword ptr [rdx + 0x63] ; add al, 0xba ; add rax, rdx ; jmp rax
0x000000000016a19f : dec dword ptr [rip + 0x41fffdc0] ; ret 0xfffd
0x000000000016fb6b : dec dword ptr [rsi + 0x48940002] ; cli ; jmp rsp
0x000000000016d8a3 : dec dword ptr [rsi + rdx*2 + 1] ; add byte ptr [rsp - 0xb], al ; jmp rsp
0x0000000000157243 : dec dword ptr [rsi - 0x60] ; in eax, dx ; call rcx
0x000000000015bcab : dec dword ptr [rsi] ; mov al, 0xef ; call rdi
0x0000000000161043 : dec eax ; cli ; jmp rax
0x000000000016106b : dec eax ; hlt ; cli ; jmp rax
0x000000000015cf7b : dec eax ; retf -3
0x000000000015e59b : dec ebp ; mov esi, 0xbed7fff5 ; cmc ; jmp rcx
0x000000000004381d : dec ecx ; ret
0x000000000015e413 : dec edi ; mov edx, 0xbad9fff5 ; cmc ; jmp rbx
0x000000000015df6f : dec esi ; and ebp, esi ; call rsp
0x000000000016ab5f : dec esi ; mov eax, 0xbf50fffc ; cld ; jmp rax
0x000000000016a21f : dec esi ; sar ebp, -1 ; ret 0xfffd
0x000000000016a7db : dec esi ; xchg eax, edx ; cld ; push qword ptr [rdx + rdx*4 - 4] ; jmp rsp
0x0000000000170143 : dec esp ; add al, byte ptr [rax] ; and al, 0xcf ; cli ; jmp rsp
0x000000000016cb63 : dec esp ; add byte ptr [rcx], al ; add byte ptr [rax + rdx*2 - 0xf], dl ; jmp rsp
0x000000000016b7db : dec esp ; add dword ptr [rax], 0 ; hlt ; mov ebp, esp ; jmp rsp
0x000000000016cc7b : dec esp ; add eax, 0x8e040001 ; int1 ; jmp rsp
0x00000000001701ab : dec esp ; add r8b, byte ptr [rax] ; and al, 0xd2 ; cli ; jmp rsp
0x000000000016d123 : dec esp ; and al, 1 ; add byte ptr [rax + rdx], dl ; jmp rsp
0x000000000016d143 : dec esp ; and eax, 0x19240001 ; jmp rsp
0x000000000016f0c3 : dec esp ; fild dword ptr [rcx] ; add byte ptr [rdx + rcx*8 - 8], dl ; jmp rsp
0x000000000016f61b : dec esp ; inc byte ptr [rcx] ; add byte ptr [rsp + rdx*4], ah ; stc ; jmp rsp
0x000000000016de3b : dec esp ; jge 0x16de48 ; add byte ptr [rbx + rax - 9], dl ; jmp rsp
0x000000000016b613 : dec esp ; jl 0x16b61f ; add ah, al ; js 0x16b60f ; jmp rsp
0x000000000016de7b : dec esp ; jle 0x16de88 ; add byte ptr [rbp + rax - 9], al ; jmp rsp
0x0000000000170493 : dec esp ; pop rsi ; add al, byte ptr [rax] ; adc al, 0x3c ; sti ; jmp rsp
0x000000000016d7bb : dec esp ; push rax ; add dword ptr [rax], eax ; in al, -0x1f ; hlt ; jmp rsp
0x000000000017033b : dec esp ; push rsi ; add al, byte ptr [rax] ; je 0x17035e ; sti ; jmp rsp
0x000000000016eca3 : dec esp ; ret
0x000000000016eefb : dec esp ; rol dword ptr [rcx], 1 ; add byte ptr [rbx - 8], dh ; jmp rsp
0x000000000016f5e3 : dec esp ; std ; add dword ptr [rax], eax ; xor al, 0x8e ; stc ; jmp rsp
0x000000000016b843 : dec esp ; test dword ptr [rax], eax ; add byte ptr [rdx + rdx*4], dh ; in al, dx ; jmp rsp
0x000000000016ba9b : dec esp ; xchg eax, ecx ; add byte ptr [rax], al ; in al, -0x3b ; in al, dx ; jmp rsp
0x000000000016fd6b : dec esp ; xor eax, dword ptr [rdx] ; add byte ptr [rsp + rax*4], ah ; cli ; jmp rsp
0x0000000000093139 : dec qword ptr [r8 + 0x29] ; ret 0x149
0x00000000000910e1 : dec qword ptr [r8 + 0x29] ; ret 0x280f
0x000000000005858b : dec qword ptr [r8 + 0x63] ; ret
0x000000000008e36f : dec qword ptr [rax - 0x39] ; ret 0xffff
0x0000000000025160 : dec qword ptr [rax - 0x7d] ; ret
0x0000000000028069 : dec qword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000034897 : dec qword ptr [rbp - 0x77] ; retf
0x00000000000be32e : dec qword ptr [rbx + 0x75c9850f] ; ret 0x8b48
0x000000000018cb29 : div bh ; call qword ptr [rbx]
0x00000000000807f2 : div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x000000000008e8be : div byte ptr [rbp - 0x11] ; mov qword ptr [rdx], rcx ; ret
0x00000000000290f1 : div byte ptr [rsp + rcx - 0x7d] ; inc byte ptr [rbx] ; je 0x29108 ; ret
0x00000000000c0860 : div byte ptr [rsp + rcx*2 - 0x7d] ; rol byte ptr [rcx], 0x83 ; ret
0x00000000000db0f1 : div dword ptr [rdi - 0x14] ; ret
0x00000000000db0c1 : div dword ptr [rdi - 0x6c] ; pop rbx ; ret
0x0000000000002e05 : div dword ptr [rsi + 0x10] ; xchg eax, esi ; sbb eax, 0x8d468ae2 ; ret 0xc1bb
0x0000000000184c09 : div ebp ; call qword ptr [rax]
0x0000000000184c71 : div ebp ; call qword ptr [rdx]
0x0000000000184c21 : div ebp ; ljmp ptr [rbp] ; add byte ptr [rax], al ; add al, 0x51 ; retf 0
0x000000000008eb08 : div ebx ; ret
0x000000000004a26d : div ecx ; add r8d, eax ; mov eax, r8d ; ret
0x0000000000099219 : div ecx ; mov eax, eax ; ret
0x0000000000099200 : div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000000c287d : enter -0x17d7, 1 ; ret
0x00000000000026c0 : enter -0x1ee6, -0x4c ; hlt ; out -0x21, eax ; syscall
0x000000000008eb7e : enter -0x208c, -0xd ; ret
0x000000000008fa31 : enter -0x2d7c, 0x74 ; cmp dh, dh ; ret 0x7501
0x00000000000db0bc : enter -0x2fff, 0x48 ; cmp edi, esi ; ja 0xdb061 ; pop rbx ; ret
0x000000000004721a : enter -0x36cf, -0x46 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x00000000000e96bd : enter -0x3c01, -0x48 ; adc byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x00000000000e932d : enter -0x3c01, -0x48 ; mov cl, 0 ; add byte ptr [rax], al ; syscall
0x00000000000e977d : enter -0x3c01, -0x48 ; sbb eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x000000000010dfd3 : enter -0x3eb8, -0x16 ; adc byte ptr [rax + 0x31], cl ; ret 0xb70f
0x000000000011ebe2 : enter -0x3eb8, -0x16 ; or al, 0x30 ; ror byte ptr [rcx], cl ; retf -0x3d7d
0x0000000000148fd4 : enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x00000000000c084b : enter -0x49f1, 0x34 ; or cl, byte ptr [rax + 0x63] ; retf
0x00000000000a9ee1 : enter -0x67b8, 0xf ; retf
0x0000000000002bf8 : enter -0x7042, -0x15 ; retf
0x00000000000ca638 : enter -0x72b8, 0x14 ; retf 0x17eb
0x0000000000092fb6 : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x149
0x0000000000090f9e : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x280f
0x0000000000093136 : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x149
0x00000000000910de : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x280f
0x00000000000e4461 : enter -0x74b4, 0x4c ; and al, 8 ; syscall
0x0000000000079a08 : enter -0x74b8, 0x57 ; or dh, dh ; ret 0x7402
0x00000000000e8c96 : enter -0x76b4, 0x4c ; and al, 0xd0 ; syscall
0x00000000000e300d : enter -0x76b8, -8 ; mov byte ptr [r8 - 1], 0 ; ret
0x00000000000777e6 : enter -0x7bf1, 0x53 ; add eax, 0x39480000 ; ret
0x00000000000f5e8d : enter -0x7cb8, 0x7c ; retf 0x1f8
0x00000000001041f7 : enter -0x7df1, -0x26 ; add byte ptr [rax], al ; add byte ptr [rbx - 0x77], dl ; retf
0x000000000017f358 : enter -0xca9, -1 ; retf
0x0000000000062ddb : enter -1, -0x7d ; retf
0x000000000015cf79 : enter -3, -0x38 ; retf -3
0x0000000000074144 : enter -4, -1 ; call rax
0x0000000000169ff5 : enter -5, -0x80 ; leave ; sti ; call rax
0x0000000000110397 : enter 0, 0 ; call rax
0x0000000000110359 : enter 0, 0 ; jmp rcx
0x000000000010b876 : enter 0, 0 ; lea r9, qword ptr [rsp + 0x30] ; call qword ptr [rax]
0x0000000000000c40 : enter 0, 0 ; retf
0x0000000000155770 : enter 0, 0 ; retf 0
0x00000000001528c8 : enter 0x10, 0 ; retf
0x0000000000032839 : enter 0x280f, -0x3f ; ret
0x0000000000043b0e : enter 0x289, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000e443c : enter 0x2b4d, 0 ; ret
0x000000000008005d : enter 0x31c3, -0x40 ; ret
0x0000000000108cc1 : enter 0x4101, 0x5d ; pop r14 ; ret
0x00000000001135fb : enter 0x4289, 0x10 ; mov eax, 1 ; ret
0x00000000001134db : enter 0x4289, 0xc ; mov eax, 1 ; ret
0x0000000000112ce7 : enter 0x4789, 0x48 ; mov eax, 1 ; ret
0x0000000000112c44 : enter 0x4789, 0x54 ; mov eax, 1 ; ret
0x0000000000112d14 : enter 0x4789, 0x58 ; mov eax, 1 ; ret
0x00000000000eafb8 : enter 0x4818, 1 ; retf -0x76b8
0x0000000000001b15 : enter 0x59e7, 0x5b ; ret 0x2a63
0x0000000000110bb4 : enter 0x5d5b, 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000015ad5c : enter 0x8ac, 0x47 ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000001520c8 : enter 0xa, 0 ; retf
0x00000000001524c8 : enter 0xd, 0 ; retf
0x0000000000145086 : enter 0xf66, -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000007ea81 : enter 0xf66, -0x15 ; ret
0x0000000000125c8c : enter 0xf66, 0x3a ; movsxd rcx, ecx ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x000000000008368b : enter 0xfc3, 0x1f ; add byte ptr [rax + 1], cl ; retf -0x7cb8
0x0000000000000e2c : enter 1, 0 ; retf
0x0000000000155970 : enter 1, 0 ; retf 1
0x0000000000152c80 : enter 2, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x0000000000155b70 : enter 2, 0 ; retf 2
0x0000000000155d70 : enter 3, 0 ; retf 3
0x0000000000155f70 : enter 4, 0 ; retf 4
0x0000000000096814 : enter 5, 0 ; ret
0x0000000000156170 : enter 5, 0 ; retf 5
0x0000000000156370 : enter 6, 0 ; retf 6
0x0000000000156570 : enter 7, 0 ; retf 7
0x0000000000156770 : enter 8, 0 ; retf 8
0x0000000000156970 : enter 9, 0 ; retf 9
0x000000000017e245 : fadd dword ptr [rax] ; add al, cl ; popfq ; call qword ptr [rcx]
0x00000000000f7065 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000003fc76 : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000e4804 : fadd dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000f5e95 : fadd dword ptr [rax] ; leave ; ret
0x00000000000dbd02 : fadd dword ptr [rbx + 0x2f8247c] ; cmovne eax, edx ; ret
0x0000000000108cbf : fadd dword ptr [rbx + 0x5d4101c8] ; pop r14 ; ret
0x0000000000194190 : fadd dword ptr [rbx] ; add byte ptr [rax], al ; syscall
0x00000000000c14b6 : fadd dword ptr [rcx + 0x5d] ; pop r14 ; pop r15 ; ret
0x000000000004fd5e : fadd dword ptr [rcx + 0xf] ; ret
0x000000000009a69e : fadd dword ptr [rcx + rdi - 0x3f] ; cmovg eax, edx ; ret
0x00000000000ae5b5 : fadd dword ptr [rcx - 0x77] ; ret
0x000000000018e2d5 : fadd dword ptr [rcx] ; add byte ptr [rax + 0x49], cl ; clc ; call qword ptr [rbx]
0x000000000018e2ed : fadd dword ptr [rcx] ; add byte ptr [rax + 0x4a], dl ; clc ; call qword ptr [rsi]
0x000000000018e245 : fadd dword ptr [rcx] ; add byte ptr [rax], bl ; clc ; jmp qword ptr [rax]
0x00000000000ea614 : fadd qword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000016c5f5 : fadd qword ptr [rax] ; add byte ptr [rdi + rsi*2 - 0x10], ah ; call rsp
0x000000000016f0dd : fadd qword ptr [rcx] ; add ah, al ; retf -8
0x0000000000032c94 : fadd st(0) ; add rsp, 8 ; ret
0x0000000000032c60 : fadd st(0) ; ret
0x00000000000c0822 : fadd st(1) ; clc ; sbb cl, al ; cli ; sbb byte ptr [rcx], bh ; ret 0x850f
0x00000000001495f8 : fadd st(3) ; nop word ptr [rax + rax] ; ret
0x00000000001463de : fadd st(3) ; ret
0x00000000000e72d0 : fadd st(6) ; add al, byte ptr [rax] ; pop rbx ; ret
0x0000000000144bd1 : fbld dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000ba573 : fbld dword ptr [rsp + rax*2 - 0x75] ; add al, ch ; ret 0x20f
0x0000000000149b5c : fbstp dword ptr [rbp - 0x17] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000069463 : fbstp dword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], cl ; pop r12 ; pop r13 ; jmp rax
0x000000000008263d : fbstp dword ptr [rsi] ; or al, byte ptr [rax] ; ret
0x000000000015a398 : fcmovb st(0), st(3) ; ret
0x00000000000034df : fcmove st(0), st(5) ; retf
0x0000000000185ce4 : fcom qword ptr [rdx + 1] ; add byte ptr [rax], bh ; xor al, 0xf6 ; jmp qword ptr [rcx]
0x000000000003fa7f : fcomi st(3) ; ret
0x0000000000184671 : fcomi st(5) ; jmp qword ptr [rsi]
0x00000000000e20f7 : fcomp dword ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000e3a18 : fcomp dword ptr [rbx + 0x41] ; pop rsp ; pop r13 ; pop rbp ; ret
0x000000000008b597 : fcomp dword ptr [rbx + 0x48] ; cmovne eax, edx ; ret
0x00000000000317b9 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000067b3a : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x0000000000029295 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000030359 : fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000007b2b3 : fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x000000000015b119 : fcomp dword ptr [rdx + 0x21] ; ret
0x00000000000e4f7b : fcomp dword ptr [rdx + 0x5b] ; ret
0x0000000000185968 : fcomp dword ptr [rsi + rsi*8] ; jmp qword ptr [rcx]
0x0000000000159380 : fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x000000000008eb80 : fcompi st(3) ; ret
0x000000000016e799 : fcompi st(7) ; call rsp
0x000000000007dfb4 : fdiv dword ptr [rcx] ; add byte ptr [rax], al ; je 0x7dfc6 ; ret
0x0000000000183ee4 : fdiv qword ptr [rcx + rax] ; add byte ptr [rax - 0x34], cl ; cmc ; jmp qword ptr [rcx]
0x0000000000173ce4 : fdiv qword ptr [rdx] ; add byte ptr [rax], al ; call 0x27172917
0x00000000001880e4 : fdiv qword ptr [rsi + 1] ; add al, ch ; jg 0x1880eb ; jmp qword ptr [rsi]
0x00000000001843f1 : fdiv st(5) ; jmp qword ptr [rcx]
0x00000000001908e4 : fdiv st(6), st(0) ; add dword ptr [rax], eax ; sub dl, al ; clc ; jmp qword ptr [rcx]
0x000000000007b04e : fdiv st(7), st(0) ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000191091 : fdivp st(0) ; jmp rbx
0x000000000005ab54 : fdivp st(7) ; dec dword ptr [rax - 0x7d] ; ret 0xbe08
0x00000000000d2055 : fdivr dword ptr [rcx] ; adc byte ptr [r15], r9b ; ret 0xfc3
0x000000000010d7e3 : fdivr qword ptr [rax + 1] ; pop rbx ; ret
0x00000000000bd04f : fdivr qword ptr [rax + 1] ; ret
0x000000000017c9e4 : fdivr qword ptr [rdi - 0x6b980000] ; cli ; call qword ptr [rdi]
0x0000000000111c3a : fdivr st(0), st(0) ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000184d38 : fdivr st(1) ; cmc ; jmp qword ptr [rcx]
0x00000000001586d5 : fdivr st(4) ; test al, 0x97 ; xchg eax, esp ; ret
0x0000000000184701 : fdivr st(5), st(0) ; jmp qword ptr [rsi]
0x000000000014275d : fdivr st(7) ; ret
0x0000000000093e6e : fdivr st(7) ; xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x000000000018bde9 : fdivr st(7), st(0) ; jmp qword ptr [rsi]
0x000000000016e711 : fdivr st(7), st(0) ; jmp rsp
0x000000000018c3b1 : fdivrp st(7) ; jmp qword ptr [rbx]
0x000000000017e43d : fiadd dword ptr [rax] ; add byte ptr [rax - 0x5b], al ; jmp qword ptr [rcx]
0x000000000008d865 : fiadd dword ptr [rbp + 0x38] ; retf -0x238e
0x000000000008dee1 : fiadd dword ptr [rbp + 0x38] ; retf -0x578d
0x0000000000037360 : fiadd dword ptr [rbp + 0x450f48c9] ; ret 0x8348
0x00000000000cf63b : fiadd dword ptr [rbp + 9] ; retf -0x7bf1
0x000000000008d10a : fiadd dword ptr [rbx + 0x294803e0] ; ret 0x148
0x00000000000656e2 : fiadd dword ptr [rbx] ; sub rdx, r12 ; syscall
0x000000000016f085 : fiadd dword ptr [rcx] ; add byte ptr [rax + rcx*8 - 8], dh ; call rsp
0x0000000000149f12 : fiadd dword ptr [rdi + 0x25] ; add byte ptr [rbp - 0xcf98a40], al ; ret
0x0000000000076b7e : fiadd dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000016f084 : fiadd dword ptr fs:[rcx] ; add byte ptr [rax + rcx*8 - 8], dh ; call rsp
0x00000000000aed44 : fiadd word ptr [r9] ; ret
0x00000000000af00e : fiadd word ptr [r9] ; retf
0x000000000017e8fd : fiadd word ptr [rax] ; add byte ptr [rax - 0x35], al ; jmp qword ptr [rcx]
0x000000000017e845 : fiadd word ptr [rax] ; add byte ptr [rax], bh ; ret
0x000000000011dc42 : fiadd word ptr [rcx + rcx*4 - 0x40] ; syscall
0x000000000011db8c : fiadd word ptr [rcx + rcx*4 - 8] ; syscall
0x00000000000bf8c2 : fiadd word ptr [rcx - 0x77] ; retf
0x00000000000aed45 : fiadd word ptr [rcx] ; ret
0x00000000000af00f : fiadd word ptr [rcx] ; retf
0x00000000000e5b29 : ficomp word ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000015af66 : ficomp word ptr [rdx - 0x19] ; cmc ; mov ch, 0xab ; ret
0x0000000000149ff8 : fidiv dword ptr [rbp - 0x13] ; pop rbx ; ret
0x000000000011292e : fidiv dword ptr [rcx] ; shr al, 0x2a ; retf -0xd
0x0000000000112895 : fidiv dword ptr [rcx] ; shr al, 0xc3 ; retf -0xd
0x0000000000112951 : fidiv dword ptr [rcx] ; shr al, 7 ; retf -0xd
0x0000000000001ad0 : fidiv word ptr [rbx] ; retf
0x000000000011f265 : fidivr dword ptr [rax + 1] ; ret
0x0000000000002df0 : fild dword ptr [rax + 0x2d37b741] ; retf 0x4a9a
0x000000000011ae8e : fild dword ptr [rbp + 0x31] ; shr cl, cl ; ret
0x00000000000d6935 : fild dword ptr [rbp - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret
0x0000000000027884 : fild dword ptr [rbx - 0x47cf81d] ; add dword ptr [rax + 0x63], ecx ; retf
0x000000000016f0c5 : fild dword ptr [rcx] ; add byte ptr [rdx + rcx*8 - 8], dl ; jmp rsp
0x0000000000076a6a : fild dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000bdabf : fild word ptr [r11 - 0x78f0c408] ; retf
0x000000000017e95d : fild word ptr [rax] ; add al, ah ; retf
0x000000000017e975 : fild word ptr [rax] ; add al, ch ; retf
0x000000000017e915 : fild word ptr [rax] ; add byte ptr [rax - 0x35], bl ; jmp qword ptr [rcx]
0x00000000000be30a : fild word ptr [rbx - 0x6bf0bf06] ; ret 0xd008
0x00000000000bdac0 : fild word ptr [rbx - 0x78f0c408] ; retf
0x00000000000e0556 : fild word ptr [rcx + 0xf] ; xor byte ptr [rcx], 0xc0 ; ret
0x000000000001faeb : fild word ptr [rcx + rcx*4 - 0x20] ; syscall
0x000000000004a260 : fild word ptr [rcx + rcx*4 - 0x40] ; ret
0x000000000018e9fd : fild word ptr [rcx] ; add al, dl ; clc ; call qword ptr [rcx]
0x0000000000030d1c : fimul dword ptr [rax + 0x29] ; ret 0x8948
0x0000000000039262 : fimul dword ptr [rax + 0x39] ; ret 0xf48
0x000000000008a1e2 : fimul dword ptr [rax + 1] ; ret 0x3949
0x00000000000db070 : fimul dword ptr [rax + 1] ; retf -0x76b8
0x0000000000121366 : fimul dword ptr [rax + rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000004e7a9 : fimul dword ptr [rax - 0x3f] ; cli ; add cl, byte ptr [rax + 0x39] ; retf 0x97e
0x000000000009ac35 : fimul dword ptr [rax - 0x77] ; clc ; ret
0x0000000000072834 : fimul dword ptr [rax - 0x77] ; out dx, al ; mov eax, r13d ; syscall
0x000000000003bd47 : fimul dword ptr [rax - 0x77] ; ret
0x00000000000af4af : fimul dword ptr [rax - 0x7b] ; dec dword ptr [rdi] ; ret 0x8348
0x00000000000b11f7 : fimul dword ptr [rax - 0x7b] ; dec dword ptr [rdi] ; ret 0x8349
0x00000000000c3451 : fimul dword ptr [rax - 0x7b] ; sal byte ptr [rcx + 0x48], 0x89 ; ret
0x000000000002fdb0 : fimul dword ptr [rax - 0x7d] ; ret
0x0000000000079605 : fimul dword ptr [rax - 0x7d] ; retf 0x4801
0x000000000007db17 : fimul dword ptr [rcx + rcx*4 - 0x12] ; call rax
0x000000000007dcf3 : fimul dword ptr [rcx + rcx*4 - 0x12] ; mov rdi, r12 ; call rax
0x000000000003712e : fimul dword ptr [rcx + rcx*4 - 0x19] ; call 0x43c06
0x000000000010d8c7 : fimul dword ptr [rcx + rcx*4 - 0x1a] ; mov rdi, rbp ; call rax
0x00000000000e1b4e : fimul dword ptr [rcx + rcx*4 - 0x39] ; mov eax, 3 ; syscall
0x0000000000141502 : fimul dword ptr [rcx - 0x7d] ; call 0xffffffffc39a2421
0x0000000000142582 : fimul dword ptr [rcx - 0x7d] ; call 0xffffffffc39a34a1
0x0000000000032a43 : fimul dword ptr [rcx] ; ret 0xb70f
0x0000000000033dc3 : fimul word ptr [rax - 0x75] ; cmp al, 0x24 ; mov eax, ecx ; syscall
0x00000000000d0103 : fimul word ptr [rax - 0x75] ; or cl, byte ptr [rax - 0x77] ; ret 0x91e8
0x000000000010b5c8 : fimul word ptr [rax - 0x77] ; out dx, eax ; call 0x118056
0x00000000000c1797 : fimul word ptr [rax - 0x77] ; out dx, eax ; call r12
0x000000000011806f : fimul word ptr [rax - 0x77] ; out dx, eax ; call rcx
0x0000000000070a1e : fimul word ptr [rax - 0x77] ; ret
0x0000000000082c8c : fimul word ptr [rax - 0x77] ; retf
0x000000000004220c : fimul word ptr [rbp + 0x11] ; retf
0x00000000000a64fe : fimul word ptr [rbp - 0x77] ; retf
0x00000000000bd15b : fimul word ptr [rbx - 0x7cb7fbad] ; ret
0x000000000007dbfd : fimul word ptr [rcx + rcx*4 - 0x11] ; call rax
0x000000000002eccc : fimul word ptr [rcx + rcx*4 - 0x39] ; mov eax, r10d ; syscall
0x0000000000022220 : fimul word ptr [rcx + rcx*4 - 1] ; call 0x7ec46
0x00000000001157fe : fimul word ptr [rcx + rcx*4 - 1] ; call qword ptr [rax]
0x00000000001170ec : fimul word ptr [rcx + rcx*4 - 1] ; call r14
0x00000000000df979 : fistp qword ptr [rax + 0x10f] ; syscall
0x00000000000db1d6 : fistp qword ptr [rax + 0x135] ; syscall
0x00000000000333ce : fistp qword ptr [rax + 0x82] ; syscall
0x000000000001fa13 : fistp qword ptr [rax + 1] ; syscall
0x0000000000031bee : fistp qword ptr [rax + 3] ; syscall
0x00000000000e57bb : fistp word ptr [rbx + 0x48] ; mov eax, ebp ; pop rbp ; pop r12 ; jmp rax
0x0000000000069226 : fistp word ptr [rbx + 0x5d] ; jmp rax
0x000000000006b980 : fistp word ptr [rbx + 0x5d] ; pop r12 ; jmp rax
0x00000000000727bb : fistp word ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; jmp rax
0x00000000000b36d6 : fistp word ptr [rbx - 0x17] ; pop rbx ; ret 0xfff6
0x00000000000b2185 : fisttp dword ptr [rax + 0x39] ; ret
0x00000000000a833c : fisttp dword ptr [rax + 1] ; ret
0x0000000000029337 : fisttp dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000149ff5 : fisttp dword ptr [rax - 0x77] ; fidiv dword ptr [rbp - 0x13] ; pop rbx ; ret
0x0000000000042d91 : fisttp dword ptr [rax - 0x77] ; ret
0x00000000000eae9e : fisttp dword ptr [rax - 0x77] ; sbb eax, 0x2ae37a ; pop rbx ; ret
0x000000000004fd5c : fisttp dword ptr [rcx + 0x4d0f41d8] ; ret
0x00000000000a0ff5 : fisttp dword ptr [rcx - 0x39] ; ret 0xffff
0x0000000000042dab : fisttp dword ptr [rcx - 0x77] ; ret 0x8b4a
0x00000000000566ff : fisttp dword ptr [rdi] ; lahf ; ret 0xd329
0x000000000004ccea : fisttp dword ptr [rdi] ; lahf ; ret 0xe683
0x000000000004eb53 : fisttp dword ptr [rdi] ; lahf ; ret 0xe783
0x000000000004d574 : fisttp dword ptr [rdi] ; lahf ; ret 0xf640
0x00000000000a9eee : fisttp dword ptr [rdi] ; retf 0xf41
0x000000000004169e : fisttp dword ptr [rdi] ; test byte ptr [rcx + 0x8000002], dh ; retf -0x7af1
0x00000000000fe751 : fisttp dword ptr [rdi] ; test dword ptr [rdx - 0x16000002], ecx ; retf
0x00000000000a073f : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0x2945
0x0000000000033d3f : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0xd521
0x0000000000042bba : fisttp qword ptr [rax + 0x39] ; retf -0x7bf1
0x0000000000125d72 : fisttp qword ptr [rax + 0x63] ; ror dword ptr [rax + 1], -8 ; ret
0x000000000009fbbe : fisttp qword ptr [rax - 0x77] ; ret
0x00000000000834aa : fisttp qword ptr [rax - 1] ; ret 0xff48
0x00000000000c45be : fisttp qword ptr [rdi] ; mov dr1, word ptr [rbx] ; add al, byte ptr [rax] ; add byte ptr [rbp + 0x63], cl ; retf
0x0000000000028852 : fisttp qword ptr [rdi] ; ret 0xc389
0x00000000000eff04 : fisttp word ptr [rax + 0x29] ; retf -0x76b4
0x00000000000317ca : fisttp word ptr [rax - 0x39] ; ret
0x000000000011ee3c : fisttp word ptr [rax - 0x75] ; and al, 0x10 ; call rax
0x000000000010be31 : fisttp word ptr [rax - 0x75] ; or al, 0x24 ; call rcx
0x0000000000089686 : fisttp word ptr [rax - 0x77] ; ret
0x000000000008f451 : fisttp word ptr [rax - 0x77] ; ret 0x36e8
0x00000000000f1a43 : fisttp word ptr [rax - 0x77] ; ret 0x5d5b
0x000000000008bd28 : fisttp word ptr [rax - 0x77] ; ret 0x6ce9
0x000000000008bf70 : fisttp word ptr [rax - 0x77] ; ret 0x74e9
0x000000000002efa1 : fisttp word ptr [rax - 0x77] ; ret 0x894c
0x000000000008dd58 : fisttp word ptr [rax - 0x77] ; ret 0x8beb
0x00000000000475f1 : fisttp word ptr [rax - 0x77] ; retf -0x76b8
0x00000000000ce126 : fisttp word ptr [rax - 0x77] ; retf -0x76bc
0x00000000000d3eed : fisttp word ptr [rax - 0x77] ; retf -0x7abb
0x000000000007b170 : fisttp word ptr [rax - 0x7d] ; ret 0x4810
0x0000000000042e2f : fisttp word ptr [rax] ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x000000000008b04c : fisttp word ptr [rbp - 0x7b] ; dec dword ptr [rdi] ; xchg eax, ebp ; ret
0x00000000000c7ad0 : fisttp word ptr [rbx - 0x76f7db94] ; ret
0x00000000000bd58e : fisttp word ptr [rbx - 0x7cb7fbbe] ; ret 0xeb04
0x0000000000115ab2 : fisttp word ptr [rcx + 0xf] ; fmul qword ptr [rax - 0x7d] ; ret
0x000000000003b8f9 : fisttp word ptr [rdi] ; xchg eax, ebp ; ret 0x941
0x00000000000321d9 : fisttp word ptr [rdx - 0x73] ; xor al, 0x20 ; mov eax, r8d ; syscall
0x000000000012677d : fisttp word ptr [rip - 0x7cb80000] ; ret 0x4910
0x00000000000d2028 : fisub dword ptr [rcx + rcx*4 + 0x10] ; mov eax, 0xffffffff ; ret
0x0000000000144fa1 : fisub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000c9175 : fisub dword ptr [rsi - 0x7f] ; loop 0xc9180 ; add esi, esi ; ret
0x0000000000144ca1 : fisub word ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000ffbc1 : fisubr dword ptr [rcx] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000016a068 : fisubr word ptr [rbp + rdi*8 - 0x2521f01] ; call qword ptr [rcx]
0x000000000017e3ad : fld dword ptr [rax] ; add byte ptr [rax], dl ; movsb byte ptr [rdi], byte ptr [rsi] ; jmp qword ptr [rax]
0x000000000016f065 : fld dword ptr [rcx] ; add ah, dh ; ret 0xfff8
0x000000000008cb08 : fld dword ptr [rcx] ; retf -0x3f7d
0x0000000000001dc0 : fld dword ptr [rdx + 0x6b865524] ; retf
0x00000000000df9e7 : fld qword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000016f13d : fld qword ptr [rcx] ; add byte ptr [rax + rdx*8 - 8], al ; call rsp
0x00000000000e6638 : fld qword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x00000000001593c1 : fld qword ptr [rsi + 0x32] ; mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x0000000000032af1 : fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x00000000000038a6 : fld xword ptr [rsi + 0x7a697efd] ; retf -0x513c
0x0000000000032bc8 : fld xword ptr [rsp + 8] ; fscale ; fstp st(1) ; ret
0x0000000000032a89 : fld xword ptr [rsp + 8] ; ret
0x0000000000032b89 : fld xword ptr [rsp - 0x18] ; fstp xword ptr [rdi] ; ret
0x0000000000032b67 : fld xword ptr [rsp - 0x18] ; ret
0x0000000000032d09 : fldcw word ptr [rsp - 2] ; ret
0x0000000000125db0 : fldenv dword ptr [rsi + 0xf] ; cmp ah, byte ptr [rbx - 0x25] ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x00000000000837e9 : fldenv dword ptr [rsi + 0xf] ; je 0x83846 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000008a697 : fldenv dword ptr [rsi + 0xf] ; je 0x8a6f4 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000145021 : fldenv dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000836e1 : fldenv dword ptr [rsi + 0xf] ; xlatb ; ret
0x000000000009a8bc : fldenv dword ptr [rsi + 0xf] ; xlatb ; retf 0xf66
0x0000000000042274 : fmul dword ptr [rax + 0x11] ; rcr byte ptr [rbp + 0x5b], 1 ; ret
0x00000000000da4ae : fmul dword ptr [rax + 0x21] ; ret
0x000000000006d5f9 : fmul dword ptr [rax + 0x29] ; ror byte ptr [rax - 0x77], 1 ; ret
0x00000000000eb36e : fmul dword ptr [rax + 0x39] ; jno 0xeb38b ; cmovb eax, edx ; ret
0x00000000000aed52 : fmul dword ptr [rax + 0x39] ; ret
0x00000000000bcfd2 : fmul dword ptr [rax + 3] ; adc byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000098ac7 : fmul dword ptr [rax + 9] ; retf 0x4466
0x000000000003c944 : fmul dword ptr [rax - 0x39] ; ret
0x0000000000063aba : fmul dword ptr [rax - 0x7d] ; ret
0x0000000000024b43 : fmul dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000007aefc : fmul dword ptr [rax] ; xor al, byte ptr [rax] ; xor eax, eax ; ret
0x0000000000108eb1 : fmul dword ptr [rcx + rcx*4 - 0xf] ; mov rdi, r13 ; call r12
0x00000000000b0380 : fmul dword ptr [rcx - 0x7d] ; ret
0x00000000000a3243 : fmul dword ptr [rdi] ; mov fs, word ptr [rbx - 0x7cfffff8] ; ret
0x0000000000038acc : fmul dword ptr [rdi] ; xchg eax, edx ; ret 0x2948
0x00000000000ead6e : fmul qword ptr [rax + 0x39] ; ret
0x00000000000b89e4 : fmul qword ptr [rax - 0x75] ; pop rbp ; clc ; leave ; ret
0x000000000005729d : fmul qword ptr [rax - 0x77] ; ret
0x00000000000b409b : fmul qword ptr [rax - 0x7d] ; ret
0x000000000007ee19 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x0000000000084b3f : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000001817e4 : fmul qword ptr [rip - 0x62d7ffff] ; hlt ; jmp qword ptr [rdi]
0x000000000003c81c : fmul st(0) ; ret
0x000000000003c794 : fmulp st(1) ; ret
0x000000000007c362 : fmulp st(5) ; xor dword ptr [rax], eax ; test eax, eax ; js 0x7c379 ; ret
0x000000000009b643 : fnstenv dword ptr [rax + 0x3948002f] ; ret
0x000000000000253a : fnstenv dword ptr [rdx + rdx - 0x38975393] ; ret
0x0000000000032ce6 : fnstsw ax ; fstp st(0) ; and eax, 0x200 ; ret
0x000000000015ac0a : fnstsw dword ptr [rbx + rdx*4] ; in al, dx ; retf -0x51ce
0x000000000016d359 : fpatan ; call rsp
0x000000000003175d : fpatan ; ret
0x0000000000184551 : fprem1 ; jmp rdx
0x0000000000144da1 : frstor dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000032bcc : fscale ; fstp st(1) ; ret
0x0000000000003a81 : fst dword ptr [rbx + 0x55f20b1c] ; jg 0x3afa ; xchg eax, ebp ; retf 0x10bf
0x000000000015df44 : fst qword ptr [rcx] ; cmc ; call rsp
0x00000000001590a7 : fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x000000000008adde : fstp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000032ce8 : fstp st(0) ; and eax, 0x200 ; ret
0x0000000000159420 : fstp st(0) ; ret 0xde5d
0x0000000000032bce : fstp st(1) ; ret
0x00000000001585eb : fstp st(3), st(0) ; retf -0x147d
0x0000000000032af3 : fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x0000000000032b8d : fstp xword ptr [rdi] ; ret
0x0000000000055491 : fstp xword ptr [rdx] ; xor al, 0 ; call rax
0x000000000018ea18 : fsub dword ptr [rbp - 8] ; call qword ptr [rbx]
0x00000000000204c4 : fsub dword ptr [rcx + rax*2 - 0x77] ; add ebx, ebp ; ret 0x1f0f
0x0000000000033328 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000332f8 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x000000000012e9f4 : fsub dword ptr [rdi + 0x39480026] ; retf -0x76b7
0x0000000000032ce9 : fsub dword ptr [rip + 0x200] ; ret
0x00000000001450a1 : fsub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000008fe14 : fsub dword ptr [rsi + 0xf] ; xlatb ; ret
0x000000000015a9d8 : fsub qword ptr [rbx] ; sub dword ptr [rsi], 0x76 ; retf
0x0000000000098c0b : fsub qword ptr [rsi + 0xf] ; jmp 0x98bd7
0x0000000000144ea1 : fsub qword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000007eb9c : fsub qword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000001084eb : fsub st(3), st(0) ; mov dl, 0x5b ; pop rbp ; pop r12 ; ret
0x0000000000184928 : fsub st(7) ; cmc ; call qword ptr [rsi]
0x00000000000b2017 : fsubp st(0) ; ret
0x00000000000ea0ff : fsubp st(0) ; retf
0x0000000000032af5 : fsubp st(1) ; ret
0x000000000018ee58 : fsubr dword ptr [rbp - 8] ; call qword ptr [rdx]
0x00000000000a66db : fsubr qword ptr [rcx] ; ret
0x00000000000399b7 : fsubr st(1) ; ret
0x0000000000051b66 : fsubr st(1) ; retf -8
0x0000000000188a98 : fsubr st(2) ; idiv bh ; retf
0x000000000015b0f8 : fucom st(5) ; loop 0x15b151 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000000c6a64 : fucomi st(1) ; ret 0xfffc
0x0000000000067d9e : fucompi st(0) ; cld ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x38b
0x00000000000f368b : fucompi st(0) ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xfff2
0x00000000000d13d6 : fucompi st(0) ; je 0xd13d4 ; cli ; dec dword ptr [rax + 1] ; ret
0x00000000000dd717 : fucompi st(0) ; jrcxz 0xdd6f0 ; cli ; dec dword ptr [rax + 0x39] ; ret
0x00000000000d1698 : fucompi st(0) ; mov dl, 0xef ; cli ; dec dword ptr [rax + 1] ; ret
0x00000000000d1163 : fucompi st(0) ; out -0xc, eax ; cli ; dec dword ptr [rax + 1] ; ret
0x00000000000e36da : fucompi st(0) ; pop rax ; ret 0xfff3
0x000000000010bdd1 : fucompi st(0) ; pop rcx ; ret 0
0x0000000000100572 : fucompi st(0) ; push -0x76000003 ; ret 0x8aeb
0x00000000000bdab4 : fucompi st(0) ; push rsi ; out 2, al ; add byte ptr [rcx - 0x77], al ; ret
0x0000000000067587 : fucompi st(0) ; ret
0x0000000000030378 : fucompi st(0) ; ret 0x4e8
0x00000000000d1288 : fucompi st(0) ; ret 0xfaf3
0x00000000000433c8 : fucompi st(0) ; ret 0xffed
0x00000000000b42c7 : fucompi st(0) ; ret 0xfff6
0x00000000000a95b8 : fucompi st(0) ; ret 0xfffa
0x000000000009febf : fucompi st(0) ; retf
0x0000000000079d90 : fucompi st(0) ; retf -0x37
0x000000000009d8c0 : fucompi st(0) ; retf -0x5b0
0x0000000000101a1f : fucompi st(0) ; stosd dword ptr [rdi], eax ; retf
0x00000000001004fa : fucompi st(0) ; xor byte ptr [rcx + rax - 0x763f7b00], ch ; ret 0x4078
0x000000000003c326 : fucompp ; retf
0x000000000004f0a2 : fucompp ; retf -2
0x000000000015a73e : fxch st(0), st(6) ; mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x00000000000f2e8b : hlt ; adc al, 7 ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000001248b9 : hlt ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000188bfc : hlt ; add dword ptr [rcx], 0xf6ee2000 ; call qword ptr [rsi]
0x00000000001257b9 : hlt ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000e6e4b : hlt ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000181f32 : hlt ; call qword ptr [rbx]
0x000000000015d97a : hlt ; call qword ptr [rdx]
0x0000000000181f72 : hlt ; call qword ptr [rsi]
0x0000000000180ab2 : hlt ; call rdi
0x000000000018213a : hlt ; call rdx
0x000000000015d9c6 : hlt ; call rsi
0x000000000016d4ea : hlt ; call rsp
0x000000000016ed80 : hlt ; clc ; push rsp ; retf 1
0x0000000000161075 : hlt ; cli ; call qword ptr [rax]
0x00000000000d1166 : hlt ; cli ; dec dword ptr [rax + 1] ; ret
0x0000000000161069 : hlt ; cli ; dec eax ; hlt ; cli ; jmp rax
0x000000000016106d : hlt ; cli ; jmp rax
0x000000000015e8c5 : hlt ; cmc ; dec dword ptr [rbp + rsi*8 - 0xb] ; jmp rsp
0x000000000015e91d : hlt ; cmc ; jmp rsp
0x000000000008eb2b : hlt ; cmp ecx, esi ; je 0x8eb26 ; ret
0x00000000000dc1f1 : hlt ; dec dword ptr [rax - 0x77] ; ret
0x00000000000ea71e : hlt ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rsp + rdx + 0x48], 0x89 ; ret
0x000000000016d7ba : hlt ; dec esp ; push rax ; add dword ptr [rax], eax ; in al, -0x1f ; hlt ; jmp rsp
0x000000000017e8fc : hlt ; fiadd word ptr [rax] ; add byte ptr [rax - 0x35], al ; jmp qword ptr [rcx]
0x000000000018e9fc : hlt ; fild word ptr [rcx] ; add al, dl ; clc ; call qword ptr [rcx]
0x0000000000175321 : hlt ; in al, dx ; jmp rcx
0x000000000015d9c2 : hlt ; inc dword ptr [rbp - 0x17] ; hlt ; call rsi
0x00000000001880fc : hlt ; jbe 0x188107 ; add al, ah ; sal dh, 1 ; jmp qword ptr [rsi]
0x0000000000181baa : hlt ; jmp qword ptr [rax]
0x0000000000181fb2 : hlt ; jmp qword ptr [rcx]
0x00000000001817ea : hlt ; jmp qword ptr [rdi]
0x0000000000180922 : hlt ; jmp qword ptr [rdx]
0x0000000000181a2a : hlt ; jmp rbx
0x0000000000180c7a : hlt ; jmp rdx
0x000000000015daba : hlt ; jmp rsp
0x00000000001494d5 : hlt ; jne 0x1495f7 ; ret
0x00000000001494d4 : hlt ; jne 0x1495f8 ; ret
0x00000000000d2f2e : hlt ; jne 0xd2f26 ; mov eax, dword ptr [rdx + 8] ; ret
0x00000000000d2f2d : hlt ; jne 0xd2f27 ; mov eax, dword ptr [rdx + 8] ; ret
0x00000000000da056 : hlt ; lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000016b298 : hlt ; loopne 0x16b289 ; call rsp
0x000000000013332a : hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012dfde : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016b7e0 : hlt ; mov ebp, esp ; jmp rsp
0x00000000000b860f : hlt ; mov rdi, rdx ; mov eax, r8d ; syscall
0x0000000000148ae3 : hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x00000000000026c4 : hlt ; out -0x21, eax ; syscall
0x00000000000df16b : hlt ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000185cfc : hlt ; push rdx ; add dword ptr [rax], eax ; push rax ; xor al, 0xf6 ; jmp qword ptr [rcx]
0x000000000016ed00 : hlt ; push rdx ; clc ; jmp rsp
0x000000000005a62b : hlt ; ret
0x000000000016f068 : hlt ; ret 0xfff8
0x0000000000149ca8 : hlt ; ret 0xfff9
0x000000000017d5fc : hlt ; retf
0x00000000000f2fe8 : hlt ; retf -1
0x000000000016ed84 : hlt ; retf 1
0x000000000017dafc : hlt ; rol byte ptr [rax], 1 ; add byte ptr [rax], dh ; movsxd rsi, edx ; call qword ptr [rax]
0x00000000001709e9 : hlt ; std ; jmp rsp
0x00000000001595e3 : hlt ; stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x0000000000148ae7 : hlt ; sub eax, edx ; ret
0x0000000000003ce9 : hlt ; test al, 0x35 ; push rbx ; or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x000000000016edc8 : hlt ; xchg al, bh ; call rsp
0x0000000000183efc : hlt ; xor al, 1 ; add byte ptr [rax - 0x34], ah ; cmc ; call qword ptr [rcx]
0x000000000017094c : hlt ; xor al, 1 ; add byte ptr [rsi + rbp*8], al ; std ; call rsp
0x0000000000173bfc : hlt ; xor dword ptr [rax], eax ; add al, dh ; and ch, ah ; call qword ptr [rcx]
0x00000000000c5d03 : hlt ; xor eax, eax ; cmp cl, byte ptr [rsi] ; je 0xc5ca1 ; ret
0x0000000000076d59 : hlt ; xor edi, edi ; mov r13, rdx ; call qword ptr [r14]
0x00000000000f7f2c : idiv bh ; call qword ptr [rax - 0x3c0776b8]
0x00000000000f3686 : idiv bh ; dec dword ptr [rax - 0x77] ; fucompi st(0) ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xfff2
0x0000000000043822 : idiv bh ; dec ecx ; ret
0x000000000004df43 : idiv bh ; inc dword ptr [rcx] ; ret
0x00000000000e4a01 : idiv bh ; mov rax, rbx ; pop rbx ; ret
0x00000000000b36c0 : idiv bh ; mov rdi, qword ptr [rbx + 0x18] ; call 0x1f940
0x00000000000b36c9 : idiv bh ; mov rdi, qword ptr [rbx + 0x20] ; call 0x1f940
0x00000000000b36d2 : idiv bh ; mov rdi, rbx ; pop rbx ; jmp 0x1f940
0x000000000016dd72 : idiv bh ; movsb byte ptr [rdi], byte ptr [rsi] ; jp 0x16dd81 ; add byte ptr [rbx + rsi*8 - 0xa], dh ; jmp rsp
0x00000000000b36db : idiv bh ; nop dword ptr [rax] ; pop rbx ; ret
0x00000000000e4f76 : idiv bh ; pop rax ; mov rax, rbx ; pop rdx ; pop rbx ; ret
0x0000000000187a0a : idiv bh ; ret
0x00000000001850da : idiv bh ; retf
0x000000000015ef42 : idiv bh ; sar dh, 0xf6 ; call rdi
0x000000000015f454 : idiv bh ; test eax, 0xc3fffb00 ; add dh, bh ; jmp rdi
0x000000000016db6a : idiv bh ; xchg eax, esp ; insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; test byte ptr [rdx - 0xa], bl ; call rsp
0x00000000000dfc8e : idiv byte ptr [rax + 0x118] ; syscall
0x00000000000ea2ae : idiv byte ptr [rax + 0x12b] ; syscall
0x00000000000e9d67 : idiv byte ptr [rax + 0x2c] ; syscall
0x00000000000e9ba7 : idiv byte ptr [rax + 0x2d] ; syscall
0x00000000000e11cd : idiv byte ptr [rax + 0x71] ; syscall
0x00000000000e123d : idiv byte ptr [rax + 0x72] ; syscall
0x00000000000e0df4 : idiv byte ptr [rax + 0x8c] ; syscall
0x00000000000b9caf : idiv byte ptr [rax + 2] ; syscall
0x000000000016abd4 : idiv byte ptr [rcx - 0x46790004] ; cld ; call qword ptr [rsi]
0x0000000000023206 : idiv byte ptr [rdx - 1] ; cmovs eax, edx ; ret
0x000000000011864e : idiv byte ptr [rsi + 0x2f] ; call 0x115115
0x000000000002a785 : idiv dword ptr [rax + 3] ; syscall
0x000000000016e66a : idiv edi ; add al, 0xa7 ; add dword ptr [rax], eax ; xchg eax, esp ; ret 0xfff7
0x00000000000a68ae : idiv edi ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x000000000015f826 : idiv edi ; clc ; mov esi, edi ; call qword ptr [rax]
0x000000000004381b : idiv edi ; dec ecx ; ret
0x000000000016e012 : idiv edi ; mov ah, 0x85 ; add dword ptr [rax], eax ; xchg eax, esp ; and edi, esi ; jmp rsp
0x000000000016e792 : idiv edi ; mov esp, 0xa40001ab ; fcompi st(7) ; call rsp
0x000000000016e892 : idiv edi ; mov esp, 0xe40001ae ; in eax, -9 ; call rsp
0x000000000015f722 : idiv edi ; nop ; mov dh, bh ; call qword ptr [rax + 0x17fff78a]
0x000000000015f68a : idiv edi ; nop ; mov dh, bh ; call qword ptr [rdi]
0x00000000000a686a : idiv edi ; nop dword ptr [rax] ; pop rbx ; ret
0x000000000015f82e : idiv edi ; push rbp ; mov dh, bh ; call qword ptr [rax]
0x000000000015f802 : idiv edi ; push rdi ; mov bh, dh ; call qword ptr [rdi + 0x10fff787]
0x000000000015f746 : idiv edi ; push rdi ; mov bh, dh ; call rax
0x000000000018a34a : idiv edi ; ret
0x000000000018cd32 : idiv edi ; retf 1
0x000000000018bd1a : idiv edi ; retf 2
0x000000000015f766 : idiv edi ; scasd eax, dword ptr [rdi] ; mov edi, dr0 ; call rax
0x000000000016ea72 : idiv edi ; test byte ptr [rsi + 0x1640001], dh ; clc ; call rsp
0x000000000015f806 : idiv edi ; xchg eax, edi ; xchg edi, esi ; call qword ptr [rax]
0x000000000015f876 : idiv edi ; xchg r15, rsi ; call qword ptr [rax]
0x0000000000107dce : idiv edi ; xor eax, eax ; ret
0x0000000000035f46 : idiv esi ; ret
0x000000000018a349 : idiv r15 ; ret
0x00000000000f3685 : idiv r15b ; dec dword ptr [rax - 0x77] ; fucompi st(0) ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xfff2
0x0000000000035f45 : idiv rsi ; ret
0x0000000000077c9e : imul al ; cld ; retf 6
0x00000000000ffe63 : imul al ; push rdi ; retf -0xe
0x00000000000bf6e7 : imul al ; ret
0x000000000005e9ec : imul al ; sahf ; retf 3
0x00000000000c905f : imul al ; wait ; mov dl, 0xfb ; call rcx
0x0000000000036fdb : imul cl ; ret 0xfffd
0x0000000000093668 : imul cl ; ret 8
0x00000000000f2fe6 : imul eax ; hlt ; retf -1
0x00000000000b8d9e : imul eax ; insb byte ptr [rdi], dx ; sbb ebp, edi ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x000000000011e789 : imul eax ; int1 ; adc al, dh ; dec dword ptr [rax - 0x77] ; ret
0x000000000005f19d : imul eax ; lodsd eax, dword ptr [rsi] ; retf 0
0x0000000000108b87 : imul eax ; ret
0x00000000000a7148 : imul eax ; ret 0xf793
0x00000000000ecd67 : imul eax ; retf
0x00000000000d95c8 : imul eax ; xchg eax, edx ; retf
0x00000000000d3712 : imul eax, dword ptr [rax], 0x440f0000 ; ret 0xd4e9
0x00000000000d5210 : imul eax, dword ptr [rax], 0x440f0000 ; ret 0xe1e9
0x000000000006f6fc : imul eax, dword ptr [rax], 0x6b834800 ; sub byte ptr [rcx], al ; jmp 0x6f6da
0x0000000000147641 : imul eax, dword ptr [rcx], 0 ; add dh, dh ; ret 0x7502
0x0000000000082167 : imul eax, dword ptr [rcx], 0x894d0000 ; retf
0x00000000001873bd : imul eax, dword ptr [rcx], 0xf67c4000 ; call rsi
0x000000000004fba3 : imul eax, dword ptr [rdi], 0x24e80000 ; ret
0x0000000000081b67 : imul eax, dword ptr [rdi], 0x894d0000 ; retf
0x000000000006f701 : imul ebp, dword ptr [rax], 1 ; jmp 0x6f6d5
0x0000000000003031 : imul ebp, dword ptr [rsi], -0x74 ; int1 ; mov dr0, word ptr [rax] ; retf
0x00000000000776b9 : imul ebp, ecx, 0xe ; add byte ptr [rax - 0x7d], cl ; ret 0x3110
0x00000000000f03c5 : imul ebx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000076aa6 : imul ebx, dword ptr [rax], 0x48 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000070df4 : imul ebx, dword ptr [rax], 0x4c ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ee4b3 : imul ebx, edx, 0x1d89fffe ; retf
0x000000000008e013 : imul ecx, dword ptr [rax - 0x7d], -0x40 ; add dword ptr [rax + 0x39], ecx ; ret 0xe775
0x00000000000f0365 : imul ecx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012b3b7 : imul ecx, dword ptr [rbx], 0x894d0000 ; retf
0x00000000001216d7 : imul ecx, dword ptr [rcx], 0x894d0000 ; retf
0x000000000000a900 : imul ecx, dword ptr [rdi], 0xd001200 ; add byte ptr [rax], ah ; ret 6
0x0000000000028953 : imul ecx, dword ptr [rdi], 0xdf894800 ; call r12
0x0000000000081867 : imul ecx, dword ptr [rdx], 0x894d0000 ; retf
0x000000000018ede3 : imul ecx, dword ptr [rsi], 0x38 ; ret
0x000000000016c141 : imul edi ; jmp rsp
0x00000000000f029f : imul edi, dword ptr [rax], 0x48 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000315c9 : imul edi, ecx, -1 ; dec dword ptr [rax - 0x7d] ; retf 0x480a
0x00000000000b5fab : imul edi, edi, 0x3c6ffff ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000089d30 : imul edi, edi, 0xf88348ff ; add dword ptr [rax - 0x77], ecx ; ret
0x0000000000042697 : imul edi, esi, 0x294cffff ; ret 0xc748
0x000000000002ece6 : imul edi, esp, 0x148ffff ; ret
0x00000000000f0395 : imul edx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000081267 : imul edx, dword ptr [rax], 0x894d0000 ; retf
0x0000000000080f67 : imul edx, dword ptr [rbx], 0x894d0000 ; retf
0x000000000014a1c9 : imul edx, dword ptr [rdi - 0x13], -1 ; nop dword ptr [rax] ; ret
0x0000000000080c67 : imul edx, dword ptr [rsi], 0x894d0000 ; retf
0x0000000000002b8c : imul edx, edx, 0x3a ; adc al, 0xe7 ; ret
0x0000000000003ab0 : imul esi ; in eax, 0x78 ; mov dl, 0x1e ; ret
0x00000000000a8b34 : imul esi, esi, 0x3c ; add eax, esi ; ret
0x0000000000138dd4 : imul esp, dword ptr [rbx], 0x894d0000 ; retf
0x00000000001497c9 : imul esp, dword ptr [rcx - 0x13], -1 ; nop dword ptr [rax] ; ret
0x00000000000943ac : imul esp, dword ptr [rsi + 0xf], 0x74 ; ret 0xff3
0x00000000000e0392 : imul esp, ebx, 0x7500002b ; adc ecx, dword ptr [rcx - 0x77] ; retf 0x15b8
0x0000000000028952 : imul rcx, qword ptr [rdi], -0x2076b800 ; call r12
0x000000000016c0a9 : in al, -0x11 ; jmp rsp
0x00000000000037a4 : in al, -0x12 ; jne 0x3786 ; ret 0x975
0x000000000003cc97 : in al, -0x17 ; ret
0x00000000000f2d6a : in al, -0x17 ; retf
0x00000000001149d2 : in al, -0x18 ; pop rax ; retf
0x00000000000f2f8a : in al, -0x18 ; push rax ; retf
0x000000000017efec : in al, -0x1b ; add byte ptr [rax], al ; loopne 0x17f047 ; call qword ptr [rbx]
0x000000000016d7c0 : in al, -0x1f ; hlt ; jmp rsp
0x000000000018e2ec : in al, -0x28 ; add dword ptr [rax], eax ; push rax ; clc ; call qword ptr [rsi]
0x000000000017d4ec : in al, -0x36 ; add byte ptr [rax], al ; and bl, ch ; int1 ; call qword ptr [rdx]
0x00000000001700c8 : in al, -0x36 ; cli ; inc esp ; add al, byte ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; retf
0x000000000016baa0 : in al, -0x3b ; in al, dx ; jmp rsp
0x000000000016ec84 : in al, -0x3e ; add dword ptr [rax], eax ; mov ah, 0x3e ; clc ; call qword ptr [rbx + rax*8]
0x000000000016e668 : in al, -0x3f ; idiv edi ; add al, 0xa7 ; add dword ptr [rax], eax ; xchg eax, esp ; ret 0xfff7
0x0000000000170860 : in al, -0x43 ; std ; jmp rsp
0x000000000016ff50 : in al, -0x53 ; cli ; jmp rsp
0x0000000000083e58 : in al, -0x56 ; or al, byte ptr [rax] ; ret
0x000000000017abec : in al, -0x5f ; add byte ptr [rax], al ; sal cl, 0xfc ; call qword ptr [rdx]
0x00000000001794ec : in al, -0x76 ; add byte ptr [rax], al ; jo 0x1794af ; out dx, eax ; call qword ptr [rbx]
0x000000000015dab9 : in al, -0xc ; jmp rsp
0x000000000013330a : in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000000843fe : in al, -0xd ; ret
0x000000000016cff0 : in al, -0xf ; call rsp
0x000000000007b479 : in al, -1 ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000015dabc : in al, -4 ; hlt ; jmp rsp
0x000000000016f7e9 : in al, -7 ; jmp rsp
0x0000000000149508 : in al, 0 ; add byte ptr [rax], al ; ret
0x00000000000b2e4d : in al, 0 ; add byte ptr [rax], al ; syscall
0x000000000016c715 : in al, 0 ; add byte ptr [rsp + rbx*4 - 0x10], dh ; jmp rsp
0x00000000001703c8 : in al, 0x1d ; sti ; call rsp
0x000000000010f9ac : in al, 0x28 ; add byte ptr [rbx + rcx*4 + 0x35], cl ; ret 0x28ae
0x000000000016fab8 : in al, 0x29 ; cli ; jmp rsp
0x00000000000ead69 : in al, 0x2a ; add byte ptr [rcx + 1], cl ; fmul qword ptr [rax + 0x39] ; ret
0x000000000007d391 : in al, 0x31 ; add byte ptr [rax - 0x77], cl ; retf -0x76b8
0x000000000004748d : in al, 0x34 ; add byte ptr [rax - 0x77], cl ; retf 0x2948
0x00000000001843ec : in al, 0x39 ; add dword ptr [rax], eax ; add al, bl ; cmc ; jmp qword ptr [rcx]
0x000000000008eb7b : in al, 0x41 ; cmp eax, ecx ; je 0x8eb67 ; ret
0x000000000010384a : in al, 0x4c ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000015aa21 : in al, 0x4c ; pop rax ; retf
0x00000000001860ec : in al, 0x56 ; add dword ptr [rax], eax ; cmp byte ptr [rcx], 0xf6 ; jmp qword ptr [rcx]
0x00000000000c182b : in al, 0x5b ; pop rbp ; pop r12 ; ret
0x000000000007e99c : in al, 0x74 ; or dword ptr [rax - 1], ecx ; ret 0xc148
0x0000000000098e7e : in al, 0x75 ; adc byte ptr [rbx - 0x6bf0fd06], al ; ret 0x8444
0x00000000000df162 : in al, 0x75 ; and eax, 0xe8ef8948 ; retf
0x0000000000055902 : in al, 0x75 ; ret
0x000000000004165b : in al, 0xf ; xchg eax, ebp ; ret 0x854d
0x00000000000a853e : in al, 0xf ; xchg eax, esp ; ret 0xca21
0x000000000018ee55 : in al, 1 ; add al, bl ; insd dword ptr [rdi], dx ; clc ; call qword ptr [rdx]
0x000000000016f938 : in al, 4 ; cli ; call rsp
0x0000000000094ee8 : in al, 6 ; add byte ptr [rax], al ; ret
0x0000000000181ff4 : in al, dx ; adc eax, 0xfe880001 ; hlt ; jmp qword ptr [rcx]
0x0000000000180ef4 : in al, dx ; add al, 1 ; add byte ptr [rax + 0x28], cl ; hlt ; jmp rdx
0x000000000004e980 : in al, dx ; add al, byte ptr [rax] ; add cl, bl ; in eax, -0x21 ; loopne 0x4e91b ; ret 0xe680
0x0000000000067b13 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000035814 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0xbfc
0x0000000000064ddb : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf
0x0000000000108b0c : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf -0x137
0x00000000000f8a0c : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf -0x36
0x0000000000068a38 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; sahf ; retf 8
0x000000000017fdf4 : in al, dx ; add byte ptr [rax], al ; mov bl, sil ; jmp qword ptr [rcx]
0x0000000000058610 : in al, dx ; add dword ptr [rbp - 0x7b], eax ; ror byte ptr [rcx + rcx*4 - 0x38], 0x74 ; retf -0x4e15
0x0000000000120a30 : in al, dx ; add eax, 0x83480000 ; ret 0xeb10
0x00000000001740c2 : in al, dx ; call qword ptr [rax]
0x0000000000173b6a : in al, dx ; call qword ptr [rcx]
0x00000000001740da : in al, dx ; call qword ptr [rdx]
0x0000000000173fd2 : in al, dx ; call qword ptr [rsi]
0x0000000000174a72 : in al, dx ; call rax
0x0000000000174362 : in al, dx ; call rcx
0x000000000016b35a : in al, dx ; call rsp
0x000000000015e30c : in al, dx ; cmc ; call qword ptr [rdi]
0x000000000015e350 : in al, dx ; cmc ; jmp qword ptr [rax]
0x000000000011a37a : in al, dx ; cmp byte ptr [rax - 0x77], cl ; jl 0x11a3ac ; adc al, ch ; retf -0x99e
0x00000000001842f4 : in al, dx ; cmp byte ptr [rcx], al ; add byte ptr [rax - 0x2c], ch ; cmc ; jmp qword ptr [rcx]
0x000000000016b7da : in al, dx ; dec esp ; add dword ptr [rax], 0 ; hlt ; mov ebp, esp ; jmp rsp
0x000000000016b612 : in al, dx ; dec esp ; jl 0x16b620 ; add ah, al ; js 0x16b610 ; jmp rsp
0x000000000016b842 : in al, dx ; dec esp ; test dword ptr [rax], eax ; add byte ptr [rdx + rdx*4], dh ; in al, dx ; jmp rsp
0x000000000016ba9a : in al, dx ; dec esp ; xchg eax, ecx ; add byte ptr [rax], al ; in al, -0x3b ; in al, dx ; jmp rsp
0x0000000000043bed : in al, dx ; fld xword ptr [rsp - 0x18] ; ret
0x000000000016b8a2 : in al, dx ; inc dword ptr [rax + rcx*4 - 0x58fc0000] ; in al, dx ; jmp rsp
0x000000000016cda1 : in al, dx ; int1 ; jmp rsp
0x00000000000c2b0d : in al, dx ; jl 0xc2b49 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000173eca : in al, dx ; jmp qword ptr [rax]
0x0000000000173eb2 : in al, dx ; jmp qword ptr [rbx]
0x00000000001730da : in al, dx ; jmp qword ptr [rcx]
0x0000000000173ee2 : in al, dx ; jmp qword ptr [rdx]
0x000000000017340a : in al, dx ; jmp qword ptr [rsi]
0x0000000000175322 : in al, dx ; jmp rcx
0x00000000001752d2 : in al, dx ; jmp rdi
0x000000000016b452 : in al, dx ; jmp rsp
0x0000000000187ff4 : in al, dx ; jne 0x187fff ; add byte ptr [rax], bh ; sal dh, 1 ; jmp qword ptr [rsi]
0x00000000001785f4 : in al, dx ; jnp 0x1785fe ; add byte ptr [rax - 0x7d], cl ; out dx, eax ; call rcx
0x000000000011d15b : in al, dx ; js 0x11d164 ; add byte ptr [rax], al ; syscall
0x000000000016baca : in al, dx ; lcall ptr [rdx + rdx*4] ; add ah, al ; retf -0x14
0x000000000016b70a : in al, dx ; ljmp ptr [rax + rax*4 - 0x7bdc0000] ; in al, dx ; call rsp
0x00000000000e3073 : in al, dx ; mov byte ptr [r8 - 1], 0 ; ret
0x0000000000073133 : in al, dx ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000017c8f4 : in al, dx ; mov esi, 0x7ea80000 ; int1 ; call rsp
0x00000000000e6ed6 : in al, dx ; mov qword ptr [rbp - 0x48], r12 ; mov qword ptr [rbp - 0x40], r12 ; syscall
0x000000000012dfda : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000117314 : in al, dx ; mov rax, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x000000000013370a : in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000109b21 : in al, dx ; or al, ch ; cwde ; pop rbp ; int1 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c2bf6 : in al, dx ; or al, ch ; ret
0x0000000000067653 : in al, dx ; or byte ptr [rax - 0x75], cl ; mov edi, 0xe0 ; call rax
0x000000000010440f : in al, dx ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000079bd7 : in al, dx ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000121754 : in al, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000004256c : in al, dx ; or byte ptr [rbp + 0x39], cl ; ret
0x0000000000119d7d : in al, dx ; or byte ptr [rbx - 0x6bf0f502], al ; ret
0x00000000001864f4 : in al, dx ; pop rdx ; add dword ptr [rax], eax ; sub byte ptr [rax - 0xa], al ; jmp qword ptr [rcx]
0x000000000016b8f2 : in al, dx ; push qword ptr [rdx + rcx*4 - 0x52fc0000] ; in al, dx ; jmp rsp
0x000000000008ea7b : in al, dx ; ret
0x000000000015ac0d : in al, dx ; retf -0x51ce
0x0000000000105892 : in al, dx ; sbb byte ptr [rax - 0x73], cl ; je 0x1058c4 ; or al, 0xe8 ; ret 0xfffe
0x00000000000db521 : in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000011835f : in al, dx ; sbb byte ptr [rbx - 0x77], 0xc0 ; ret
0x00000000000025b3 : in al, dx ; scasd eax, dword ptr [rdi] ; xchg eax, esi ; add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x000000000007e7e0 : in al, dx ; sgdt ptr [rax] ; ret
0x00000000000e190f : in al, dx ; test al, 0 ; add byte ptr [rax], al ; syscall
0x0000000000179ef4 : in al, dx ; xchg eax, esp ; add byte ptr [rax], al ; sub al, dl ; out dx, eax ; call rax
0x000000000015ab3e : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x15aad1 ; ret 0x48f
0x000000000015ab3d : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x15aad2 ; ret 0x48f
0x000000000014a024 : in al, dx ; xor byte ptr [rip], ah ; add bl, dh ; ret
0x000000000010dcb3 : in al, dx ; xor dh, dh ; ret 0xc707
0x0000000000099169 : in eax, -0x10 ; cmovne rax, rdx ; pop rbx ; ret
0x000000000009af12 : in eax, -0x15 ; cwde ; nop dword ptr [rax] ; ret
0x00000000000d9093 : in eax, -0x17 ; ret 0xffef
0x00000000000637f0 : in eax, -0x18 ; retf -0x6b
0x00000000000f8db3 : in eax, -0x18 ; xchg eax, edi ; ret 0xfff7
0x000000000015929a : in eax, -0x1b ; retf 0x2a91
0x000000000015b0f9 : in eax, -0x1e ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x000000000004cc83 : in eax, -0x21 ; loopne 0x4cc14 ; ret 0xe680
0x000000000004e985 : in eax, -0x21 ; loopne 0x4e916 ; ret 0xe680
0x000000000015eef1 : in eax, -0xa ; jmp qword ptr [rdi]
0x0000000000181e01 : in eax, -0xc ; jmp qword ptr [rdi]
0x000000000013338a : in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000017d369 : in eax, -0xf ; call rdi
0x000000000015a5c1 : in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x000000000007133a : in eax, -6 ; dec dword ptr [rax - 0x75] ; and al, 8 ; jmp 0x71318
0x000000000016e899 : in eax, -9 ; call rsp
0x000000000018c5e9 : in eax, -9 ; jmp qword ptr [rbx]
0x000000000017efed : in eax, 0 ; add al, ah ; call qword ptr [rbx]
0x000000000017efbd : in eax, 0 ; add al, ah ; jmp qword ptr [rdi]
0x000000000017f005 : in eax, 0 ; add al, ch ; call qword ptr [rbx]
0x00000000000b9d80 : in eax, 0 ; add byte ptr [rax], al ; syscall
0x0000000000159243 : in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000000223d : in eax, 0x2d ; pmuludq mm4, mm7 ; retf
0x000000000007d243 : in eax, 0x31 ; add byte ptr [rax + 1], cl ; ret
0x000000000004734e : in eax, 0x34 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000003d62 : in eax, 0x3a ; retf -0x2f76
0x0000000000044122 : in eax, 0x48 ; mov eax, esi ; ret
0x00000000000b32ca : in eax, 0x5b ; pop rbp ; pop r12 ; ret
0x00000000000f5d05 : in eax, 0x5d ; ret
0x00000000001584d9 : in eax, 0x6a ; mov eax, 0x45155e93 ; ret 0x591c
0x0000000000111752 : in eax, 0x74 ; sub eax, 0x8948f631 ; out -0x77, eax ; ret
0x0000000000003ab2 : in eax, 0x78 ; mov dl, 0x1e ; ret
0x000000000009a453 : in eax, 0xf ; je 0x9a478 ; add rax, 2 ; ret
0x0000000000100cbb : in eax, 1 ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x00000000001709e5 : in eax, dx ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; hlt ; std ; jmp rsp
0x00000000000391ce : in eax, dx ; add dword ptr [rcx - 0x7d], eax ; call qword ptr [rax]
0x000000000010023a : in eax, dx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000175542 : in eax, dx ; call qword ptr [rcx]
0x000000000017549a : in eax, dx ; call qword ptr [rdi]
0x0000000000157216 : in eax, dx ; call qword ptr [rdx]
0x000000000014abd2 : in eax, dx ; call rax
0x0000000000157106 : in eax, dx ; call rcx
0x000000000017565a : in eax, dx ; call rdi
0x000000000016bd32 : in eax, dx ; call rsp
0x000000000015e89d : in eax, dx ; cmc ; call qword ptr [rdx]
0x0000000000157242 : in eax, dx ; dec dword ptr [rsi - 0x60] ; in eax, dx ; call rcx
0x0000000000157142 : in eax, dx ; inc dword ptr [rax - 0x62] ; in eax, dx ; call rax
0x000000000015713e : in eax, dx ; inc dword ptr [rax - 0x62] ; in eax, dx ; inc dword ptr [rax - 0x62] ; in eax, dx ; call rax
0x000000000015712e : in eax, dx ; jmp rbx
0x000000000016bb22 : in eax, dx ; jmp rsp
0x0000000000149742 : in eax, dx ; jne 0x149731 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000149baf : in eax, dx ; jne 0x149b91 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000014abce : in eax, dx ; lcall ptr [rax - 6] ; in eax, dx ; call rax
0x000000000014abe2 : in eax, dx ; lcall ptr [rax] ; cli ; in eax, dx ; call rax
0x0000000000098b22 : in eax, dx ; lea rax, qword ptr [rcx - 1] ; ret
0x000000000014abca : in eax, dx ; ljmp ptr [rax - 6] ; in eax, dx ; lcall ptr [rax - 6] ; in eax, dx ; call rax
0x000000000014abde : in eax, dx ; ljmp ptr [rax] ; cli ; in eax, dx ; lcall ptr [rax] ; cli ; in eax, dx ; call rax
0x0000000000157102 : in eax, dx ; ljmp ptr [rdx] ; pop rcx ; in eax, dx ; call rcx
0x0000000000158805 : in eax, dx ; lodsb al, byte ptr [rsi] ; xchg eax, edi ; jo 0x158876 ; salc ; retf
0x00000000000984e9 : in eax, dx ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000984ff : in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x0000000000098521 : in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x000000000009853f : in eax, dx ; mov byte ptr [rdi + 0x13], ch ; ret
0x000000000009855f : in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x0000000000098585 : in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000985a1 : in eax, dx ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000985c1 : in eax, dx ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000985e1 : in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x0000000000098607 : in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x0000000000098629 : in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x0000000000098647 : in eax, dx ; mov byte ptr [rdi + 0x1b], ch ; ret
0x0000000000098667 : in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x0000000000098683 : in eax, dx ; mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000000986a3 : in eax, dx ; mov byte ptr [rdi + 0x1e], ch ; ret
0x00000000000986c3 : in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000986e3 : in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x0000000000098709 : in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x0000000000098759 : in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x000000000009842f : in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x000000000009844d : in eax, dx ; mov byte ptr [rdi + 0xb], ch ; ret
0x000000000009846d : in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x000000000009848f : in eax, dx ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000984af : in eax, dx ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000984cf : in eax, dx ; mov byte ptr [rdi + 0xf], ch ; ret
0x0000000000098365 : in eax, dx ; mov byte ptr [rdi + 1], ch ; ret
0x0000000000098377 : in eax, dx ; mov byte ptr [rdi + 2], ch ; ret
0x000000000009838d : in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000983a5 : in eax, dx ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000983bb : in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000983cd : in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000983eb : in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000983f7 : in eax, dx ; mov byte ptr [rdi + 8], ch ; ret
0x000000000009840d : in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x0000000000098351 : in eax, dx ; mov byte ptr [rdi], ch ; ret
0x000000000012ddea : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000002c9c1 : in eax, dx ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b414e : in eax, dx ; mov rdi, rbx ; call r12
0x000000000013378a : in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000000cbe08 : in eax, dx ; movsxd rax, dword ptr [rsi + rbp*4] ; add rax, rsi ; jmp rax
0x00000000001252c0 : in eax, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000e8d0a : in eax, dx ; pop rax ; pop rdi ; call rax
0x0000000000149ffa : in eax, dx ; pop rbx ; ret
0x000000000016bd2a : in eax, dx ; push qword ptr [rcx - 0x6e6c0000] ; in eax, dx ; call rsp
0x0000000000149d68 : in eax, dx ; push rbx ; ret
0x000000000006b592 : in eax, dx ; ret
0x0000000000159018 : in eax, dx ; retf
0x000000000016a059 : in eax, dx ; sti ; jmp rax
0x0000000000098c72 : in eax, dx ; sub rax, 1 ; ret
0x000000000008ebba : in eax, dx ; xor eax, eax ; ret
0x0000000000146c58 : inc bl ; cmp dl, 1 ; jb 0x146c6a ; mov byte ptr [rdi], cl ; ret
0x000000000002662d : inc byte ptr [rax - 0x7af00306] ; ret 0
0x00000000000e9391 : inc byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000040da1 : inc byte ptr [rbx - 0x6bf0021e] ; ret 0x8341
0x00000000000290f5 : inc byte ptr [rbx] ; je 0x29104 ; ret
0x000000000011d68e : inc byte ptr [rcx + rcx*4 - 0x10] ; syscall
0x0000000000184a6c : inc byte ptr [rcx] ; add byte ptr [rax], al ; add al, 0xc0 ; retf
0x00000000001908e5 : inc byte ptr [rcx] ; add byte ptr [rax], ch ; ret 0xfff8
0x000000000016f61d : inc byte ptr [rcx] ; add byte ptr [rsp + rdx*4], ah ; stc ; jmp rsp
0x000000000007092a : inc byte ptr [rdx] ; cmove edx, ecx ; mov dword ptr [rdi], edx ; ret
0x000000000008e8c9 : inc dword ptr [r8] ; mov qword ptr [rdx], rcx ; ret
0x0000000000039b1d : inc dword ptr [r9 - 0x7d] ; call qword ptr [rax]
0x000000000016a467 : inc dword ptr [rax + 0x22] ; cld ; call qword ptr [rax - 0x1f0003dd]
0x000000000016a453 : inc dword ptr [rax + 0x30] ; cld ; call qword ptr [rax - 0x1f0003cf]
0x000000000016a3e7 : inc dword ptr [rax + 0x39] ; cld ; jmp qword ptr [rax]
0x000000000016a367 : inc dword ptr [rax + 0x3a] ; cld ; jmp qword ptr [rax]
0x000000000016a337 : inc dword ptr [rax + 0x42] ; cld ; inc dword ptr [rax + 0x44] ; cld ; call rax
0x000000000016a33b : inc dword ptr [rax + 0x44] ; cld ; call rax
0x000000000016a633 : inc dword ptr [rax + 0x4e] ; cld ; call qword ptr [rax - 0x1f0003b1]
0x000000000016a543 : inc dword ptr [rax + 0x60] ; cld ; jmp qword ptr [rax]
0x000000000016a50f : inc dword ptr [rax + 0x66] ; cld ; jmp qword ptr [rax]
0x00000000000c2c85 : inc dword ptr [rax + 0x7500637b] ; add al, 0x5b ; ret
0x0000000000169f43 : inc dword ptr [rax + 0x7b] ; sti ; push qword ptr [rax] ; jl 0x169f4e ; jmp qword ptr [rax]
0x000000000016b8a3 : inc dword ptr [rax + rcx*4 - 0x58fc0000] ; in al, dx ; jmp rsp
0x000000000016bf83 : inc dword ptr [rax + rsi*4 - 0x47ec0000] ; out dx, eax ; call rsp
0x000000000016a643 : inc dword ptr [rax - 0x2f0003ad] ; push rsp ; cld ; jmp qword ptr [rax]
0x000000000016a5ef : inc dword ptr [rax - 0x2f0003b4] ; cld ; jmp qword ptr [rax]
0x000000000016a477 : inc dword ptr [rax - 0x2f0003d9] ; sub ah, bh ; jmp qword ptr [rax]
0x000000000016a423 : inc dword ptr [rax - 0x2f0003e0] ; and esp, edi ; jmp qword ptr [rax]
0x0000000000169ff7 : inc dword ptr [rax - 0x2f000437] ; retf -5
0x0000000000169fe7 : inc dword ptr [rax - 0x3c] ; sti ; call qword ptr [rax - 0x1f00043b]
0x000000000016ab7f : inc dword ptr [rax - 0x44] ; cld ; call rax
0x000000000016ad97 : inc dword ptr [rax - 0x47] ; cld ; call rax
0x0000000000047899 : inc dword ptr [rax - 0x4e743] ; jmp qword ptr [rax]
0x000000000004551e : inc dword ptr [rax - 0x4eb43] ; jmp qword ptr [rax]
0x000000000015d273 : inc dword ptr [rax - 0x4f000c6b] ; xchg eax, ebp ; jmp rax
0x0000000000169fbf : inc dword ptr [rax - 0x52] ; sti ; jmp qword ptr [rax]
0x0000000000157143 : inc dword ptr [rax - 0x62] ; in eax, dx ; call rax
0x000000000015713f : inc dword ptr [rax - 0x62] ; in eax, dx ; inc dword ptr [rax - 0x62] ; in eax, dx ; call rax
0x000000000016a687 : inc dword ptr [rax - 0x6b] ; cld ; call rax
0x00000000000d3eea : inc dword ptr [rax - 0x76b7201b] ; retf -0x7abb
0x00000000000bd1f6 : inc dword ptr [rax - 0x76b7ffc8] ; ret
0x0000000000057cea : inc dword ptr [rax - 0x78] ; xor byte ptr [rcx - 0x7d], cl ; ret
0x00000000000a98c5 : inc dword ptr [rax - 0x7af0c5c5] ; retf -3
0x000000000016a2f7 : inc dword ptr [rax - 0x7f0003be] ; cld ; call qword ptr [rax]
0x000000000018091d : inc dword ptr [rax] ; add byte ptr [rax + 0x12], dh ; hlt ; jmp qword ptr [rdx]
0x00000000000ddcb4 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f6
0x000000000002ee34 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x00000000001614e3 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], cl ; jae 0x1614ee ; call qword ptr [rax]
0x000000000004a30e : inc dword ptr [rax] ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00000000000a3eab : inc dword ptr [rax] ; add byte ptr [rax], al ; cmove eax, edx ; ret
0x000000000009913f : inc dword ptr [rax] ; add byte ptr [rax], al ; cmove rax, rcx ; pop rbx ; ret
0x00000000001494ed : inc dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000001455b7 : inc dword ptr [rax] ; add byte ptr [rax], al ; sub eax, ecx ; ret
0x00000000000e9421 : inc dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000016a36f : inc dword ptr [rax] ; cld ; jmp rax
0x00000000000f972e : inc dword ptr [rax] ; cmova eax, esi ; bswap eax ; ret
0x000000000015d073 : inc dword ptr [rax] ; jg 0x15d06e ; jmp qword ptr [rax]
0x000000000015d072 : inc dword ptr [rax] ; jg 0x15d06f ; jmp qword ptr [rax]
0x0000000000169f53 : inc dword ptr [rax] ; jg 0x169f5a ; push rax ; jg 0x169f5e ; jmp qword ptr [rax]
0x000000000015d033 : inc dword ptr [rax] ; jge 0x15d02e ; jmp qword ptr [rax]
0x000000000015d032 : inc dword ptr [rax] ; jge 0x15d02f ; jmp qword ptr [rax]
0x000000000015d053 : inc dword ptr [rax] ; jle 0x15d04e ; jmp qword ptr [rax]
0x000000000015d052 : inc dword ptr [rax] ; jle 0x15d04f ; jmp qword ptr [rax]
0x000000000016aa9f : inc dword ptr [rax] ; mov ah, bh ; jmp qword ptr [rax + 0x20fffc8f]
0x0000000000169fc7 : inc dword ptr [rax] ; mov dl, 0xfb ; jmp rax
0x000000000015e813 : inc dword ptr [rax] ; mov ebp, 0xbd00fff5 ; cmc ; jmp qword ptr [rax]
0x000000000015e817 : inc dword ptr [rax] ; mov ebp, 0xbd20fff5 ; cmc ; jmp rax
0x000000000016ad87 : inc dword ptr [rax] ; mov ebx, 0xba90fffc ; cld ; jmp qword ptr [rax]
0x000000000016ab6f : inc dword ptr [rax] ; mov esi, 0xbd90fffc ; cld ; jmp qword ptr [rax]
0x000000000008e8ca : inc dword ptr [rax] ; mov qword ptr [rdx], rcx ; ret
0x00000000000f9758 : inc dword ptr [rax] ; or eax, edi ; bswap eax ; ret
0x0000000000169f0b : inc dword ptr [rax] ; outsb dx, byte ptr [rsi] ; sti ; call rax
0x00000000000e3014 : inc dword ptr [rax] ; ret
0x000000000015d16b : inc dword ptr [rax] ; test dh, bl ; call qword ptr [rax]
0x000000000016a677 : inc dword ptr [rax] ; xchg eax, edi ; cld ; call qword ptr [rax + 0x20fffc96]
0x000000000015d2b3 : inc dword ptr [rax] ; xchg eax, edi ; jmp qword ptr [rax]
0x000000000015d21b : inc dword ptr [rax] ; xchg eax, edx ; jmp qword ptr [rax]
0x000000000016a88f : inc dword ptr [rax] ; xchg eax, esp ; cld ; call qword ptr [rax + 0x20fffc93]
0x000000000015cd27 : inc dword ptr [rax] ; xor dh, dl ; jmp rax
0x000000000015d0b7 : inc dword ptr [rax] ; xor ebx, 0xf38110ff ; jmp qword ptr [rax]
0x000000000015d0a7 : inc dword ptr [rax] ; xor ebx, 0xf38130ff ; jmp rax
0x00000000000fe502 : inc dword ptr [rbp + 0x31] ; rol byte ptr [rbp - 0x6bf0be40], cl ; ret 0x8945
0x00000000000b7fef : inc dword ptr [rbp + 0x31] ; sar byte ptr [rax + 0x3d], cl ; syscall
0x000000000003fba2 : inc dword ptr [rbp + 0x5b0974c0] ; ret
0x000000000016acf3 : inc dword ptr [rbp + rdi*4 - 4] ; call rsp
0x000000000015d9c3 : inc dword ptr [rbp - 0x17] ; hlt ; call rsi
0x0000000000035f93 : inc dword ptr [rbp - 0x3db7f040] ; pop rbx ; ret
0x000000000010221f : inc dword ptr [rbp - 0x769b8740] ; ret
0x00000000001025b1 : inc dword ptr [rbp - 0x76a18740] ; ret
0x000000000005d48f : inc dword ptr [rbp - 0x76c38b40] ; ret
0x0000000000063b66 : inc dword ptr [rbp - 0x76c88b40] ; ret
0x0000000000057c45 : inc dword ptr [rbp - 0x76fd8125] ; retf
0x00000000000637ed : inc dword ptr [rbp - 0x77] ; in eax, -0x18 ; retf -0x6b
0x000000000008bad0 : inc dword ptr [rbp - 0x77] ; ret
0x000000000008be9f : inc dword ptr [rbp - 0x77] ; ret 0x8941
0x000000000008c0ce : inc dword ptr [rbp - 0x77] ; retf
0x000000000005dabe : inc dword ptr [rbp - 0x7b] ; ror byte ptr [rdi], 0x85 ; retf -0xb
0x00000000000c085e : inc dword ptr [rbp - 0x7cb38b0a] ; rol byte ptr [rcx], 0x83 ; ret
0x00000000000e39ff : inc dword ptr [rbp - 0x7ce38b40] ; ret
0x00000000000e3a4a : inc dword ptr [rbp - 0x7cee8b40] ; ret
0x00000000000b217f : inc dword ptr [rbx + 0x634801c3] ; fisttp dword ptr [rax + 0x39] ; ret
0x000000000016f6db : inc dword ptr [rbx + rax - 0x4d6bfffe] ; stc ; call rsp
0x000000000016cdc3 : inc dword ptr [rbx + rcx - 0xe4bffff] ; int1 ; call rsp
0x00000000000c6407 : inc dword ptr [rbx + rcx*4 + 0x63] ; sub al, 0x89 ; ret 0x8348
0x000000000002981e : inc dword ptr [rbx + rcx*4 + 5] ; retf 0x374e
0x000000000016ed9b : inc dword ptr [rbx + rcx*8 + 0x70640001] ; clc ; call rsp
0x00000000001702b3 : inc dword ptr [rbx + rdx*2 + 0x3540002] ; sti ; call rsp
0x00000000000529e7 : inc dword ptr [rbx - 0x108f43] ; jmp qword ptr [rax]
0x000000000015c2bf : inc dword ptr [rbx - 0x29000fea] ; sub eax, esi ; call rsi
0x0000000000031133 : inc dword ptr [rbx - 0x2f7cfe08] ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000100d16 : inc dword ptr [rbx - 0x6bf0fe05] ; ret
0x000000000004bd50 : inc dword ptr [rbx - 0x70f0c308] ; retf
0x00000000000cdbb1 : inc dword ptr [rbx - 0x7bf0fe08] ; retf
0x000000000010371f : inc dword ptr [rbx - 0xc8b0a08] ; pop rbx ; ret
0x0000000000036874 : inc dword ptr [rbx] ; add byte ptr [rax], al ; xor eax, ecx ; ret
0x00000000000991fe : inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000000d4015 : inc dword ptr [rcx + 0x2000e1] ; add byte ptr [rax + 9], cl ; retf -0x76b8
0x000000000015de6f : inc dword ptr [rcx + 0x20] ; cmc ; call rsp
0x0000000000047854 : inc dword ptr [rcx + 0x29] ; retf
0x00000000000d3116 : inc dword ptr [rcx + 0x39] ; ret
0x00000000000a3f01 : inc dword ptr [rcx + 0x39] ; retf
0x000000000011f14c : inc dword ptr [rcx + 0xf] ; mov dh, 0x4b ; add al, 0x89 ; retf -0x1540
0x0000000000051ab1 : inc dword ptr [rcx + 0xf] ; mov dh, 0x57 ; or al, 0xf6 ; ret 0xf08
0x0000000000105316 : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret
0x00000000000a9f05 : inc dword ptr [rcx + 8] ; retf -0x76b8
0x000000000016fbdb : inc dword ptr [rcx + rbp + 0x59d40002] ; cli ; call rsp
0x000000000016d1b3 : inc dword ptr [rcx + rbp - 0x742bffff] ; call rsp
0x000000000016ed63 : inc dword ptr [rcx + rcx*8 + 0x63140001] ; clc ; call rsp
0x00000000000bea6c : inc dword ptr [rcx - 0x1e] ; add byte ptr [rax + 0x63], cl ; ret 0x9589
0x000000000016a2ab : inc dword ptr [rcx - 0x3e] ; std ; call qword ptr [rax]
0x000000000016a1bb : inc dword ptr [rcx - 0x3e] ; std ; call rsi
0x000000000016a2a7 : inc dword ptr [rcx - 0x3e] ; std ; inc dword ptr [rcx - 0x3e] ; std ; call qword ptr [rax]
0x000000000016a1b7 : inc dword ptr [rcx - 0x3e] ; std ; inc dword ptr [rcx - 0x3e] ; std ; call rsi
0x000000000016a1f7 : inc dword ptr [rcx - 0x3e] ; std ; inc dword ptr [rcx - 0x3e] ; std ; jmp rcx
0x000000000016a1fb : inc dword ptr [rcx - 0x3e] ; std ; jmp rcx
0x0000000000033153 : inc dword ptr [rcx - 0x46] ; or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x00000000000df5b3 : inc dword ptr [rcx - 0x75] ; jl 0xdf5e4 ; sub al, ch ; retf
0x00000000000bdb1f : inc dword ptr [rcx - 0x77] ; ret
0x0000000000027255 : inc dword ptr [rcx - 0x77] ; ret 0x6be9
0x0000000000024b02 : inc dword ptr [rcx - 0x77] ; ret 0x86e9
0x0000000000024b26 : inc dword ptr [rcx - 0x77] ; ret 0x8b48
0x00000000000be12e : inc dword ptr [rcx - 0x77] ; ret 0xf983
0x00000000000aeb0f : inc dword ptr [rcx - 0x77] ; ret 0xfae9
0x00000000000b0c28 : inc dword ptr [rcx - 0x77] ; retf 0xbe9
0x00000000000387ba : inc dword ptr [rcx - 0x7d] ; call qword ptr [rax]
0x0000000000040cba : inc dword ptr [rcx - 0x7d] ; stc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x9fe9
0x00000000000736bf : inc dword ptr [rcx - 0x7f] ; retf 0
0x00000000000736cf : inc dword ptr [rcx - 0x80] ; retf 0x4980
0x00000000000da4a8 : inc dword ptr [rcx - 0x8b80000] ; fmul dword ptr [rax + 0x21] ; ret
0x0000000000103212 : inc dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret
0x000000000005e057 : inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000bb46e : inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf
0x00000000000bc063 : inc dword ptr [rcx] ; add byte ptr [rax], al ; add cl, ch ; retf
0x0000000000190a05 : inc dword ptr [rcx] ; add byte ptr [rax], bl ; ret
0x000000000014a039 : inc dword ptr [rcx] ; ja 0x14a044 ; ret
0x0000000000191466 : inc dword ptr [rcx] ; or ch, byte ptr [rdi + 5] ; ret
0x0000000000191392 : inc dword ptr [rcx] ; or dh, byte ptr [rbp + 5] ; retf
0x000000000004df45 : inc dword ptr [rcx] ; ret
0x00000000000c382c : inc dword ptr [rcx] ; ret 0x5589
0x000000000003062d : inc dword ptr [rcx] ; ret 0xd089
0x00000000000a6643 : inc dword ptr [rcx] ; retf -0x76b8
0x000000000016a1af : inc dword ptr [rcx] ; sar ch, 0xff ; ret 0xfffd
0x000000000016ce3b : inc dword ptr [rdi + rcx - 0x15bffff] ; int1 ; jmp rsp
0x000000000016e66b : inc dword ptr [rdi] ; add dword ptr [rax], eax ; xchg eax, esp ; ret 0xfff7
0x000000000015df77 : inc dword ptr [rdi] ; and dh, ch ; dec dword ptr [rbp + 0x22] ; cmc ; call rsp
0x000000000016ac2b : inc dword ptr [rdx - 0x42] ; cld ; call rdx
0x000000000016a733 : inc dword ptr [rdx - 0x69] ; cld ; call rdx
0x00000000000626a3 : inc dword ptr [rdx] ; add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000061ca4 : inc dword ptr [rdx] ; add byte ptr [rax], al ; add cl, ch ; ret 0xffb6
0x000000000006359c : inc dword ptr [rdx] ; add byte ptr [rax], al ; add cl, ch ; retf -0x63
0x000000000016a723 : inc dword ptr [rdx] ; cdq ; cld ; call qword ptr [rdx + 0x22fffc98]
0x000000000015e307 : inc dword ptr [rip - 0x13000abc] ; cmc ; call qword ptr [rdi]
0x0000000000126f5d : inc dword ptr [rip - 0x7cb80000] ; ret 0x4910
0x000000000016a7fb : inc dword ptr [rsi + rdx*4 - 4] ; call rsp
0x000000000016ea73 : inc dword ptr [rsi + rsi*4 + 0x1640001] ; clc ; call rsp
0x000000000016abc7 : inc dword ptr [rsi - 0x45] ; cld ; call rsi
0x000000000016a107 : inc dword ptr [rsi - 0x4f] ; std ; call rsi
0x000000000016a6cf : inc dword ptr [rsi - 0x6c] ; cld ; call rsi
0x000000000016abb7 : inc dword ptr [rsi] ; mov ebp, 0xbc96fffc ; cld ; jmp qword ptr [rsi]
0x000000000016a6bf : inc dword ptr [rsi] ; xchg eax, esi ; cld ; call qword ptr [rsi + 0x26fffc95]
0x000000000016f0d3 : inc dword ptr [rsp + rbx*8] ; add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; retf -8
0x000000000016feeb : inc dword ptr [rsp + rdi - 0x562bfffe] ; cli ; call rsp
0x000000000015d32f : inc eax ; cdq ; call rax
0x000000000015d08b : inc eax ; jg 0x15d086 ; jmp rax
0x000000000015d08a : inc eax ; jg 0x15d087 ; jmp rax
0x000000000015d04b : inc eax ; jge 0x15d046 ; jmp rax
0x000000000015d04a : inc eax ; jge 0x15d047 ; jmp rax
0x000000000015d06b : inc eax ; jle 0x15d066 ; jmp rax
0x000000000015d06a : inc eax ; jle 0x15d067 ; jmp rax
0x000000000016a07b : inc eax ; lodsd eax, dword ptr [rsi] ; std ; jmp rsi
0x000000000015e3bf : inc eax ; mov dh, 0xf5 ; call qword ptr [rax]
0x000000000015e3b7 : inc eax ; mov dh, 0xf5 ; call rax
0x000000000016ad77 : inc eax ; mov esp, 0xbc50fffc ; cld ; jmp rax
0x000000000016a653 : inc eax ; pop rax ; cld ; call qword ptr [rax]
0x000000000016a5ff : inc eax ; push rcx ; cld ; call qword ptr [rax]
0x000000000015ff9f : inc eax ; ret 0xfffa
0x0000000000161083 : inc eax ; sbb bl, bh ; inc eax ; sbb bl, bh ; jmp rax
0x0000000000161087 : inc eax ; sbb bl, bh ; jmp rax
0x0000000000032a69 : inc eax ; shr eax, 0x1f ; ret
0x000000000016a487 : inc eax ; sub al, 0xfc ; call qword ptr [rax]
0x000000000015d24b : inc eax ; xchg eax, ebx ; jmp rax
0x000000000015d213 : inc eax ; xchg eax, ecx ; jmp rax
0x000000000015d2cb : inc eax ; xchg eax, edi ; jmp rax
0x000000000015d233 : inc eax ; xchg eax, edx ; push rax ; xchg eax, edx ; call qword ptr [rax]
0x000000000015d2a7 : inc eax ; xchg eax, esi ; jmp rax
0x000000000015d263 : inc eax ; xchg eax, esp ; push rax ; xchg eax, esp ; jmp qword ptr [rax]
0x000000000015cd23 : inc eax ; xor dl, dh ; inc dword ptr [rax] ; xor dh, dl ; jmp rax
0x000000000015d0e7 : inc eax ; xor ebx, 0xf381d0ff ; jmp rax
0x000000000015f459 : inc ebx ; add dh, bh ; jmp rdi
0x00000000000e96be : inc ebx ; mov eax, 0x110 ; syscall
0x00000000000e977e : inc ebx ; mov eax, 0x11b ; syscall
0x00000000000ea51e : inc ebx ; mov eax, 0x44 ; syscall
0x00000000000e962e : inc ebx ; mov eax, 0x63 ; syscall
0x00000000000e932e : inc ebx ; mov eax, 0xb1 ; syscall
0x0000000000033ccc : inc ebx ; nop ; mov eax, edx ; ret
0x000000000006e3bc : inc ebx ; nop ; xor eax, eax ; ret
0x0000000000148fd9 : inc ebx ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000015e597 : inc ecx ; mov esi, 0xbecdfff5 ; cmc ; call rdi
0x000000000016ac4b : inc edx ; mov edx, 0xba52fffc ; cld ; jmp rdx
0x00000000000e2309 : inc esi ; jmp qword ptr [r8]
0x000000000016aba7 : inc esi ; mov esi, 0xbe56fffc ; cld ; jmp rsi
0x000000000016a23f : inc esi ; sar ch, 0xff ; ret 0xfffd
0x00000000001700cb : inc esp ; add al, byte ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; retf
0x000000000016ad13 : inc esp ; mov ecx, 0xb954fffc ; cld ; jmp rsp
0x0000000000170463 : inc esp ; pop rbp ; add al, byte ptr [rax] ; sti ; jmp rsp
0x000000000016c30b : inc esp ; retf 0
0x00000000000c382b : inc qword ptr [rcx] ; ret 0x5589
0x00000000000c45b0 : insb byte ptr [rdi], dx ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret 0x3945
0x0000000000177665 : insb byte ptr [rdi], dx ; add byte ptr [rax], al ; js 0x1776bc ; out dx, eax ; jmp qword ptr [rdx]
0x0000000000121ed4 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000184874 : insb byte ptr [rdi], dx ; add dword ptr ds:[rax], eax ; out 0xf5, al ; jmp qword ptr [rcx]
0x0000000000032aee : insb byte ptr [rdi], dx ; and al, 0xe8 ; fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x0000000000032b8a : insb byte ptr [rdi], dx ; and al, 0xe8 ; fstp xword ptr [rdi] ; ret
0x0000000000032b68 : insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x0000000000032d0a : insb byte ptr [rdi], dx ; and al, 0xfe ; ret
0x0000000000032bc9 : insb byte ptr [rdi], dx ; and al, 8 ; fscale ; fstp st(1) ; ret
0x0000000000032a8a : insb byte ptr [rdi], dx ; and al, 8 ; ret
0x000000000016aae5 : insb byte ptr [rdi], dx ; cld ; jmp qword ptr [rax + 0x20fffc6d]
0x000000000016a4bd : insb byte ptr [rdi], dx ; cld ; jmp qword ptr [rax]
0x000000000016a4fd : insb byte ptr [rdi], dx ; cld ; jmp rax
0x000000000016d8f1 : insb byte ptr [rdi], dx ; cmc ; call rsp
0x000000000017e974 : insb byte ptr [rdi], dx ; fild word ptr [rax] ; add al, ch ; retf
0x000000000015b0fe : insb byte ptr [rdi], dx ; insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x000000000015cccc : insb byte ptr [rdi], dx ; int1 ; jmp qword ptr [rsi]
0x0000000000188174 : insb byte ptr [rdi], dx ; ja 0x18817f ; add al, ch ; jg 0x18817b ; jmp qword ptr [rsi]
0x0000000000001e6d : insb byte ptr [rdi], dx ; mov dl, 0xcd ; push r13 ; salc ; retf 0x559a
0x00000000001104b2 : insb byte ptr [rdi], dx ; mov eax, 1 ; ret
0x0000000000003680 : insb byte ptr [rdi], dx ; mov ebx, 0x952a6c41 ; ret
0x000000000016c21c : insb byte ptr [rdi], dx ; ret
0x000000000005adbf : insb byte ptr [rdi], dx ; ret 0xffff
0x000000000016ec7c : insb byte ptr [rdi], dx ; ret 1
0x000000000016c31c : insb byte ptr [rdi], dx ; retf
0x000000000016c304 : insb byte ptr [rdi], dx ; retf 0
0x000000000017e074 : insb byte ptr [rdi], dx ; salc ; add byte ptr [rax], al ; js 0x17e030 ; cld ; jmp qword ptr [rbx]
0x00000000000b8da0 : insb byte ptr [rdi], dx ; sbb ebp, edi ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x000000000015a4c6 : insb byte ptr [rdi], dx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf -0x156f
0x0000000000183774 : insb byte ptr [rdi], dx ; sub eax, 0xa9780001 ; cmc ; jmp rcx
0x00000000000522a2 : insb byte ptr [rdi], dx ; xor al, 0 ; call rax
0x0000000000183f74 : insb byte ptr [rdi], dx ; xor eax, 0xcd680001 ; cmc ; call rdi
0x00000000000cee3d : insd dword ptr [rdi], dx ; adc byte ptr [rax + 0x63], cl ; ret
0x0000000000124b40 : insd dword ptr [rdi], dx ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000a9401 : insd dword ptr [rdi], dx ; add byte ptr [rax + 1], cl ; ret
0x00000000000e6d4b : insd dword ptr [rdi], dx ; add byte ptr [rax - 0x77], cl ; ret 0xabe
0x0000000000184c24 : insd dword ptr [rdi], dx ; add byte ptr [rax], al ; add byte ptr [rcx + rdx*2], al ; retf 0
0x000000000008b54f : insd dword ptr [rdi], dx ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000ab52f : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add bl, dh ; ret
0x0000000000125a40 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000016db6d : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; test byte ptr [rdx - 0xa], bl ; call rsp
0x000000000018ee59 : insd dword ptr [rdi], dx ; clc ; call qword ptr [rdx]
0x00000000000aa88d : insd dword ptr [rdi], dx ; cld ; dec dword ptr [rax + 0x39] ; ret
0x000000000016aae9 : insd dword ptr [rdi], dx ; cld ; jmp qword ptr [rax]
0x0000000000063e2a : insd dword ptr [rdi], dx ; mov edi, 0x8348ffff ; ret 0xbe08
0x000000000015b0ff : insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x0000000000001bf4 : insd dword ptr [rdi], dx ; ret 0x1bb7
0x00000000001594ad : insd dword ptr [rdi], dx ; ret 0xb9b9
0x00000000000b36c7 : insd dword ptr [rdi], dx ; ret 0xfff6
0x000000000004cb8f : insd dword ptr [rdi], dx ; retf 0x11
0x00000000000e6173 : insd dword ptr [rdi], dx ; shr al, 0xf6 ; push rsp ; sti ; dec dword ptr [rax + 0x39] ; ret
0x0000000000169f09 : insd dword ptr [rdi], dx ; sti ; inc dword ptr [rax] ; outsb dx, byte ptr [rsi] ; sti ; call rax
0x000000000015a3bf : insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000002c3b : int 0x80
0x00000000000034e0 : int 0xcb
0x000000000011e78b : int1 ; adc al, dh ; dec dword ptr [rax - 0x77] ; ret
0x000000000004a26e : int1 ; add r8d, eax ; mov eax, r8d ; ret
0x000000000017d47a : int1 ; call qword ptr [rax]
0x000000000017d492 : int1 ; call qword ptr [rdx]
0x000000000017d0f2 : int1 ; call qword ptr [rsi]
0x00000000000210e4 : int1 ; call rbx
0x000000000017d36a : int1 ; call rdi
0x000000000017cf72 : int1 ; call rdx
0x000000000017cfa2 : int1 ; call rsi
0x000000000016cada : int1 ; call rsp
0x000000000017abf1 : int1 ; cld ; call qword ptr [rdx]
0x00000000000d1504 : int1 ; cli ; dec dword ptr [rax + 0x39] ; or byte ptr [r15], 0x84 ; retf
0x0000000000184b61 : int1 ; cmc ; dec dword ptr [rbp + 5] ; add byte ptr [rax], al ; add al, 0xe5 ; retf 0
0x00000000000d2f2b : int1 ; cmp ecx, dword ptr [rax - 0xc] ; jne 0xd2f29 ; mov eax, dword ptr [rdx + 8] ; ret
0x0000000000041ca5 : int1 ; cmp r9d, 0x2f ; jmp rcx
0x0000000000109b26 : int1 ; dec dword ptr [rax - 0x77] ; ret
0x000000000016cb62 : int1 ; dec esp ; add byte ptr [rcx], al ; add byte ptr [rax + rdx*2 - 0xf], dl ; jmp rsp
0x000000000016cc7a : int1 ; dec esp ; add eax, 0x8e040001 ; int1 ; jmp rsp
0x000000000015e8c4 : int1 ; hlt ; cmc ; dec dword ptr [rbp + rsi*8 - 0xb] ; jmp rsp
0x0000000000003aaf : int1 ; imul esi ; in eax, 0x78 ; mov dl, 0x1e ; ret
0x000000000016cdc2 : int1 ; inc dword ptr [rbx + rcx - 0xe4bffff] ; int1 ; call rsp
0x000000000016ce3a : int1 ; inc dword ptr [rdi + rcx - 0x15bffff] ; int1 ; jmp rsp
0x000000000016cdc9 : int1 ; int1 ; call rsp
0x000000000008eb2d : int1 ; je 0x8eb24 ; ret
0x0000000000146bdb : int1 ; jl 0x146c2c ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000146bfc : int1 ; jl 0x146c4d ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000146c0f : int1 ; jl 0x146c60 ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000146ce4 : int1 ; jl 0x146d35 ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000146d3c : int1 ; jl 0x146d8d ; adc dword ptr [rsi + 3], edx ; ret
0x0000000000146dd9 : int1 ; jl 0x146e2a ; adc dword ptr [rsi + 7], edx ; ret
0x000000000017d462 : int1 ; jmp qword ptr [rax]
0x000000000017c8e2 : int1 ; jmp qword ptr [rbx]
0x000000000017d0da : int1 ; jmp qword ptr [rdi]
0x000000000015ccce : int1 ; jmp qword ptr [rsi]
0x000000000015cca6 : int1 ; jmp rax
0x000000000017c942 : int1 ; jmp rbx
0x00000000000990f5 : int1 ; jmp rcx
0x000000000016c9b2 : int1 ; jmp rsp
0x000000000015ccc6 : int1 ; lcall ptr [rax + 0x6cfff1f5] ; int1 ; jmp qword ptr [rsi]
0x000000000016c9aa : int1 ; lcall ptr [rbp + rsi*8] ; add byte ptr [rax + rcx - 0xf], dh ; jmp rsp
0x000000000016cc02 : int1 ; lcall ptr [rbx + rax + 0x79340001] ; int1 ; call rsp
0x000000000016cfe9 : int1 ; lcall ptr [rsi + rbx - 0xe1bffff] ; call rsp
0x000000000015ccca : int1 ; ljmp ptr [rbx + rsi*8 - 0xf] ; jmp qword ptr [rsi]
0x000000000015a384 : int1 ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf -0x6620
0x0000000000003034 : int1 ; mov dr0, word ptr [rax] ; retf
0x0000000000033bae : int1 ; mov eax, 1 ; ret
0x000000000009921a : int1 ; mov eax, eax ; ret
0x00000000000d1f8d : int1 ; mov eax, ecx ; syscall
0x000000000013317b : int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000012e5af : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000010cfea : int1 ; mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x0000000000108eb4 : int1 ; mov rdi, r13 ; call r12
0x000000000003712b : int1 ; mov rdx, rbx ; mov rdi, r12 ; call 0x43c09
0x0000000000148ab3 : int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x00000000000c1294 : int1 ; or byte ptr [rsi + 0x32], 8 ; xor eax, eax ; ret
0x0000000000099201 : int1 ; pop rbx ; mov eax, eax ; ret
0x00000000000f54d2 : int1 ; pop rdx ; pop r10 ; ret
0x000000000016cad2 : int1 ; push qword ptr [rbp + rdi*8 + 0x31540000] ; int1 ; call rsp
0x000000000016cbc2 : int1 ; push qword ptr [rdx + rax + 0x5a240001] ; int1 ; jmp rsp
0x000000000016cb02 : int1 ; push qword ptr [rsi + rdi*8 + 0x35240000] ; int1 ; jmp rsp
0x0000000000002613 : int1 ; ret
0x000000000015aad6 : int1 ; ret 0x5803
0x000000000007e363 : int1 ; stosd dword ptr [rdi], eax ; xor dword ptr [rax], eax ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x0000000000148ab7 : int1 ; sub eax, edx ; ret
0x0000000000049dee : int1 ; xor al, 0 ; call rax
0x000000000007aeb6 : int1 ; xor eax, eax ; ret
0x000000000008b28e : int1 ; xor edi, edi ; mov rax, rdi ; ret
0x000000000016ee7d : iretd ; add dword ptr [rax], eax ; je 0x16ee28 ; clc ; call rsp
0x000000000018d9d5 : iretd ; add dword ptr [rax], eax ; or byte ptr [rdi], ch ; clc ; jmp rdi
0x000000000007d66a : iretd ; call rax
0x000000000007e2ff : iretd ; call rcx
0x0000000000170149 : iretd ; cli ; jmp rsp
0x0000000000184099 : iretd ; cmc ; call qword ptr [rsi]
0x00000000001840b1 : iretd ; cmc ; jmp qword ptr [rcx]
0x000000000016d689 : iretd ; hlt ; jmp rsp
0x00000000000781bf : iretd ; mov eax, 3 ; syscall
0x0000000000078193 : iretd ; mov eax, r8d ; syscall
0x000000000015e414 : iretd ; mov edx, 0xbad9fff5 ; cmc ; jmp rbx
0x000000000002a8d0 : iretd ; syscall
0x0000000000104193 : ja 0x104198 ; ret
0x0000000000106094 : ja 0x1060c8 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], cl ; ret 0xff81
0x000000000010a221 : ja 0x10a274 ; mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x000000000010d00d : ja 0x10cffe ; mov qword ptr [rdx + 0x20], rsi ; ret
0x0000000000117ec7 : ja 0x117ee3 ; ret
0x000000000011803f : ja 0x118062 ; mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000118230 : ja 0x118260 ; mov rax, qword ptr [rdi + 0x18] ; ret
0x0000000000129084 : ja 0x1290ca ; jb 0x129096 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000129541 : ja 0x129578 ; jb 0x129550 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x00000000001469b3 : ja 0x1469b7 ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x0000000000146ef4 : ja 0x146f52 ; jb 0x146f06 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000147509 : ja 0x14754e ; jb 0x147518 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000014a03b : ja 0x14a042 ; ret
0x000000000015ab44 : ja 0x15aacb ; ret 0x48f
0x000000000016ab41 : ja 0x16ab45 ; jmp qword ptr [rax + 0x20fffc78]
0x000000000016c5f9 : ja 0x16c5ed ; call rsp
0x000000000016c5f8 : ja 0x16c5ee ; call rsp
0x000000000017fa71 : ja 0x17fa68 ; call rsi
0x0000000000188115 : ja 0x18811e ; add al, ch ; jg 0x18811a ; jmp qword ptr [rsi]
0x000000000018812d : ja 0x188136 ; add al, ah ; sal dh, 1 ; jmp qword ptr [rsi]
0x0000000000188145 : ja 0x18814e ; add al, ch ; jg 0x18814a ; jmp qword ptr [rsi]
0x000000000018815d : ja 0x188166 ; add al, ah ; sal dh, 1 ; jmp qword ptr [rsi]
0x0000000000188175 : ja 0x18817e ; add al, ch ; jg 0x18817a ; jmp qword ptr [rsi]
0x000000000018818d : ja 0x188196 ; add al, ah ; sal dh, 1 ; jmp qword ptr [rsi]
0x00000000001881a5 : ja 0x1881ae ; add al, ch ; jg 0x1881aa ; jmp qword ptr [rsi]
0x00000000001881bd : ja 0x1881c6 ; add al, ah ; sal dh, 1 ; jmp qword ptr [rsi]
0x00000000001881ed : ja 0x1881f6 ; add byte ptr [rax], dl ; sal esi, 1 ; jmp qword ptr [rsi]
0x0000000000188205 : ja 0x18820e ; add byte ptr [rax], ch ; sal esi, 1 ; jmp qword ptr [rsi]
0x000000000002bd3d : ja 0x2bd58 ; lea rax, qword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x00000000000332e6 : ja 0x332f3 ; ret
0x0000000000033352 : ja 0x33363 ; ret
0x000000000003339c : ja 0x333a2 ; ret
0x00000000000038fa : ja 0x395c ; clc ; salc ; jb 0x3982 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x000000000004288e : ja 0x428e0 ; shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000004a25f : ja 0x4a245 ; mov eax, r8d ; ret
0x00000000000710c8 : ja 0x710e1 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000071a51 : ja 0x71a5b ; ret
0x00000000000722a5 : ja 0x722b3 ; pop rbx ; ret
0x0000000000072dde : ja 0x72de5 ; ret
0x000000000007aeb5 : ja 0x7aead ; xor eax, eax ; ret
0x000000000007c091 : ja 0x7c03d ; movsxd rax, dword ptr [r14 + rax*4] ; add rax, r14 ; jmp rax
0x0000000000083f84 : ja 0x83fb5 ; jb 0x83f96 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000084413 : ja 0x84430 ; jb 0x8441f ; mov byte ptr [rdi], cl ; ret
0x000000000008addd : ja 0x8adbf ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000944f7 : ja 0x944fd ; ret
0x0000000000094513 : ja 0x9451d ; mov dword ptr [rdi], ecx ; ret
0x0000000000094554 : ja 0x94563 ; mov qword ptr [rdi], rcx ; ret
0x00000000000945d9 : ja 0x945ed ; ret
0x000000000009462f : ja 0x94647 ; ret
0x00000000000946b1 : ja 0x946cd ; ret
0x0000000000095af7 : ja 0x95b01 ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000095b13 : ja 0x95b21 ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x0000000000095b64 : ja 0x95b77 ; mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000095c49 : ja 0x95c61 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x0000000000095cbf : ja 0x95cdb ; lea rax, qword ptr [rdi + 0x14] ; ret
0x0000000000095d41 : ja 0x95d61 ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000975d7 : ja 0x975dd ; ret
0x00000000000975f3 : ja 0x975fd ; mov dword ptr [rdi], ecx ; ret
0x0000000000097634 : ja 0x97643 ; mov qword ptr [rdi], rcx ; ret
0x00000000000976b9 : ja 0x976cd ; ret
0x000000000009770f : ja 0x97727 ; ret
0x0000000000097791 : ja 0x977ad ; ret
0x00000000000980a7 : ja 0x980ad ; ret
0x00000000000980c3 : ja 0x980cd ; mov dword ptr [rdi], ecx ; ret
0x0000000000098104 : ja 0x98113 ; mov qword ptr [rdi], rcx ; ret
0x0000000000098189 : ja 0x9819d ; ret
0x00000000000981df : ja 0x981f7 ; ret
0x0000000000098261 : ja 0x9827d ; ret
0x00000000000994a9 : ja 0x994c9 ; sub rdi, 0x10 ; add rax, rdi ; ret
0x000000000009ad22 : ja 0x9ad32 ; cmove rax, rcx ; ret
0x000000000009b0fc : ja 0x9b10c ; mov eax, edi ; ret
0x00000000000a88ad : ja 0xa88bb ; ret
0x00000000000a8d3c : ja 0xa8d6d ; mov qword ptr [rdi + 0x20], rcx ; ret
0x00000000000aeac0 : ja 0xaead9 ; mov r14d, 0x7fffffff ; jmp 0xaea9e
0x00000000000b3a0d : ja 0xb3a1b ; pop rbx ; ret
0x00000000000b4c07 : ja 0xb4c12 ; ret
0x00000000000b7f66 : ja 0xb7f72 ; ret
0x00000000000b8000 : ja 0xb800a ; ret
0x00000000000b80f1 : ja 0xb80fa ; ret
0x00000000000b860d : ja 0xb8639 ; hlt ; mov rdi, rdx ; mov eax, r8d ; syscall
0x00000000000b8fb9 : ja 0xb8fc2 ; ret
0x00000000000b9029 : ja 0xb9032 ; ret
0x00000000000b927d : ja 0xb9282 ; ret
0x00000000000b92f1 : ja 0xb92f7 ; add byte ptr [rax], al ; syscall
0x00000000000b92fd : ja 0xb9302 ; ret
0x00000000000c314e : ja 0xc3159 ; jl 0xc3145 ; ret
0x00000000000da3d1 : ja 0xda3db ; xor eax, eax ; ret
0x00000000000dac52 : ja 0xdac5b ; add byte ptr [rax], al ; mov rdi, rdx ; syscall
0x00000000000db0c2 : ja 0xdb05b ; pop rbx ; ret
0x00000000000db0f2 : ja 0xdb0e3 ; ret
0x00000000000db29b : ja 0xdb2a3 ; ret
0x00000000000db2e8 : ja 0xdb2f3 ; ret
0x00000000000db33b : ja 0xdb343 ; ret
0x00000000000db396 : ja 0xdb3a3 ; ret
0x00000000000db3f7 : ja 0xdb403 ; ret
0x00000000000db451 : ja 0xdb45b ; ret
0x00000000000db62f : ja 0xdb63b ; ret
0x00000000000dbcd8 : ja 0xdbd13 ; ret
0x00000000000df713 : ja 0xdf728 ; mov word ptr [rsi + 0x66], dx ; xor eax, eax ; ret
0x00000000000dfc48 : ja 0xdfc53 ; ret
0x00000000000dfc9c : ja 0xdfca3 ; ret
0x00000000000e0410 : ja 0xe041a ; ret
0x00000000000e04f3 : ja 0xe04ff ; ret
0x00000000000e0549 : ja 0xe0555 ; ret
0x00000000000e0914 : ja 0xe0922 ; ret
0x00000000000e0f03 : ja 0xe0f33 ; ret
0x00000000000e11db : ja 0xe11e2 ; ret
0x00000000000e124b : ja 0xe1252 ; ret
0x00000000000e12cc : ja 0xe12d3 ; ret
0x00000000000e136d : ja 0xe1376 ; add byte ptr [rax], al ; mov rdi, rdx ; syscall
0x00000000000e137c : ja 0xe1383 ; ret
0x00000000000e18cc : ja 0xe18d3 ; ret
0x00000000000e2cdd : ja 0xe2ceb ; ret
0x00000000000e2d71 : ja 0xe2d7b ; ret
0x00000000000e2e11 : ja 0xe2e1b ; ret
0x00000000000e2e65 : ja 0xe2e73 ; ret
0x00000000000e2f69 : ja 0xe2f75 ; ret
0x00000000000e6ba4 : ja 0xe6bb3 ; ret
0x00000000000e8ca4 : ja 0xe8cb3 ; ret
0x00000000000e8ec6 : ja 0xe8ed2 ; ret
0x00000000000e8f78 : ja 0xe8f83 ; ret
0x00000000000e9b53 : ja 0xe9b62 ; ret
0x00000000000e9c6d : ja 0xe9c72 ; ret
0x00000000000e9d13 : ja 0xe9d22 ; ret
0x00000000000e9dcd : ja 0xe9dd2 ; ret
0x00000000000ea1bd : ja 0xea1c2 ; ret
0x00000000000ea25f : ja 0xea26a ; ret
0x00000000000ea30f : ja 0xea31a ; ret
0x00000000000f1478 : ja 0xf1472 ; ret
0x00000000000f5b60 : ja 0xf5b6b ; ret
0x00000000000f5be5 : ja 0xf5bbc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f5c0d : ja 0xf5c2d ; ret
0x00000000000f79b2 : ja 0xf79c3 ; ret
0x00000000000f79a3 : ja 0xf79db ; movsxd rdi, edi ; xor eax, eax ; syscall
0x00000000000f7a82 : ja 0xf7a93 ; ret
0x00000000000f7a73 : ja 0xf7aab ; mov eax, 0x59 ; syscall
0x00000000000f9397 : ja 0xf93aa ; mov rax, rdi ; sar rax, 6 ; ret
0x00000000000022e3 : ja 0xffffffffd6104b6f ; ret
0x0000000000117fa5 : jae 0x117fb4 ; xor eax, eax ; ret
0x0000000000117fe5 : jae 0x117ff4 ; xor eax, eax ; ret
0x000000000011c440 : jae 0x11c445 ; ret
0x000000000011c490 : jae 0x11c495 ; ret
0x000000000011f01c : jae 0x11efa9 ; retf -0x72b8
0x000000000011f264 : jae 0x11f247 ; mov eax, 1 ; ret
0x0000000000149dff : jae 0x149e0e ; call qword ptr [rbx]
0x000000000014a537 : jae 0x14a554 ; nop dword ptr [rax] ; call qword ptr [rbx]
0x0000000000159102 : jae 0x1590e4 ; jo 0x159180 ; mov ebp, 0xfb67d10d ; ret
0x0000000000159f9e : jae 0x159f79 ; push rsi ; pop rdx ; je 0x159f6e ; ret 0xacfc
0x00000000001614e9 : jae 0x1614e8 ; call qword ptr [rax]
0x000000000016aaf9 : jae 0x16aaf9 ; jmp qword ptr [rax]
0x000000000016b5c1 : jae 0x16b5b1 ; call rsp
0x0000000000177fe1 : jae 0x177fd4 ; jmp qword ptr [rcx]
0x0000000000177fe0 : jae 0x177fd5 ; jmp qword ptr [rcx]
0x000000000002b21a : jae 0x2b236 ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x0000000000032d8e : jae 0x32dd5 ; xor eax, eax ; pop rbx ; ret
0x000000000003331d : jae 0x33322 ; ret
0x00000000000337fd : jae 0x33802 ; ret
0x0000000000041b37 : jae 0x41b40 ; xor eax, eax ; ret
0x0000000000064d4d : jae 0x64d52 ; ret
0x0000000000064d80 : jae 0x64d85 ; ret
0x0000000000072d38 : jae 0x72d45 ; movzx eax, byte ptr [rax] ; ret
0x0000000000075fcd : jae 0x75ff5 ; movzx eax, byte ptr [rax] ; ret
0x00000000000776a7 : jae 0x7765e ; ret
0x000000000007e58e : jae 0x7e59e ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a898d : jae 0xa8992 ; ret
0x00000000000ab44d : jae 0xab452 ; ret
0x00000000000ab47d : jae 0xab482 ; ret
0x00000000000b7ecd : jae 0xb7ed2 ; ret
0x00000000000b80b0 : jae 0xb80b5 ; ret
0x00000000000b818d : jae 0xb8192 ; ret
0x00000000000b8216 : jae 0xb824b ; ret
0x00000000000b8276 : jae 0xb82ab ; ret
0x00000000000b85be : jae 0xb85c3 ; ret
0x00000000000b864d : jae 0xb8652 ; ret
0x00000000000b8f71 : jae 0xb8f77 ; add byte ptr [rax], al ; syscall
0x00000000000b8f7d : jae 0xb8f82 ; ret
0x00000000000b911d : jae 0xb9122 ; ret
0x00000000000b914d : jae 0xb9152 ; ret
0x00000000000b91ad : jae 0xb91b2 ; ret
0x00000000000b91dd : jae 0xb91e2 ; ret
0x00000000000b920d : jae 0xb9212 ; ret
0x00000000000b923d : jae 0xb9242 ; ret
0x00000000000d1dfd : jae 0xd1e02 ; ret
0x00000000000d1e2d : jae 0xd1e32 ; ret
0x00000000000d1e5d : jae 0xd1e62 ; ret
0x00000000000d1e8d : jae 0xd1e92 ; ret
0x00000000000d1ebd : jae 0xd1ec2 ; ret
0x00000000000d1eed : jae 0xd1ef2 ; ret
0x00000000000d1f1d : jae 0xd1f22 ; ret
0x00000000000d1f4d : jae 0xd1f52 ; ret
0x00000000000d9ee9 : jae 0xd9f21 ; ret
0x00000000000d9f49 : jae 0xd9f81 ; ret
0x00000000000db1fd : jae 0xdb202 ; ret
0x00000000000db49d : jae 0xdb4a2 ; ret
0x00000000000db4cd : jae 0xdb4d2 ; ret
0x00000000000db59d : jae 0xdb5a2 ; ret
0x00000000000db5cd : jae 0xdb5d2 ; ret
0x00000000000db68d : jae 0xdb692 ; ret
0x00000000000db6bd : jae 0xdb6c2 ; ret
0x00000000000db6f6 : jae 0xdb72b ; ret
0x00000000000db916 : jae 0xdb94b ; ret
0x00000000000db976 : jae 0xdb9ab ; ret
0x00000000000db9cd : jae 0xdb9d2 ; ret
0x00000000000dbded : jae 0xdbdf2 ; ret
0x00000000000dbf36 : jae 0xdbf6b ; ret
0x00000000000dbf8d : jae 0xdbf92 ; ret
0x00000000000dbfbd : jae 0xdbfc2 ; ret
0x00000000000dbfed : jae 0xdbff2 ; ret
0x00000000000dc01d : jae 0xdc022 ; ret
0x00000000000dc04d : jae 0xdc052 ; ret
0x00000000000dc086 : jae 0xdc0bb ; ret
0x00000000000dc0dd : jae 0xdc0e2 ; ret
0x00000000000dc10d : jae 0xdc112 ; ret
0x00000000000dc95d : jae 0xdc962 ; ret
0x00000000000dc98d : jae 0xdc992 ; ret
0x00000000000dc9bd : jae 0xdc9c2 ; ret
0x00000000000dc9f0 : jae 0xdc9f5 ; ret
0x00000000000dcfcd : jae 0xdcfd2 ; ret
0x00000000000dd000 : jae 0xdd005 ; ret
0x00000000000dd02d : jae 0xdd032 ; ret
0x00000000000dd05d : jae 0xdd062 ; ret
0x00000000000dd08d : jae 0xdd092 ; ret
0x00000000000dd0c0 : jae 0xdd0c5 ; ret
0x00000000000dd0ed : jae 0xdd0f2 ; ret
0x00000000000dd11d : jae 0xdd122 ; ret
0x00000000000dd14d : jae 0xdd152 ; ret
0x00000000000df8a6 : jae 0xdf8db ; ret
0x00000000000df934 : jae 0xdf987 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000dfc10 : jae 0xdfc15 ; ret
0x00000000000e03a9 : jae 0xe03e1 ; ret
0x00000000000e0add : jae 0xe0ae2 ; ret
0x00000000000e0b0d : jae 0xe0b12 ; ret
0x00000000000e0b3d : jae 0xe0b42 ; ret
0x00000000000e0e3d : jae 0xe0e42 ; ret
0x00000000000e101d : jae 0xe1022 ; ret
0x00000000000e1056 : jae 0xe108b ; ret
0x00000000000e10b6 : jae 0xe10eb ; ret
0x00000000000e1119 : jae 0xe1151 ; ret
0x00000000000e1179 : jae 0xe11b1 ; ret
0x00000000000e150d : jae 0xe1512 ; ret
0x00000000000e15ad : jae 0xe15b2 ; ret
0x00000000000e15e9 : jae 0xe1621 ; ret
0x00000000000e173d : jae 0xe1742 ; ret
0x00000000000e176d : jae 0xe1772 ; ret
0x00000000000e17a6 : jae 0xe17db ; ret
0x00000000000e17fd : jae 0xe1802 ; ret
0x00000000000e1836 : jae 0xe186b ; ret
0x00000000000e188d : jae 0xe1892 ; ret
0x00000000000e1bfd : jae 0xe1c02 ; ret
0x00000000000e1c2d : jae 0xe1c32 ; ret
0x00000000000e1c5d : jae 0xe1c62 ; ret
0x00000000000e2e9d : jae 0xe2ea2 ; ret
0x00000000000e2ecd : jae 0xe2ed2 ; ret
0x00000000000e446f : jae 0xe4474 ; ret
0x00000000000e46ed : jae 0xe46f2 ; ret
0x00000000000e471d : jae 0xe4722 ; ret
0x00000000000e4756 : jae 0xe478b ; ret
0x00000000000e47ad : jae 0xe47b2 ; ret
0x00000000000e47dd : jae 0xe47e2 ; ret
0x00000000000e4810 : jae 0xe4815 ; ret
0x00000000000e483d : jae 0xe4842 ; ret
0x00000000000e486d : jae 0xe4872 ; ret
0x00000000000e489d : jae 0xe48a2 ; ret
0x00000000000e48cd : jae 0xe48d2 ; ret
0x00000000000e4eee : jae 0xe4f21 ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00000000000e7470 : jae 0xe7475 ; ret
0x00000000000e749d : jae 0xe74a2 ; ret
0x00000000000e74cd : jae 0xe74d2 ; ret
0x00000000000e7500 : jae 0xe7505 ; ret
0x00000000000e7530 : jae 0xe7535 ; ret
0x00000000000e755d : jae 0xe7562 ; ret
0x00000000000e7590 : jae 0xe7595 ; ret
0x00000000000e75bd : jae 0xe75c2 ; ret
0x00000000000e75ed : jae 0xe75f2 ; ret
0x00000000000e7620 : jae 0xe7625 ; ret
0x00000000000e764d : jae 0xe7652 ; ret
0x00000000000e7680 : jae 0xe7685 ; ret
0x00000000000e8c0d : jae 0xe8c12 ; ret
0x00000000000e8c3d : jae 0xe8c42 ; ret
0x00000000000e8d3d : jae 0xe8d42 ; ret
0x00000000000e8d7d : jae 0xe8d82 ; ret
0x00000000000e8dad : jae 0xe8db2 ; ret
0x00000000000e8ddd : jae 0xe8de2 ; ret
0x00000000000e8e0d : jae 0xe8e12 ; ret
0x00000000000e8fad : jae 0xe8fb2 ; ret
0x00000000000e9030 : jae 0xe9035 ; ret
0x00000000000e905d : jae 0xe9062 ; ret
0x00000000000e908d : jae 0xe9092 ; ret
0x00000000000e90bd : jae 0xe90c2 ; ret
0x00000000000e9100 : jae 0xe9105 ; ret
0x00000000000e912d : jae 0xe9132 ; ret
0x00000000000e915d : jae 0xe9162 ; ret
0x00000000000e918d : jae 0xe9192 ; ret
0x00000000000e91bd : jae 0xe91c2 ; ret
0x00000000000e91ed : jae 0xe91f2 ; ret
0x00000000000e921d : jae 0xe9222 ; ret
0x00000000000e924d : jae 0xe9252 ; ret
0x00000000000e927d : jae 0xe9282 ; ret
0x00000000000e92b0 : jae 0xe92b5 ; ret
0x00000000000e92e9 : jae 0xe9321 ; ret
0x00000000000e933d : jae 0xe9342 ; ret
0x00000000000e9370 : jae 0xe9375 ; ret
0x00000000000e939d : jae 0xe93a2 ; ret
0x00000000000e93cd : jae 0xe93d2 ; ret
0x00000000000e93fd : jae 0xe9402 ; ret
0x00000000000e942d : jae 0xe9432 ; ret
0x00000000000e945d : jae 0xe9462 ; ret
0x00000000000e9490 : jae 0xe9495 ; ret
0x00000000000e94c0 : jae 0xe94c5 ; ret
0x00000000000e94ed : jae 0xe94f2 ; ret
0x00000000000e951d : jae 0xe9522 ; ret
0x00000000000e9550 : jae 0xe9555 ; ret
0x00000000000e9580 : jae 0xe9585 ; ret
0x00000000000e95b0 : jae 0xe95b5 ; ret
0x00000000000e95e9 : jae 0xe9621 ; ret
0x00000000000e963d : jae 0xe9642 ; ret
0x00000000000e9679 : jae 0xe96b1 ; ret
0x00000000000e96cd : jae 0xe96d2 ; ret
0x00000000000e96fd : jae 0xe9702 ; ret
0x00000000000e9739 : jae 0xe9771 ; ret
0x00000000000e978d : jae 0xe9792 ; ret
0x00000000000e97c0 : jae 0xe97c5 ; ret
0x00000000000e97ed : jae 0xe97f2 ; ret
0x00000000000e981d : jae 0xe9822 ; ret
0x00000000000e9850 : jae 0xe9855 ; ret
0x00000000000e9886 : jae 0xe98bb ; ret
0x00000000000e98dd : jae 0xe98e2 ; ret
0x00000000000e9910 : jae 0xe9915 ; ret
0x00000000000e9940 : jae 0xe9945 ; ret
0x00000000000e9996 : jae 0xe99cb ; ret
0x00000000000e99ed : jae 0xe99f2 ; ret
0x00000000000e9a26 : jae 0xe9a5b ; ret
0x00000000000e9a7d : jae 0xe9a82 ; ret
0x00000000000e9aad : jae 0xe9ab2 ; ret
0x00000000000e9ae0 : jae 0xe9ae5 ; ret
0x00000000000e9b0d : jae 0xe9b12 ; ret
0x00000000000e9c09 : jae 0xe9c41 ; ret
0x00000000000e9e69 : jae 0xe9ea1 ; ret
0x00000000000e9ec0 : jae 0xe9ec5 ; ret
0x00000000000e9eed : jae 0xe9ef2 ; ret
0x00000000000e9f1d : jae 0xe9f22 ; ret
0x00000000000e9f50 : jae 0xe9f55 ; ret
0x00000000000ea479 : jae 0xea4b1 ; ret
0x00000000000ea4d9 : jae 0xea511 ; ret
0x00000000000ea52d : jae 0xea532 ; ret
0x00000000000ea55d : jae 0xea562 ; ret
0x00000000000ea58d : jae 0xea592 ; ret
0x00000000000ea5bd : jae 0xea5c2 ; ret
0x00000000000ea5f0 : jae 0xea5f5 ; ret
0x00000000000ea620 : jae 0xea625 ; ret
0x00000000000ea64d : jae 0xea652 ; ret
0x00000000000ea67d : jae 0xea682 ; ret
0x00000000000ea6ad : jae 0xea6b2 ; ret
0x00000000000ea6dd : jae 0xea6e2 ; ret
0x00000000000eab49 : jae 0xeab09 ; adc al, 0 ; add byte ptr [rax], al ; syscall
0x0000000000102e35 : jae 0xffffffff83583002 ; ret 0x3904
0x00000000001038af : jb 0x1038d7 ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000104458 : jb 0x10444b ; mov eax, 0xffffffff ; ret
0x0000000000104457 : jb 0x10444c ; mov eax, 0xffffffff ; ret
0x00000000001044ef : jb 0x1044bb ; mov eax, 0xffffffff ; ret
0x00000000001044ee : jb 0x1044bc ; mov eax, 0xffffffff ; ret
0x000000000010d011 : jb 0x10d035 ; ret
0x000000000010d00b : jb 0x10d03d ; ja 0x10d000 ; mov qword ptr [rdx + 0x20], rsi ; ret
0x0000000000129086 : jb 0x129094 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000129543 : jb 0x12954e ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000012c5ba : jb 0x12c5ca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012c70a : jb 0x12c71a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012c85a : jb 0x12c86a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012c9aa : jb 0x12c9ba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012cafa : jb 0x12cb0a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012cc4a : jb 0x12cc5a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012cd9a : jb 0x12cdaa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012ceea : jb 0x12cefa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012d03a : jb 0x12d04a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012d18a : jb 0x12d19a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012d2da : jb 0x12d2ea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012d42a : jb 0x12d43a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012d57a : jb 0x12d58a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012d6ca : jb 0x12d6da ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012d81a : jb 0x12d82a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012ef8a : jb 0x12ef9a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012f0da : jb 0x12f0ea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012f22a : jb 0x12f23a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012f37a : jb 0x12f38a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012f4ca : jb 0x12f4da ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012f61a : jb 0x12f62a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012f76a : jb 0x12f77a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012f8ba : jb 0x12f8ca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012fa0a : jb 0x12fa1a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012fb5a : jb 0x12fb6a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012fcaa : jb 0x12fcba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012fdfa : jb 0x12fe0a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012ff4a : jb 0x12ff5a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013009a : jb 0x1300aa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001301ea : jb 0x1301fa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014658e : jb 0x14659a ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000146c45 : jb 0x146c54 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x0000000000146c50 : jb 0x146c63 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x0000000000146c5d : jb 0x146c65 ; mov byte ptr [rdi], cl ; ret
0x0000000000146ef6 : jb 0x146f04 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000014750b : jb 0x147516 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x0000000000149e2e : jb 0x149e24 ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000014a549 : jb 0x14a548 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000016aaf5 : jb 0x16aaf9 ; jmp qword ptr [rax + 0x20fffc73]
0x000000000016ab35 : jb 0x16ab35 ; jmp qword ptr [rax]
0x000000000016ae50 : jb 0x16ae05 ; cld ; jmp rdx
0x000000000017b3b1 : jb 0x17b3a5 ; jmp qword ptr [rdx]
0x0000000000001acd : jb 0x1b4c ; out dx, eax ; fidiv word ptr [rbx] ; retf
0x0000000000001d99 : jb 0x1dcc ; retf
0x0000000000002b88 : jb 0x2b28 ; test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x000000000002bd0e : jb 0x2bd1b ; ret
0x00000000000038fe : jb 0x397e ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x000000000004cec4 : jb 0x4ceca ; dec dword ptr [rcx - 0x77] ; ret 0x8d48
0x000000000005b686 : jb 0x5b613 ; ret 0x348
0x0000000000064e49 : jb 0x64e5c ; mov dword ptr [rdx + 4], 1 ; ret
0x000000000006abf5 : jb 0x6ac1b ; mov dword ptr [rcx], eax ; ret
0x000000000006c13c : jb 0x6c135 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000006c34b : jb 0x6c353 ; ret
0x0000000000076741 : jb 0x76726 ; mov byte ptr [rax + rsi], r10b ; ret
0x0000000000082b2b : jb 0x82b3c ; mov qword ptr [rdx], rbx ; mov rax, r10 ; pop rbx ; ret
0x0000000000083ee4 : jb 0x83eed ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000083f86 : jb 0x83f94 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000083f85 : jb 0x83f95 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000084415 : jb 0x8441d ; mov byte ptr [rdi], cl ; ret
0x0000000000089e05 : jb 0x89e0f ; sub cl, byte ptr [rax + 0x39] ; sal dword ptr [rbp - 0xd], 1 ; ret
0x0000000000089ebb : jb 0x89ecc ; mov qword ptr [rdx], rbx ; mov rax, r10 ; pop rbx ; ret
0x000000000009646a : jb 0x96479 ; add byte ptr [rax], al ; ret
0x000000000009b76d : jb 0x9b6f9 ; ror byte ptr [rdi], 0x95 ; ret 0xe883
0x00000000000b989d : jb 0xb98a6 ; add byte ptr [rbp - 0x27], dh ; xor eax, eax ; ret
0x00000000000c5d25 : jb 0xc5ca0 ; ret
0x00000000000d1d24 : jb 0xd1d5a ; add byte ptr [rcx + 0x5b595a0a], cl ; ret
0x00000000000d1d23 : jb 0xd1d5b ; add byte ptr [rcx + 0x5b595a0a], cl ; ret
0x00000000000e123f : jb 0xe1245 ; add byte ptr [rax], al ; syscall
0x00000000000f00bb : jb 0xf00cf ; mov eax, 1 ; ret
0x00000000000f4dfd : jb 0xf4df4 ; xor eax, eax ; ret
0x000000000010012c : jbe 0x100132 ; ret
0x000000000010c683 : jbe 0x10c697 ; mov eax, 2 ; ret
0x000000000011822d : jbe 0x118249 ; add dword ptr [rdi + 0x28], esi ; mov rax, qword ptr [rdi + 0x18] ; ret
0x000000000015a9dc : jbe 0x15a9af ; mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x000000000015a9db : jbe 0x15a9b0 ; mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x000000000016ab01 : jbe 0x16ab01 ; jmp qword ptr [rax]
0x00000000001751aa : jbe 0x1751b8 ; ret
0x0000000000188085 : jbe 0x18808e ; add al, cl ; sal dh, 1 ; jmp qword ptr [rsi]
0x000000000018809d : jbe 0x1880a6 ; add al, ah ; sal dh, 1 ; jmp qword ptr [rsi]
0x00000000001880b5 : jbe 0x1880be ; add al, ch ; jg 0x1880ba ; jmp qword ptr [rsi]
0x00000000001880cd : jbe 0x1880d6 ; add al, ah ; sal dh, 1 ; jmp qword ptr [rsi]
0x00000000001880e5 : jbe 0x1880ee ; add al, ch ; jg 0x1880ea ; jmp qword ptr [rsi]
0x00000000001880fd : jbe 0x188106 ; add al, ah ; sal dh, 1 ; jmp qword ptr [rsi]
0x0000000000002c17 : jbe 0x2beb ; clc ; ret
0x0000000000002e06 : jbe 0x2e20 ; xchg eax, esi ; sbb eax, 0x8d468ae2 ; ret 0xc1bb
0x00000000000037eb : jbe 0x3796 ; outsb dx, byte ptr [rsi] ; retf
0x0000000000041efb : jbe 0x41f71 ; xor eax, eax ; ret
0x0000000000043e9c : jbe 0x43e93 ; ret
0x0000000000043efc : jbe 0x43ef6 ; nop ; pop rbx ; ret
0x000000000004cf27 : jbe 0x4cf96 ; test eax, 0x950f7ff0 ; ret 0xc166
0x0000000000073c59 : jbe 0x73ca4 ; movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000838f6 : jbe 0x83935 ; add rax, rdi ; ret
0x0000000000083906 : jbe 0x83937 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x0000000000083916 : jbe 0x83937 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x0000000000083926 : jbe 0x83937 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000008fa49 : jbe 0x8fa43 ; ret 0xf10
0x0000000000091669 : jbe 0x91663 ; ret 0xf10
0x00000000000a916d : jbe 0xa90a5 ; jmp 0xa9147
0x00000000000b3be2 : jbe 0xb3c05 ; lea rdi, qword ptr [rbx + 0x13] ; call 0x80658
0x00000000000b9201 : jbe 0xb9207 ; add byte ptr [rax], al ; syscall
0x00000000000daf98 : jbe 0xdafa3 ; ret
0x00000000000dd689 : jbe 0xdd6a7 ; mov eax, ecx ; syscall
0x0000000000100146 : je 0x100152 ; mov rdi, rbx ; call rax
0x00000000001006da : je 0x100707 ; or byte ptr [rcx + rcx*4 - 0x11], cl ; call r12
0x0000000000103723 : je 0x10371b ; pop rbx ; ret
0x0000000000105896 : je 0x1058c0 ; or al, 0xe8 ; ret 0xfffe
0x0000000000106e8b : je 0x106ea2 ; mov eax, r13d ; syscall
0x0000000000107732 : je 0x10773a ; ret
0x0000000000107791 : je 0x10779a ; ret
0x000000000010778b : je 0x10779b ; cmp dword ptr [rdi + 0x10], 2 ; je 0x1077a0 ; ret
0x000000000010a313 : je 0x10a31f ; mov rdi, rsp ; call rax
0x000000000010a9f9 : je 0x10aa26 ; adc byte ptr [rax - 0x77], cl ; out dx, eax ; call r14
0x000000000010abf9 : je 0x10ac05 ; mov rdi, rbp ; call rax
0x000000000010af88 : je 0x10af92 ; ret
0x000000000010bbcc : je 0x10bbd8 ; mov rdi, rbx ; call rax
0x000000000010be47 : je 0x10bce9 ; mov rdi, rbx ; call rax
0x000000000010bf3e : je 0x10bf4a ; mov rdi, rbx ; call rax
0x000000000010c113 : je 0x10c124 ; xor eax, eax ; ret
0x000000000010c722 : je 0x10c72e ; mov rdi, rbp ; call rdx
0x000000000010cb67 : je 0x10cc64 ; mov rdi, rbp ; call qword ptr [rbx]
0x000000000010d176 : je 0x10d188 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000110392 : je 0x1103a6 ; lea rdi, qword ptr [rbx + 0xc8] ; call rax
0x0000000000110d8a : je 0x110d96 ; mov rdi, r12 ; call rax
0x0000000000110f5b : je 0x110f69 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000111834 : je 0x111844 ; xor eax, eax ; ret
0x0000000000111f5e : je 0x111f88 ; cmp al, ch ; retf 0x60
0x0000000000111fb1 : je 0x111fbd ; mov rdi, rbp ; call rax
0x0000000000112070 : je 0x11207c ; mov rdi, r13 ; call rax
0x00000000001120f3 : je 0x112107 ; mov eax, 1 ; ret
0x0000000000112bef : je 0x112bfd ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x00000000001132db : je 0x1132e7 ; mov rdi, r12 ; call rax
0x000000000011364f : je 0x11365d ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x000000000011509a : je 0x115028 ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x000000000011501f : je 0x11502b ; pop rbx ; ret
0x00000000001150c3 : je 0x1150d6 ; add rsp, 8 ; ret
0x00000000001154ed : je 0x115508 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000115bbb : je 0x115bc2 ; ret
0x0000000000115c9b : je 0x115ca9 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x00000000001162e4 : je 0x1162f2 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000116df8 : je 0x116e54 ; add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x0000000000116ef0 : je 0x116f4c ; add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x00000000001173ad : je 0x117410 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000011746d : je 0x1174d0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000117acd : je 0x117af8 ; or byte ptr [rax - 0x77], cl ; ret 0x4489
0x0000000000117bad : je 0x117bd8 ; or byte ptr [rax - 0x77], cl ; ret 0x4489
0x0000000000117e91 : je 0x117ea3 ; ret
0x0000000000119e18 : je 0x119e24 ; xor eax, eax ; ret
0x000000000011b105 : je 0x11b114 ; xor eax, eax ; ret
0x000000000011e6c1 : je 0x11e6d6 ; add rsp, 8 ; ret
0x0000000000120363 : je 0x12032d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000121035 : je 0x12103d ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000121133 : je 0x1210fd ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000012201a : je 0x122022 ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000122173 : je 0x12213d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000123d43 : je 0x123d0d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000125d71 : je 0x125d58 ; movsxd rax, ecx ; add rax, rdi ; ret
0x0000000000125f5c : je 0x125e77 ; jmp 0x829e8
0x0000000000126063 : je 0x12602d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000001276f3 : je 0x1276bd ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000145317 : je 0x145321 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001498d6 : je 0x1498dc ; call rdx
0x00000000001499ee : je 0x1499f9 ; call rax
0x0000000000149de0 : je 0x149de5 ; ret
0x000000000015850c : je 0x15853a ; push 0xaf ; xlatb ; out 0xb3, al ; retf 0xe80
0x0000000000159268 : je 0x159233 ; xor al, 0xd8 ; ret
0x0000000000159fa2 : je 0x159f6a ; ret 0xacfc
0x000000000016a7e0 : je 0x16a777 ; cld ; jmp rsp
0x000000000016ab39 : je 0x16ab3d ; jmp qword ptr [rax + 0x20fffc75]
0x000000000016beb8 : je 0x16be52 ; out dx, eax ; jmp rsp
0x000000000016bfa8 : je 0x16bf6c ; out dx, eax ; call rsp
0x000000000016c0bc : je 0x16c07f ; add byte ptr [rax], al ; xor al, 0xe9 ; out dx, eax ; jmp rsp
0x000000000016c9b0 : je 0x16c9bd ; int1 ; jmp rsp
0x000000000016ccd0 : je 0x16cc67 ; int1 ; call rsp
0x000000000016cf50 : je 0x16cfb7 ; jmp rsp
0x000000000016cf50 : je 0x16cfb8 ; jmp rsp
0x000000000016d2b8 : je 0x16d28b ; jmp rsp
0x000000000016ed7c : je 0x16ed51 ; add dword ptr [rax], eax ; hlt ; clc ; push rsp ; retf 1
0x000000000016ee80 : je 0x16ee25 ; clc ; call rsp
0x000000000016ef00 : je 0x16eea8 ; clc ; jmp rsp
0x000000000016f088 : je 0x16f055 ; clc ; call rsp
0x0000000000170340 : je 0x170359 ; sti ; jmp rsp
0x0000000000175541 : je 0x175532 ; call qword ptr [rcx]
0x0000000000178019 : je 0x17800c ; jmp qword ptr [rsi]
0x000000000017b17c : je 0x17b12c ; add byte ptr [rax], al ; xor byte ptr [rax - 0x10], dl ; jmp qword ptr [rdx]
0x0000000000184d7c : je 0x184dc8 ; add dword ptr [rax], eax ; push rax ; cli ; cmc ; jmp qword ptr [rcx]
0x0000000000187f7c : je 0x187ffa ; add dword ptr [rax], eax ; ror bh, 0xf6 ; jmp qword ptr [rsi]
0x000000000018a67c : je 0x18a621 ; add dword ptr [rax], eax ; adc byte ptr [rdi - 9], bl ; call qword ptr [rdi]
0x000000000019127c : je 0x19128d ; add al, byte ptr [rax] ; xor dl, ah ; clc ; jmp qword ptr [rbx]
0x0000000000001cba : je 0x1ce6 ; ret
0x000000000001fb0b : je 0x1faac ; jmp 0x1fad5
0x000000000002039d : je 0x203a9 ; mov rdi, rbp ; call rax
0x00000000000210df : je 0x2110b ; sbb byte ptr [rbp - 0x77], cl ; int1 ; call rbx
0x000000000002381f : je 0x2384e ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x000000000002395e : je 0x2398d ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x000000000002409c : je 0x240cb ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x00000000000241e1 : je 0x24210 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x00000000000247a8 : je 0x247d7 ; push rax ; mov rdi, qword ptr [rsp + 0x48] ; call r15
0x0000000000024aed : je 0x24b1c ; push rax ; mov rdi, qword ptr [rsp + 0x48] ; call r15
0x00000000000253db : je 0x25409 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000026073 : je 0x260a2 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000026ea8 : je 0x26ed7 ; push rax ; mov rdi, qword ptr [rsp + 0x48] ; call r15
0x0000000000027240 : je 0x2726f ; push rax ; mov rdi, qword ptr [rsp + 0x48] ; call r14
0x0000000000027c88 : je 0x27cb7 ; push rax ; mov rdi, qword ptr [rsp + 0x48] ; call r15
0x0000000000028010 : je 0x2803f ; push rax ; mov rdi, qword ptr [rsp + 0x48] ; call r14
0x00000000000290f7 : je 0x29102 ; ret
0x00000000000290f2 : je 0x29107 ; cmp esi, 3 ; je 0x29107 ; ret
0x000000000002995e : je 0x29964 ; call rax
0x0000000000029ae8 : je 0x29aee ; call rax
0x000000000002aa5b : je 0x2aa61 ; call rax
0x000000000002acd8 : je 0x2acb3 ; or byte ptr [rbp + rcx*4 + 0xc], al ; xor byte ptr [rbp + 0x39], al ; retf -0x7df1
0x00000000000327c6 : je 0x327b4 ; ret
0x0000000000032bae : je 0x32b4f ; ret
0x0000000000037826 : je 0x37794 ; call 0x342c8
0x0000000000039840 : je 0x3986f ; jo 0x397d8 ; je 0x39873 ; or byte ptr [rbp - 0x77], cl ; retf
0x0000000000039844 : je 0x3986f ; or byte ptr [rbp - 0x77], cl ; retf
0x000000000003fba5 : je 0x3fbb3 ; pop rbx ; ret
0x000000000005f5b3 : je 0x605f4 ; call 0x9c008
0x0000000000064e31 : je 0x64e47 ; mov eax, 0x10 ; ret
0x0000000000067617 : je 0x67631 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x00000000000676e7 : je 0x67701 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x0000000000067dd2 : je 0x67e08 ; mov rax, rdx ; pop rbx ; ret
0x0000000000068e9f : je 0x68eb1 ; mov eax, esi ; syscall
0x0000000000068f6b : je 0x68f85 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006b656 : je 0x6b6a6 ; add esp, 0x20 ; pop rbx ; ret
0x000000000006b655 : je 0x6b6a7 ; add esp, 0x20 ; pop rbx ; ret
0x000000000006badc : je 0x6bae2 ; ret
0x000000000006baf6 : je 0x6bb03 ; pop rbx ; ret
0x000000000006c08a : je 0x6c0b4 ; or al, 0xeb ; ret 0x5590
0x000000000006c558 : je 0x6c567 ; mov eax, 0xffffffff ; ret
0x0000000000070412 : je 0x70448 ; mov rax, rdx ; pop rbx ; ret
0x0000000000070c5c : je 0x70c6f ; mov eax, 0xffffffff ; ret
0x0000000000070fdc : je 0x70fef ; mov eax, 0xffffffff ; ret
0x0000000000071388 : je 0x71392 ; ret
0x00000000000713b3 : je 0x713c0 ; add rsp, 0x38 ; ret
0x0000000000071acf : je 0x71adb ; pop rbx ; ret
0x0000000000074833 : je 0x747c1 ; or eax, 0xffffffff ; ret
0x000000000007494b : je 0x748d1 ; or eax, 0xffffffff ; ret
0x0000000000074a35 : je 0x74a42 ; ret
0x0000000000074a79 : je 0x74aa6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000076849 : je 0x76887 ; mov qword ptr [rsi], rdi ; ret
0x00000000000770b0 : je 0x770b6 ; call rax
0x00000000000775f7 : je 0x77604 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007bba2 : je 0x7bbce ; sub byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x000000000007c0bb : je 0x7c0c1 ; call rax
0x000000000007c980 : je 0x7c90d ; retf 0x4c89
0x000000000007c97f : je 0x7c90e ; retf 0x4c89
0x000000000007cfb9 : je 0x7cfc2 ; ret
0x000000000007cffa : je 0x7d009 ; mov qword ptr [rbx], rdx ; xor eax, eax ; pop rbx ; ret
0x000000000007d012 : je 0x7d027 ; mov eax, 0x16 ; ret
0x000000000007d223 : je 0x7d2e6 ; call rax
0x000000000007d35a : je 0x7d426 ; call rax
0x000000000007d4f8 : je 0x7d548 ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x000000000007dfb8 : je 0x7dfc2 ; ret
0x000000000007e7db : je 0x7e7ed ; lea rax, qword ptr [rip + 0x10fec] ; ret
0x000000000007e9c8 : je 0x7e9da ; lea rax, qword ptr [rip + 0xc8b8f] ; ret
0x00000000000800bb : je 0x800cd ; lea rax, qword ptr [rip + 0xbb0ac] ; ret
0x00000000000801c8 : je 0x801da ; lea rax, qword ptr [rip + 0xa5a0f] ; ret
0x0000000000080348 : je 0x80365 ; movsx eax, dl ; ret
0x0000000000080452 : je 0x80466 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000080684 : je 0x8068f ; bsf eax, edx ; ret
0x000000000008072d : je 0x80746 ; bsf rax, rdx ; ret
0x00000000000808fc : je 0x80926 ; bsf rax, rdx ; ret
0x0000000000080a3b : je 0x80a4d ; lea rax, qword ptr [rip + 0x109ac] ; ret
0x000000000008231b : je 0x8232d ; lea rax, qword ptr [rip + 0xba5fc] ; ret
0x0000000000082638 : je 0x8264a ; lea rax, qword ptr [rip + 0xa36df] ; ret
0x00000000000829c8 : je 0x829da ; lea rax, qword ptr [rip + 0xa347f] ; ret
0x000000000008312d : je 0x83139 ; add byte ptr [rax - 0x77], cl ; ret 0x14c
0x00000000000837ec : je 0x83843 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000083965 : je 0x83978 ; lea rax, qword ptr [rip + 0xc0612] ; ret
0x0000000000083e05 : je 0x83e65 ; lea rax, qword ptr [rip + 0xa5212] ; ret
0x0000000000083e2c : je 0x83e65 ; lea rax, qword ptr [rip + 0xfb] ; ret
0x0000000000084013 : je 0x84034 ; ror byte ptr [rdi], 1 ; adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x00000000000844c5 : je 0x84525 ; lea rax, qword ptr [rip + 0xa4b32] ; ret
0x00000000000844ec : je 0x84525 ; lea rax, qword ptr [rip - 0x5e5] ; ret
0x000000000008458b : je 0x8459d ; lea rax, qword ptr [rip + 0xbaf0c] ; ret
0x00000000000846ab : je 0x846bd ; lea rax, qword ptr [rip + 0xbc5fc] ; ret
0x0000000000089185 : je 0x891e5 ; lea rax, qword ptr [rip + 0x9fe92] ; ret
0x00000000000891ac : je 0x891e5 ; lea rax, qword ptr [rip - 0x5285] ; ret
0x0000000000089a46 : je 0x89a71 ; cmp byte ptr [rbp - 0x77], cl ; retf -0x1817
0x000000000008a2b4 : je 0x8a2df ; sbb byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000008a69a : je 0x8a6f1 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000008a751 : je 0x8a769 ; bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x000000000008ac14 : je 0x8ac27 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008b0e8 : je 0x8b113 ; cmp byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000008eb07 : je 0x8eb03 ; ret
0x000000000008eb2e : je 0x8eb23 ; ret
0x000000000008eb2a : je 0x8eb27 ; cmp ecx, esi ; je 0x8eb27 ; ret
0x000000000008eb7f : je 0x8eb63 ; ret
0x000000000008f15c : je 0x8f138 ; bsr eax, eax ; add rax, rdi ; ret
0x00000000000947f9 : je 0x9484a ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x0000000000095e86 : je 0x95ed7 ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x0000000000097b9a : je 0x97beb ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x0000000000099252 : je 0x99264 ; xor eax, eax ; ret
0x000000000009924d : je 0x99271 ; cmp eax, 2 ; je 0x99269 ; xor eax, eax ; ret
0x000000000009929d : je 0x99283 ; ret
0x00000000000992e5 : je 0x992c3 ; ret
0x000000000009a1ff : je 0x9a1f1 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009a439 : je 0x9a459 ; mov cl, dl ; and cl, 0xf ; je 0x9a469 ; ret
0x000000000009a440 : je 0x9a462 ; ret
0x000000000009a455 : je 0x9a476 ; add rax, 2 ; ret
0x000000000009aa66 : je 0x9aad6 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x000000000009ad1f : je 0x9ad3c ; cmp esi, dword ptr [rdi + 8] ; cmove rax, rcx ; ret
0x000000000009ad75 : je 0x9ad88 ; lea rax, qword ptr [rip + 0xaa842] ; ret
0x000000000009b88e : je 0x9b8bd ; sbb byte ptr [rcx + rcx*4 - 0x16], cl ; mov rdi, rbp ; call rbx
0x000000000009bb4e : je 0x9bb7d ; sbb byte ptr [rcx + rcx*4 - 0xe], cl ; mov rdi, rbp ; call rbx
0x000000000009be2e : je 0x9be5d ; sbb byte ptr [rcx + rcx*4 - 0xe], cl ; mov rdi, rbp ; call rbx
0x000000000009bf98 : je 0x9bfa5 ; test edx, edx ; jne 0x9bf97 ; ret
0x000000000009bf97 : je 0x9bfa6 ; test edx, edx ; jne 0x9bf98 ; ret
0x000000000009d8bb : je 0x9d88b ; or byte ptr [rax - 0x77], cl ; fucompi st(0) ; retf -0x5b0
0x000000000009feba : je 0x9fe8a ; or byte ptr [rax - 0x77], cl ; fucompi st(0) ; retf
0x00000000000a8265 : je 0xa8273 ; pop rbx ; ret
0x00000000000a858b : je 0xa85b9 ; sbb byte ptr [rax - 0x75], cl ; and al, 8 ; call rax
0x00000000000a9400 : je 0xa9474 ; add byte ptr [rax + 1], cl ; ret
0x00000000000a965a : je 0xa966e ; test edi, edi ; jne 0xa966e ; ret
0x00000000000b2e30 : je 0xb2e4e ; mov rsi, rdi ; xor edi, edi ; call rax
0x00000000000b2eb6 : je 0xb2ec9 ; call 0x1f93c
0x00000000000b4bfb : je 0xb4c01 ; add byte ptr [rax], al ; syscall
0x00000000000b8331 : je 0xb8337 ; call rax
0x00000000000b8442 : je 0xb844b ; call rdx
0x00000000000b84b3 : je 0xb84bc ; call rax
0x00000000000b97bd : je 0xb980c ; mov eax, 0x20 ; ret
0x00000000000b9879 : je 0xb98a9 ; mov eax, 1 ; ret
0x00000000000bb075 : je 0xbb0c8 ; mov rdi, qword ptr [rbp - 0x318] ; call rbx
0x00000000000c078a : je 0xc07b7 ; or al, 0x85 ; test byte ptr [rdi], 0x84 ; ret
0x00000000000c1284 : je 0xc1294 ; xor eax, eax ; ret
0x00000000000c17c7 : je 0xc1789 ; mov rsi, rbx ; mov rdi, rbp ; call r12
0x00000000000c17d4 : je 0xc17ae ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c2bd0 : je 0xc2bdb ; ret
0x00000000000c2bcb : je 0xc2be8 ; cmp eax, 3 ; je 0xc2be0 ; ret
0x00000000000c2e97 : je 0xc2eb3 ; mov rdi, qword ptr [rdx + 8] ; call 0x1f940
0x00000000000c2f78 : je 0xc2f83 ; ret
0x00000000000c316a : je 0xc3174 ; xor eax, eax ; ret
0x00000000000c3166 : je 0xc31c8 ; cmp al, 0x11 ; je 0xc3178 ; xor eax, eax ; ret
0x00000000000c3294 : je 0xc32a8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000c37ef : je 0xc3819 ; or byte ptr [rcx], ch ; ret
0x00000000000c5ba2 : je 0xc5c09 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000c5d08 : je 0xc5c9c ; ret
0x00000000000c659a : je 0xc654e ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ca1f4 : je 0xca208 ; lahf ; ret 0xc931
0x00000000000ced8e : je 0xcedb8 ; jo 0xced97 ; ret 0xc083
0x00000000000cfa2e : je 0xcfa58 ; sub al, ch ; retf -0x5d
0x00000000000d0158 : je 0xd0194 ; xor eax, eax ; ret
0x00000000000d01b7 : je 0xd01c7 ; mov eax, 2 ; ret
0x00000000000d0f6f : je 0xd0f5b ; ret
0x00000000000d13d8 : je 0xd13d2 ; cli ; dec dword ptr [rax + 1] ; ret
0x00000000000d20a9 : je 0xd20bc ; cmp cx, 0xa ; je 0xd210a ; ret
0x00000000000d20af : je 0xd2104 ; ret
0x00000000000d2ea2 : je 0xd2f03 ; ret
0x00000000000d7075 : je 0xd7053 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000da3aa : je 0xda3b3 ; ret
0x00000000000db184 : je 0xdb1d9 ; xor edx, edx ; xor esi, esi ; mov rdi, rbx ; call rax
0x00000000000de204 : je 0xde240 ; mov qword ptr [rbx], rax ; xor eax, eax ; pop rbx ; ret
0x00000000000dfbd0 : je 0xdfbed ; neg eax ; pop rbx ; ret
0x00000000000e140e : je 0xe1415 ; ret
0x00000000000e2f93 : je 0xe2f9e ; mov qword ptr [rax], rdx ; ret
0x00000000000e3072 : je 0xe3067 ; mov byte ptr [r8 - 1], 0 ; ret
0x00000000000e4438 : je 0xe4449 ; mov dword ptr [rip + 0x2b4dc8], edi ; ret
0x00000000000e546f : je 0xe547b ; ret
0x00000000000e68fe : je 0xe699e ; call rax
0x00000000000e6a75 : je 0xe6b76 ; call rax
0x00000000000e8d06 : je 0xe8d0b ; ret
0x00000000000eaef4 : je 0xeaefb ; pop rbp ; ret
0x00000000000eb2ed : je 0xeb2ff ; add eax, 1 ; mov dword ptr [rdx], eax ; ret
0x00000000000eb2c1 : je 0xeb300 ; add eax, 1 ; mov word ptr [rdx], ax ; ret
0x00000000000ee00b : je 0xee020 ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000000f1775 : je 0xf1784 ; xor eax, eax ; ret
0x00000000000f3e43 : je 0xf3e57 ; mov eax, 7 ; ret
0x00000000000f3e61 : je 0xf3e89 ; mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x00000000000f3e70 : je 0xf3ed4 ; xor eax, eax ; pop rbx ; ret
0x00000000000f4e7d : je 0xf4e8b ; ret
0x00000000000f5529 : je 0xf552e ; ret
0x00000000000f558d : je 0xf5592 ; ret
0x00000000000f59ba : je 0xf59c2 ; ret
0x00000000000f5ba2 : je 0xf5bd2 ; call rax
0x00000000000f5fa2 : je 0xf5fbf ; sub ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000f654e : je 0xf65ae ; lea rax, qword ptr [rip + 0x32ab9] ; ret
0x00000000000f6575 : je 0xf65ae ; lea rax, qword ptr [rip - 0x7265e] ; ret
0x00000000000f661e : je 0xf667e ; lea rax, qword ptr [rip + 0x329e9] ; ret
0x00000000000f6645 : je 0xf667e ; lea rax, qword ptr [rip - 0x7272e] ; ret
0x00000000000f66ee : je 0xf674e ; lea rax, qword ptr [rip + 0x328f9] ; ret
0x00000000000f6715 : je 0xf674e ; lea rax, qword ptr [rip - 0x7281e] ; ret
0x00000000000f7adc : je 0xf7aee ; add rsp, 8 ; ret
0x0000000000111182 : jg 0x1111cc ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x111198 ; ret
0x0000000000115ea2 : jg 0x115eec ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x115eb8 ; ret
0x000000000012909a : jg 0x1290ab ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000012922b : jg 0x129255 ; vzeroupper ; ret
0x00000000001292d2 : jg 0x1292dc ; vzeroupper ; ret
0x000000000012935e : jg 0x129388 ; vzeroupper ; ret
0x00000000001293ee : jg 0x1293f8 ; vzeroupper ; ret
0x0000000000129434 : jg 0x129442 ; vzeroupper ; ret
0x0000000000129494 : jg 0x1294a2 ; vzeroupper ; ret
0x0000000000129553 : jg 0x129561 ; vzeroupper ; ret
0x000000000012e199 : jg 0x12e1ec ; ret
0x000000000012e1e0 : jg 0x12e230 ; mov ebx, 0x4f7f0ff3 ; retf
0x000000000012e1e5 : jg 0x12e238 ; retf
0x000000000012e21f : jg 0x12e26a ; ret
0x000000000012e25f : jg 0x12e2aa ; retf
0x000000000012e399 : jg 0x12e3ec ; ret 0x894c
0x000000000012e3e0 : jg 0x12e430 ; mov edx, 0x4f7f0ff3 ; retf -0x76b4
0x000000000012e3e5 : jg 0x12e438 ; retf -0x76b4
0x000000000012e41f : jg 0x12e46a ; ret 0x894c
0x000000000012e45b : jg 0x12e4a6 ; retf -0x76b4
0x0000000000130b69 : jg 0x130bbc ; ret
0x0000000000130bb0 : jg 0x130c00 ; mov ebx, 0x4f7f0ff3 ; retf
0x0000000000130bb5 : jg 0x130c08 ; retf
0x0000000000130bef : jg 0x130c3a ; ret
0x0000000000130c2f : jg 0x130c7a ; retf
0x0000000000130d69 : jg 0x130dbc ; ret 0x894c
0x0000000000130db0 : jg 0x130e00 ; mov edx, 0x4f7f0ff3 ; retf -0x76b4
0x0000000000130db5 : jg 0x130e08 ; retf -0x76b4
0x0000000000130def : jg 0x130e3a ; ret 0x894c
0x0000000000130e2b : jg 0x130e76 ; retf -0x76b4
0x0000000000133158 : jg 0x1331a9 ; loope 0x133157 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001331cf : jg 0x13321a ; ret 0xff2
0x00000000001331e8 : jg 0x133239 ; loop 0x1331e7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000013325f : jg 0x1332aa ; ret
0x0000000000133278 : jg 0x1332c9 ; jrcxz 0x133277 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000133308 : jg 0x133359 ; in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000133388 : jg 0x1333d9 ; in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000133408 : jg 0x133459 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000133488 : jg 0x1334d9 ; out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001335e5 : jg 0x133635 ; mov edx, 0x46f00ff2 ; retf 0xff3
0x00000000001335ef : jg 0x13363a ; retf 0xff2
0x0000000000133665 : jg 0x1336b5 ; mov ebx, 0x46f00ff2 ; retf
0x000000000013366f : jg 0x1336ba ; retf
0x0000000000133708 : jg 0x133759 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000133788 : jg 0x1337d9 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000133818 : jg 0x133869 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000133898 : jg 0x1338e9 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000013390c : jg 0x133917 ; ret
0x0000000000133966 : jg 0x133979 ; ret
0x0000000000133961 : jg 0x1339b1 ; psllq mm1, qword ptr [rdi] ; jg 0x13397e ; ret
0x00000000001339d6 : jg 0x1339e9 ; ret
0x0000000000133a46 : jg 0x133a59 ; ret
0x0000000000133a41 : jg 0x133a91 ; or eax, 0xf7f0ff3 ; ret
0x0000000000133ab6 : jg 0x133ac9 ; ret
0x0000000000133ab1 : jg 0x133b01 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000133b26 : jg 0x133b39 ; ret
0x0000000000133b21 : jg 0x133b71 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000133b96 : jg 0x133ba9 ; ret
0x0000000000133b91 : jg 0x133be1 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000133c06 : jg 0x133c19 ; ret
0x0000000000133c01 : jg 0x133c51 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000133c76 : jg 0x133c89 ; ret
0x0000000000133c71 : jg 0x133cc1 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x0000000000133ce6 : jg 0x133cf9 ; ret
0x0000000000133d56 : jg 0x133d69 ; ret
0x0000000000133dc6 : jg 0x133dd9 ; ret
0x0000000000133dc1 : jg 0x133e11 ; add eax, 0xf7f0ff3 ; ret
0x0000000000133e36 : jg 0x133e49 ; ret
0x0000000000133e31 : jg 0x133e81 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000133ea6 : jg 0x133eb9 ; ret
0x0000000000133ea1 : jg 0x133ef1 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000133f16 : jg 0x133f29 ; ret
0x0000000000133f11 : jg 0x133f61 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000133f86 : jg 0x133f99 ; ret
0x0000000000133f81 : jg 0x133fd1 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000135c78 : jg 0x135cc9 ; loope 0x135c77 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000135cef : jg 0x135d3a ; ret 0xff2
0x0000000000135d08 : jg 0x135d59 ; loop 0x135d07 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000135d7f : jg 0x135dca ; ret
0x0000000000135d98 : jg 0x135de9 ; jrcxz 0x135d97 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000135e28 : jg 0x135e79 ; in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000135ea8 : jg 0x135ef9 ; in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000135f28 : jg 0x135f79 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000135fa8 : jg 0x135ff9 ; out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000136105 : jg 0x136155 ; mov edx, 0x46f00ff2 ; retf 0xff3
0x000000000013610f : jg 0x13615a ; retf 0xff2
0x0000000000136185 : jg 0x1361d5 ; mov ebx, 0x46f00ff2 ; retf
0x000000000013618f : jg 0x1361da ; retf
0x0000000000136228 : jg 0x136279 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001362a8 : jg 0x1362f9 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000136338 : jg 0x136389 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001363b8 : jg 0x136409 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000013642c : jg 0x136437 ; ret
0x0000000000136486 : jg 0x136499 ; ret
0x0000000000136481 : jg 0x1364d1 ; psllq mm1, qword ptr [rdi] ; jg 0x13649e ; ret
0x00000000001364f6 : jg 0x136509 ; ret
0x0000000000136566 : jg 0x136579 ; ret
0x0000000000136561 : jg 0x1365b1 ; or eax, 0xf7f0ff3 ; ret
0x00000000001365d6 : jg 0x1365e9 ; ret
0x00000000001365d1 : jg 0x136621 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000136646 : jg 0x136659 ; ret
0x0000000000136641 : jg 0x136691 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000001366b6 : jg 0x1366c9 ; ret
0x00000000001366b1 : jg 0x136701 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000136726 : jg 0x136739 ; ret
0x0000000000136721 : jg 0x136771 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000136796 : jg 0x1367a9 ; ret
0x0000000000136791 : jg 0x1367e1 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x0000000000136806 : jg 0x136819 ; ret
0x0000000000136876 : jg 0x136889 ; ret
0x00000000001368e6 : jg 0x1368f9 ; ret
0x00000000001368e1 : jg 0x136931 ; add eax, 0xf7f0ff3 ; ret
0x0000000000136956 : jg 0x136969 ; ret
0x0000000000136951 : jg 0x1369a1 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00000000001369c6 : jg 0x1369d9 ; ret
0x00000000001369c1 : jg 0x136a11 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000136a36 : jg 0x136a49 ; ret
0x0000000000136a31 : jg 0x136a81 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000136aa6 : jg 0x136ab9 ; ret
0x0000000000136aa1 : jg 0x136af1 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000146534 : jg 0x146545 ; vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x0000000000146548 : jg 0x146559 ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x00000000001469ba : jg 0x1469b6 ; ret
0x0000000000146c27 : jg 0x146c37 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000146c1d : jg 0x146c3d ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x0000000000146f22 : jg 0x146f33 ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000147106 : jg 0x147130 ; vzeroupper ; ret
0x0000000000147105 : jg 0x147131 ; vzeroupper ; ret
0x00000000001471cc : jg 0x1471d6 ; vzeroupper ; ret
0x00000000001471cb : jg 0x1471d7 ; vzeroupper ; ret
0x000000000014729f : jg 0x1472c9 ; vzeroupper ; ret
0x000000000014729e : jg 0x1472ca ; vzeroupper ; ret
0x0000000000147372 : jg 0x14737c ; vzeroupper ; ret
0x0000000000147371 : jg 0x14737d ; vzeroupper ; ret
0x00000000001473c5 : jg 0x1473d3 ; vzeroupper ; ret
0x00000000001473c4 : jg 0x1473d4 ; vzeroupper ; ret
0x0000000000147431 : jg 0x14743f ; vzeroupper ; ret
0x0000000000147430 : jg 0x147440 ; vzeroupper ; ret
0x000000000014751b : jg 0x147529 ; vzeroupper ; ret
0x0000000000147529 : jg 0x147537 ; vzeroupper ; ret
0x00000000001495f5 : jg 0x149604 ; neg eax ; ret
0x0000000000149cd7 : jg 0x149cf1 ; test rdi, rdi ; jne 0x149cd8 ; ret
0x0000000000149cf9 : jg 0x149d14 ; test rdi, rdi ; jne 0x149cfb ; pop rbx ; ret
0x000000000015d075 : jg 0x15d06c ; jmp qword ptr [rax]
0x000000000015d089 : jg 0x15d084 ; inc eax ; jg 0x15d088 ; jmp rax
0x000000000015d08d : jg 0x15d084 ; jmp rax
0x000000000015d091 : jg 0x15d088 ; call qword ptr [rax]
0x000000000016103f : jg 0x161071 ; cmc ; cli ; dec eax ; cli ; jmp rax
0x000000000016103e : jg 0x1610c8 ; sub ch, dh ; cli ; dec eax ; cli ; jmp rax
0x0000000000169f59 : jg 0x169f58 ; jmp qword ptr [rax]
0x0000000000169f55 : jg 0x169f58 ; push rax ; jg 0x169f5c ; jmp qword ptr [rax]
0x000000000016ab19 : jg 0x16ab19 ; jmp qword ptr [rax]
0x00000000001880b9 : jg 0x1880b6 ; jmp qword ptr [rsi]
0x00000000001880e9 : jg 0x1880e6 ; jmp qword ptr [rsi]
0x0000000000188119 : jg 0x188116 ; jmp qword ptr [rsi]
0x0000000000188149 : jg 0x188146 ; jmp qword ptr [rsi]
0x0000000000188179 : jg 0x188176 ; jmp qword ptr [rsi]
0x00000000001881a9 : jg 0x1881a6 ; jmp qword ptr [rsi]
0x000000000018f791 : jg 0x18f78d ; call qword ptr [rsi]
0x0000000000025ac4 : jg 0x25a55 ; sal dword ptr [rsi - 0x29], 0x2d ; ret 0
0x000000000003231b : jg 0x3236d ; sub eax, edx ; shr rax, 0x3f ; ret
0x00000000000327c4 : jg 0x327cb ; je 0x327b6 ; ret
0x0000000000032baa : jg 0x32bf7 ; or ecx, eax ; je 0x32b53 ; ret
0x0000000000033346 : jg 0x3334c ; add byte ptr [rax], al ; syscall
0x0000000000036562 : jg 0x365ab ; mov dword ptr [rax], edx ; mov dword ptr [rsi], edx ; ret
0x0000000000003a87 : jg 0x3af4 ; xchg eax, ebp ; retf 0x10bf
0x0000000000041bcb : jg 0x41c39 ; xor eax, eax ; ret
0x0000000000041cd6 : jg 0x41c9b ; ret
0x0000000000043bc1 : jg 0x43bce ; ret 0xf089
0x00000000000450b8 : jg 0x450e5 ; retf -0x2fc7
0x0000000000049ded : jg 0x49de4 ; xor al, 0 ; call rax
0x000000000004cf2b : jg 0x4cf3f ; xchg eax, ebp ; ret 0xc166
0x000000000005154a : jg 0x51563 ; test byte ptr [rip - 0x7c000012], bl ; ret
0x0000000000051b61 : jg 0x51b7b ; add byte ptr [rdi], cl ; fsubr st(1) ; retf -8
0x0000000000071a42 : jg 0x71abb ; mov eax, 3 ; syscall
0x0000000000072dd2 : jg 0x72e48 ; xor eax, eax ; syscall
0x00000000000829cd : jg 0x82a07 ; or al, byte ptr [rax] ; ret
0x0000000000084154 : jg 0x8418c ; movups xmmword ptr [r11], xmm8 ; ret
0x0000000000084222 : jg 0x8425a ; movups xmmword ptr [r11], xmm8 ; ret
0x000000000008432c : jg 0x84337 ; ret
0x000000000008437c : jg 0x84387 ; ret
0x00000000000843f3 : jg 0x8443f ; xor byte ptr [rax - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf -0x1b8b
0x0000000000089d08 : jg 0x89cf3 ; ret
0x00000000000945c6 : jg 0x945d1 ; ret
0x00000000000945d6 : jg 0x945e4 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000945ea : jg 0x945f9 ; mov word ptr [rdi + 0x10], cx ; ret
0x0000000000094609 : jg 0x94617 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000094619 : jg 0x94627 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000094629 : jg 0x9463a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000009464a : jg 0x94659 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000009466a : jg 0x94679 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000009468a : jg 0x94699 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000946aa : jg 0x946bc ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000946ed : jg 0x946ff ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000009470d : jg 0x9471f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000009472b : jg 0x9473b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000009474b : jg 0x9475b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000009476b : jg 0x9477b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000009478b : jg 0x9479b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x0000000000094d18 : jg 0x94d23 ; jne 0x955d8 ; ret
0x0000000000094d3c : jg 0x94d48 ; jne 0x955d8 ; ret
0x0000000000094d5f : jg 0x94d6c ; jne 0x955d8 ; ret
0x0000000000094d7a : jg 0x94d88 ; jne 0x955d8 ; ret
0x0000000000094d9d : jg 0x94dac ; jne 0x955d8 ; ret
0x0000000000094dc2 : jg 0x94dd2 ; jne 0x955d8 ; ret
0x0000000000094de0 : jg 0x94df1 ; jne 0x955d8 ; ret
0x0000000000094dfc : jg 0x94e0e ; jne 0x955d8 ; ret
0x0000000000094e1f : jg 0x94e32 ; jne 0x955d8 ; ret
0x0000000000094e44 : jg 0x94e58 ; jne 0x955d8 ; ret
0x0000000000094e62 : jg 0x94e77 ; jne 0x955d8 ; ret
0x0000000000094e82 : jg 0x94e98 ; jne 0x955d8 ; ret
0x0000000000094ea4 : jg 0x94ebb ; jne 0x955d8 ; ret
0x0000000000094ec4 : jg 0x94edc ; jne 0x955d8 ; ret
0x0000000000094ee4 : jg 0x94efd ; jne 0x955d8 ; ret
0x0000000000094efe : jg 0x94f18 ; jne 0x955d8 ; ret
0x0000000000094f21 : jg 0x94f3c ; jne 0x955d8 ; ret
0x0000000000094f46 : jg 0x94f62 ; jne 0x955d8 ; ret
0x0000000000094f64 : jg 0x94f81 ; jne 0x955d8 ; ret
0x0000000000094f84 : jg 0x94fa2 ; jne 0x955d8 ; ret
0x0000000000094fa7 : jg 0x94fc6 ; jne 0x955d8 ; ret
0x0000000000094fc6 : jg 0x94fe6 ; jne 0x955d8 ; ret
0x0000000000094fe6 : jg 0x95007 ; jne 0x955d8 ; ret
0x0000000000095006 : jg 0x95028 ; jne 0x955d8 ; ret
0x0000000000095029 : jg 0x9504c ; jne 0x955d8 ; ret
0x000000000009505e : jg 0x95082 ; jne 0x955d8 ; ret
0x000000000009508c : jg 0x950b1 ; jne 0x955d8 ; ret
0x00000000000950bc : jg 0x950e2 ; jne 0x955d8 ; ret
0x00000000000950e8 : jg 0x9510f ; jne 0x955d8 ; ret
0x0000000000095118 : jg 0x95140 ; jne 0x955d8 ; ret
0x0000000000095148 : jg 0x95171 ; jne 0x955d8 ; ret
0x0000000000095178 : jg 0x951a2 ; jne 0x955d8 ; ret
0x0000000000095296 : jg 0x952a1 ; ret
0x00000000000952a9 : jg 0x952b7 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000952ba : jg 0x952c9 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000952d9 : jg 0x952e7 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000952e9 : jg 0x952f7 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000952fc : jg 0x9530d ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x000000000009531a : jg 0x95329 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000009533a : jg 0x95349 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000009535a : jg 0x95369 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000009537d : jg 0x9538f ; mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000953bd : jg 0x953cf ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000953dd : jg 0x953ef ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000953fb : jg 0x9540b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000009541b : jg 0x9542b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000009543b : jg 0x9544b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000009545b : jg 0x9546b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x0000000000095592 : jg 0x9559d ; ret
0x00000000000956c6 : jg 0x956fa ; ret
0x0000000000095c36 : jg 0x95c45 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000095c46 : jg 0x95c58 ; mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x0000000000095c79 : jg 0x95c8b ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x0000000000095c99 : jg 0x95cab ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x0000000000095dbf : jg 0x95e1f ; or eax, 0x1c478d48 ; ret
0x00000000000963bb : jg 0x963c6 ; jne 0x96de8 ; ret
0x00000000000963e0 : jg 0x963ec ; jne 0x96de8 ; ret
0x0000000000096403 : jg 0x96410 ; jne 0x96de8 ; ret
0x000000000009641e : jg 0x9642c ; jne 0x96de8 ; ret
0x0000000000096441 : jg 0x96450 ; jne 0x96de8 ; ret
0x0000000000096466 : jg 0x96476 ; jne 0x96de8 ; ret
0x0000000000096484 : jg 0x96495 ; jne 0x96de8 ; ret
0x00000000000964a0 : jg 0x964b2 ; jne 0x96de8 ; ret
0x00000000000964c3 : jg 0x964d6 ; jne 0x96de8 ; ret
0x00000000000964e8 : jg 0x964fc ; jne 0x96de8 ; ret
0x0000000000096516 : jg 0x9652b ; jne 0x96de8 ; ret
0x0000000000096536 : jg 0x9654c ; jne 0x96de8 ; ret
0x0000000000096558 : jg 0x9656f ; jne 0x96de8 ; ret
0x0000000000096588 : jg 0x965a0 ; jne 0x96de8 ; ret
0x00000000000965b8 : jg 0x965d1 ; jne 0x96de8 ; ret
0x00000000000965e2 : jg 0x965fc ; jne 0x96de8 ; ret
0x0000000000096605 : jg 0x96620 ; jne 0x96de8 ; ret
0x000000000009662a : jg 0x96646 ; jne 0x96de8 ; ret
0x0000000000096658 : jg 0x96675 ; jne 0x96de8 ; ret
0x0000000000096688 : jg 0x966a6 ; jne 0x96de8 ; ret
0x00000000000966bb : jg 0x966da ; jne 0x96de8 ; ret
0x00000000000966ea : jg 0x9670a ; jne 0x96de8 ; ret
0x000000000009671a : jg 0x9673b ; jne 0x96de8 ; ret
0x000000000009674a : jg 0x9676c ; jne 0x96de8 ; ret
0x000000000009677d : jg 0x967a0 ; jne 0x96de8 ; ret
0x00000000000967b2 : jg 0x967d6 ; jne 0x96de8 ; ret
0x00000000000967e0 : jg 0x96805 ; jne 0x96de8 ; ret
0x0000000000096810 : jg 0x96836 ; jne 0x96de8 ; ret
0x000000000009683c : jg 0x96863 ; jne 0x96de8 ; ret
0x000000000009686c : jg 0x96894 ; jne 0x96de8 ; ret
0x000000000009689c : jg 0x968c5 ; jne 0x96de8 ; ret
0x00000000000968cc : jg 0x968f6 ; jne 0x96de8 ; ret
0x0000000000096a76 : jg 0x96a85 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x0000000000096a89 : jg 0x96a9b ; mov byte ptr [rdi + 0x10], cl ; lea rax, qword ptr [rdi + 0x11] ; ret
0x0000000000096ac9 : jg 0x96adb ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x0000000000096ae9 : jg 0x96afb ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x14] ; ret
0x0000000000096c0f : jg 0x96c6f ; or eax, 0x1d478d48 ; ret
0x0000000000096da2 : jg 0x96dad ; ret
0x0000000000096ed6 : jg 0x96f0e ; lea rax, qword ptr [rdi + 0x40] ; ret
0x0000000000096ed5 : jg 0x96f5d ; xor byte ptr [rax - 0x73], cl ; ret
0x00000000000976a6 : jg 0x976b1 ; ret
0x00000000000976b6 : jg 0x976c4 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000976ca : jg 0x976d9 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000976e9 : jg 0x976f7 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000976f9 : jg 0x97707 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000097709 : jg 0x9771a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000009772a : jg 0x97739 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000009774a : jg 0x97759 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000009776a : jg 0x97779 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000009778a : jg 0x9779c ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000977cd : jg 0x977df ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000977ed : jg 0x977ff ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000009780b : jg 0x9781b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000009782b : jg 0x9783b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000009784b : jg 0x9785b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000009786b : jg 0x9787b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x0000000000098176 : jg 0x98181 ; ret
0x0000000000098186 : jg 0x98194 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000009819a : jg 0x981a9 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000981b9 : jg 0x981c7 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000981c9 : jg 0x981d7 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000981d9 : jg 0x981ea ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000981fa : jg 0x98209 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000009821a : jg 0x98229 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000009823a : jg 0x98249 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000009825a : jg 0x9826c ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000009829d : jg 0x982af ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000982bd : jg 0x982cf ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000982db : jg 0x982eb ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000982fb : jg 0x9830b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000009831b : jg 0x9832b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000009833b : jg 0x9834b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000984e6 : jg 0x984f6 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000986bf : jg 0x98720 ; wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000986df : jg 0x98740 ; adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x0000000000098756 : jg 0x9878f ; xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x0000000000098755 : jg 0x987de ; xor byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000990a0 : jg 0x990dd ; ret 0x2b77
0x0000000000099218 : jg 0x99216 ; int1 ; mov eax, eax ; ret
0x000000000009a185 : jg 0x9a18d ; neg eax ; ret
0x00000000000a828f : jg 0xa82df ; cmovle eax, edx ; pop rbx ; ret
0x00000000000aeac7 : jg 0xaeab6 ; retf
0x00000000000b965c : jg 0xb9662 ; add byte ptr [rax], al ; ret
0x00000000000b9fd1 : jg 0xb9fbe ; ret
0x00000000000c2e85 : jg 0xc2e68 ; mov rdi, qword ptr [r13 + 0x18] ; call 0x1f940
0x00000000000c5bef : jg 0xc5c5e ; add byte ptr [rdi], cl ; xchg eax, ebp ; rol byte ptr [rcx], 0xc0 ; ret
0x00000000000d5eb8 : jg 0xd5ecc ; ret 0x8589
0x00000000000da456 : jg 0xda470 ; test bh, dl ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret 0x4b01
0x000000000010221d : jge 0x102225 ; inc dword ptr [rbp - 0x769b8740] ; ret
0x0000000000110f5f : jge 0x110f73 ; call rax
0x0000000000115c9f : jge 0x115cb3 ; call rax
0x00000000001162e8 : jge 0x1162fc ; call rax
0x0000000000149674 : jge 0x149688 ; call rbx
0x000000000015856a : jge 0x15854b ; push r8 ; xor byte ptr [rcx], ah ; retf
0x0000000000159eb4 : jge 0x159f25 ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x000000000015d035 : jge 0x15d02c ; jmp qword ptr [rax]
0x000000000015d049 : jge 0x15d044 ; inc eax ; jge 0x15d048 ; jmp rax
0x000000000015d04d : jge 0x15d044 ; jmp rax
0x000000000015d051 : jge 0x15d04c ; inc dword ptr [rax] ; jle 0x15d050 ; jmp qword ptr [rax]
0x0000000000169f4d : jge 0x169f4c ; call qword ptr [rax]
0x000000000016ab51 : jge 0x16ab55 ; jmp qword ptr [rax + 0x20fffc7e]
0x000000000016b6a9 : jge 0x16b699 ; call rsp
0x000000000016de3d : jge 0x16de46 ; add byte ptr [rbx + rax - 9], dl ; jmp rsp
0x0000000000171b19 : jge 0x171b1a ; jmp qword ptr [rdi]
0x0000000000022e7b : jge 0x22e39 ; call 0x1f93c
0x00000000000028ee : jge 0x28e9 ; mov al, 0x1f ; retf
0x000000000008f03f : jge 0x8f047 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000b3123 : jge 0xb3106 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000c2e89 : jge 0xc2ea7 ; call 0x1f93c
0x00000000000c2ea4 : jge 0xc2eb2 ; call 0x1f93c
0x000000000000c878 : jge 0xc882 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0xc
0x00000000000dbe82 : jge 0xdbed4 ; add esp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x00000000000e5bb1 : jge 0xe5b7c ; mov r15d, r14d ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000000e7033 : jge 0xe6fdc ; mov eax, 3 ; syscall
0x00000000000e708a : jge 0xe7033 ; mov eax, 3 ; syscall
0x00000000000e9151 : jge 0xe9157 ; add byte ptr [rax], al ; syscall
0x0000000000108922 : jl 0x108951 ; or byte ptr [rbp - 0x17], dh ; add rsp, 0x18 ; ret
0x000000000010b400 : jl 0x10b42e ; add al, 0xb8 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000111767 : jl 0x111792 ; or byte ptr [rax + 0x63], cl ; ret
0x000000000011a37e : jl 0x11a3a8 ; adc al, ch ; retf -0x99e
0x000000000011eb60 : jl 0x11eae7 ; ret 0x8380
0x0000000000131551 : jl 0x13157e ; add byte ptr [rax + 0x39], cl ; retf -0x7cf1
0x00000000001463db : jl 0x1463e4 ; neg eax ; ret
0x00000000001464b4 : jl 0x146503 ; adc dword ptr [rcx - 1], edi ; ret
0x00000000001464f0 : jl 0x14653f ; adc dword ptr [rcx - 1], ebx ; ret
0x00000000001466ee : jl 0x14673d ; adc dword ptr [rcx - 1], edi ; ret
0x0000000000146855 : jl 0x1468a4 ; adc dword ptr [rcx + 7], edi ; ret
0x00000000001469b7 : jl 0x146a06 ; adc dword ptr [rdi - 8], edi ; ret
0x0000000000146bdc : jl 0x146c2b ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000146bfd : jl 0x146c4c ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000146c10 : jl 0x146c5f ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000146ce5 : jl 0x146d34 ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000146d3d : jl 0x146d8c ; adc dword ptr [rsi + 3], edx ; ret
0x0000000000146dda : jl 0x146e29 ; adc dword ptr [rsi + 7], edx ; ret
0x0000000000146ff0 : jl 0x14700f ; cld ; vzeroupper ; ret
0x000000000015a0b2 : jl 0x15a111 ; leave ; retf
0x000000000015d031 : jl 0x15d02c ; inc dword ptr [rax] ; jge 0x15d030 ; jmp qword ptr [rax]
0x0000000000169f49 : jl 0x169f48 ; jmp qword ptr [rax]
0x000000000016ab11 : jl 0x16ab11 ; jmp qword ptr [rax]
0x000000000016b615 : jl 0x16b61d ; add ah, al ; js 0x16b60d ; jmp rsp
0x000000000016cd9c : jl 0x16cdaf ; add dword ptr [rax], eax ; in al, dx ; int1 ; jmp rsp
0x000000000016ec9c : jl 0x16ec6a ; add dword ptr [rax], eax ; clc ; dec esp ; ret
0x000000000017867d : jl 0x178685 ; add byte ptr [rax - 0x7a], ah ; out dx, eax ; call rsi
0x000000000017cc98 : jl 0x17cc9f ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x000000000017d560 : jl 0x17d567 ; add byte ptr [rax], al ; pop rsp ; retf
0x0000000000181984 : jl 0x18199a ; add dword ptr [rax], eax ; pop rax ; retf
0x0000000000182b84 : jl 0x182bae ; add dword ptr [rax], eax ; sub al, dl ; stc ; call qword ptr [rax]
0x0000000000185c84 : jl 0x185cdf ; add dword ptr [rax], eax ; clc ; xor esi, esi ; jmp qword ptr [rcx]
0x00000000001873c1 : jl 0x1873bb ; call rsi
0x00000000001873c0 : jl 0x1873bc ; call rsi
0x000000000018bb84 : jl 0x18bb3e ; add dword ptr [rax], eax ; js 0x18bbd7 ; stc ; call qword ptr [rax]
0x000000000018cd70 : jl 0x18cd77 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret
0x00000000000247ad : jl 0x247d7 ; call r15
0x000000000002495e : jl 0x2498c ; adc byte ptr [rcx - 0x77], cl ; add ecx, dword ptr [rax - 0x77] ; ret 0x3b89
0x0000000000024af2 : jl 0x24b1c ; call r15
0x0000000000024bc1 : jl 0x24beb ; adc cl, ch ; retf -6
0x0000000000024fde : jl 0x2500c ; cmp byte ptr [rax - 0x75], cl ; and al, 0x20 ; call rax
0x00000000000251d8 : jl 0x25203 ; or byte ptr [rax + 0x29], cl ; retf -0x1f7d
0x00000000000025eb : jl 0x257e ; loop 0x25c9 ; ret 0x23cb
0x0000000000025c29 : jl 0x25c57 ; cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000026ead : jl 0x26ed7 ; call r15
0x0000000000027245 : jl 0x2726f ; call r14
0x0000000000027c8d : jl 0x27cb7 ; call r15
0x0000000000028015 : jl 0x2803f ; call r14
0x0000000000031b7c : jl 0x31baa ; or byte ptr [rax + 2], bh ; syscall
0x0000000000044814 : jl 0x4483f ; and byte ptr [rax + 1], cl ; ret
0x0000000000000452 : jl 0x468 ; sbb al, 0xc ; ret 0x4412
0x000000000004b34f : jl 0x4b319 ; clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000004f964 : jl 0x4f98f ; and byte ptr [rax + 1], cl ; ret
0x0000000000068c83 : jl 0x68cb1 ; or al, 0xb8 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000777a1 : jl 0x7776d ; or byte ptr [rax + 0x39], cl ; retf
0x0000000000078e54 : jl 0x78ddb ; ret
0x0000000000083ddf : jl 0x83e31 ; lea eax, dword ptr [rip + 0xc3029] ; ret
0x000000000008449f : jl 0x844f1 ; lea eax, dword ptr [rip + 0xc2949] ; ret
0x000000000008915f : jl 0x891b1 ; lea eax, dword ptr [rip + 0xbdca9] ; ret
0x000000000008f0ca : jl 0x8f135 ; add rax, rdi ; ret
0x000000000008f0da : jl 0x8f137 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000008f0fa : jl 0x8f137 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000008f11a : jl 0x8f137 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000009ffaa : jl 0x9ffd9 ; sbb byte ptr [rbp + rcx*4 + 0x43], cl ; dec byte ptr [rax - 0x77] ; retf -0x76bc
0x00000000000aeee8 : jl 0xaef13 ; adc byte ptr [rax + 1], cl ; ret
0x00000000000afcce : jl 0xafcf9 ; xor byte ptr [rax + 0x63], cl ; ret 0x894c
0x00000000000b486e : jl 0xb489c ; and byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x00000000000b91a1 : jl 0xb91a7 ; add byte ptr [rax], al ; syscall
0x00000000000c2b0e : jl 0xc2b48 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c2f38 : jl 0xc2f57 ; or byte ptr [rax - 0x7d], cl ; ret
0x00000000000c3150 : jl 0xc3143 ; ret
0x00000000000c79f7 : jl 0xc7a22 ; adc byte ptr [rax - 0x77], cl ; ret
0x00000000000c7e56 : jl 0xc7e81 ; or byte ptr [rax + 0x29], cl ; ret 0x6348
0x00000000000c99a9 : jl 0xc99d4 ; and byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000c9c5e : jl 0xc9c88 ; or al, ch ; retf -0x88
0x00000000000cd856 : jl 0xcd881 ; and byte ptr [rax - 0x77], cl ; ret 0x8944
0x00000000000dbd04 : jl 0xdbd30 ; clc ; add cl, byte ptr [rdi] ; ret 0xfc3
0x00000000000dc591 : jl 0xdc5bf ; sbb byte ptr [rax + 3], bh ; syscall
0x00000000000df5b6 : jl 0xdf5e1 ; sub al, ch ; retf
0x00000000000e59cb : jl 0xe59f9 ; adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x00000000000e6df5 : jl 0xe6e20 ; adc byte ptr [rax - 0x77], cl ; retf
0x00000000000e8d04 : jl 0xe8d1b ; je 0xe8d0d ; ret
0x00000000000ea0fa : jl 0xea127 ; or byte ptr [rax - 0x77], cl ; fsubp st(0) ; retf
0x00000000000f6528 : jl 0xf657a ; lea eax, dword ptr [rip + 0x508d0] ; ret
0x00000000000f65f8 : jl 0xf664a ; lea eax, dword ptr [rip + 0x50800] ; ret
0x00000000000f66c8 : jl 0xf671a ; lea eax, dword ptr [rip + 0x50710] ; ret
0x00000000001024cc : jle 0x1024d6 ; add esi, dword ptr [rsi - 0x7d] ; ret 0x8103
0x000000000010ce91 : jle 0x10ce9c ; add bl, ch ; retf 0x2e66
0x000000000010ce90 : jle 0x10ce9d ; add bl, ch ; retf 0x2e66
0x0000000000114d78 : jle 0x114d90 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000011864f : jle 0x118684 ; call 0x115114
0x0000000000125d03 : jle 0x125c21 ; movsxd rax, ecx ; ret
0x0000000000125f4a : jle 0x125e8b ; ret
0x0000000000158562 : jle 0x1584fb ; xlatb ; retf -0x5e15
0x000000000015a125 : jle 0x15a160 ; pop rsp ; sbb ebp, ebx ; retf
0x000000000015d055 : jle 0x15d04c ; jmp qword ptr [rax]
0x000000000015d069 : jle 0x15d064 ; inc eax ; jle 0x15d068 ; jmp rax
0x000000000015d06d : jle 0x15d064 ; jmp rax
0x000000000015d071 : jle 0x15d06c ; inc dword ptr [rax] ; jg 0x15d070 ; jmp qword ptr [rax]
0x000000000016ab15 : jle 0x16ab19 ; jmp qword ptr [rax + 0x20fffc7f]
0x000000000016ab55 : jle 0x16ab55 ; jmp qword ptr [rax]
0x000000000016b6a5 : jle 0x16b6ad ; add ah, dl ; jge 0x16b69d ; call rsp
0x000000000016de7d : jle 0x16de86 ; add byte ptr [rbp + rax - 9], al ; jmp rsp
0x00000000001783f1 : jle 0x1783e4 ; jmp qword ptr [rcx]
0x000000000017b569 : jle 0x17b55d ; jmp qword ptr [rcx]
0x000000000017c8f9 : jle 0x17c8ee ; call rsp
0x0000000000191978 : jle 0x191984 ; add byte ptr [rax], al ; retf
0x000000000019418c : jle 0x194198 ; add byte ptr [rax], al ; fadd dword ptr [rbx] ; add byte ptr [rax], al ; syscall
0x0000000000003190 : jle 0x318e ; add ebp, esi ; mov eax, 0xa1a3e95a ; ret 0xba88
0x0000000000003515 : jle 0x3549 ; retf -0x786e
0x00000000000806ce : jle 0x806d8 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x00000000000b9709 : jle 0xb970f ; add byte ptr [rax], al ; ret
0x00000000000da959 : jle 0xda973 ; mov eax, ecx ; mov edx, dword ptr [r14 + 0x1c] ; syscall
0x00000000000daab2 : jle 0xdaac3 ; mov eax, 3 ; syscall
0x00000000000e9181 : jle 0xe9187 ; add byte ptr [rax], al ; syscall
0x000000000003842e : jmp 0x11030777
0x0000000000038736 : jmp 0x11030a7f
0x000000000003ac7e : jmp 0x11032fc7
0x000000000003af16 : jmp 0x1103325f
0x00000000001103bf : jmp 0x110385
0x0000000000112c17 : jmp 0x112be5
0x0000000000113677 : jmp 0x113645
0x000000000011f8f2 : jmp 0x11f8c0
0x0000000000144428 : jmp 0x1443f6
0x00000000001444a6 : jmp 0x144474
0x0000000000144938 : jmp 0x144906
0x00000000001449b6 : jmp 0x144984
0x0000000000145a58 : jmp 0x145a26
0x0000000000145ad6 : jmp 0x145aa4
0x0000000000145f68 : jmp 0x145f36
0x0000000000145fe6 : jmp 0x145fb4
0x000000000015a129 : jmp 0x15a0f7
0x000000000015a676 : jmp 0x15a644
0x00000000000b36d8 : jmp 0x1f93a
0x000000000001fb0d : jmp 0x1fad3
0x0000000000002bfb : jmp 0x2bc9
0x00000000000038c3 : jmp 0x3889
0x00000000000038c7 : jmp 0x3895
0x0000000000042ed1 : jmp 0x42e9f
0x0000000000043401 : jmp 0x433cf
0x000000000004d89b : jmp 0x4d861
0x0000000000059960 : jmp 0x55c46
0x000000000005a0f3 : jmp 0x56b38
0x000000000005adbe : jmp 0x57031
0x000000000005ae08 : jmp 0x57891
0x000000000005c77d : jmp 0x59235
0x000000000006095e : jmp 0x5d372
0x0000000000062a27 : jmp 0x5f571
0x0000000000063145 : jmp 0x5fb7b
0x0000000000062ae0 : jmp 0x62aae
0x000000000006f704 : jmp 0x6f6d2
0x0000000000071342 : jmp 0x71310
0x0000000000079c9e : jmp 0x766c2
0x000000000007ea84 : jmp 0x7ea4a
0x0000000000125f62 : jmp 0x829e2
0x000000000008a7ac : jmp 0x8a772
0x0000000000098ace : jmp 0x98a94
0x0000000000098b9f : jmp 0x98b65
0x0000000000098c0e : jmp 0x98bd4
0x00000000000a9173 : jmp 0xa9141
0x00000000000aeac8 : jmp 0xaea96
0x00000000000b3991 : jmp 0xb395f
0x00000000000c3d72 : jmp 0xc3d38
0x00000000000c9dfa : jmp 0xc9dc0
0x00000000000e4df2 : jmp 0xe4db8
0x0000000000111e6b : jmp 0xffffffff895ee0fb
0x000000000009a093 : jmp 0xffffffffc309a09c
0x00000000000f6623 : jmp 0xffffffffc30f6955
0x0000000000042891 : jmp 0xffffffffc313b1e6
0x0000000000056794 : jmp 0xffffffffc33ea89e
0x0000000000062331 : jmp 0xffffffffcb8a2339
0x00000000000a7c07 : jmp 0xffffffffcb93c411
0x0000000000040626 : jmp qword ptr [r8]
0x000000000016afd3 : jmp qword ptr [rax + 0x10fffcaf]
0x000000000016adcf : jmp qword ptr [rax + 0x10fffcb0]
0x000000000016ab23 : jmp qword ptr [rax + 0x20fffc6c]
0x000000000016aae7 : jmp qword ptr [rax + 0x20fffc6d]
0x000000000016ab2b : jmp qword ptr [rax + 0x20fffc6f]
0x000000000016aaef : jmp qword ptr [rax + 0x20fffc70]
0x000000000016ab33 : jmp qword ptr [rax + 0x20fffc72]
0x000000000016aaf7 : jmp qword ptr [rax + 0x20fffc73]
0x000000000016ab3b : jmp qword ptr [rax + 0x20fffc75]
0x000000000016aaff : jmp qword ptr [rax + 0x20fffc76]
0x000000000016ab43 : jmp qword ptr [rax + 0x20fffc78]
0x000000000016ab07 : jmp qword ptr [rax + 0x20fffc79]
0x000000000016ab4b : jmp qword ptr [rax + 0x20fffc7b]
0x000000000016ab0f : jmp qword ptr [rax + 0x20fffc7c]
0x000000000016ab53 : jmp qword ptr [rax + 0x20fffc7e]
0x000000000016ab17 : jmp qword ptr [rax + 0x20fffc7f]
0x000000000016aa8b : jmp qword ptr [rax + 0x20fffc8a]
0x000000000016aa83 : jmp qword ptr [rax + 0x20fffc8b]
0x000000000016aa7b : jmp qword ptr [rax + 0x20fffc8c]
0x000000000016aa73 : jmp qword ptr [rax + 0x20fffc8d]
0x000000000016aa6b : jmp qword ptr [rax + 0x20fffc8e]
0x000000000016aaa3 : jmp qword ptr [rax + 0x20fffc8f]
0x000000000016adc7 : jmp qword ptr [rax + 0x20fffcb1]
0x000000000016adbf : jmp qword ptr [rax + 0x20fffcb2]
0x000000000016adb7 : jmp qword ptr [rax + 0x20fffcb3]
0x000000000016adaf : jmp qword ptr [rax + 0x20fffcb4]
0x000000000015ff97 : jmp qword ptr [rax - 0x2f00053e]
0x000000000015d09f : jmp qword ptr [rax - 0x2f000c80]
0x0000000000040627 : jmp qword ptr [rax]
0x000000000017087b : jmp qword ptr [rbx + rbx - 0x3cebffff]
0x000000000015deff : jmp qword ptr [rbx - 0x2b000ade]
0x000000000000256b : jmp qword ptr [rbx]
0x000000000000df00 : jmp qword ptr [rcx]
0x0000000000118554 : jmp qword ptr [rdi]
0x000000000016a72b : jmp qword ptr [rdx]
0x000000000016a69f : jmp qword ptr [rsi + 0x16fffc92]
0x000000000015cccf : jmp qword ptr [rsi]
0x0000000000001b62 : jmp r10
0x000000000008ed07 : jmp r9
0x0000000000020571 : jmp rax
0x000000000015712f : jmp rbx
0x0000000000041caa : jmp rcx
0x00000000000cf627 : jmp rdi
0x0000000000001b63 : jmp rdx
0x000000000002a58d : jmp rsi
0x0000000000002a79 : jmp rsp
0x0000000000100239 : jne 0x100230 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000103e77 : jne 0x103e5c ; ret
0x0000000000104374 : jne 0x1043c3 ; mov eax, r8d ; ret
0x000000000010606d : jne 0x10604f ; ret
0x0000000000107abc : jne 0x107ac2 ; ret
0x0000000000107afc : jne 0x107af0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000108925 : jne 0x108916 ; add rsp, 0x18 ; ret
0x000000000010c1cd : jne 0x10c218 ; mov dword ptr [rsi], 0 ; ret
0x000000000010c9c5 : jne 0x10c9d8 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000010cacd : jne 0x10ca67 ; xor eax, eax ; pop rbx ; ret
0x000000000010d782 : jne 0x10d765 ; xor eax, eax ; pop rbx ; ret
0x000000000010d7e2 : jne 0x10d7c8 ; mov eax, 1 ; pop rbx ; ret
0x000000000010e704 : jne 0x10e6f3 ; ret
0x0000000000111188 : jne 0x111192 ; ret
0x0000000000115c17 : jne 0x115c03 ; pop rbx ; ret
0x0000000000115ea8 : jne 0x115eb2 ; ret
0x0000000000117313 : jne 0x117307 ; mov rax, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x00000000001184d2 : jne 0x1184e7 ; mov eax, 1 ; ret
0x0000000000118512 : jne 0x118527 ; mov eax, 1 ; ret
0x000000000011cc5c : jne 0x11cc6d ; xor eax, eax ; pop rbx ; ret
0x000000000011f3b9 : jne 0x11f3c6 ; add rsp, 0x38 ; ret
0x00000000001200a8 : jne 0x1200b4 ; xor eax, eax ; ret
0x00000000001200d8 : jne 0x1200e4 ; xor eax, eax ; ret
0x0000000000120108 : jne 0x120114 ; xor eax, eax ; ret
0x0000000000120138 : jne 0x120144 ; xor eax, eax ; ret
0x0000000000120168 : jne 0x120174 ; xor eax, eax ; ret
0x0000000000120198 : jne 0x1201a4 ; xor eax, eax ; ret
0x00000000001201cf : jne 0x1201ee ; mov eax, 0x27 ; syscall
0x0000000000129524 : jne 0x12950c ; vzeroupper ; ret
0x000000000013e3c1 : jne 0x13e976 ; ret
0x000000000014555d : jne 0x145587 ; xor eax, eax ; ret
0x0000000000144b51 : jne 0x14558b ; xor eax, eax ; ret
0x0000000000144b79 : jne 0x145597 ; xor eax, eax ; ret
0x000000000014639d : jne 0x1463c7 ; xor eax, eax ; ret
0x0000000000146181 : jne 0x1463cb ; xor eax, eax ; ret
0x00000000001463d1 : jne 0x1463da ; xor eax, eax ; ret
0x00000000001461a7 : jne 0x1463de ; xor eax, eax ; ret
0x00000000001474e7 : jne 0x1474c7 ; vzeroupper ; ret
0x0000000000147655 : jne 0x1475e6 ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000147627 : jne 0x1475e6 ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000147626 : jne 0x1475e7 ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000148db4 : jne 0x148fc8 ; xor eax, eax ; ret
0x0000000000148fb9 : jne 0x148fd9 ; xor eax, eax ; ret
0x0000000000148e61 : jne 0x148fdd ; xor eax, eax ; ret
0x0000000000148fd1 : jne 0x148fde ; cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x00000000001495e6 : jne 0x1495f4 ; xor eax, eax ; ret
0x00000000001494bd : jne 0x1495f6 ; ret
0x0000000000149743 : jne 0x149730 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000149b5d : jne 0x149b4e ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000149bb0 : jne 0x149b90 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000149cdc : jne 0x149cd3 ; ret
0x0000000000149cfe : jne 0x149cf6 ; pop rbx ; ret
0x0000000000149da5 : jne 0x149d8b ; pop rbx ; ret
0x0000000000149f18 : jne 0x149f23 ; ret
0x0000000000149ff9 : jne 0x149fec ; pop rbx ; ret
0x000000000014a581 : jne 0x14a58b ; pop rbx ; ret
0x00000000001585d7 : jne 0x1585a1 ; mov ecx, 0x5b92ac50 ; retf
0x000000000015a56b : jne 0x15a592 ; retf 0x32dd
0x000000000016aafd : jne 0x16ab01 ; jmp qword ptr [rax + 0x20fffc76]
0x000000000016ab3d : jne 0x16ab3d ; jmp qword ptr [rax]
0x0000000000171ac9 : jne 0x171ab8 ; call qword ptr [rdx]
0x000000000017b459 : jne 0x17b44d ; jmp qword ptr [rdx]
0x0000000000187fc5 : jne 0x187fce ; add byte ptr [rax], cl ; sal dh, 1 ; jmp qword ptr [rsi]
0x0000000000187fdd : jne 0x187fe6 ; add byte ptr [rax], ah ; sal dh, 1 ; jmp qword ptr [rsi]
0x0000000000187ff5 : jne 0x187ffe ; add byte ptr [rax], bh ; sal dh, 1 ; jmp qword ptr [rsi]
0x0000000000191395 : jne 0x19139e ; retf
0x0000000000191618 : jne 0x191621 ; retf
0x000000000003175c : jne 0x3173a ; ret
0x0000000000032648 : jne 0x32656 ; addsd xmm0, xmm0 ; ret
0x0000000000032964 : jne 0x32976 ; addss xmm0, xmm0 ; ret
0x0000000000032c92 : jne 0x32ca8 ; fadd st(0) ; add rsp, 8 ; ret
0x0000000000032e58 : jne 0x32e63 ; ret
0x0000000000033bad : jne 0x33ba7 ; mov eax, 1 ; ret
0x0000000000033c04 : jne 0x33bf4 ; xor eax, eax ; ret
0x0000000000033c54 : jne 0x33c44 ; xor eax, eax ; ret
0x0000000000003513 : jne 0x357c ; jle 0x354b ; retf -0x786e
0x0000000000035ecc : jne 0x35e98 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000035f6b : jne 0x35f73 ; pop rbx ; ret
0x00000000000376dd : jne 0x37703 ; ret
0x00000000000037a6 : jne 0x3784 ; ret 0x975
0x0000000000039eed : jne 0x39f13 ; ret
0x000000000003c69d : jne 0x3c6c3 ; ret
0x000000000003fa7e : jne 0x3fa5e ; ret
0x00000000000410c8 : jne 0x410c4 ; pop rbx ; ret
0x0000000000041f5f : jne 0x41f54 ; xor eax, eax ; ret
0x0000000000041f85 : jne 0x41f6f ; mov eax, 1 ; ret
0x000000000004203f : jne 0x42034 ; xor eax, eax ; ret
0x0000000000042065 : jne 0x4204f ; mov eax, 1 ; ret
0x0000000000042313 : jne 0x42305 ; mov rax, rdx ; ret
0x000000000004297f : jne 0x42975 ; mov rax, rdx ; ret
0x0000000000044121 : jne 0x4410d ; mov rax, rsi ; ret
0x00000000000441a5 : jne 0x44185 ; mov rax, rsi ; ret
0x00000000000646b1 : jne 0x646c6 ; mov rax, rbx ; pop rbx ; ret
0x000000000006b591 : jne 0x6b583 ; ret
0x000000000006dbec : jne 0x6dbf3 ; pop rbx ; ret
0x000000000007165e : jne 0x71679 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000738c3 : jne 0x738d4 ; xor eax, eax ; ret
0x0000000000074421 : jne 0x74413 ; ret
0x00000000000751a9 : jne 0x751b3 ; pop rbx ; ret
0x00000000000752d1 : jne 0x75297 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007531c : jne 0x75315 ; lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000075be6 : jne 0x75bdb ; ret
0x0000000000076d6f : jne 0x76d44 ; mov rdi, rbp ; neg rdi ; call qword ptr [r14]
0x0000000000076d87 : jne 0x76db7 ; xor edi, edi ; call qword ptr [r14]
0x000000000007ac7c : jne 0x7ac43 ; ret
0x000000000007bd77 : jne 0x7bd66 ; sub rax, 0x10 ; ret
0x000000000007e511 : jne 0x7e503 ; ret
0x000000000007e5bb : jne 0x7e5b3 ; ret
0x000000000007ec2b : jne 0x7ec3d ; lea rax, qword ptr [rip + 0xc] ; ret
0x00000000000807f3 : jne 0x807fe ; xor rax, rax ; ret
0x0000000000080a87 : jne 0x80a99 ; lea rax, qword ptr [rip + 0x10] ; ret
0x0000000000082761 : jne 0x82776 ; add rsp, 8 ; ret
0x00000000000838a9 : jne 0x83905 ; xor rax, rax ; ret
0x0000000000083869 : jne 0x83929 ; xor rax, rax ; ret
0x0000000000083951 : jne 0x83964 ; lea rax, qword ptr [rip + 0x26] ; ret
0x0000000000083e53 : jne 0x83e65 ; lea rax, qword ptr [rip + 0xaaae4] ; ret
0x0000000000083dde : jne 0x83e65 ; lea rax, qword ptr [rip + 0xc3029] ; ret
0x00000000000842ca : jne 0x842dc ; lea rax, qword ptr [rip + 0xc30bd] ; ret
0x00000000000843fd : jne 0x843e6 ; ret
0x0000000000084513 : jne 0x84525 ; lea rax, qword ptr [rip + 0xa7a34] ; ret
0x000000000008449e : jne 0x84525 ; lea rax, qword ptr [rip + 0xc2949] ; ret
0x00000000000846f7 : jne 0x84709 ; lea rax, qword ptr [rip + 0x80] ; ret
0x000000000008475a : jne 0x8476c ; lea rax, qword ptr [rip + 0xd] ; ret
0x00000000000869e7 : jne 0x869f9 ; lea rax, qword ptr [rip + 0x80] ; ret
0x0000000000086a4a : jne 0x86a5c ; lea rax, qword ptr [rip + 0xd] ; ret
0x00000000000891d3 : jne 0x891e5 ; lea rax, qword ptr [rip + 0xa2d94] ; ret
0x000000000008915e : jne 0x891e5 ; lea rax, qword ptr [rip + 0xbdca9] ; ret
0x0000000000089e0b : jne 0x89e03 ; ret
0x000000000008a9ef : jne 0x8a9e1 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008b28d : jne 0x8b287 ; xor edi, edi ; mov rax, rdi ; ret
0x000000000008b25b : jne 0x8b2c5 ; mov rax, rdi ; ret
0x000000000008c6a4 : jne 0x8c695 ; or byte ptr [rdi], sil ; ret
0x000000000008e8bf : jne 0x8e8b5 ; mov qword ptr [rdx], rcx ; ret
0x000000000008e96b : jne 0x8e960 ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x000000000008e9e9 : jne 0x8e9d1 ; pop rbx ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x000000000008ea36 : jne 0x8ea2b ; ret
0x000000000008ea7a : jne 0x8ea6b ; ret
0x000000000008ead4 : jne 0x8eab3 ; ret
0x000000000008eb7a : jne 0x8eb68 ; cmp r8d, ecx ; je 0x8eb68 ; ret
0x000000000008ebb9 : jne 0x8ebac ; xor eax, eax ; ret
0x000000000008ec12 : jne 0x8ebf4 ; xor eax, eax ; ret
0x000000000008f03d : jne 0x8f0c8 ; xor eax, eax ; ret
0x000000000008f07a : jne 0x8f0f4 ; xor eax, eax ; ret
0x000000000008f7bc : jne 0x8f7a6 ; xor eax, eax ; sub eax, ecx ; ret
0x0000000000094d1a : jne 0x955d6 ; ret
0x00000000000963bd : jne 0x96de6 ; ret
0x0000000000098901 : jne 0x988f2 ; ret
0x00000000000989b1 : jne 0x989a2 ; ret
0x0000000000098b21 : jne 0x98b16 ; lea rax, qword ptr [rcx - 1] ; ret
0x0000000000098c71 : jne 0x98c66 ; sub rax, 1 ; ret
0x000000000009932f : jne 0x99323 ; ret
0x000000000009a106 : jne 0x9a182 ; ret
0x000000000009a02f : jne 0x9a186 ; ret
0x000000000009a00e : jne 0x9a188 ; xor eax, eax ; ret
0x000000000009a1b1 : jne 0x9a1c4 ; lea rax, qword ptr [rip + 0xd836] ; ret
0x000000000009a573 : jne 0x9a53b ; ret
0x000000000009a5b6 : jne 0x9a5a9 ; mov dword ptr [rsi + 4], 0 ; ret
0x000000000009a687 : jne 0x9a674 ; xor eax, eax ; ret
0x000000000009a682 : jne 0x9a699 ; cmp rax, rdx ; jne 0x9a679 ; xor eax, eax ; ret
0x000000000009a73e : jne 0x9a733 ; ret
0x000000000009a768 : jne 0x9a753 ; ret
0x000000000009aa4b : jne 0x9aaa6 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x000000000009ab23 : jne 0x9aaf3 ; ret
0x000000000009ab0d : jne 0x9ab03 ; ret
0x000000000009abdc : jne 0x9abd4 ; xor eax, eax ; ret
0x000000000009ac34 : jne 0x9ac16 ; mov rax, rdi ; ret
0x000000000009ad61 : jne 0x9ad74 ; lea rax, qword ptr [rip + 0xcbd6] ; ret
0x000000000009ae03 : jne 0x9ae0e ; mov dword ptr [rcx + 8], esi ; ret
0x000000000009ae33 : jne 0x9ae2b ; ret
0x000000000009aecf : jne 0x9aec6 ; sub rax, 4 ; ret
0x000000000009aeee : jne 0x9af00 ; ret
0x000000000009bf5b : jne 0x9bf16 ; mov rax, rdx ; ret
0x000000000009bf9c : jne 0x9bf93 ; ret
0x000000000009cc0d : jne 0x9cc33 ; ret
0x000000000009f29d : jne 0x9f2c3 ; ret
0x00000000000a182d : jne 0xa1853 ; ret
0x00000000000a79e4 : jne 0xa79c0 ; ret
0x00000000000a7a14 : jne 0xa7a0b ; ret
0x00000000000a965e : jne 0xa966a ; ret
0x00000000000a96b2 : jne 0xa9700 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000abc79 : jne 0xabc91 ; mov rax, rdx ; add rsp, 8 ; ret
0x00000000000b32c9 : jne 0xb32b6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b4bf8 : jne 0xb4c2f ; mov eax, 0x74 ; syscall
0x00000000000b8207 : jne 0xb8220 ; mov eax, 0x22 ; syscall
0x00000000000b8267 : jne 0xb8280 ; mov eax, 0x23 ; syscall
0x00000000000b8fa8 : jne 0xb8fe1 ; mov edi, edi ; mov eax, 0x69 ; syscall
0x00000000000b9018 : jne 0xb9051 ; mov edi, edi ; mov eax, 0x6a ; syscall
0x00000000000b9271 : jne 0xb9277 ; add byte ptr [rax], al ; syscall
0x00000000000b9691 : jne 0xb965e ; ret
0x00000000000b96d7 : jne 0xb9662 ; mov eax, 0x7d00 ; ret
0x00000000000b9799 : jne 0xb97c2 ; ret
0x00000000000b9803 : jne 0xb97c6 ; mov eax, 0x40 ; ret
0x00000000000b98a0 : jne 0xb987f ; xor eax, eax ; ret
0x00000000000b989c : jne 0xb9918 ; add byte ptr [rax], al ; jne 0xb9883 ; xor eax, eax ; ret
0x00000000000ba650 : jne 0xba62b ; xor eax, eax ; ret
0x00000000000bd04e : jne 0xbd033 ; mov eax, 1 ; ret
0x00000000000bd1be : jne 0xbd1b0 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c1293 : jne 0xc128e ; or byte ptr [rsi + 0x32], 8 ; xor eax, eax ; ret
0x00000000000c14fa : jne 0xc1503 ; ret
0x00000000000c1793 : jne 0xc1789 ; mov rsi, rbx ; mov rdi, rbp ; call r12
0x00000000000c182a : jne 0xc1816 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c2993 : jne 0xc2963 ; mov dword ptr [rdi + 0x2c], eax ; mov dword ptr [rdi + 0x30], eax ; ret
0x00000000000c2c8a : jne 0xc2c93 ; pop rbx ; ret
0x00000000000c5d4d : jne 0xc5ca0 ; ret
0x00000000000c5d4c : jne 0xc5ca1 ; ret
0x00000000000c5d02 : jne 0xc5d01 ; xor eax, eax ; cmp cl, byte ptr [rsi] ; je 0xc5ca2 ; ret
0x00000000000d2f2f : jne 0xd2f25 ; mov eax, dword ptr [rdx + 8] ; ret
0x00000000000d540b : jne 0xd53f9 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000dac23 : jne 0xdac2c ; add byte ptr [rax], al ; mov rdi, rdx ; syscall
0x00000000000db6e7 : jne 0xdb700 ; mov eax, 2 ; syscall
0x00000000000db907 : jne 0xdb920 ; mov eax, 0 ; syscall
0x00000000000db967 : jne 0xdb980 ; mov eax, 1 ; syscall
0x00000000000dbe81 : jne 0xdbf09 ; add rsp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x00000000000dbf27 : jne 0xdbf40 ; mov eax, 3 ; syscall
0x00000000000dc077 : jne 0xdc090 ; mov eax, 0x55 ; syscall
0x000000000000def8 : jne 0xdf02 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp qword ptr [rcx]
0x00000000000df897 : jne 0xdf8b0 ; mov eax, 7 ; syscall
0x00000000000e1047 : jne 0xe1060 ; mov eax, 0x13 ; syscall
0x00000000000e10a7 : jne 0xe10c0 ; mov eax, 0x14 ; syscall
0x00000000000e12bd : jne 0xe12c6 ; add byte ptr [rax], al ; mov rdi, rdx ; syscall
0x00000000000e1797 : jne 0xe17b0 ; mov eax, 0x4a ; syscall
0x00000000000e1827 : jne 0xe1840 ; mov eax, 0x4b ; syscall
0x00000000000e1fe6 : jne 0xe1ff7 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000e20f6 : jne 0xe20d8 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000e2157 : jne 0xe2138 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000e4747 : jne 0xe4760 ; mov eax, 0x1a ; syscall
0x00000000000e5b28 : jne 0xe5b10 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000e6b95 : jne 0xe6bcf ; mov eax, 0x88 ; syscall
0x00000000000e6e4a : jne 0xe6e48 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000e76d7 : jne 0xe76ce ; mov rax, qword ptr [rax + 8] ; ret
0x00000000000e9877 : jne 0xe9890 ; mov eax, 0x130 ; syscall
0x00000000000e9987 : jne 0xe99a0 ; mov eax, 0x2b ; syscall
0x00000000000e9a17 : jne 0xe9a30 ; mov eax, 0x2a ; syscall
0x00000000000f0594 : jne 0xf0583 ; ret
0x00000000000f37be : jne 0xf37f7 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f39e0 : jne 0xf39d0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f4e77 : jne 0xf4e88 ; cmp qword ptr [rdi], 0 ; je 0xf4e91 ; ret
0x00000000000f4ee8 : jne 0xf4ef7 ; mov eax, 1 ; ret
0x00000000000f4f18 : jne 0xf4f24 ; xor eax, eax ; ret
0x00000000000f4f48 : jne 0xf4f54 ; xor eax, eax ; ret
0x00000000000f4f78 : jne 0xf4f84 ; xor eax, eax ; ret
0x00000000000f4fa8 : jne 0xf4fb4 ; xor eax, eax ; ret
0x00000000000f4fd8 : jne 0xf4fe4 ; xor eax, eax ; ret
0x00000000000f5008 : jne 0xf5014 ; xor eax, eax ; ret
0x00000000000f5038 : jne 0xf5044 ; xor eax, eax ; ret
0x00000000000f5068 : jne 0xf5074 ; xor eax, eax ; ret
0x00000000000f5098 : jne 0xf50a4 ; xor eax, eax ; ret
0x00000000000f50c8 : jne 0xf50d4 ; xor eax, eax ; ret
0x00000000000f50f8 : jne 0xf5104 ; xor eax, eax ; ret
0x00000000000f5128 : jne 0xf5134 ; xor eax, eax ; ret
0x00000000000f5158 : jne 0xf5164 ; xor eax, eax ; ret
0x00000000000f5188 : jne 0xf5194 ; xor eax, eax ; ret
0x00000000000f51b8 : jne 0xf51c4 ; xor eax, eax ; ret
0x00000000000f51e8 : jne 0xf51f4 ; xor eax, eax ; ret
0x00000000000f5218 : jne 0xf5224 ; xor eax, eax ; ret
0x00000000000f5248 : jne 0xf5254 ; xor eax, eax ; ret
0x00000000000f5278 : jne 0xf5284 ; xor eax, eax ; ret
0x00000000000f52a8 : jne 0xf52b4 ; xor eax, eax ; ret
0x00000000000f5308 : jne 0xf5314 ; xor eax, eax ; ret
0x00000000000f5338 : jne 0xf5344 ; xor eax, eax ; ret
0x00000000000f5368 : jne 0xf5374 ; xor eax, eax ; ret
0x00000000000f5398 : jne 0xf53a4 ; xor eax, eax ; ret
0x00000000000f53c8 : jne 0xf53d4 ; xor eax, eax ; ret
0x00000000000f53f8 : jne 0xf5404 ; xor eax, eax ; ret
0x00000000000f5428 : jne 0xf5434 ; xor eax, eax ; ret
0x00000000000f5458 : jne 0xf5464 ; xor eax, eax ; ret
0x00000000000f5488 : jne 0xf5494 ; xor eax, eax ; ret
0x00000000000f54d1 : jne 0xf54c9 ; pop rdx ; pop r10 ; ret
0x00000000000f54c2 : jne 0xf54d2 ; mov eax, 0xca ; syscall
0x00000000000f55c5 : jne 0xf55d3 ; ret
0x00000000000f57e4 : jne 0xf57c3 ; ret
0x00000000000f581f : jne 0xf5813 ; ret
0x00000000000f596f : jne 0xf5910 ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00000000000f5bfc : jne 0xf5c21 ; xor edi, edi ; mov eax, 0xe3 ; syscall
0x00000000000f5e74 : jne 0xf5e5f ; lea rdi, qword ptr [rip - 0x16d] ; call rax
0x00000000000f5ea3 : jne 0xf5e9c ; xor eax, eax ; leave ; ret
0x00000000000f659c : jne 0xf65ae ; lea rax, qword ptr [rip + 0x359bb] ; ret
0x00000000000f6527 : jne 0xf65ae ; lea rax, qword ptr [rip + 0x508d0] ; ret
0x00000000000f666c : jne 0xf667e ; lea rax, qword ptr [rip + 0x382bb] ; ret
0x00000000000f65f7 : jne 0xf667e ; lea rax, qword ptr [rip + 0x50800] ; ret
0x00000000000f673c : jne 0xf674e ; lea rax, qword ptr [rip + 0x357fb] ; ret
0x00000000000f66c7 : jne 0xf674e ; lea rax, qword ptr [rip + 0x50710] ; ret
0x00000000000f67d3 : jne 0xf67e5 ; lea rax, qword ptr [rip + 0x50ba4] ; ret
0x00000000000f69d3 : jne 0xf696d ; mov rax, rdi ; ret
0x00000000000f8029 : jne 0xf7fc9 ; mov rax, rdi ; ret
0x00000000000fda2e : jne 0xfd9a4 ; pop rbx ; ret
0x0000000000144e0e : jno 0x144e1d ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001464b0 : jno 0x1464b9 ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x00000000001466ea : jno 0x1466f3 ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x0000000000146851 : jno 0x146862 ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x00000000001469b6 : jno 0x146a3a ; adc qword ptr [rdi - 8], rdi ; ret
0x000000000015df94 : jno 0x15dfaa ; cmc ; call rsp
0x000000000016ab31 : jno 0x16ab35 ; jmp qword ptr [rax + 0x20fffc72]
0x000000000018f109 : jno 0x18f105 ; call qword ptr [rdx]
0x0000000000001ea6 : jno 0x1e80 ; adc eax, 0x42585c0c ; xchg eax, edi ; retf 0x20f4
0x00000000000021db : jno 0x2228 ; ret 0x1dd4
0x00000000000360ab : jno 0x360b9 ; add byte ptr ss:[rax + 0x39], cl ; ret
0x0000000000003967 : jno 0x39b1 ; xchg eax, ebx ; and cl, ah ; ret
0x0000000000042784 : jno 0x427d6 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000006abf1 : jno 0x6abff ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x000000000009ae01 : jno 0x9ae0f ; jne 0x9ae10 ; mov dword ptr [rcx + 8], esi ; ret
0x000000000009ae06 : jno 0x9ae13 ; ret
0x00000000000c8801 : jno 0xc87fd ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000000e11cf : jno 0xe11d5 ; add byte ptr [rax], al ; syscall
0x00000000000eb371 : jno 0xeb388 ; cmovb eax, edx ; ret
0x00000000000f0506 : jno 0xf050f ; cmovne eax, edx ; ret
0x00000000000f0505 : jno 0xf0510 ; cmovne eax, edx ; ret
0x0000000000112bf3 : jnp 0x112c5f ; call rax
0x0000000000113653 : jnp 0x1136af ; call rax
0x0000000000149da1 : jnp 0x149dc3 ; and eax, 0x5be17500 ; ret
0x0000000000158802 : jnp 0x158850 ; mov gs, ebp ; lodsb al, byte ptr [rsi] ; xchg eax, edi ; jo 0x158879 ; salc ; retf
0x0000000000158f85 : jnp 0x158f42 ; ret
0x0000000000159f82 : jnp 0x159fe0 ; retf
0x000000000015a389 : jnp 0x15a3d6 ; retf -0x6620
0x000000000015afe9 : jnp 0x15b02a ; retf
0x000000000015dfa4 : jnp 0x15dfbe ; cmc ; call qword ptr [rcx]
0x0000000000169f45 : jnp 0x169f48 ; push qword ptr [rax] ; jl 0x169f4c ; jmp qword ptr [rax]
0x0000000000169f44 : jnp 0x169f49 ; push qword ptr [rax] ; jl 0x169f4d ; jmp qword ptr [rax]
0x000000000016ab0d : jnp 0x16ab11 ; jmp qword ptr [rax + 0x20fffc7c]
0x000000000016ab4d : jnp 0x16ab4d ; jmp qword ptr [rax]
0x000000000016b5bd : jnp 0x16b5c5 ; add ah, al ; jae 0x16b5b5 ; call rsp
0x0000000000171e51 : jnp 0x171e52 ; call qword ptr [rcx]
0x0000000000171e50 : jnp 0x171e53 ; call qword ptr [rcx]
0x000000000017859d : jnp 0x1785a5 ; add byte ptr [rax - 0x7d], dh ; out dx, eax ; jmp qword ptr [rbx]
0x00000000001785f5 : jnp 0x1785fd ; add byte ptr [rax - 0x7d], cl ; out dx, eax ; call rcx
0x00000000000e08b8 : jnp 0x481a2d0b ; add esp, 0x18 ; ret
0x0000000000068a59 : jnp 0x68ad2 ; mov eax, 3 ; syscall
0x000000000007229b : jnp 0x7230f ; syscall
0x0000000000078002 : jnp 0x78018 ; call 0x84304
0x00000000000a7df2 : jnp 0xa7e07 ; pop rbp ; pop r12 ; pop r14 ; ret
0x00000000000b36c4 : jnp 0xb36e2 ; call 0x1f93c
0x00000000000b36cd : jnp 0xb36f3 ; call 0x1f93c
0x00000000000b3be6 : jnp 0xb3bff ; call 0x80654
0x00000000000ba641 : jnp 0xba655 ; xchg eax, esp ; ret 0xb60f
0x00000000000bba17 : jnp 0xbba1a ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c2c87 : jnp 0xc2cf2 ; add byte ptr [rbp + 4], dh ; pop rbx ; ret
0x00000000000c6458 : jnp 0xc64c4 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd201
0x00000000000e8e01 : jnp 0xe8e07 ; add byte ptr [rax], al ; syscall
0x0000000000010fd0 : jns 0x10fda ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x51
0x00000000001261b7 : jns 0x126192 ; retf -0x152d
0x0000000000126307 : jns 0x1262e2 ; retf -0x152d
0x0000000000126457 : jns 0x126432 ; retf -0x152d
0x00000000001265a7 : jns 0x126582 ; retf -0x152d
0x00000000001266f7 : jns 0x1266d2 ; retf -0x152d
0x0000000000126847 : jns 0x126822 ; retf -0x152d
0x0000000000126997 : jns 0x126972 ; retf -0x152d
0x0000000000126ae7 : jns 0x126ac2 ; retf -0x152d
0x0000000000126c37 : jns 0x126c12 ; retf -0x152d
0x0000000000126d87 : jns 0x126d62 ; retf -0x152d
0x0000000000126ed7 : jns 0x126eb2 ; retf -0x152d
0x0000000000127027 : jns 0x127002 ; retf -0x152d
0x0000000000127177 : jns 0x127152 ; retf -0x152d
0x00000000001272c7 : jns 0x1272a2 ; retf -0x152d
0x0000000000127417 : jns 0x1273f2 ; retf -0x152d
0x0000000000127887 : jns 0x127862 ; retf -0x152d
0x0000000000127a07 : jns 0x1279e2 ; retf -0x152d
0x0000000000127b87 : jns 0x127b62 ; retf -0x152d
0x0000000000127d07 : jns 0x127ce2 ; retf -0x152d
0x0000000000127e87 : jns 0x127e62 ; retf -0x152d
0x0000000000128007 : jns 0x127fe2 ; retf -0x152d
0x0000000000128187 : jns 0x128162 ; retf -0x152d
0x0000000000128307 : jns 0x1282e2 ; retf -0x152d
0x0000000000128487 : jns 0x128462 ; retf -0x152d
0x0000000000128607 : jns 0x1285e2 ; retf -0x152d
0x0000000000128787 : jns 0x128762 ; retf -0x152d
0x0000000000128907 : jns 0x1288e2 ; retf -0x152d
0x0000000000128a87 : jns 0x128a62 ; retf -0x152d
0x0000000000128c07 : jns 0x128be2 ; retf -0x152d
0x0000000000128d87 : jns 0x128d62 ; retf -0x152d
0x00000000001464b7 : jns 0x1464ba ; ret
0x00000000001466f1 : jns 0x1466f4 ; ret
0x0000000000146858 : jns 0x146863 ; ret
0x000000000015808e : jns 0x158024 ; ret 0xf869
0x000000000015808d : jns 0x158025 ; ret 0xf869
0x000000000016ab09 : jns 0x16ab09 ; jmp qword ptr [rax]
0x000000000016cc09 : jns 0x16cbfe ; call rsp
0x0000000000001b2d : jns 0x1b38 ; ret
0x0000000000002beb : jns 0x2bb9 ; clc ; ret
0x0000000000003277 : jns 0x3252 ; ret 0x5a51
0x00000000000038ff : jns 0x3952 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x00000000000ad50b : jns 0xad498 ; ret 0xe283
0x00000000000ad52d : jns 0xad51f ; or dword ptr [rax - 0x7d], ecx ; ret
0x00000000000ad75b : jns 0xad6e8 ; ret 0xe283
0x00000000000ad7db : jns 0xad768 ; ret 0xe283
0x00000000000ad77d : jns 0xad76f ; or dword ptr [rax - 0x7d], ecx ; ret
0x00000000000ad7fd : jns 0xad7ef ; or dword ptr [rax - 0x7d], ecx ; ret
0x00000000000ad8e3 : jns 0xad870 ; ret 0xe283
0x00000000000adbdc : jns 0xadb69 ; ret 0xe283
0x00000000000adc63 : jns 0xadbf0 ; ret 0xe283
0x00000000000adcf3 : jns 0xadc80 ; ret 0xe283
0x00000000000add7b : jns 0xadd08 ; ret 0xe283
0x00000000000ae3b5 : jns 0xae3af ; ret
0x00000000000ae415 : jns 0xae40f ; ret
0x00000000000ae6b1 : jns 0xae6ab ; ret
0x00000000000ae759 : jns 0xae6e6 ; ret 0xe283
0x00000000000ae7db : jns 0xae768 ; ret 0xe283
0x00000000000ae829 : jns 0xae7b6 ; ret 0xe283
0x00000000000b9111 : jns 0xb9117 ; add byte ptr [rax], al ; syscall
0x00000000000c2fab : jns 0xc2f97 ; mov eax, 1 ; ret
0x00000000000e1c94 : jns 0xe1ca2 ; mov byte ptr [rbx], 0 ; mov rax, rbx ; pop rbx ; ret
0x00000000000983e6 : jns 0xffffffffed39874c ; mov byte ptr [rdi + 7], ch ; ret
0x0000000000098448 : jns 0xffffffffed398bae ; mov byte ptr [rdi + 0xb], ch ; ret
0x0000000000098468 : jns 0xffffffffed398cce ; mov byte ptr [rdi + 0xc], ch ; ret
0x0000000000107dcc : jo 0x107e42 ; idiv edi ; xor eax, eax ; ret
0x0000000000157914 : jo 0x1578c1 ; out dx, al ; push qword ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; out dx, al ; call qword ptr [rax]
0x0000000000158808 : jo 0x158873 ; salc ; retf
0x0000000000159104 : jo 0x15917e ; mov ebp, 0xfb67d10d ; ret
0x000000000015d09c : jo 0x15d025 ; jmp qword ptr [rax - 0x2f000c80]
0x000000000015e3ac : jo 0x15e367 ; cmc ; jmp rax
0x0000000000169f6c : jo 0x169ef9 ; sti ; call qword ptr [rax]
0x0000000000169f19 : jo 0x169f1c ; call qword ptr [rax - 0x2f00049c]
0x0000000000169f8c : jo 0x169f26 ; sti ; call qword ptr [rax]
0x0000000000169f18 : jo 0x169f91 ; sti ; call qword ptr [rax - 0x2f00049c]
0x000000000016a380 : jo 0x16a3bf ; cld ; push qword ptr [rax] ; cmp ah, bh ; call qword ptr [rax]
0x000000000016a3e4 : jo 0x16a424 ; cld ; inc dword ptr [rax + 0x39] ; cld ; jmp qword ptr [rax]
0x000000000016a400 : jo 0x16a43a ; cld ; jmp qword ptr [rax]
0x000000000016a484 : jo 0x16a4b8 ; cld ; inc eax ; sub al, 0xfc ; call qword ptr [rax]
0x000000000016a5fc : jo 0x16a655 ; cld ; inc eax ; push rcx ; cld ; call qword ptr [rax]
0x000000000016a650 : jo 0x16a6b0 ; cld ; inc eax ; pop rax ; cld ; call qword ptr [rax]
0x000000000016aaf1 : jo 0x16aaf1 ; jmp qword ptr [rax]
0x000000000016eda1 : jo 0x16ed9d ; call rsp
0x000000000016eda0 : jo 0x16ed9e ; call rsp
0x0000000000173fd0 : jo 0x173fff ; in al, dx ; call qword ptr [rsi]
0x00000000001785a0 : jo 0x178528 ; out dx, eax ; jmp qword ptr [rbx]
0x00000000001794f0 : jo 0x1794ab ; out dx, eax ; call qword ptr [rbx]
0x000000000017fd10 : jo 0x17fc99 ; jmp qword ptr [rcx]
0x0000000000180920 : jo 0x180937 ; hlt ; jmp qword ptr [rdx]
0x0000000000181fe0 : jo 0x181fe3 ; hlt ; jmp qword ptr [rcx]
0x0000000000027de3 : jo 0x27dfb ; mov dh, 0x79 ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000028066 : jo 0x2807e ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000002c343 : jo 0x2c394 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002c342 : jo 0x2c395 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000039842 : jo 0x397d6 ; je 0x39871 ; or byte ptr [rbp - 0x77], cl ; retf
0x000000000003f186 : jo 0x3f191 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000068a5a : jo 0x68a1a ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000068e9c : jo 0x68ede ; std ; je 0x68eb4 ; mov eax, esi ; syscall
0x000000000006b60a : jo 0x6b622 ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000006eeea : jo 0x6ee77 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x000000000006eee9 : jo 0x6ee78 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x0000000000071a43 : jo 0x71a03 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000072fd4 : jo 0x73025 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007301f : jo 0x73070 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000009b754 : jo 0x9b7a2 ; mov edi, ebp ; call rbx
0x000000000009bcfd : jo 0x9bd4b ; mov edi, ebp ; call rbx
0x00000000000b91d1 : jo 0xb91d7 ; add byte ptr [rax], al ; syscall
0x00000000000c2044 : jo 0xc1fd0 ; ror byte ptr [rdi], 0x8e ; ret
0x00000000000c324e : jo 0xc3274 ; xor eax, eax ; ret
0x00000000000ced90 : jo 0xced95 ; ret 0xc083
0x00000000000dc537 : jo 0xdc549 ; add byte ptr [rax + 0x101], bh ; syscall
0x00000000001025af : jp 0x1025b7 ; inc dword ptr [rbp - 0x76a18740] ; ret
0x0000000000106582 : jp 0x1065c5 ; and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x93c
0x000000000010cfed : jp 0x10d04d ; mov qword ptr [rdx + 0x68], rcx ; ret
0x0000000000110432 : jp 0x11043e ; ret
0x0000000000112c82 : jp 0x112c8e ; ret
0x0000000000112c9a : jp 0x112ca6 ; ret
0x0000000000113512 : jp 0x11351e ; ret
0x000000000011352a : jp 0x113536 ; ret
0x000000000011355a : jp 0x113566 ; ret
0x0000000000159293 : jp 0x15924d ; xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, -0x1b ; retf 0x2a91
0x000000000016ab49 : jp 0x16ab4d ; jmp qword ptr [rax + 0x20fffc7b]
0x000000000016b57d : jp 0x16b585 ; add byte ptr [rcx + rbp*2], al ; in al, dx ; call rsp
0x000000000016d929 : jp 0x16d922 ; jmp rsp
0x000000000016d928 : jp 0x16d923 ; jmp rsp
0x000000000016dd75 : jp 0x16dd7e ; add byte ptr [rbx + rsi*8 - 0xa], dh ; jmp rsp
0x0000000000181c89 : jp 0x181c97 ; ret
0x0000000000002347 : jp 0x2323 ; retf 0x23c4
0x0000000000002569 : jp 0x254d ; jmp qword ptr [rbx]
0x0000000000002568 : jp 0x254e ; jmp qword ptr [rbx]
0x000000000002b218 : jp 0x2b25b ; jae 0x2b238 ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x0000000000032646 : jp 0x32658 ; jne 0x32658 ; addsd xmm0, xmm0 ; ret
0x0000000000032962 : jp 0x32978 ; jne 0x32978 ; addss xmm0, xmm0 ; ret
0x0000000000003966 : jp 0x39e0 ; xchg eax, ebx ; and cl, ah ; ret
0x0000000000068e9b : jp 0x68f15 ; cmp ebp, edi ; je 0x68eb5 ; mov eax, esi ; syscall
0x000000000009ac31 : jp 0x9abc1 ; sal byte ptr [rbp - 0x26], 0x48 ; mov eax, edi ; ret
0x00000000000c2e9b : jp 0xc2ea9 ; call 0x1f93c
0x00000000000cf61e : jp 0xcf631 ; movsxd rdi, dword ptr [rbx + rdi*4] ; add rdi, rbx ; jmp rdi
0x00000000000e8dd1 : jp 0xe8dd7 ; add byte ptr [rax], al ; syscall
0x00000000000eaea2 : jp 0xeae8c ; sub al, byte ptr [rax] ; pop rbx ; ret
0x00000000000f3e65 : jp 0xf3ebc ; mov rsi, rdx ; call rax
0x0000000000102b99 : jrcxz 0x102c11 ; ret
0x000000000013327a : jrcxz 0x133275 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000133279 : jrcxz 0x133276 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000135d9a : jrcxz 0x135d95 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000135d99 : jrcxz 0x135d96 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000149744 : jrcxz 0x149795 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000157ee5 : jrcxz 0x157f3f ; ret
0x000000000015a0ad : jrcxz 0x15a070 ; add dword ptr [rdx - 0x36a5831f], esp ; retf
0x000000000015ac09 : jrcxz 0x15abed ; cmp al, 0x93 ; in al, dx ; retf -0x51ce
0x000000000016e849 : jrcxz 0x16e844 ; jmp rsp
0x000000000017bc09 : jrcxz 0x17bbfd ; jmp rbx
0x000000000018c599 : jrcxz 0x18c594 ; call qword ptr [rdx]
0x0000000000001f57 : jrcxz 0x1f35 ; retf -0x41cb
0x0000000000001f22 : jrcxz 0x1f9f ; retf 0x6321
0x00000000000026b2 : jrcxz 0x2653 ; retf
0x0000000000056ff2 : jrcxz 0x56ff8 ; dec dword ptr [rax - 0x39] ; ret
0x00000000000c2fac : jrcxz 0xc2f6c ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000d540c : jrcxz 0xd545e ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000d5982 : jrcxz 0xd59fd ; retf
0x00000000000dac19 : jrcxz 0xdac1d ; dec dword ptr [rax - 0x7d] ; retf -0x7601
0x00000000000dac48 : jrcxz 0xdac4c ; dec dword ptr [rax - 0x7d] ; retf -0x7601
0x00000000000dd719 : jrcxz 0xdd6ee ; cli ; dec dword ptr [rax + 0x39] ; ret
0x00000000000e03f3 : jrcxz 0xe0425 ; add byte ptr [rcx - 0x77], cl ; retf -0x3f7b
0x00000000000e2342 : jrcxz 0xe2346 ; dec dword ptr [rax - 0x73] ; adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x00000000000eaef1 : jrcxz 0xeaf23 ; add byte ptr [rdx + rax + 0x5d], dh ; ret
0x00000000000f5523 : jrcxz 0xf54e8 ; cmp r11d, 0xa ; je 0xf5534 ; ret
0x00000000000f5c01 : jrcxz 0xf5c07 ; add byte ptr [rax], al ; syscall
0x00000000000f5c1c : jrcxz 0xf5c22 ; add byte ptr [rax], al ; syscall
0x0000000000106e49 : js 0x106e6a ; mov eax, 3 ; syscall
0x000000000011191c : js 0x11192f ; retf -0x37f1
0x000000000011191b : js 0x111930 ; retf -0x37f1
0x000000000011ca43 : js 0x11ca58 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011d15c : js 0x11d163 ; add byte ptr [rax], al ; syscall
0x000000000011da59 : js 0x11da74 ; mov eax, 3 ; syscall
0x0000000000159f81 : js 0x15a001 ; pop rdx ; retf
0x000000000015e380 : js 0x15e3b4 ; cmc ; call qword ptr [rsi]
0x000000000016ab05 : js 0x16ab09 ; jmp qword ptr [rax + 0x20fffc79]
0x000000000016ab45 : js 0x16ab45 ; jmp qword ptr [rax]
0x000000000016b619 : js 0x16b609 ; jmp rsp
0x0000000000177668 : js 0x1776b9 ; out dx, eax ; jmp qword ptr [rdx]
0x0000000000179490 : js 0x17949e ; ret
0x000000000017c8e1 : js 0x17c8d6 ; jmp qword ptr [rbx]
0x000000000017cc58 : js 0x17cc04 ; cld ; call qword ptr [rbx]
0x000000000017e078 : js 0x17e02c ; cld ; jmp qword ptr [rbx]
0x0000000000181a28 : js 0x1819fa ; hlt ; jmp rbx
0x0000000000182ae1 : js 0x182ada ; call qword ptr [rsi]
0x0000000000182b29 : js 0x182b22 ; call qword ptr [rax]
0x0000000000182b69 : js 0x182b62 ; call qword ptr [rax]
0x0000000000183548 : js 0x1834e7 ; cmc ; jmp qword ptr [rcx]
0x0000000000183778 : js 0x183726 ; cmc ; jmp rcx
0x00000000001882ad : js 0x1882b6 ; add al, dl ; sal esi, 1 ; jmp qword ptr [rsi]
0x00000000001882dd : js 0x1882e6 ; add al, dl ; sal esi, 1 ; jmp qword ptr [rdi]
0x000000000018bb88 : js 0x18bbd3 ; stc ; call qword ptr [rax]
0x000000000018ce98 : js 0x18cea6 ; ret
0x000000000018f108 : js 0x18f17e ; clc ; call qword ptr [rdx]
0x0000000000001ace : js 0x1ac3 ; fidiv word ptr [rbx] ; retf
0x00000000000206ba : js 0x206c5 ; mov byte ptr [rax], 0x2f ; mov byte ptr [rdi], 0 ; ret
0x0000000000023f2c : js 0x23f3a ; or byte ptr [rdi], 0x87 ; retf
0x0000000000029dfa : js 0x29e05 ; mov byte ptr [rax], 0x2f ; mov byte ptr [rdi], 0 ; ret
0x000000000002bfa1 : js 0x2bf2d ; loopne 0x2bfb4 ; movzx eax, ax ; ret
0x000000000002bfe1 : js 0x2bf6d ; loopne 0x2bfee ; movzx eax, ax ; ret
0x000000000002c081 : js 0x2c00d ; loopne 0x2c090 ; movzx eax, ax ; ret
0x000000000002c161 : js 0x2c0ea ; loopne 0x2c16a ; ret
0x000000000002c1da : js 0x2c163 ; loopne 0x2c1e3 ; ret
0x000000000002c1ea : js 0x2c176 ; loopne 0x2c1fd ; movzx eax, ax ; ret
0x000000000002c22a : js 0x2c1b6 ; loopne 0x2c237 ; movzx eax, ax ; ret
0x000000000002c2ca : js 0x2c256 ; loopne 0x2c2d9 ; movzx eax, ax ; ret
0x000000000002c353 : js 0x2c3a4 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002c352 : js 0x2c3a5 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000002fa9 : js 0x2f5f ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x0000000000032faf : js 0x33006 ; mov dword ptr [rsp + 0x80], eax ; syscall
0x00000000000410c5 : js 0x410cf ; add byte ptr [rbp - 0xa], dh ; pop rbx ; ret
0x000000000006eeed : js 0x6eefb ; ret
0x00000000000713b0 : js 0x713eb ; add byte ptr [rbp + rax + 0x48], dh ; add esp, 0x38 ; ret
0x000000000007c368 : js 0x7c373 ; ret
0x00000000000adefd : js 0xade8a ; ret 0x8166
0x00000000000b9231 : js 0xb9237 ; add byte ptr [rax], al ; syscall
0x00000000000b98f7 : js 0xb9903 ; ret
0x00000000000c9152 : js 0xc9165 ; add al, 0x75 ; mov cl, 0x8b ; pop rax ; or bh, dh ; ret
0x00000000000d7e13 : js 0xd7e1b ; movsxd rdi, edi ; call 0x440e7
0x00000000000da215 : js 0xda231 ; cmp rax, rbx ; setg al ; pop rbx ; ret
0x00000000000da37c : js 0xda3ce ; mov dword ptr [rdi + 0x80], edx ; ret
0x00000000000daf79 : js 0xdafcb ; mov dword ptr [rdi + 0x100], edx ; ret
0x00000000000e0fcb : js 0xe0f9d ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e2f62 : js 0xe2f75 ; mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x00000000000e496b : js 0xe499f ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000e7238 : js 0xe7225 ; ret 0xfffb
0x00000000000eba78 : js 0xeba04 ; loopne 0xeba8b ; movzx eax, ax ; ret
0x00000000000ebba8 : js 0xebb31 ; loopne 0xebbb1 ; ret
0x00000000000ebc38 : js 0xebbc4 ; loopne 0xebc45 ; movzx eax, ax ; ret
0x00000000000ebf38 : js 0xebec4 ; loopne 0xebf47 ; movzx eax, ax ; ret
0x00000000000ec401 : js 0xec38d ; loopne 0xec414 ; movzx eax, ax ; ret
0x00000000000ec501 : js 0xec48a ; loopne 0xec50a ; ret
0x00000000000ec581 : js 0xec50d ; loopne 0xec58e ; movzx eax, ax ; ret
0x00000000000ec801 : js 0xec78d ; loopne 0xec810 ; movzx eax, ax ; ret
0x00000000000f96e4 : js 0xf96f9 ; mov eax, edi ; and eax, 0xffffff ; ret
0x00000000000f9764 : js 0xf9777 ; mov eax, edi ; shr eax, 0x18 ; ret
0x0000000000098388 : js 0xffffffffed3985ee ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000983b6 : js 0xffffffffed39881c ; mov byte ptr [rdi + 5], ch ; ret
0x0000000000098408 : js 0xffffffffed398c6e ; mov byte ptr [rdi + 9], ch ; ret
0x000000000000302f : lahf ; clc ; imul ebp, dword ptr [rsi], -0x74 ; int1 ; mov dr0, word ptr [rax] ; retf
0x000000000016fe59 : lahf ; cli ; call rsp
0x000000000017e329 : lahf ; jmp rdi
0x000000000015a5c3 : lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000126cbd : lahf ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000159eb2 : lahf ; or dword ptr [rbp + 0x68], edi ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x000000000015a6b4 : lahf ; push -0x57d3205 ; call 0xffffffffab2371b6
0x00000000001586c0 : lahf ; push 0xa2 ; cld ; shr al, cl ; add al, 0x3d ; retf
0x00000000000da21b : lahf ; rcr byte ptr [rbx - 0x3d], 0x90 ; xor eax, eax ; pop rbx ; ret
0x00000000000eb90d : lahf ; ret
0x00000000000e5883 : lahf ; ret 0x8545
0x0000000000157e1d : lahf ; ret 0x871e
0x00000000000c1a0a : lahf ; ret 0x8feb
0x000000000004d168 : lahf ; ret 0xbcd9
0x00000000000ca1f6 : lahf ; ret 0xc931
0x0000000000056701 : lahf ; ret 0xd329
0x000000000004ccec : lahf ; ret 0xe683
0x000000000004eb55 : lahf ; ret 0xe783
0x00000000000e4b0b : lahf ; ret 0xe883
0x0000000000099099 : lahf ; ret 0xea81
0x000000000004d576 : lahf ; ret 0xf640
0x00000000000facdd : lahf ; retf 0
0x000000000012734d : lar eax, word ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000016109b : lcall ptr [rax + 0x18] ; sti ; inc eax ; sbb bl, bh ; jmp rax
0x000000000015e387 : lcall ptr [rax + 0x2efff540] ; sub esi, ebp ; call qword ptr [rsi]
0x00000000000e4f77 : lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x000000000015ccc7 : lcall ptr [rax + 0x6cfff1f5] ; int1 ; jmp qword ptr [rsi]
0x000000000016d8eb : lcall ptr [rax + rbx*2 + 0x6c440001] ; cmc ; call rsp
0x000000000016fe33 : lcall ptr [rax + rdi - 0x62cbfffe] ; cli ; call rsp
0x000000000016d2b3 : lcall ptr [rax + rsi - 0x318bffff] ; jmp rsp
0x000000000014abcf : lcall ptr [rax - 6] ; in eax, dx ; call rax
0x000000000014abe3 : lcall ptr [rax] ; cli ; in eax, dx ; call rax
0x0000000000108d75 : lcall ptr [rbp + 0x41] ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000fdc80 : lcall ptr [rbp + 0x41] ; pop rsp ; pop r13 ; ret
0x00000000000e0ebc : lcall ptr [rbp + 0x41] ; pop rsp ; ret
0x000000000016fa13 : lcall ptr [rbp + rbx + 0x1f440002] ; cli ; jmp rsp
0x000000000016c9ab : lcall ptr [rbp + rsi*8] ; add byte ptr [rax + rcx - 0xf], dh ; jmp rsp
0x00000000000890f5 : lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000b88a0 : lcall ptr [rbx + 0x41] ; pop rsp ; pop r13 ; pop rbp ; ret
0x00000000000e3b3d : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000034017 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x00000000000a3f91 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r14 ; ret
0x0000000000028af4 : lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000069d70 : lcall ptr [rbx + 0x5d] ; ret
0x000000000016cc03 : lcall ptr [rbx + rax + 0x79340001] ; int1 ; call rsp
0x000000000006980e : lcall ptr [rbx - 0x77] ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; ret
0x000000000016f96b : lcall ptr [rcx + rbx + 0xf940002] ; cli ; call rsp
0x000000000016f063 : lcall ptr [rcx + rbx*8 + 1] ; add ah, dh ; ret 0xfff8
0x000000000016f933 : lcall ptr [rdi + rdx + 0x4e40002] ; cli ; call rsp
0x000000000003c097 : lcall ptr [rdi] ; add byte ptr [rax - 0x39], cl ; ret
0x000000000016af5b : lcall ptr [rdx + 0x2afffcae] ; scasb al, byte ptr [rdi] ; cld ; call rax
0x000000000016bacb : lcall ptr [rdx + rdx*4] ; add ah, al ; retf -0x14
0x000000000015df8f : lcall ptr [rsi + 0x22] ; cmc ; push qword ptr [rcx + 0x11] ; cmc ; call rsp
0x000000000017007b : lcall ptr [rsi + rax*2 - 0x399bfffe] ; cli ; call rsp
0x000000000015be8b : lcall ptr [rsi + rbp*4] ; out dx, eax ; jmp rdx
0x000000000015be87 : lcall ptr [rsi + rbp*4] ; out dx, eax ; lcall ptr [rsi + rbp*4] ; out dx, eax ; jmp rdx
0x000000000016cfeb : lcall ptr [rsi + rbx - 0xe1bffff] ; call rsp
0x000000000015dd3f : lcall ptr [rsi] ; adc dh, ch ; dec dword ptr [rbp + rbx - 0xb] ; jmp qword ptr [rsi]
0x000000000016fc4b : lcall ptr [rsp + rbp + 0x64440002] ; cli ; jmp rsp
0x000000000016f0eb : lcall ptr [rsp + rbx*8 - 0x32fbffff] ; clc ; call rsp
0x000000000015e48f : lcall ptr [rsp + rdi*4] ; cmc ; jmp qword ptr [rsi]
0x0000000000133906 : lddqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000006c14f : lea eax, dword ptr [r8 - 1] ; ret
0x000000000010428c : lea eax, dword ptr [r9 + r8 + 2] ; pop rbx ; ret
0x000000000005a624 : lea eax, dword ptr [rax + 0xffffff9] ; test esi, esp ; ret
0x00000000000a8134 : lea eax, dword ptr [rax + rax*4] ; ret
0x00000000000d2f43 : lea eax, dword ptr [rax + rax*8 + 5] ; ret
0x00000000000838d4 : lea eax, dword ptr [rax + rdi + 0x10] ; ret
0x00000000000838e4 : lea eax, dword ptr [rax + rdi + 0x20] ; ret
0x000000000008f0b4 : lea eax, dword ptr [rax + rdi + 0x30] ; ret
0x00000000000838b4 : lea eax, dword ptr [rax + rdi - 0x10] ; ret
0x00000000000b3212 : lea eax, dword ptr [rax + rdx*8] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000006c150 : lea eax, dword ptr [rax - 1] ; ret
0x00000000000e0e31 : lea eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000010caab : lea eax, dword ptr [rbx + 0x2260] ; pop rbx ; ret
0x0000000000098eb8 : lea eax, dword ptr [rbx + 1] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000104420 : lea eax, dword ptr [rbx + rbp] ; pop rbx ; pop rbp ; ret
0x000000000010428d : lea eax, dword ptr [rcx + rax + 2] ; pop rbx ; ret
0x000000000008251d : lea eax, dword ptr [rcx + rsi] ; ret
0x0000000000098b24 : lea eax, dword ptr [rcx - 1] ; ret
0x000000000016e15d : lea eax, dword ptr [rcx] ; add byte ptr [rcx + rbx*2 - 9], dh ; call rsp
0x0000000000095c4c : lea eax, dword ptr [rdi + 0x10] ; ret
0x0000000000095c61 : lea eax, dword ptr [rdi + 0x11] ; ret
0x0000000000095c7f : lea eax, dword ptr [rdi + 0x12] ; ret
0x0000000000095c9f : lea eax, dword ptr [rdi + 0x13] ; ret
0x0000000000095cc2 : lea eax, dword ptr [rdi + 0x14] ; ret
0x0000000000095ce1 : lea eax, dword ptr [rdi + 0x15] ; ret
0x0000000000095d01 : lea eax, dword ptr [rdi + 0x16] ; ret
0x0000000000095d21 : lea eax, dword ptr [rdi + 0x17] ; ret
0x0000000000095d44 : lea eax, dword ptr [rdi + 0x18] ; ret
0x0000000000095d69 : lea eax, dword ptr [rdi + 0x19] ; ret
0x0000000000095d87 : lea eax, dword ptr [rdi + 0x1a] ; ret
0x0000000000095da7 : lea eax, dword ptr [rdi + 0x1b] ; ret
0x0000000000095dc3 : lea eax, dword ptr [rdi + 0x1c] ; ret
0x0000000000095de3 : lea eax, dword ptr [rdi + 0x1d] ; ret
0x0000000000095e03 : lea eax, dword ptr [rdi + 0x1e] ; ret
0x0000000000095e23 : lea eax, dword ptr [rdi + 0x1f] ; ret
0x0000000000096c73 : lea eax, dword ptr [rdi + 0x20] ; ret
0x0000000000096ed9 : lea eax, dword ptr [rdi + 0x40] ; ret
0x0000000000095b9d : lea eax, dword ptr [rdi + 0xa] ; ret
0x0000000000095bbd : lea eax, dword ptr [rdi + 0xb] ; ret
0x0000000000095bdf : lea eax, dword ptr [rdi + 0xc] ; ret
0x0000000000095bff : lea eax, dword ptr [rdi + 0xd] ; ret
0x0000000000095c1f : lea eax, dword ptr [rdi + 0xe] ; ret
0x0000000000095c39 : lea eax, dword ptr [rdi + 0xf] ; ret
0x000000000008ec74 : lea eax, dword ptr [rdi + 1] ; ret
0x000000000008ec85 : lea eax, dword ptr [rdi + 2] ; ret
0x000000000008ec98 : lea eax, dword ptr [rdi + 3] ; ret
0x000000000008eca7 : lea eax, dword ptr [rdi + 4] ; ret
0x000000000008ecba : lea eax, dword ptr [rdi + 5] ; ret
0x000000000008ee27 : lea eax, dword ptr [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x000000000008eccc : lea eax, dword ptr [rdi + 6] ; ret
0x000000000008ece0 : lea eax, dword ptr [rdi + 7] ; ret
0x000000000008ec66 : lea eax, dword ptr [rdi + 8] ; ret
0x00000000001038e0 : lea eax, dword ptr [rdi + 9] ; and eax, 0xfffffff8 ; add eax, 0x10 ; ret
0x0000000000095b7f : lea eax, dword ptr [rdi + 9] ; ret
0x0000000000083909 : lea eax, dword ptr [rdi + rax + 0x10] ; ret
0x0000000000083919 : lea eax, dword ptr [rdi + rax + 0x20] ; ret
0x0000000000083803 : lea eax, dword ptr [rdi + rax + 0x30] ; ret
0x000000000008a757 : lea eax, dword ptr [rdi + rax] ; ret
0x0000000000125c5a : lea eax, dword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x000000000002bcf5 : lea eax, dword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x0000000000082419 : lea eax, dword ptr [rdi + rsi] ; ret
0x000000000009a93e : lea eax, dword ptr [rdi - 0x10] ; ret
0x000000000009aaa1 : lea eax, dword ptr [rdi - 0xc] ; ret
0x000000000009aac1 : lea eax, dword ptr [rdi - 4] ; ret
0x000000000009aab1 : lea eax, dword ptr [rdi - 8] ; ret
0x0000000000095ad3 : lea eax, dword ptr [rdi] ; ret
0x0000000000140c1d : lea eax, dword ptr [rdx + 0xa] ; ret
0x0000000000140c3d : lea eax, dword ptr [rdx + 0xb] ; ret
0x0000000000140c5f : lea eax, dword ptr [rdx + 0xc] ; ret
0x0000000000140c7f : lea eax, dword ptr [rdx + 0xd] ; ret
0x0000000000140c9f : lea eax, dword ptr [rdx + 0xe] ; ret
0x0000000000140b2f : lea eax, dword ptr [rdx + 0xf] ; ret
0x0000000000140b57 : lea eax, dword ptr [rdx + 1] ; ret
0x0000000000140b6d : lea eax, dword ptr [rdx + 2] ; ret
0x0000000000140b85 : lea eax, dword ptr [rdx + 3] ; ret
0x0000000000140b9b : lea eax, dword ptr [rdx + 4] ; ret
0x0000000000140bad : lea eax, dword ptr [rdx + 5] ; ret
0x0000000000140bcb : lea eax, dword ptr [rdx + 6] ; ret
0x0000000000140ad7 : lea eax, dword ptr [rdx + 7] ; ret
0x0000000000140bdd : lea eax, dword ptr [rdx + 8] ; ret
0x0000000000140bfd : lea eax, dword ptr [rdx + 9] ; ret
0x000000000006c13e : lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000140b45 : lea eax, dword ptr [rdx] ; ret
0x0000000000080a3e : lea eax, dword ptr [rip + 0x109ac] ; ret
0x0000000000080a8a : lea eax, dword ptr [rip + 0x10] ; ret
0x000000000007e7de : lea eax, dword ptr [rip + 0x10fec] ; ret
0x000000000002b229 : lea eax, dword ptr [rip + 0x1367f6] ; ret
0x00000000000203e1 : lea eax, dword ptr [rip + 0x141184] ; ret
0x00000000000203f1 : lea eax, dword ptr [rip + 0x143049] ; ret
0x0000000000083954 : lea eax, dword ptr [rip + 0x26] ; ret
0x00000000000e4eeb : lea eax, dword ptr [rip + 0x2b736f] ; pop rbp ; pop r12 ; ret
0x00000000000f66f1 : lea eax, dword ptr [rip + 0x328f9] ; ret
0x00000000000f6621 : lea eax, dword ptr [rip + 0x329e9] ; ret
0x00000000000f6551 : lea eax, dword ptr [rip + 0x32ab9] ; ret
0x00000000000f673f : lea eax, dword ptr [rip + 0x357fb] ; ret
0x00000000000f659f : lea eax, dword ptr [rip + 0x359bb] ; ret
0x00000000000f666f : lea eax, dword ptr [rip + 0x382bb] ; ret
0x00000000000f66ca : lea eax, dword ptr [rip + 0x50710] ; ret
0x00000000000f65fa : lea eax, dword ptr [rip + 0x50800] ; ret
0x00000000000f652a : lea eax, dword ptr [rip + 0x508d0] ; ret
0x00000000000f67d6 : lea eax, dword ptr [rip + 0x50ba4] ; ret
0x0000000000109b81 : lea eax, dword ptr [rip + 0x57e9e] ; ret
0x00000000000846fa : lea eax, dword ptr [rip + 0x80] ; ret
0x0000000000089188 : lea eax, dword ptr [rip + 0x9fe92] ; ret
0x00000000000891d6 : lea eax, dword ptr [rip + 0xa2d94] ; ret
0x00000000000829cb : lea eax, dword ptr [rip + 0xa347f] ; ret
0x000000000008263b : lea eax, dword ptr [rip + 0xa36df] ; ret
0x00000000000844c8 : lea eax, dword ptr [rip + 0xa4b32] ; ret
0x0000000000083e08 : lea eax, dword ptr [rip + 0xa5212] ; ret
0x00000000000801cb : lea eax, dword ptr [rip + 0xa5a0f] ; ret
0x0000000000084516 : lea eax, dword ptr [rip + 0xa7a34] ; ret
0x000000000009a1bc : lea eax, dword ptr [rip + 0xa973e] ; ret
0x000000000009ad78 : lea eax, dword ptr [rip + 0xaa842] ; ret
0x0000000000083e56 : lea eax, dword ptr [rip + 0xaaae4] ; ret
0x000000000009ad80 : lea eax, dword ptr [rip + 0xae26a] ; ret
0x000000000008231e : lea eax, dword ptr [rip + 0xba5fc] ; ret
0x000000000008458e : lea eax, dword ptr [rip + 0xbaf0c] ; ret
0x00000000000800be : lea eax, dword ptr [rip + 0xbb0ac] ; ret
0x00000000000846ae : lea eax, dword ptr [rip + 0xbc5fc] ; ret
0x0000000000089161 : lea eax, dword ptr [rip + 0xbdca9] ; ret
0x0000000000083968 : lea eax, dword ptr [rip + 0xc0612] ; ret
0x00000000000844a1 : lea eax, dword ptr [rip + 0xc2949] ; ret
0x0000000000083de1 : lea eax, dword ptr [rip + 0xc3029] ; ret
0x00000000000842cd : lea eax, dword ptr [rip + 0xc30bd] ; ret
0x0000000000083970 : lea eax, dword ptr [rip + 0xc3f0a] ; ret
0x000000000007e9cb : lea eax, dword ptr [rip + 0xc8b8f] ; ret
0x000000000007ec2e : lea eax, dword ptr [rip + 0xc] ; ret
0x000000000009ad64 : lea eax, dword ptr [rip + 0xcbd6] ; ret
0x000000000009a1b4 : lea eax, dword ptr [rip + 0xd836] ; ret
0x000000000008475d : lea eax, dword ptr [rip + 0xd] ; ret
0x0000000000083e2f : lea eax, dword ptr [rip + 0xfb] ; ret
0x00000000000891af : lea eax, dword ptr [rip - 0x5285] ; ret
0x00000000000844ef : lea eax, dword ptr [rip - 0x5e5] ; ret
0x00000000000f6578 : lea eax, dword ptr [rip - 0x7265e] ; ret
0x00000000000f6648 : lea eax, dword ptr [rip - 0x7272e] ; ret
0x00000000000f6718 : lea eax, dword ptr [rip - 0x7281e] ; ret
0x00000000000e3230 : lea ebp, dword ptr [rbx] ; add byte ptr [rax - 0x76b7ffc8], al ; ret
0x00000000000b32c6 : lea ebx, dword ptr [rax + 1] ; jne 0xb32b9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001586d1 : lea ebx, dword ptr [rsi - 0x3271f33] ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000000fef39 : lea ebx, dword ptr [rsp + 0x44] ; call 0xdb966
0x000000000009b092 : lea ecx, dword ptr [rax + 1] ; call rbx
0x000000000009b1c4 : lea ecx, dword ptr [rax + 4] ; call rbx
0x000000000009b5cd : lea ecx, dword ptr [rax + 4] ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x000000000012bff0 : lea ecx, dword ptr [rbx + rcx] ; jmp r9
0x000000000009438e : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x000000000013e426 : lea ecx, dword ptr [rdx + 0x10] ; jne 0x13e979 ; ret
0x000000000013e724 : lea ecx, dword ptr [rdx + 0xa] ; jne 0x13e979 ; ret
0x000000000013e744 : lea ecx, dword ptr [rdx + 0xb] ; jne 0x13e979 ; ret
0x000000000013e764 : lea ecx, dword ptr [rdx + 0xc] ; jne 0x13e979 ; ret
0x000000000013e786 : lea ecx, dword ptr [rdx + 0xd] ; jne 0x13e979 ; ret
0x000000000013e7a6 : lea ecx, dword ptr [rdx + 0xe] ; jne 0x13e979 ; ret
0x000000000013e7c6 : lea ecx, dword ptr [rdx + 0xf] ; jne 0x13e979 ; ret
0x000000000013e61c : lea ecx, dword ptr [rdx + 1] ; jne 0x13e979 ; ret
0x000000000013e63e : lea ecx, dword ptr [rdx + 2] ; jne 0x13e979 ; ret
0x000000000013e664 : lea ecx, dword ptr [rdx + 3] ; jne 0x13e979 ; ret
0x000000000013e67c : lea ecx, dword ptr [rdx + 4] ; jne 0x13e979 ; ret
0x0000000000069ed6 : lea ecx, dword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x000000000013e6a2 : lea ecx, dword ptr [rdx + 5] ; jne 0x13e979 ; ret
0x000000000013e6c4 : lea ecx, dword ptr [rdx + 6] ; jne 0x13e979 ; ret
0x000000000013e6e2 : lea ecx, dword ptr [rdx + 7] ; jne 0x13e979 ; ret
0x000000000013e3be : lea ecx, dword ptr [rdx + 8] ; jne 0x13e979 ; ret
0x000000000013e704 : lea ecx, dword ptr [rdx + 9] ; jne 0x13e979 ; ret
0x0000000000044fc8 : lea ecx, dword ptr [rip + 0xb87] ; add rax, rcx ; jmp rax
0x00000000000ec387 : lea ecx, dword ptr [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000006e444 : lea ecx, dword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x000000000010b3e8 : lea ecx, dword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000006e520 : lea ecx, dword ptr [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x000000000010b229 : lea ecx, dword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x000000000009b543 : lea ecx, dword ptr [rsp + 0x20] ; call rbx
0x000000000009b1bf : lea ecx, dword ptr [rsp + 0x20] ; lea rcx, qword ptr [rax + 4] ; call rbx
0x00000000000e1676 : lea ecx, dword ptr [rsp + 0x20] ; mov eax, 0x10e ; syscall
0x000000000009b08d : lea ecx, dword ptr [rsp + 0x28] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x000000000009ba1a : lea ecx, dword ptr [rsp + 0x28] ; mov rdi, rbp ; call rbx
0x000000000010b87b : lea ecx, dword ptr [rsp + 0x30] ; call qword ptr [rax]
0x00000000000a77bf : lea ecx, dword ptr [rsp + 0x30] ; mov rdi, qword ptr [rax] ; call r14
0x0000000000114f0f : lea ecx, dword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x000000000009b751 : lea ecx, dword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x00000000000206b9 : lea edi, dword ptr [rax + 1] ; mov byte ptr [rax], 0x2f ; mov byte ptr [rdi], 0 ; ret
0x00000000000d7e12 : lea edi, dword ptr [rax - 1] ; movsxd rdi, edi ; call 0x440e8
0x0000000000110f5e : lea edi, dword ptr [rbp + 0x10] ; call rax
0x0000000000078001 : lea edi, dword ptr [rbx + 0x10] ; call 0x84305
0x00000000000b3be5 : lea edi, dword ptr [rbx + 0x13] ; call 0x80655
0x0000000000113652 : lea edi, dword ptr [rbx + 0x58] ; call rax
0x0000000000112bf2 : lea edi, dword ptr [rbx + 0x68] ; call rax
0x0000000000110395 : lea edi, dword ptr [rbx + 0xc8] ; call rax
0x0000000000094efd : lea edi, dword ptr [rdi + 0x10] ; jne 0x955d9 ; ret
0x00000000000965e1 : lea edi, dword ptr [rdi + 0x10] ; jne 0x96de9 ; ret
0x0000000000094f20 : lea edi, dword ptr [rdi + 0x11] ; jne 0x955d9 ; ret
0x0000000000096604 : lea edi, dword ptr [rdi + 0x11] ; jne 0x96de9 ; ret
0x0000000000094f45 : lea edi, dword ptr [rdi + 0x12] ; jne 0x955d9 ; ret
0x0000000000096629 : lea edi, dword ptr [rdi + 0x12] ; jne 0x96de9 ; ret
0x0000000000094f63 : lea edi, dword ptr [rdi + 0x13] ; jne 0x955d9 ; ret
0x0000000000096657 : lea edi, dword ptr [rdi + 0x13] ; jne 0x96de9 ; ret
0x0000000000094f83 : lea edi, dword ptr [rdi + 0x14] ; jne 0x955d9 ; ret
0x0000000000096687 : lea edi, dword ptr [rdi + 0x14] ; jne 0x96de9 ; ret
0x0000000000094fa6 : lea edi, dword ptr [rdi + 0x15] ; jne 0x955d9 ; ret
0x00000000000966ba : lea edi, dword ptr [rdi + 0x15] ; jne 0x96de9 ; ret
0x0000000000094fc5 : lea edi, dword ptr [rdi + 0x16] ; jne 0x955d9 ; ret
0x00000000000966e9 : lea edi, dword ptr [rdi + 0x16] ; jne 0x96de9 ; ret
0x0000000000094fe5 : lea edi, dword ptr [rdi + 0x17] ; jne 0x955d9 ; ret
0x0000000000096719 : lea edi, dword ptr [rdi + 0x17] ; jne 0x96de9 ; ret
0x0000000000095005 : lea edi, dword ptr [rdi + 0x18] ; jne 0x955d9 ; ret
0x0000000000096749 : lea edi, dword ptr [rdi + 0x18] ; jne 0x96de9 ; ret
0x0000000000095028 : lea edi, dword ptr [rdi + 0x19] ; jne 0x955d9 ; ret
0x000000000009677c : lea edi, dword ptr [rdi + 0x19] ; jne 0x96de9 ; ret
0x000000000009505d : lea edi, dword ptr [rdi + 0x1a] ; jne 0x955d9 ; ret
0x00000000000967b1 : lea edi, dword ptr [rdi + 0x1a] ; jne 0x96de9 ; ret
0x000000000009508b : lea edi, dword ptr [rdi + 0x1b] ; jne 0x955d9 ; ret
0x00000000000967df : lea edi, dword ptr [rdi + 0x1b] ; jne 0x96de9 ; ret
0x00000000000950bb : lea edi, dword ptr [rdi + 0x1c] ; jne 0x955d9 ; ret
0x000000000009680f : lea edi, dword ptr [rdi + 0x1c] ; jne 0x96de9 ; ret
0x00000000000950e7 : lea edi, dword ptr [rdi + 0x1d] ; jne 0x955d9 ; ret
0x000000000009683b : lea edi, dword ptr [rdi + 0x1d] ; jne 0x96de9 ; ret
0x0000000000095117 : lea edi, dword ptr [rdi + 0x1e] ; jne 0x955d9 ; ret
0x000000000009686b : lea edi, dword ptr [rdi + 0x1e] ; jne 0x96de9 ; ret
0x0000000000095147 : lea edi, dword ptr [rdi + 0x1f] ; jne 0x955d9 ; ret
0x000000000009689b : lea edi, dword ptr [rdi + 0x1f] ; jne 0x96de9 ; ret
0x0000000000095177 : lea edi, dword ptr [rdi + 0x20] ; jne 0x955d9 ; ret
0x00000000000968cb : lea edi, dword ptr [rdi + 0x20] ; jne 0x96de9 ; ret
0x0000000000094e43 : lea edi, dword ptr [rdi + 0xa] ; jne 0x955d9 ; ret
0x00000000000964e7 : lea edi, dword ptr [rdi + 0xa] ; jne 0x96de9 ; ret
0x0000000000094e61 : lea edi, dword ptr [rdi + 0xb] ; jne 0x955d9 ; ret
0x0000000000096515 : lea edi, dword ptr [rdi + 0xb] ; jne 0x96de9 ; ret
0x0000000000094e81 : lea edi, dword ptr [rdi + 0xc] ; jne 0x955d9 ; ret
0x0000000000096535 : lea edi, dword ptr [rdi + 0xc] ; jne 0x96de9 ; ret
0x0000000000094ea3 : lea edi, dword ptr [rdi + 0xd] ; jne 0x955d9 ; ret
0x0000000000096557 : lea edi, dword ptr [rdi + 0xd] ; jne 0x96de9 ; ret
0x0000000000094ec3 : lea edi, dword ptr [rdi + 0xe] ; jne 0x955d9 ; ret
0x0000000000096587 : lea edi, dword ptr [rdi + 0xe] ; jne 0x96de9 ; ret
0x0000000000094ee3 : lea edi, dword ptr [rdi + 0xf] ; jne 0x955d9 ; ret
0x00000000000965b7 : lea edi, dword ptr [rdi + 0xf] ; jne 0x96de9 ; ret
0x0000000000094d17 : lea edi, dword ptr [rdi + 1] ; jne 0x955d9 ; ret
0x00000000000963ba : lea edi, dword ptr [rdi + 1] ; jne 0x96de9 ; ret
0x0000000000094d3b : lea edi, dword ptr [rdi + 2] ; jne 0x955d9 ; ret
0x00000000000963df : lea edi, dword ptr [rdi + 2] ; jne 0x96de9 ; ret
0x0000000000094d5e : lea edi, dword ptr [rdi + 3] ; jne 0x955d9 ; ret
0x0000000000096402 : lea edi, dword ptr [rdi + 3] ; jne 0x96de9 ; ret
0x0000000000094d79 : lea edi, dword ptr [rdi + 4] ; jne 0x955d9 ; ret
0x000000000009641d : lea edi, dword ptr [rdi + 4] ; jne 0x96de9 ; ret
0x0000000000094d9c : lea edi, dword ptr [rdi + 5] ; jne 0x955d9 ; ret
0x0000000000096440 : lea edi, dword ptr [rdi + 5] ; jne 0x96de9 ; ret
0x0000000000094dc1 : lea edi, dword ptr [rdi + 6] ; jne 0x955d9 ; ret
0x0000000000096465 : lea edi, dword ptr [rdi + 6] ; jne 0x96de9 ; ret
0x0000000000094ddf : lea edi, dword ptr [rdi + 7] ; jne 0x955d9 ; ret
0x0000000000096483 : lea edi, dword ptr [rdi + 7] ; jne 0x96de9 ; ret
0x0000000000094dfb : lea edi, dword ptr [rdi + 8] ; jne 0x955d9 ; ret
0x000000000009649f : lea edi, dword ptr [rdi + 8] ; jne 0x96de9 ; ret
0x0000000000094e1e : lea edi, dword ptr [rdi + 9] ; jne 0x955d9 ; ret
0x00000000000964c2 : lea edi, dword ptr [rdi + 9] ; jne 0x96de9 ; ret
0x00000000000289e1 : lea edi, dword ptr [rip + 0x13c819] ; mov eax, ecx ; syscall
0x0000000000100df1 : lea edi, dword ptr [rip + 0x29c905] ; call rax
0x00000000000fc52d : lea edi, dword ptr [rip + 0x68104] ; call 0x109008
0x00000000000e70c5 : lea edi, dword ptr [rip + 0x7c715] ; mov eax, ebx ; syscall
0x00000000000e6fbf : lea edi, dword ptr [rip + 0x7c810] ; mov eax, ebx ; syscall
0x00000000000e44e4 : lea edi, dword ptr [rip + 0x7d092] ; mov eax, ecx ; syscall
0x00000000000f5e77 : lea edi, dword ptr [rip - 0x16d] ; call rax
0x0000000000075beb : lea edx, dword ptr [rax + 0x60] ; mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x0000000000100125 : lea edx, dword ptr [rax - 1] ; cmp rdx, 0xfd ; jbe 0x100139 ; ret
0x0000000000033ca9 : lea edx, dword ptr [rax - 1] ; mov dword ptr [rip + 0x3653d6], edx ; ret
0x0000000000077ffd : lea edx, dword ptr [rbp - 0x10] ; lea rdi, qword ptr [rbx + 0x10] ; call 0x84309
0x000000000012c0c4 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000008e978 : lea edx, dword ptr [rcx + 1] ; mov byte ptr [rcx], 0 ; mov qword ptr [rdi], rdx ; ret
0x000000000007bcfa : lea edx, dword ptr [rcx - 8] ; cmovne rax, rdx ; ret
0x000000000006c26d : lea edx, dword ptr [rdx + rcx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000007ecc6 : lea edx, dword ptr [rdx + rcx] ; jmp r10
0x00000000000ec163 : lea edx, dword ptr [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x000000000012c4b8 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x00000000001147c1 : lea edx, dword ptr [rip + 0x2a39] ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000503fa : lea edx, dword ptr [rip - 0x2de] ; add rax, rdx ; jmp rax
0x00000000000e060a : lea edx, dword ptr [rsp - 0x30] ; syscall
0x00000000000321db : lea esi, dword ptr [rax] ; mov eax, r8d ; syscall
0x000000000006abf0 : lea esi, dword ptr [rcx + 4] ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x0000000000002efa : lea esi, dword ptr [rdi] ; ret 0x793b
0x000000000003f1cf : lea esi, dword ptr [rip + 0x1cb] ; call rax
0x000000000011d8b6 : lea esi, dword ptr [rip + 0x280864] ; xor eax, eax ; syscall
0x0000000000068b3a : lea esi, dword ptr [rip + 0x30] ; call rax
0x0000000000075664 : lea esi, dword ptr [rip - 0x185a] ; call rax
0x0000000000075b34 : lea esi, dword ptr [rip - 0x1d2a] ; call rax
0x0000000000068e24 : lea esi, dword ptr [rip - 0x2ba] ; call rax
0x0000000000074142 : lea esi, dword ptr [rip - 0x338] ; call rax
0x000000000007438a : lea esi, dword ptr [rip - 0x580] ; call rax
0x00000000000485c8 : lea esi, dword ptr [rip - 0x62e] ; add rax, rsi ; jmp rax
0x0000000000083eef : lea esi, dword ptr [rsi + rcx - 1] ; std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x00000000000dc1ef : lea esi, dword ptr [rsi] ; hlt ; dec dword ptr [rax - 0x77] ; ret
0x000000000010cec5 : lea esi, dword ptr [rsp + 8] ; call qword ptr [rax]
0x0000000000117425 : lea esi, dword ptr [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000f9330 : lea esi, dword ptr [rsp - 0x18] ; mov eax, 0x83 ; syscall
0x00000000000351e2 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000066991 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000007ecc5 : lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000012bfef : lea r9, qword ptr [r11 + r9] ; jmp r9
0x000000000006e443 : lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x000000000010b3e7 : lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000006e51f : lea r9, qword ptr [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x000000000010b228 : lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x000000000009b542 : lea r9, qword ptr [rsp + 0x20] ; call rbx
0x000000000009b1be : lea r9, qword ptr [rsp + 0x20] ; lea rcx, qword ptr [rax + 4] ; call rbx
0x000000000009b08c : lea r9, qword ptr [rsp + 0x28] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x000000000009ba19 : lea r9, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rbx
0x000000000010b87a : lea r9, qword ptr [rsp + 0x30] ; call qword ptr [rax]
0x00000000000a77be : lea r9, qword ptr [rsp + 0x30] ; mov rdi, qword ptr [rax] ; call r14
0x0000000000114f0e : lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x000000000009b750 : lea r9, qword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x00000000000a8133 : lea rax, qword ptr [r8 + rax*4] ; ret
0x00000000000838d3 : lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x00000000000838e3 : lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x000000000008f0b3 : lea rax, qword ptr [rax + rdi + 0x30] ; ret
0x00000000000838b3 : lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x00000000000b3211 : lea rax, qword ptr [rax + rdx*8] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000010caaa : lea rax, qword ptr [rbx + 0x2260] ; pop rbx ; ret
0x000000000008251c : lea rax, qword ptr [rcx + rsi] ; ret
0x0000000000098b23 : lea rax, qword ptr [rcx - 1] ; ret
0x0000000000095c4b : lea rax, qword ptr [rdi + 0x10] ; ret
0x0000000000095c60 : lea rax, qword ptr [rdi + 0x11] ; ret
0x0000000000095c7e : lea rax, qword ptr [rdi + 0x12] ; ret
0x0000000000095c9e : lea rax, qword ptr [rdi + 0x13] ; ret
0x0000000000095cc1 : lea rax, qword ptr [rdi + 0x14] ; ret
0x0000000000095ce0 : lea rax, qword ptr [rdi + 0x15] ; ret
0x0000000000095d00 : lea rax, qword ptr [rdi + 0x16] ; ret
0x0000000000095d20 : lea rax, qword ptr [rdi + 0x17] ; ret
0x0000000000095d43 : lea rax, qword ptr [rdi + 0x18] ; ret
0x0000000000095d68 : lea rax, qword ptr [rdi + 0x19] ; ret
0x0000000000095d86 : lea rax, qword ptr [rdi + 0x1a] ; ret
0x0000000000095da6 : lea rax, qword ptr [rdi + 0x1b] ; ret
0x0000000000095dc2 : lea rax, qword ptr [rdi + 0x1c] ; ret
0x0000000000095de2 : lea rax, qword ptr [rdi + 0x1d] ; ret
0x0000000000095e02 : lea rax, qword ptr [rdi + 0x1e] ; ret
0x0000000000095e22 : lea rax, qword ptr [rdi + 0x1f] ; ret
0x0000000000096c72 : lea rax, qword ptr [rdi + 0x20] ; ret
0x0000000000096ed8 : lea rax, qword ptr [rdi + 0x40] ; ret
0x0000000000095b9c : lea rax, qword ptr [rdi + 0xa] ; ret
0x0000000000095bbc : lea rax, qword ptr [rdi + 0xb] ; ret
0x0000000000095bde : lea rax, qword ptr [rdi + 0xc] ; ret
0x0000000000095bfe : lea rax, qword ptr [rdi + 0xd] ; ret
0x0000000000095c1e : lea rax, qword ptr [rdi + 0xe] ; ret
0x0000000000095c38 : lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000008ec73 : lea rax, qword ptr [rdi + 1] ; ret
0x000000000008ec84 : lea rax, qword ptr [rdi + 2] ; ret
0x000000000008ec97 : lea rax, qword ptr [rdi + 3] ; ret
0x000000000008eca6 : lea rax, qword ptr [rdi + 4] ; ret
0x000000000008ecb9 : lea rax, qword ptr [rdi + 5] ; ret
0x000000000008ee26 : lea rax, qword ptr [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x000000000008eccb : lea rax, qword ptr [rdi + 6] ; ret
0x000000000008ecdf : lea rax, qword ptr [rdi + 7] ; ret
0x000000000008ec65 : lea rax, qword ptr [rdi + 8] ; ret
0x0000000000095b7e : lea rax, qword ptr [rdi + 9] ; ret
0x0000000000083908 : lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x0000000000083918 : lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x0000000000083802 : lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000008a756 : lea rax, qword ptr [rdi + rax] ; ret
0x0000000000125c59 : lea rax, qword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x000000000002bcf4 : lea rax, qword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x0000000000082418 : lea rax, qword ptr [rdi + rsi] ; ret
0x000000000009a93d : lea rax, qword ptr [rdi - 0x10] ; ret
0x000000000009aaa0 : lea rax, qword ptr [rdi - 0xc] ; ret
0x000000000009aac0 : lea rax, qword ptr [rdi - 4] ; ret
0x000000000009aab0 : lea rax, qword ptr [rdi - 8] ; ret
0x0000000000095ad2 : lea rax, qword ptr [rdi] ; ret
0x0000000000140c1c : lea rax, qword ptr [rdx + 0xa] ; ret
0x0000000000140c3c : lea rax, qword ptr [rdx + 0xb] ; ret
0x0000000000140c5e : lea rax, qword ptr [rdx + 0xc] ; ret
0x0000000000140c7e : lea rax, qword ptr [rdx + 0xd] ; ret
0x0000000000140c9e : lea rax, qword ptr [rdx + 0xe] ; ret
0x0000000000140b2e : lea rax, qword ptr [rdx + 0xf] ; ret
0x0000000000140b56 : lea rax, qword ptr [rdx + 1] ; ret
0x0000000000140b6c : lea rax, qword ptr [rdx + 2] ; ret
0x0000000000140b84 : lea rax, qword ptr [rdx + 3] ; ret
0x0000000000140b9a : lea rax, qword ptr [rdx + 4] ; ret
0x0000000000140bac : lea rax, qword ptr [rdx + 5] ; ret
0x0000000000140bca : lea rax, qword ptr [rdx + 6] ; ret
0x0000000000140ad6 : lea rax, qword ptr [rdx + 7] ; ret
0x0000000000140bdc : lea rax, qword ptr [rdx + 8] ; ret
0x0000000000140bfc : lea rax, qword ptr [rdx + 9] ; ret
0x0000000000140b44 : lea rax, qword ptr [rdx] ; ret
0x0000000000080a3d : lea rax, qword ptr [rip + 0x109ac] ; ret
0x0000000000080a89 : lea rax, qword ptr [rip + 0x10] ; ret
0x000000000007e7dd : lea rax, qword ptr [rip + 0x10fec] ; ret
0x000000000002b228 : lea rax, qword ptr [rip + 0x1367f6] ; ret
0x00000000000203e0 : lea rax, qword ptr [rip + 0x141184] ; ret
0x00000000000203f0 : lea rax, qword ptr [rip + 0x143049] ; ret
0x0000000000083953 : lea rax, qword ptr [rip + 0x26] ; ret
0x00000000000f66f0 : lea rax, qword ptr [rip + 0x328f9] ; ret
0x00000000000f6620 : lea rax, qword ptr [rip + 0x329e9] ; ret
0x00000000000f6550 : lea rax, qword ptr [rip + 0x32ab9] ; ret
0x00000000000f673e : lea rax, qword ptr [rip + 0x357fb] ; ret
0x00000000000f659e : lea rax, qword ptr [rip + 0x359bb] ; ret
0x00000000000f666e : lea rax, qword ptr [rip + 0x382bb] ; ret
0x00000000000f66c9 : lea rax, qword ptr [rip + 0x50710] ; ret
0x00000000000f65f9 : lea rax, qword ptr [rip + 0x50800] ; ret
0x00000000000f6529 : lea rax, qword ptr [rip + 0x508d0] ; ret
0x00000000000f67d5 : lea rax, qword ptr [rip + 0x50ba4] ; ret
0x0000000000109b80 : lea rax, qword ptr [rip + 0x57e9e] ; ret
0x00000000000846f9 : lea rax, qword ptr [rip + 0x80] ; ret
0x0000000000089187 : lea rax, qword ptr [rip + 0x9fe92] ; ret
0x00000000000891d5 : lea rax, qword ptr [rip + 0xa2d94] ; ret
0x00000000000829ca : lea rax, qword ptr [rip + 0xa347f] ; ret
0x000000000008263a : lea rax, qword ptr [rip + 0xa36df] ; ret
0x00000000000844c7 : lea rax, qword ptr [rip + 0xa4b32] ; ret
0x0000000000083e07 : lea rax, qword ptr [rip + 0xa5212] ; ret
0x00000000000801ca : lea rax, qword ptr [rip + 0xa5a0f] ; ret
0x0000000000084515 : lea rax, qword ptr [rip + 0xa7a34] ; ret
0x000000000009a1bb : lea rax, qword ptr [rip + 0xa973e] ; ret
0x000000000009ad77 : lea rax, qword ptr [rip + 0xaa842] ; ret
0x0000000000083e55 : lea rax, qword ptr [rip + 0xaaae4] ; ret
0x000000000009ad7f : lea rax, qword ptr [rip + 0xae26a] ; ret
0x000000000008231d : lea rax, qword ptr [rip + 0xba5fc] ; ret
0x000000000008458d : lea rax, qword ptr [rip + 0xbaf0c] ; ret
0x00000000000800bd : lea rax, qword ptr [rip + 0xbb0ac] ; ret
0x00000000000846ad : lea rax, qword ptr [rip + 0xbc5fc] ; ret
0x0000000000089160 : lea rax, qword ptr [rip + 0xbdca9] ; ret
0x0000000000083967 : lea rax, qword ptr [rip + 0xc0612] ; ret
0x00000000000844a0 : lea rax, qword ptr [rip + 0xc2949] ; ret
0x0000000000083de0 : lea rax, qword ptr [rip + 0xc3029] ; ret
0x00000000000842cc : lea rax, qword ptr [rip + 0xc30bd] ; ret
0x000000000008396f : lea rax, qword ptr [rip + 0xc3f0a] ; ret
0x000000000007e9ca : lea rax, qword ptr [rip + 0xc8b8f] ; ret
0x000000000007ec2d : lea rax, qword ptr [rip + 0xc] ; ret
0x000000000009ad63 : lea rax, qword ptr [rip + 0xcbd6] ; ret
0x000000000009a1b3 : lea rax, qword ptr [rip + 0xd836] ; ret
0x000000000008475c : lea rax, qword ptr [rip + 0xd] ; ret
0x0000000000083e2e : lea rax, qword ptr [rip + 0xfb] ; ret
0x00000000000891ae : lea rax, qword ptr [rip - 0x5285] ; ret
0x00000000000844ee : lea rax, qword ptr [rip - 0x5e5] ; ret
0x00000000000f6577 : lea rax, qword ptr [rip - 0x7265e] ; ret
0x00000000000f6647 : lea rax, qword ptr [rip - 0x7272e] ; ret
0x00000000000f6717 : lea rax, qword ptr [rip - 0x7281e] ; ret
0x0000000000083e2d : lea rax, qword ptr cs:[rip + 0xfb] ; ret
0x00000000000891ad : lea rax, qword ptr cs:[rip - 0x5285] ; ret
0x00000000000844ed : lea rax, qword ptr cs:[rip - 0x5e5] ; ret
0x00000000000f6576 : lea rax, qword ptr cs:[rip - 0x7265e] ; ret
0x00000000000f6646 : lea rax, qword ptr cs:[rip - 0x7272e] ; ret
0x00000000000f6716 : lea rax, qword ptr cs:[rip - 0x7281e] ; ret
0x000000000009aa79 : lea rax, qword ptr es:[rdi - 0x10] ; ret
0x00000000000fef38 : lea rbx, qword ptr [rsp + 0x44] ; call 0xdb967
0x000000000009438d : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000009b091 : lea rcx, qword ptr [rax + 1] ; call rbx
0x000000000009b1c3 : lea rcx, qword ptr [rax + 4] ; call rbx
0x000000000009b5cc : lea rcx, qword ptr [rax + 4] ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x0000000000069ed5 : lea rcx, qword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x00000000000ec386 : lea rcx, qword ptr [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000110f5d : lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000078000 : lea rdi, qword ptr [rbx + 0x10] ; call 0x84306
0x00000000000b3be4 : lea rdi, qword ptr [rbx + 0x13] ; call 0x80656
0x0000000000113651 : lea rdi, qword ptr [rbx + 0x58] ; call rax
0x0000000000112bf1 : lea rdi, qword ptr [rbx + 0x68] ; call rax
0x0000000000110394 : lea rdi, qword ptr [rbx + 0xc8] ; call rax
0x00000000000289e0 : lea rdi, qword ptr [rip + 0x13c819] ; mov eax, ecx ; syscall
0x0000000000100df0 : lea rdi, qword ptr [rip + 0x29c905] ; call rax
0x00000000000fc52c : lea rdi, qword ptr [rip + 0x68104] ; call 0x109009
0x00000000000e70c4 : lea rdi, qword ptr [rip + 0x7c715] ; mov eax, ebx ; syscall
0x00000000000e6fbe : lea rdi, qword ptr [rip + 0x7c810] ; mov eax, ebx ; syscall
0x00000000000e44e3 : lea rdi, qword ptr [rip + 0x7d092] ; mov eax, ecx ; syscall
0x00000000000f5e76 : lea rdi, qword ptr [rip - 0x16d] ; call rax
0x000000000012c0c3 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000007bcf9 : lea rdx, qword ptr [rcx - 8] ; cmovne rax, rdx ; ret
0x00000000000ec162 : lea rdx, qword ptr [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x000000000012c4b7 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x00000000000e0609 : lea rdx, qword ptr [rsp - 0x30] ; syscall
0x00000000000321da : lea rsi, qword ptr [rax + r12] ; mov eax, r8d ; syscall
0x000000000003f1ce : lea rsi, qword ptr [rip + 0x1cb] ; call rax
0x000000000011d8b5 : lea rsi, qword ptr [rip + 0x280864] ; xor eax, eax ; syscall
0x0000000000068b39 : lea rsi, qword ptr [rip + 0x30] ; call rax
0x0000000000075663 : lea rsi, qword ptr [rip - 0x185a] ; call rax
0x0000000000075b33 : lea rsi, qword ptr [rip - 0x1d2a] ; call rax
0x0000000000068e23 : lea rsi, qword ptr [rip - 0x2ba] ; call rax
0x0000000000074141 : lea rsi, qword ptr [rip - 0x338] ; call rax
0x0000000000074389 : lea rsi, qword ptr [rip - 0x580] ; call rax
0x0000000000083eee : lea rsi, qword ptr [rsi + rcx - 1] ; std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x000000000010cec4 : lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x0000000000117424 : lea rsi, qword ptr [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000351e1 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000025643 : leave ; add al, byte ptr [rax] ; add bh, dh ; ret 0
0x000000000012bc57 : leave ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000017d365 : leave ; add byte ptr [rax], al ; call 0xffffffffd817c558
0x000000000016c2ed : leave ; add byte ptr [rax], al ; sub esi, eax ; call rsp
0x00000000000bac48 : leave ; add cl, byte ptr [rax - 0x7d] ; ret 0xe901
0x000000000016ed65 : leave ; add dword ptr [rax], eax ; adc al, 0x63 ; clc ; call rsp
0x000000000018d32d : leave ; add dword ptr [rax], eax ; and byte ptr [rdx], cl ; clc ; jmp qword ptr [rdi]
0x000000000018d3b5 : leave ; add dword ptr [rax], eax ; pop rax ; adc edi, eax ; call qword ptr [rsi]
0x0000000000121c77 : leave ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000003372b : leave ; add edi, esi ; ret 0
0x00000000000325e1 : leave ; addsd xmm0, xmm0 ; mov dword ptr [rdi], ecx ; ret
0x000000000002873c : leave ; call r15
0x0000000000002bf4 : leave ; clc ; ret
0x00000000000c2f50 : leave ; cmc ; lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000826e6 : leave ; cmove rax, rdx ; ret
0x0000000000125c91 : leave ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x000000000010f9ab : leave ; in al, 0x28 ; add byte ptr [rbx + rcx*4 + 0x35], cl ; ret 0x28ae
0x000000000010606c : leave ; jne 0x106050 ; ret
0x000000000008ea79 : leave ; jne 0x8ea6c ; ret
0x000000000008ebb8 : leave ; jne 0x8ebad ; xor eax, eax ; ret
0x0000000000098900 : leave ; jne 0x988f3 ; ret
0x00000000000989b0 : leave ; jne 0x989a3 ; ret
0x0000000000098c70 : leave ; jne 0x98c67 ; sub rax, 1 ; ret
0x000000000009ab0c : leave ; jne 0x9ab04 ; ret
0x000000000009bf5a : leave ; jne 0x9bf17 ; mov rax, rdx ; ret
0x00000000000f0593 : leave ; jne 0xf0584 ; ret
0x0000000000125c58 : leave ; lea rax, qword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x0000000000093e71 : leave ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000000ecc41 : leave ; mov ecx, 0x400 ; call 0x108e78
0x000000000004721c : leave ; mov edx, 1 ; jmp rax
0x000000000008ecff : leave ; movsxd r9, dword ptr [rax + r9*4] ; add r9, rax ; jmp r9
0x000000000008ed9f : leave ; movsxd rax, dword ptr [r10 + r9*4] ; add rax, r10 ; jmp rax
0x00000000000abfc6 : leave ; movsxd rdx, dword ptr [rdi + rcx*4] ; add rdx, rdi ; jmp rdx
0x000000000003c795 : leave ; ret
0x000000000007cebb : leave ; ret 0x31
0x00000000000e7304 : leave ; ret 7
0x000000000015a0b4 : leave ; retf
0x00000000001570a9 : leave ; retf -0x3335
0x0000000000037133 : leave ; retf 0
0x0000000000158881 : leave ; retf 0x6ee8
0x0000000000169ff9 : leave ; sti ; call rax
0x0000000000100df4 : leave ; sub dword ptr [rax], eax ; call rax
0x000000000009b53f : leave ; xor edx, edx ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x00000000000fc1ea : leave ; xor edx, edx ; mov r8d, r13d ; call 0x108ce8
0x000000000018689f : les r8d, ptr [r13 - 0x3f] ; ret 0xc044
0x000000000016b70b : ljmp ptr [rax + rax*4 - 0x7bdc0000] ; in al, dx ; call rsp
0x000000000016f2eb : ljmp ptr [rax + rbp*8 + 0x240001] ; stc ; call rsp
0x000000000016a91b : ljmp ptr [rax + rcx*4 - 0x77c30004] ; cld ; jmp rdx
0x000000000014abcb : ljmp ptr [rax - 6] ; in eax, dx ; lcall ptr [rax - 6] ; in eax, dx ; call rax
0x000000000014abdf : ljmp ptr [rax] ; cli ; in eax, dx ; lcall ptr [rax] ; cli ; in eax, dx ; call rax
0x0000000000184c23 : ljmp ptr [rbp] ; add byte ptr [rax], al ; add al, 0x51 ; retf 0
0x000000000016a27f : ljmp ptr [rbx + 0x41fffdc0] ; ret 0xfffd
0x000000000016beb3 : ljmp ptr [rbx + rbp*4 - 0x6a8c0000] ; out dx, eax ; jmp rsp
0x000000000015e337 : ljmp ptr [rbx + rbp] ; cmc ; jmp qword ptr [rax]
0x000000000015cccb : ljmp ptr [rbx + rsi*8 - 0xf] ; jmp qword ptr [rsi]
0x000000000015df9b : ljmp ptr [rbx] ; adc ch, dh ; call rsp
0x000000000015deeb : ljmp ptr [rbx] ; and dh, ch ; call rsp
0x000000000016a26f : ljmp ptr [rbx] ; sar ch, 0xff ; ret 0xfffd
0x000000000016a28f : ljmp ptr [rbx] ; sar ebp, -1 ; ret 0xfffd
0x000000000017052b : ljmp ptr [rcx + 0x43c40002] ; sti ; call rsp
0x00000000001703c3 : ljmp ptr [rcx + rbx*2 + 0x1de40002] ; sti ; call rsp
0x000000000015f455 : ljmp ptr [rcx - 0x3c000500] ; add dh, bh ; jmp rdi
0x0000000000170623 : ljmp ptr [rdi + rcx + 2] ; add ah, al ; push rcx ; sti ; call rsp
0x000000000016d8cb : ljmp ptr [rdi + rdx*2 + 0x68640001] ; cmc ; jmp rsp
0x0000000000089e06 : ljmp ptr [rdx] ; cmp rcx, rdx ; jne 0x89e08 ; ret
0x0000000000157103 : ljmp ptr [rdx] ; pop rcx ; in eax, dx ; call rcx
0x000000000016af5f : ljmp ptr [rdx] ; scasb al, byte ptr [rdi] ; cld ; call rax
0x000000000016aedb : ljmp ptr [rsi + 0x3efffcae] ; scasb al, byte ptr [rdi] ; cld ; jmp rsp
0x000000000015ddd7 : ljmp ptr [rsi + 0x63fff514] ; adc ebp, esi ; call rsp
0x000000000016d26b : ljmp ptr [rsi + rbp + 1] ; add ah, dl ; ret
0x000000000016f4c3 : ljmp ptr [rsi + rsi*8 + 0x58c40001] ; stc ; jmp rsp
0x000000000015e38b : ljmp ptr [rsi] ; sub esi, ebp ; call qword ptr [rsi]
0x000000000015e333 : ljmp ptr [rsi] ; sub esi, ebp ; ljmp ptr [rbx + rbp] ; cmc ; jmp qword ptr [rax]
0x000000000017fa6d : lock add byte ptr [rax], al ; adc byte ptr [rdi - 0xd], dh ; call rsi
0x000000000014435e : lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000017fa6c : lock add byte ptr fs:[rax], al ; adc byte ptr [rdi - 0xd], dh ; call rsi
0x000000000016f3ed : lock add dword ptr [rax], eax ; stc ; jmp rsp
0x00000000000e0364 : lock and byte ptr [rax - 0x77], cl ; ret
0x000000000011e78d : lock dec dword ptr [rax - 0x77] ; ret
0x0000000000111c3b : lock dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x000000000015c2be : lock inc dword ptr [rbx - 0x29000fea] ; sub eax, esi ; call rsi
0x000000000011b100 : lock sub dword ptr [rdi + 0x18], 1 ; je 0x11b119 ; xor eax, eax ; ret
0x0000000000120d70 : lodsb al, byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000016b70c : lodsb al, byte ptr [rsi] ; add byte ptr [rax], 0 ; and al, 0x84 ; in al, dx ; call rsp
0x00000000000a4b87 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000148a60 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x000000000010c750 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0xf04
0x000000000011f715 : lodsb al, byte ptr [rsi] ; and al, 0x70 ; add al, 0 ; add byte ptr [rax - 0x7f], cl ; ret
0x000000000016ef99 : lodsb al, byte ptr [rsi] ; clc ; call rsp
0x00000000001880b4 : lodsb al, byte ptr [rsi] ; jbe 0x1880bf ; add al, ch ; jg 0x1880bb ; jmp qword ptr [rsi]
0x000000000018d3b4 : lodsb al, byte ptr [rsi] ; leave ; add dword ptr [rax], eax ; pop rax ; adc edi, eax ; call qword ptr [rsi]
0x000000000017b7b4 : lodsb al, byte ptr [rsi] ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; cwde ; mov esi, eax ; jmp rbx
0x0000000000159fa6 : lodsb al, byte ptr [rsi] ; loop 0x159f73 ; retf
0x0000000000121394 : lodsb al, byte ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000015ad5d : lodsb al, byte ptr [rsi] ; or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000001865b4 : lodsb al, byte ptr [rsi] ; pop rbx ; add dword ptr [rax], eax ; call 0x22185c04
0x00000000000c659b : lodsb al, byte ptr [rsi] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001703c4 : lodsb al, byte ptr [rsi] ; pop rcx ; add al, byte ptr [rax] ; in al, 0x1d ; sti ; call rsp
0x000000000016b294 : lodsb al, byte ptr [rsi] ; push 0 ; add ah, dh ; loopne 0x16b28d ; call rsp
0x0000000000064ada : lodsb al, byte ptr [rsi] ; retf
0x000000000002c458 : lodsb al, byte ptr [rsi] ; retf 0x36
0x000000000016f6c1 : lodsb al, byte ptr [rsi] ; stc ; call rsp
0x000000000016a079 : lodsb al, byte ptr [rsi] ; std ; inc eax ; lodsd eax, dword ptr [rsi] ; std ; jmp rsi
0x000000000016a069 : lodsb al, byte ptr [rsi] ; std ; jmp rax
0x0000000000169fbd : lodsb al, byte ptr [rsi] ; sti ; inc dword ptr [rax - 0x52] ; sti ; jmp qword ptr [rax]
0x000000000016beb4 : lodsb al, byte ptr [rsi] ; stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; je 0x16be56 ; out dx, eax ; jmp rsp
0x00000000001833b4 : lodsb al, byte ptr [rsi] ; sub dword ptr [rcx], eax ; add al, cl ; xchg eax, ebp ; cmc ; jmp qword ptr [rcx]
0x0000000000158806 : lodsb al, byte ptr [rsi] ; xchg eax, edi ; jo 0x158875 ; salc ; retf
0x00000000001585db : lodsb al, byte ptr [rsi] ; xchg eax, edx ; pop rbx ; retf
0x000000000007e2ac : lodsb al, byte ptr [rsi] ; xor dword ptr [rax], eax ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x000000000016f6c0 : lodsb al, byte ptr fs:[rsi] ; stc ; call rsp
0x000000000009c9e6 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000c9799 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; add cl, byte ptr [rax - 0x77] ; ret
0x000000000017b7b5 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; cwde ; mov esi, eax ; jmp rbx
0x000000000018b76d : lodsd eax, dword ptr [rsi] ; add dword ptr [rax], eax ; ret
0x000000000016ff51 : lodsd eax, dword ptr [rsi] ; cli ; jmp rsp
0x000000000016b8f9 : lodsd eax, dword ptr [rsi] ; in al, dx ; jmp rsp
0x00000000000dc94f : lodsd eax, dword ptr [rsi] ; mov eax, 0x5c ; syscall
0x000000000015a385 : lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf -0x6620
0x0000000000124f00 : lodsd eax, dword ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000428f2 : lodsd eax, dword ptr [rsi] ; ret
0x000000000005f19f : lodsd eax, dword ptr [rsi] ; retf 0
0x000000000016a06d : lodsd eax, dword ptr [rsi] ; std ; call qword ptr [rcx]
0x000000000016a07d : lodsd eax, dword ptr [rsi] ; std ; jmp rsi
0x000000000018b76c : lodsd eax, dword ptr fs:[rsi] ; add dword ptr [rax], eax ; ret
0x000000000009c9e5 : lodsq rax, qword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000100cba : loop 0x100ca8 ; add dword ptr [rax], eax ; mov rdi, r12 ; call rbx
0x0000000000114926 : loop 0x1148b8 ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000114ab9 : loop 0x114a4b ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00000000001331ea : loop 0x1331e5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001331e9 : loop 0x1331e6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000135d0a : loop 0x135d05 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000135d09 : loop 0x135d06 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000159fa7 : loop 0x159f72 ; retf
0x000000000015b0fa : loop 0x15b14f ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x000000000016c6c5 : loop 0x16c6cd ; add byte ptr [rsi + rdx*4 - 0x10], dh ; jmp rsp
0x0000000000181ba9 : loop 0x181ba1 ; jmp qword ptr [rax]
0x0000000000191281 : loop 0x19127d ; jmp qword ptr [rbx]
0x00000000000025ed : loop 0x25c7 ; ret 0x23cb
0x0000000000002c02 : loop 0x2c15 ; retf
0x0000000000035f37 : loop 0x35f60 ; mov eax, eax ; or rax, rdx ; ret
0x000000000005b288 : loop 0x5b28e ; dec dword ptr [rax - 0x7d] ; ret 0x4108
0x00000000000656a2 : loop 0x65634 ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000006edc4 : loop 0x6edcb ; mov eax, edx ; ret
0x000000000006eeb4 : loop 0x6eebb ; mov eax, edx ; ret
0x00000000000738d6 : loop 0x738dc ; dec dword ptr [rax + 0x39] ; ret
0x000000000007cfec : loop 0x7cff2 ; dec dword ptr [rax - 0x77] ; ret 0xcb8
0x000000000007d667 : loop 0x7d6b5 ; mov edi, ecx ; call rax
0x000000000008f7bd : loop 0x8f7f5 ; shr byte ptr [rcx], 0xc8 ; ret
0x0000000000094fea : loop 0x94ff5 ; add byte ptr [rax], al ; ret
0x0000000000099185 : loop 0x9919f ; movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x000000000009aee9 : loop 0x9aef6 ; mov rax, rdi ; jne 0x9af05 ; ret
0x000000000009b74f : loop 0x9b7a6 ; lea ecx, dword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x000000000009ba18 : loop 0x9ba6f ; lea ecx, dword ptr [rsp + 0x28] ; mov rdi, rbp ; call rbx
0x000000000009bcf8 : loop 0x9bd4f ; lea ecx, dword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x00000000000b4ac8 : loop 0xb4ab4 ; ret 0xfffc
0x00000000000bba14 : loop 0xbba06 ; salc ; jnp 0xbba1d ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c9178 : loop 0xc917d ; add esi, esi ; ret
0x00000000000c9359 : loop 0xc9386 ; retf -0x2d7b
0x00000000000d2cf0 : loop 0xd2d03 ; retf 0x5089
0x00000000000e0455 : loop 0xe04a8 ; mov edx, ebp ; mov eax, 0x11d ; syscall
0x00000000000ea1fc : loop 0xea253 ; mov esi, ebp ; mov eax, 0x120 ; syscall
0x00000000000fecf2 : loop 0xfec84 ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000011035e : loope 0x1102f3 ; ret
0x000000000013315a : loope 0x133155 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000133159 : loope 0x133156 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000135c7a : loope 0x135c75 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000135c79 : loope 0x135c76 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000013e78b : loope 0x13e792 ; add byte ptr [rax], al ; ret
0x000000000014778b : loope 0x147795 ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000149da6 : loope 0x149e05 ; ret
0x000000000015a0b1 : loope 0x15a133 ; pop rdx ; leave ; retf
0x000000000015df6c : loope 0x15df96 ; cmc ; dec esi ; and ebp, esi ; call rsp
0x000000000015fa69 : loope 0x15fa73 ; add byte ptr [rcx], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x000000000016d7c1 : loope 0x16d7b9 ; jmp rsp
0x00000000001910f9 : loope 0x1910f5 ; call qword ptr [rdi]
0x00000000000026c2 : loope 0x267d ; hlt ; out -0x21, eax ; syscall
0x00000000000036aa : loope 0x36d0 ; retf 0x5038
0x0000000000041f86 : loope 0x41f46 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000042066 : loope 0x42026 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000042787 : loope 0x427d9 ; mov dword ptr [rdi], ecx ; ret
0x00000000000427b8 : loope 0x4280b ; mov dword ptr [rdi - 8], ecx ; ret
0x000000000004282d : loope 0x42880 ; mov dword ptr [rdi - 0x10], ecx ; ret
0x000000000005f198 : loope 0x5f1a1 ; dec dword ptr [rcx + rcx*4 - 9] ; call 0x6bc58
0x000000000006ecd1 : loope 0x6eca6 ; mov dword ptr [rdi], ecx ; ret
0x00000000000987f9 : loope 0x98868 ; nop dword ptr [rax + rax] ; ret
0x000000000009929e : loope 0x99295 ; ret
0x000000000009a43e : loope 0x9a453 ; je 0x9a464 ; ret
0x00000000000b3ffd : loope 0xb3f8a ; ret 0xf631
0x00000000000bd03b : loope 0xbcfc2 ; retf 0xf04
0x00000000000c1d8b : loope 0xc1d92 ; add eax, dword ptr [rax] ; add byte ptr [rcx], bh ; retf
0x00000000000c5cea : loope 0xc5c73 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xf35b
0x00000000000c5cbd : loope 0xc5cc2 ; add esi, esi ; ret
0x00000000000c791d : loope 0xc7999 ; sbb byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000d4017 : loope 0xd4020 ; and byte ptr [rax], al ; add byte ptr [rax + 9], cl ; retf -0x76b8
0x00000000000e18bd : loope 0xe18c4 ; mov eax, 0xa9 ; syscall
0x00000000000e370b : loope 0xe369a ; sub eax, dword ptr [rax] ; ret
0x000000000010383b : loopne 0x10389d ; pop rbp ; pop r12 ; ret
0x000000000010384d : loopne 0x1038af ; pop rbp ; pop r12 ; ret
0x00000000001038e4 : loopne 0x1038e3 ; add eax, 0x10 ; ret
0x0000000000103e78 : loopne 0x103e6f ; ret
0x00000000001046db : loopne 0x1046e8 ; cdqe ; shr rax, 4 ; ret
0x000000000010ac2f : loopne 0x10ac95 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001151e7 : loopne 0x1151f0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000011677d : loopne 0x116788 ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x0000000000118741 : loopne 0x1187b1 ; nop dword ptr [rax + rax] ; ret
0x000000000012c511 : loopne 0x12c528 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012c510 : loopne 0x12c529 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012c661 : loopne 0x12c678 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012c660 : loopne 0x12c679 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012c7b1 : loopne 0x12c7c8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012c7b0 : loopne 0x12c7c9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012c901 : loopne 0x12c918 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012c900 : loopne 0x12c919 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012ca51 : loopne 0x12ca68 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012ca50 : loopne 0x12ca69 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012cba1 : loopne 0x12cbb8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012cba0 : loopne 0x12cbb9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012ccf1 : loopne 0x12cd08 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012ccf0 : loopne 0x12cd09 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012ce3f : loopne 0x12ce56 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012ce3e : loopne 0x12ce57 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012cf91 : loopne 0x12cfa8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012cf90 : loopne 0x12cfa9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012d0e1 : loopne 0x12d0f8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012d0e0 : loopne 0x12d0f9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012d231 : loopne 0x12d248 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012d230 : loopne 0x12d249 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012d381 : loopne 0x12d398 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012d380 : loopne 0x12d399 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012d4d1 : loopne 0x12d4e8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012d4d0 : loopne 0x12d4e9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012d621 : loopne 0x12d638 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012d620 : loopne 0x12d639 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012d771 : loopne 0x12d788 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012d770 : loopne 0x12d789 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012eee1 : loopne 0x12eef8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012eee0 : loopne 0x12eef9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012f031 : loopne 0x12f048 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012f030 : loopne 0x12f049 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012f181 : loopne 0x12f198 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012f180 : loopne 0x12f199 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012f2d1 : loopne 0x12f2e8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012f2d0 : loopne 0x12f2e9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012f421 : loopne 0x12f438 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012f420 : loopne 0x12f439 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012f571 : loopne 0x12f588 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012f570 : loopne 0x12f589 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012f6c1 : loopne 0x12f6d8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012f6c0 : loopne 0x12f6d9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012f80f : loopne 0x12f826 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012f80e : loopne 0x12f827 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012f961 : loopne 0x12f978 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012f960 : loopne 0x12f979 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012fab1 : loopne 0x12fac8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012fab0 : loopne 0x12fac9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012fc01 : loopne 0x12fc18 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012fc00 : loopne 0x12fc19 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012fd51 : loopne 0x12fd68 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012fd50 : loopne 0x12fd69 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012fea1 : loopne 0x12feb8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012fea0 : loopne 0x12feb9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012fff1 : loopne 0x130008 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012fff0 : loopne 0x130009 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000130141 : loopne 0x130158 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000130140 : loopne 0x130159 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001586d4 : loopne 0x1586b4 ; cld ; test al, 0x97 ; xchg eax, esp ; ret
0x000000000015d030 : loopne 0x15d0b5 ; inc dword ptr [rax] ; jge 0x15d031 ; jmp qword ptr [rax]
0x000000000015d050 : loopne 0x15d0d6 ; inc dword ptr [rax] ; jle 0x15d051 ; jmp qword ptr [rax]
0x000000000015d070 : loopne 0x15d0f7 ; inc dword ptr [rax] ; jg 0x15d071 ; jmp qword ptr [rax]
0x000000000015d090 : loopne 0x15d114 ; call qword ptr [rax]
0x000000000015d218 : loopne 0x15d1b2 ; inc dword ptr [rax] ; xchg eax, edx ; jmp qword ptr [rax]
0x000000000015d27c : loopne 0x15d216 ; call qword ptr [rax]
0x000000000015d2d0 : loopne 0x15d270 ; push rax ; xchg eax, edi ; call qword ptr [rax]
0x000000000015e3b0 : loopne 0x15e36b ; cmc ; jmp rax
0x000000000015e3b4 : loopne 0x15e373 ; cmc ; inc eax ; mov dh, 0xf5 ; call rax
0x000000000015e7ec : loopne 0x15e7ad ; cmc ; call rax
0x000000000015ff94 : loopne 0x15ff5f ; cli ; jmp qword ptr [rax - 0x2f00053e]
0x000000000016108c : loopne 0x1610a9 ; sti ; jmp rax
0x0000000000161090 : loopne 0x1610b1 ; sti ; inc eax ; sbb bl, bh ; jmp rax
0x000000000016a06c : loopne 0x16a01e ; std ; call qword ptr [rcx]
0x000000000016a074 : loopne 0x16a024 ; std ; call rax
0x000000000016a374 : loopne 0x16a3b8 ; cld ; jmp rax
0x000000000016a378 : loopne 0x16a3be ; cld ; jmp rax
0x000000000016a3f4 : loopne 0x16a437 ; cld ; jmp rax
0x000000000016a3f8 : loopne 0x16a43d ; cld ; jmp rax
0x000000000016a3fc : loopne 0x16a447 ; cld ; push qword ptr [rax + 0x35] ; cld ; jmp qword ptr [rax]
0x000000000016a45c : loopne 0x16a493 ; cld ; jmp qword ptr [rax]
0x000000000016a5cc : loopne 0x16a633 ; cld ; call rax
0x000000000016b299 : loopne 0x16b288 ; call rsp
0x0000000000174360 : loopne 0x17439c ; in al, dx ; call rcx
0x0000000000174a70 : loopne 0x174a3a ; in al, dx ; call rax
0x0000000000179179 : loopne 0x179187 ; ret
0x000000000017c4d9 : loopne 0x17c4d9 ; call qword ptr [rax]
0x000000000017d820 : loopne 0x17d83e ; call qword ptr [rdx]
0x000000000017d820 : loopne 0x17d83f ; call qword ptr [rdx]
0x000000000017efc0 : loopne 0x17f013 ; jmp qword ptr [rdi]
0x000000000017eff0 : loopne 0x17f043 ; call qword ptr [rbx]
0x000000000017f2b0 : loopne 0x17f309 ; call rcx
0x000000000017fca0 : loopne 0x17fc28 ; call qword ptr [rdx]
0x0000000000180150 : loopne 0x1800e5 ; jmp qword ptr [rcx]
0x00000000001833d0 : loopne 0x18336a ; cmc ; jmp qword ptr [rcx]
0x000000000018ea15 : loopne 0x18ea1e ; add al, bl ; clc ; call qword ptr [rbx]
0x00000000001908b0 : loopne 0x190876 ; clc ; call qword ptr [rbx]
0x00000000000260ae : loopne 0x260c7 ; test dword ptr [rax - 0x76fffffe], ecx ; retf 0x3bb
0x000000000002bfa3 : loopne 0x2bfb2 ; movzx eax, ax ; ret
0x000000000002bfe3 : loopne 0x2bfec ; movzx eax, ax ; ret
0x000000000002c083 : loopne 0x2c08e ; movzx eax, ax ; ret
0x000000000002c163 : loopne 0x2c168 ; ret
0x000000000002c1dc : loopne 0x2c1e1 ; ret
0x000000000002c1ec : loopne 0x2c1fb ; movzx eax, ax ; ret
0x000000000002c22c : loopne 0x2c235 ; movzx eax, ax ; ret
0x000000000002c1b3 : loopne 0x2c236 ; ret
0x000000000002c2cc : loopne 0x2c2d7 ; movzx eax, ax ; ret
0x00000000000329c5 : loopne 0x329d1 ; ret
0x0000000000032ce7 : loopne 0x32cce ; fsub dword ptr [rip + 0x200] ; ret
0x0000000000033a14 : loopne 0x33a64 ; or dword ptr [rdi], eax ; xor eax, eax ; ret
0x000000000003428c : loopne 0x342bf ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000042434 : loopne 0x42448 ; xchg eax, edx ; ret 0x294c
0x0000000000049ce6 : loopne 0x49d4c ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000004cc85 : loopne 0x4cc12 ; ret 0xe680
0x000000000004e987 : loopne 0x4e914 ; ret 0xe680
0x0000000000054d65 : loopne 0x54dcb ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000005adb2 : loopne 0x5ada0 ; pop rsi ; retf
0x0000000000066dd7 : loopne 0x66e3e ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006761c : loopne 0x67622 ; add byte ptr [rax], al ; jmp rax
0x0000000000067658 : loopne 0x6765e ; add byte ptr [rax], al ; call rax
0x00000000000676aa : loopne 0x676b0 ; add byte ptr [rax], al ; call rax
0x00000000000676ec : loopne 0x676f2 ; add byte ptr [rax], al ; jmp rax
0x00000000000676f1 : loopne 0x67762 ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000070df8 : loopne 0x70e5a ; pop rbp ; pop r12 ; ret
0x00000000000713e6 : loopne 0x713eb ; ret
0x00000000000713f6 : loopne 0x713fb ; ret
0x0000000000072ae2 : loopne 0x72b2e ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007816a : loopne 0x78182 ; add byte ptr [rax + 2], bh ; syscall
0x000000000007b59d : loopne 0x7b609 ; nop ; ret
0x000000000007dc73 : loopne 0x7dcd9 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008a9f3 : loopne 0x8aa55 ; pop rbp ; pop r12 ; ret
0x00000000000950ec : loopne 0x950f6 ; add byte ptr [rax], al ; ret
0x00000000000990ed : loopne 0x99107 ; movsxd rcx, dword ptr [rsi + rax*4] ; add rcx, rsi ; jmp rcx
0x000000000009b61d : loopne 0x9b663 ; pop rsp ; ret
0x000000000009d5f1 : loopne 0x9d605 ; xchg eax, esp ; ret 0x294c
0x00000000000b2829 : loopne 0xb2816 ; ret 0xffea
0x00000000000b2828 : loopne 0xb2817 ; ret 0xffea
0x00000000000bd0c2 : loopne 0xbd124 ; pop rbp ; pop r12 ; ret
0x00000000000bd1c2 : loopne 0xbd224 ; pop rbp ; pop r12 ; ret
0x00000000000bf486 : loopne 0xbf49e ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0xeb01
0x00000000000c146e : loopne 0xc1479 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c5c29 : loopne 0xc5c32 ; add eax, 8 ; ret
0x00000000000cc4a1 : loopne 0xcc508 ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000d0ae2 : loopne 0xd0acf ; retf -5
0x00000000000d2f55 : loopne 0xd2f68 ; ret
0x00000000000d6493 : loopne 0xd64fa ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000d6da7 : loopne 0xd6e0d ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000de531 : loopne 0xde597 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000e1f2c : loopne 0xe1f8e ; pop rbp ; pop r12 ; ret
0x00000000000e4df0 : loopne 0xe4df6 ; jmp 0xe4dba
0x00000000000eba5e : loopne 0xeba64 ; ret
0x00000000000eba7a : loopne 0xeba89 ; movzx eax, ax ; ret
0x00000000000ebaee : loopne 0xebaf4 ; ret
0x00000000000ebb8e : loopne 0xebb94 ; ret
0x00000000000ebbaa : loopne 0xebbaf ; ret
0x00000000000ebc1e : loopne 0xebc24 ; ret
0x00000000000ebc3a : loopne 0xebc43 ; movzx eax, ax ; ret
0x00000000000ebcae : loopne 0xebcb4 ; ret
0x00000000000ebd3e : loopne 0xebd44 ; ret
0x00000000000ebdde : loopne 0xebde4 ; ret
0x00000000000ebe7e : loopne 0xebe84 ; ret
0x00000000000ebf1e : loopne 0xebf24 ; ret
0x00000000000ebf3a : loopne 0xebf45 ; movzx eax, ax ; ret
0x00000000000ebfae : loopne 0xebfb4 ; ret
0x00000000000ec049 : loopne 0xec04f ; ret
0x00000000000ec0de : loopne 0xec0e4 ; ret
0x00000000000ec2ba : loopne 0xec2c0 ; ret
0x00000000000ec3f0 : loopne 0xec3f6 ; ret
0x00000000000ec403 : loopne 0xec412 ; movzx eax, ax ; ret
0x00000000000ec470 : loopne 0xec476 ; ret
0x00000000000ec4f0 : loopne 0xec4f6 ; ret
0x00000000000ec503 : loopne 0xec508 ; ret
0x00000000000ec570 : loopne 0xec576 ; ret
0x00000000000ec583 : loopne 0xec58c ; movzx eax, ax ; ret
0x00000000000ec5f0 : loopne 0xec5f6 ; ret
0x00000000000ec670 : loopne 0xec676 ; ret
0x00000000000ec6f0 : loopne 0xec6f6 ; ret
0x00000000000ec770 : loopne 0xec776 ; ret
0x00000000000ec7f0 : loopne 0xec7f6 ; ret
0x00000000000ec803 : loopne 0xec80e ; movzx eax, ax ; ret
0x00000000000ec870 : loopne 0xec876 ; ret
0x00000000000ec8ed : loopne 0xec8f3 ; ret
0x00000000000ec970 : loopne 0xec976 ; ret
0x00000000000ecb1a : loopne 0xecb20 ; ret
0x00000000000f2a2f : loopne 0xf2a29 ; ret 0x7508
0x00000000000f2d89 : loopne 0xf2d8e ; dec dword ptr [rcx] ; ret
0x00000000000f4e5b : loopne 0xf4e60 ; ret
0x00000000000f5588 : loopne 0xf559d ; cmp eax, 4 ; je 0xf5597 ; ret
0x00000000000f5759 : loopne 0xf576c ; pop rbp ; pop r12 ; ret
0x00000000000f5e75 : loopne 0xf5ec7 ; lea edi, dword ptr [rip - 0x16d] ; call rax
0x00000000000f903d : loopne 0xf90a3 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001103f7 : mov ah, 0 ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x00000000000da6e3 : mov ah, 0 ; add byte ptr [rax], al ; mov eax, 3 ; syscall
0x00000000000e94e1 : mov ah, 0 ; add byte ptr [rax], al ; syscall
0x00000000001580ea : mov ah, 0x13 ; ret
0x0000000000172abc : mov ah, 0x20 ; add byte ptr [rax], al ; sub bl, 0xeb ; jmp rax
0x00000000000406c6 : mov ah, 0x24 ; add byte ptr [rax], 0 ; add byte ptr [rcx], al ; ret 0x8b44
0x00000000001843bc : mov ah, 0x39 ; add dword ptr [rax], eax ; and bh, dl ; cmc ; jmp rdx
0x000000000016ec88 : mov ah, 0x3e ; clc ; call qword ptr [rbx + rax*8]
0x00000000001866bc : mov ah, 0x5c ; add dword ptr [rax], eax ; and byte ptr [rax - 0xa], cl ; call qword ptr [rdi]
0x000000000016da14 : mov ah, 0x61 ; add dword ptr [rax], eax ; xchg eax, esp ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cmc ; jmp rsp
0x00000000001873bc : mov ah, 0x69 ; add dword ptr [rax], eax ; jl 0x1873c0 ; call rsi
0x000000000016e014 : mov ah, 0x85 ; add dword ptr [rax], eax ; xchg eax, esp ; and edi, esi ; jmp rsp
0x000000000007923b : mov ah, 0x87 ; pop rax ; or byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x000000000016b8f4 : mov ah, 0x8a ; add byte ptr [rax], al ; add al, 0xad ; in al, dx ; jmp rsp
0x000000000016a7f8 : mov ah, 0x96 ; cld ; inc dword ptr [rsi + rdx*4 - 4] ; call rsp
0x000000000016fdf0 : mov ah, 0x96 ; cli ; call rsp
0x0000000000176944 : mov ah, 0xa ; add byte ptr [rax], al ; out dx, eax ; call qword ptr [rax]
0x000000000016bd2c : mov ah, 0xa1 ; add byte ptr [rax], al ; xchg eax, esp ; xchg eax, ecx ; in eax, dx ; call rsp
0x0000000000158590 : mov ah, 0xa5 ; ret
0x000000000016ff20 : mov ah, 0xab ; cli ; call rsp
0x000000000016acf0 : mov ah, 0xbd ; cld ; inc dword ptr [rbp + rdi*4 - 4] ; call rsp
0x000000000016f060 : mov ah, 0xc1 ; clc ; lcall ptr [rcx + rbx*8 + 1] ; add ah, dh ; ret 0xfff8
0x000000000018cebc : mov ah, 0xc4 ; add dword ptr [rax], eax ; add byte ptr [rdx], al ; clc ; call qword ptr [rdi]
0x000000000017d4bc : mov ah, 0xca ; add byte ptr [rax], al ; and bl, ch ; int1 ; call qword ptr [rdx]
0x00000000000eaf64 : mov ah, 0xe2 ; sub al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000017efbc : mov ah, 0xe5 ; add byte ptr [rax], al ; loopne 0x17f017 ; jmp qword ptr [rdi]
0x000000000017f0bc : mov ah, 0xe6 ; add byte ptr [rax], al ; nop ; jmp qword ptr [rdi]
0x0000000000170980 : mov ah, 0xef ; std ; jmp rsp
0x000000000016cdc8 : mov ah, 0xf1 ; int1 ; call rsp
0x00000000000026c3 : mov ah, 0xf4 ; out -0x21, eax ; syscall
0x000000000016aef1 : mov ah, 0xfc ; call rsp
0x000000000016adb5 : mov ah, 0xfc ; jmp qword ptr [rax + 0x20fffcb3]
0x000000000016adb1 : mov ah, 0xfc ; jmp qword ptr [rax]
0x000000000016cad4 : mov ah, 0xfd ; add byte ptr [rax], al ; push rsp ; xor ecx, esi ; call rsp
0x000000000016a19d : mov ah, 0xfd ; dec dword ptr [rip + 0x41fffdc0] ; ret 0xfffd
0x000000000016cb04 : mov ah, 0xfe ; add byte ptr [rax], al ; and al, 0x35 ; int1 ; jmp rsp
0x000000000016ea05 : mov ah, 1 ; add byte ptr [rbp + rsi*8 - 9], ah ; call rsp
0x000000000016cbc4 : mov ah, 2 ; add dword ptr [rax], eax ; and al, 0x5a ; int1 ; jmp rsp
0x000000000016a8a1 : mov ah, bh ; call qword ptr [rax]
0x000000000016aaa1 : mov ah, bh ; jmp qword ptr [rax + 0x20fffc8f]
0x000000000016a921 : mov ah, bh ; jmp rdx
0x0000000000157ee4 : mov ah, bl ; push rsi ; ret
0x000000000016bf85 : mov al, 0 ; add byte ptr [rax + rdi*4], dl ; out dx, eax ; call rsp
0x00000000000da639 : mov al, 0 ; add byte ptr [rax], al ; mov eax, 3 ; syscall
0x00000000000e9211 : mov al, 0 ; add byte ptr [rax], al ; syscall
0x00000000000028f0 : mov al, 0x1f ; retf
0x000000000010c95c : mov al, 0x23 ; add byte ptr [rax], al ; xor eax, eax ; jmp rcx
0x000000000010c914 : mov al, 0x23 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x000000000009b644 : mov al, 0x2f ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000bfec1 : mov al, 0x39 ; retf
0x0000000000047d59 : mov al, 0x48 ; add eax, edi ; jmp rax
0x0000000000001d98 : mov al, 0x72 ; retf
0x000000000018f9b0 : mov al, 0x82 ; clc ; jmp qword ptr [rdi]
0x000000000017fc10 : mov al, 0x82 ; jmp qword ptr [rcx]
0x00000000000037e9 : mov al, 0x85 ; jbe 0x3798 ; outsb dx, byte ptr [rsi] ; retf
0x0000000000183290 : mov al, 0x8d ; cmc ; jmp qword ptr [rcx]
0x0000000000180120 : mov al, 0x90 ; jmp qword ptr [rcx]
0x000000000016a684 : mov al, 0x95 ; cld ; inc dword ptr [rax - 0x6b] ; cld ; call rax
0x00000000001833a0 : mov al, 0x95 ; cmc ; jmp qword ptr [rcx]
0x000000000015d278 : mov al, 0x95 ; jmp rax
0x000000000015d2a4 : mov al, 0x96 ; inc eax ; xchg eax, esi ; jmp rax
0x000000000015d2ec : mov al, 0x98 ; call rax
0x000000000015d30c : mov al, 0x99 ; call rax
0x000000000015d32c : mov al, 0x99 ; inc eax ; cdq ; call rax
0x000000000017e290 : mov al, 0x9e ; call rdi
0x000000000000f6f0 : mov al, 0xaa ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x000000000016af94 : mov al, 0xaf ; cld ; jmp qword ptr [rax]
0x000000000016ada8 : mov al, 0xb5 ; cld ; jmp qword ptr [rax]
0x000000000015e3a8 : mov al, 0xb6 ; cmc ; push qword ptr [rax - 0x4a] ; cmc ; jmp rax
0x000000000016ad94 : mov al, 0xb9 ; cld ; inc dword ptr [rax - 0x47] ; cld ; call rax
0x000000000016ab7c : mov al, 0xbc ; cld ; inc dword ptr [rax - 0x44] ; cld ; call rax
0x000000000016a054 : mov al, 0xeb ; sti ; push qword ptr [rax] ; in eax, dx ; sti ; jmp rax
0x000000000015a396 : mov al, 0xee ; fcmovb st(0), st(3) ; ret
0x000000000015bcad : mov al, 0xef ; call rdi
0x000000000017b9c9 : mov al, 0xf0 ; call qword ptr [rax]
0x00000000000e1ea3 : mov al, 0xf3 ; ret
0x0000000000161068 : mov al, 0xf4 ; cli ; dec eax ; hlt ; cli ; jmp rax
0x0000000000184de0 : mov al, 0xfa ; cmc ; jmp qword ptr [rcx]
0x0000000000169fc5 : mov al, 0xfb ; inc dword ptr [rax] ; mov dl, 0xfb ; jmp rax
0x000000000016add1 : mov al, 0xfc ; call qword ptr [rax]
0x000000000016afd1 : mov al, 0xfc ; jmp qword ptr [rax + 0x10fffcaf]
0x000000000016ae51 : mov al, 0xfc ; jmp rdx
0x000000000016ae4d : mov al, 0xfc ; push qword ptr [rdx - 0x50] ; cld ; jmp rdx
0x000000000016a185 : mov al, 0xfd ; call qword ptr [rax]
0x000000000016a0c1 : mov al, 0xfd ; call rcx
0x000000000018cd30 : mov al, 0xfd ; idiv edi ; retf 1
0x000000000016a105 : mov al, 0xfd ; inc dword ptr [rsi - 0x4f] ; std ; call rsi
0x000000000009511c : mov al, 4 ; add byte ptr [rax], al ; ret
0x0000000000094d1c : mov al, 8 ; add byte ptr [rax], al ; ret
0x000000000017c4d8 : mov al, ah ; cld ; call qword ptr [rax]
0x00000000001794ed : mov al, byte ptr [rax] ; add byte ptr [rax - 0x4a], dh ; out dx, eax ; call qword ptr [rbx]
0x00000000000db4c1 : mov al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000009124b : mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x0000000000091279 : mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x00000000000912fd : mov al, byte ptr [rcx + 8] ; mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x0000000000140b40 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x0000000000091225 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000002e0b : mov al, byte ptr [rsi - 0x73] ; ret 0xc1bb
0x00000000000bd8d8 : mov al, ch ; ret 0x375
0x000000000015cf78 : mov al, cl ; std ; dec eax ; retf -3
0x0000000000091235 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x000000000007d225 : mov bh, 0 ; add byte ptr [rax], al ; call rax
0x0000000000133f21 : mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000015a420 : mov bh, 0x38 ; push 0xfd4cbe ; retf 0xf64
0x0000000000028aa6 : mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x1a76
0x00000000001103e9 : mov bh, 0x48 ; add eax, edi ; jmp rax
0x0000000000147628 : mov bh, 0x48 ; lea eax, dword ptr [rdi + 7] ; ret
0x00000000000c17c8 : mov bh, 0x48 ; mov esi, ebx ; mov rdi, rbp ; call r12
0x00000000000a8bf0 : mov bh, 0x4c ; dec byte ptr [r13 - 0x77] ; retf 0x694d
0x0000000000118667 : mov bh, 0x4c ; ret 0x6604
0x000000000015a6f8 : mov bh, 0x4e ; retf -0x6283
0x000000000002bcf7 : mov bh, 0x8b ; add al, 0x10 ; ret
0x0000000000002bf0 : mov bh, 0xb1 ; or cl, cl ; clc ; ret
0x00000000001593c4 : mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x000000000002bfa6 : mov bh, 0xc0 ; ret
0x00000000000f9744 : mov bh, 0xc6 ; or eax, edi ; bswap eax ; ret
0x00000000001570a6 : mov bh, 0xc8 ; leave ; retf -0x3335
0x000000000015e3d1 : mov bh, 0xf5 ; call qword ptr [rax + 0x10fff5b7]
0x000000000015e3c9 : mov bh, 0xf5 ; call qword ptr [rax]
0x000000000015e3ed : mov bh, 0xf5 ; call rax
0x000000000015e3c5 : mov bh, 0xf5 ; jmp qword ptr [rax]
0x00000000000037a0 : mov bh, 0xfa ; add ebx, ebp ; in al, -0x12 ; jne 0x378a ; ret 0x975
0x000000000005cb3d : mov bh, 0xff ; dec dword ptr [rax - 0x7d] ; ret 0x4108
0x00000000000ea3b3 : mov bh, 0xff ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000000da8da : mov bh, 4 ; and al, 0x89 ; ret 0xe283
0x000000000002bf9f : mov bh, 4 ; js 0x2bf2f ; loopne 0x2bfb6 ; movzx eax, ax ; ret
0x000000000002bfdf : mov bh, 4 ; js 0x2bf6f ; loopne 0x2bff0 ; movzx eax, ax ; ret
0x000000000002c07f : mov bh, 4 ; js 0x2c00f ; loopne 0x2c092 ; movzx eax, ax ; ret
0x000000000002c15f : mov bh, 4 ; js 0x2c0ec ; loopne 0x2c16c ; ret
0x000000000002c1d8 : mov bh, 4 ; js 0x2c165 ; loopne 0x2c1e5 ; ret
0x000000000002c1e8 : mov bh, 4 ; js 0x2c178 ; loopne 0x2c1ff ; movzx eax, ax ; ret
0x000000000002c228 : mov bh, 4 ; js 0x2c1b8 ; loopne 0x2c239 ; movzx eax, ax ; ret
0x000000000002c2c8 : mov bh, 4 ; js 0x2c258 ; loopne 0x2c2db ; movzx eax, ax ; ret
0x00000000000eba76 : mov bh, 4 ; js 0xeba06 ; loopne 0xeba8d ; movzx eax, ax ; ret
0x00000000000ebba6 : mov bh, 4 ; js 0xebb33 ; loopne 0xebbb3 ; ret
0x00000000000ebc36 : mov bh, 4 ; js 0xebbc6 ; loopne 0xebc47 ; movzx eax, ax ; ret
0x00000000000ebf36 : mov bh, 4 ; js 0xebec6 ; loopne 0xebf49 ; movzx eax, ax ; ret
0x00000000000ec3ff : mov bh, 4 ; js 0xec38f ; loopne 0xec416 ; movzx eax, ax ; ret
0x00000000000ec4ff : mov bh, 4 ; js 0xec48c ; loopne 0xec50c ; ret
0x00000000000ec57f : mov bh, 4 ; js 0xec50f ; loopne 0xec590 ; movzx eax, ax ; ret
0x00000000000ec7ff : mov bh, 4 ; js 0xec78f ; loopne 0xec812 ; movzx eax, ax ; ret
0x000000000015aad3 : mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000000da391 : mov bh, 7 ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x000000000016aacd : mov bh, ah ; call qword ptr [rax]
0x000000000016aa8d : mov bh, ah ; jmp qword ptr [rax]
0x000000000015f871 : mov bh, dh ; call qword ptr [rax]
0x000000000015f805 : mov bh, dh ; call qword ptr [rdi + 0x10fff787]
0x000000000015f749 : mov bh, dh ; call rax
0x00000000000e95a4 : mov bl, 0 ; add byte ptr [rax], al ; syscall
0x0000000000148f1e : mov bl, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000015a75b : mov bl, 0x29 ; retf -0x40b5
0x000000000009bf5c : mov bl, 0x48 ; mov eax, edx ; ret
0x000000000008e8d4 : mov bl, 0x48 ; mov ecx, eax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x000000000015a4a3 : mov bl, 0x8e ; ret 0xdcd9
0x000000000015a740 : mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x0000000000001b13 : mov bl, 0xee ; enter 0x59e7, 0x5b ; ret 0x2a63
0x0000000000003b09 : mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x000000000016aef9 : mov bl, 0xfc ; call rsp
0x000000000016adbd : mov bl, 0xfc ; jmp qword ptr [rax + 0x20fffcb2]
0x000000000016adb9 : mov bl, 0xfc ; jmp qword ptr [rax]
0x0000000000062032 : mov bl, 0xff ; dec dword ptr [rax - 0x7d] ; ret 0xbe08
0x0000000000169f6d : mov bl, bh ; call qword ptr [rax]
0x000000000017fdf9 : mov bl, dh ; jmp qword ptr [rcx]
0x000000000017fdf8 : mov bl, sil ; jmp qword ptr [rcx]
0x00000000001580c1 : mov bx, 0xf32d ; retf
0x00000000000e3011 : mov byte ptr [r8 - 1], 0 ; ret
0x00000000000f69cf : mov byte ptr [r9 + 3], r8b ; jne 0xf6971 ; mov rax, rdi ; ret
0x000000000008df13 : mov byte ptr [rax + 0x29], cl ; ret
0x000000000008dbda : mov byte ptr [rax + 0x29], cl ; ret 0x6348
0x000000000008c857 : mov byte ptr [rax + 0x29], cl ; ret 0x634c
0x0000000000155f6c : mov byte ptr [rax + rax], 0 ; enter 4, 0 ; retf 4
0x0000000000111c34 : mov byte ptr [rax + rax], al ; add al, ch ; ret
0x0000000000023748 : mov byte ptr [rax + rcx*2], 0x83 ; ret
0x000000000003fadc : mov byte ptr [rax + rdx], 0 ; ret
0x0000000000076744 : mov byte ptr [rax + rsi], dl ; ret
0x0000000000076743 : mov byte ptr [rax + rsi], r10b ; ret
0x0000000000070a6d : mov byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x7d], cl ; ret
0x000000000008e83c : mov byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000182b68 : mov byte ptr [rax - 0xb], bh ; call qword ptr [rax]
0x00000000000e3012 : mov byte ptr [rax - 1], 0 ; ret
0x00000000000379d7 : mov byte ptr [rax], 0 ; add byte ptr [rax], 0xf ; xchg eax, ebp ; ret
0x000000000017d0d5 : mov byte ptr [rax], 0 ; cmp ch, bl ; int1 ; jmp qword ptr [rdi]
0x0000000000020688 : mov byte ptr [rax], 0x2f ; mov byte ptr [rdi], 0 ; pop rbx ; pop rbp ; ret
0x00000000000206bc : mov byte ptr [rax], 0x2f ; mov byte ptr [rdi], 0 ; ret
0x00000000000e627e : mov byte ptr [rax], 0xa ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010b7f4 : mov byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000011e539 : mov byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000033002 : mov byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, r8d ; pop rbx ; ret
0x00000000000335e4 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000115b07 : mov byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000e6b98 : mov byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x0000000000179235 : mov byte ptr [rax], al ; add byte ptr [rax], bh ; scasd eax, dword ptr [rdi] ; out dx, eax ; call qword ptr [rdx]
0x000000000016b8a5 : mov byte ptr [rax], al ; add byte ptr [rdi], al ; in al, dx ; jmp rsp
0x0000000000054ec0 : mov byte ptr [rax], bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000054ec1 : mov byte ptr [rax], ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000093e72 : mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x000000000015d538 : mov byte ptr [rbx + rsi*8 - 0xc443f01], bh ; jmp rax
0x00000000000e1c96 : mov byte ptr [rbx], 0 ; mov rax, rbx ; pop rbx ; ret
0x00000000001850d8 : mov byte ptr [rbx], al ; idiv bh ; retf
0x0000000000002fa6 : mov byte ptr [rbx], cl ; and bh, byte ptr [rax - 0x52] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00000000000a8cd2 : mov byte ptr [rcx + 1], cl ; retf
0x000000000013e803 : mov byte ptr [rcx + 2], dl ; ret
0x00000000000f69d0 : mov byte ptr [rcx + 3], al ; jne 0xf6970 ; mov rax, rdi ; ret
0x000000000013e822 : mov byte ptr [rcx + 4], dl ; ret
0x000000000013e863 : mov byte ptr [rcx + 8], dl ; ret
0x000000000002a589 : mov byte ptr [rcx + rax - 0x3a], cl ; jmp rsi
0x000000000010c221 : mov byte ptr [rcx + rax - 0x3e], cl ; jmp rdx
0x00000000000e562d : mov byte ptr [rcx - 0x75], 0x45 ; add byte ptr [rcx], bh ; ret
0x000000000008e8c8 : mov byte ptr [rcx - 1], 0 ; mov qword ptr [rdx], rcx ; ret
0x000000000016ecfd : mov byte ptr [rcx], 0 ; hlt ; push rdx ; clc ; jmp rsp
0x000000000008e97b : mov byte ptr [rcx], 0 ; mov qword ptr [rdi], rdx ; ret
0x000000000008e9fa : mov byte ptr [rcx], 0 ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x00000000001038c2 : mov byte ptr [rcx], 0x31 ; ror byte ptr [rax - 0x77], 0x37 ; ret
0x000000000002ad52 : mov byte ptr [rcx], 0x83 ; ret
0x000000000004a7b2 : mov byte ptr [rcx], 0x89 ; add ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000f13d2 : mov byte ptr [rcx], 0xa ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000e50e8 : mov byte ptr [rcx], 0xd9 ; ret 0x3941
0x000000000005b499 : mov byte ptr [rcx], 0xe9 ; add dword ptr [rsi - 0x7cb70001], edi ; ret 0xbe08
0x000000000005bee6 : mov byte ptr [rcx], 0xeb ; retf 0x3b48
0x000000000013e7e0 : mov byte ptr [rcx], dl ; ret
0x00000000000984ea : mov byte ptr [rdi + 0x10], ch ; ret
0x0000000000096a8b : mov byte ptr [rdi + 0x10], cl ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000952ab : mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000984fb : mov byte ptr [rdi + 0x10], cl ; xor ch, ch ; mov byte ptr [rdi + 0x11], ch ; ret
0x0000000000095c48 : mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000945d8 : mov byte ptr [rdi + 0x10], dh ; ret
0x0000000000098500 : mov byte ptr [rdi + 0x11], ch ; ret
0x0000000000098522 : mov byte ptr [rdi + 0x12], ch ; ret
0x0000000000098540 : mov byte ptr [rdi + 0x13], ch ; ret
0x0000000000098560 : mov byte ptr [rdi + 0x14], ch ; ret
0x0000000000095cbe : mov byte ptr [rdi + 0x14], dh ; lea rax, qword ptr [rdi + 0x14] ; ret
0x000000000009462e : mov byte ptr [rdi + 0x14], dh ; ret
0x0000000000096b11 : mov byte ptr [rdi + 0x14], dl ; lea rax, qword ptr [rdi + 0x15] ; ret
0x0000000000095301 : mov byte ptr [rdi + 0x14], dl ; ret
0x0000000000098581 : mov byte ptr [rdi + 0x14], dl ; xor ch, ch ; mov byte ptr [rdi + 0x15], ch ; ret
0x0000000000098586 : mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000985a2 : mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000985c2 : mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000985e2 : mov byte ptr [rdi + 0x18], ch ; ret
0x0000000000096b93 : mov byte ptr [rdi + 0x18], cl ; lea rax, qword ptr [rdi + 0x19] ; ret
0x0000000000095383 : mov byte ptr [rdi + 0x18], cl ; ret
0x0000000000098603 : mov byte ptr [rdi + 0x18], cl ; xor ch, ch ; mov byte ptr [rdi + 0x19], ch ; ret
0x0000000000095d40 : mov byte ptr [rdi + 0x18], dh ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000946b0 : mov byte ptr [rdi + 0x18], dh ; ret
0x0000000000098608 : mov byte ptr [rdi + 0x19], ch ; ret
0x000000000009862a : mov byte ptr [rdi + 0x1a], ch ; ret
0x0000000000098648 : mov byte ptr [rdi + 0x1b], ch ; ret
0x0000000000098668 : mov byte ptr [rdi + 0x1c], ch ; ret
0x0000000000098684 : mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000000986a4 : mov byte ptr [rdi + 0x1e], ch ; ret
0x00000000000986c4 : mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000986e4 : mov byte ptr [rdi + 0x20], ch ; ret
0x0000000000095485 : mov byte ptr [rdi + 0x20], cl ; ret
0x0000000000098705 : mov byte ptr [rdi + 0x20], cl ; xor ch, ch ; mov byte ptr [rdi + 0x21], ch ; ret
0x000000000009870a : mov byte ptr [rdi + 0x21], ch ; ret
0x000000000009875a : mov byte ptr [rdi + 0x40], ch ; ret
0x0000000000098430 : mov byte ptr [rdi + 0xa], ch ; ret
0x000000000009844e : mov byte ptr [rdi + 0xb], ch ; ret
0x000000000009846e : mov byte ptr [rdi + 0xc], ch ; ret
0x0000000000098490 : mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000984b0 : mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000984d0 : mov byte ptr [rdi + 0xf], ch ; ret
0x0000000000098366 : mov byte ptr [rdi + 1], ch ; ret
0x0000000000104192 : mov byte ptr [rdi + 1], dh ; ret
0x0000000000104191 : mov byte ptr [rdi + 1], sil ; ret
0x000000000008ede3 : mov byte ptr [rdi + 2], 0 ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000008ed53 : mov byte ptr [rdi + 2], 0 ; mov rax, rdi ; ret
0x0000000000098378 : mov byte ptr [rdi + 2], ch ; ret
0x0000000000095af6 : mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000944f6 : mov byte ptr [rdi + 2], dh ; ret
0x000000000008ec94 : mov byte ptr [rdi + 2], dl ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000951c9 : mov byte ptr [rdi + 2], dl ; ret
0x0000000000098389 : mov byte ptr [rdi + 2], dl ; xor ch, ch ; mov byte ptr [rdi + 3], ch ; ret
0x000000000009838e : mov byte ptr [rdi + 3], ch ; ret
0x000000000008ee02 : mov byte ptr [rdi + 4], 0 ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000008ed72 : mov byte ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x00000000000983a6 : mov byte ptr [rdi + 4], ch ; ret
0x000000000008ecb4 : mov byte ptr [rdi + 4], cl ; mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 5] ; ret
0x0000000000095b12 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x0000000000094512 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x0000000000096947 : mov byte ptr [rdi + 4], dl ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000951e7 : mov byte ptr [rdi + 4], dl ; ret
0x00000000000983b7 : mov byte ptr [rdi + 4], dl ; xor ch, ch ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000983bc : mov byte ptr [rdi + 5], ch ; ret
0x000000000008ed89 : mov byte ptr [rdi + 6], 0 ; ret
0x000000000008ecda : mov byte ptr [rdi + 6], al ; mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000983ce : mov byte ptr [rdi + 6], ch ; ret
0x00000000000983ec : mov byte ptr [rdi + 7], ch ; ret
0x00000000000c11e0 : mov byte ptr [rdi + 8], 0x15 ; mov eax, 1 ; ret
0x00000000000c11a5 : mov byte ptr [rdi + 8], 0x16 ; mov eax, 1 ; ret
0x00000000000c1208 : mov byte ptr [rdi + 8], 0x19 ; mov eax, 1 ; ret
0x00000000000c122c : mov byte ptr [rdi + 8], 0x1a ; mov eax, 2 ; ret
0x00000000000c1270 : mov byte ptr [rdi + 8], 0x1c ; mov eax, 2 ; ret
0x00000000000c1265 : mov byte ptr [rdi + 8], 0x1e ; mov eax, 2 ; ret
0x00000000000c11cd : mov byte ptr [rdi + 8], 1 ; mov eax, 1 ; ret
0x00000000000c11b0 : mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x00000000000983f8 : mov byte ptr [rdi + 8], ch ; ret
0x0000000000094553 : mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000096999 : mov byte ptr [rdi + 8], dl ; lea rax, qword ptr [rdi + 9] ; ret
0x0000000000095229 : mov byte ptr [rdi + 8], dl ; ret
0x0000000000098409 : mov byte ptr [rdi + 8], dl ; xor ch, ch ; mov byte ptr [rdi + 9], ch ; ret
0x000000000009840e : mov byte ptr [rdi + 9], ch ; ret
0x0000000000104386 : mov byte ptr [rdi + rdx], 0 ; ret
0x000000000015a755 : mov byte ptr [rdi - 0x17ac8d3c], al ; mov bl, 0x29 ; retf -0x40b5
0x000000000010e6fe : mov byte ptr [rdi - 1], al ; cmp rdi, rcx ; jne 0x10e6f9 ; ret
0x000000000012db3b : mov byte ptr [rdi - 1], dl ; ret
0x0000000000071800 : mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x000000000002068b : mov byte ptr [rdi], 0 ; pop rbx ; pop rbp ; ret
0x00000000000206bf : mov byte ptr [rdi], 0 ; ret
0x00000000000c11fc : mov byte ptr [rdi], 0x5b ; mov eax, 1 ; ret
0x0000000000076847 : mov byte ptr [rdi], al ; je 0x76889 ; mov qword ptr [rsi], rdi ; ret
0x00000000000c124e : mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x0000000000098352 : mov byte ptr [rdi], ch ; ret
0x0000000000083f8b : mov byte ptr [rdi], cl ; ret
0x0000000000129545 : mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000008ec71 : mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000095ad0 : mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x00000000000944d0 : mov byte ptr [rdi], dh ; ret
0x00000000000968f2 : mov byte ptr [rdi], dl ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000951a2 : mov byte ptr [rdi], dl ; ret
0x0000000000098362 : mov byte ptr [rdi], dl ; xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x0000000000076846 : mov byte ptr [rdi], r8b ; je 0x7688a ; mov qword ptr [rsi], rdi ; ret
0x000000000008ec70 : mov byte ptr [rdi], sil ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000093ffa : mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x0000000000104370 : mov byte ptr [rdx + 2], 0 ; jne 0x1043c7 ; mov eax, r8d ; ret
0x0000000000140b69 : mov byte ptr [rdx + 2], al ; lea rax, qword ptr [rdx + 2] ; ret
0x000000000009124e : mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x0000000000140b97 : mov byte ptr [rdx + 4], al ; lea rax, qword ptr [rdx + 4] ; ret
0x000000000009127c : mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x0000000000093f90 : mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x0000000000091300 : mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x00000000000fdd28 : mov byte ptr [rdx], 0 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000e72d1 : mov byte ptr [rdx], 0 ; pop rbx ; ret
0x0000000000106122 : mov byte ptr [rdx], 0 ; ret
0x00000000000f13ee : mov byte ptr [rdx], 0x20 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000140b42 : mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x0000000000091227 : mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x000000000006ad7a : mov byte ptr [rdx], bh ; movzx eax, dil ; ret
0x000000000007141a : mov byte ptr [rdx], bh ; ret
0x000000000002504d : mov byte ptr [rdx], cl ; add eax, dword ptr [rax] ; add bh, dh ; ret 0xf800
0x000000000006ad79 : mov byte ptr [rdx], dil ; movzx eax, dil ; ret
0x0000000000071419 : mov byte ptr [rdx], dil ; ret
0x00000000001002c4 : mov byte ptr [rip + 0x29d3bd], 1 ; pop rbx ; ret
0x000000000002b1d8 : mov byte ptr [rip + 0x36f89f], dl ; ret
0x0000000000002480 : mov byte ptr [rip - 0x22beffe8], dh ; out 0xa9, al ; ret 0xbd07
0x00000000001046b9 : mov byte ptr [rsi + 3], al ; xor eax, eax ; ret
0x00000000001046b8 : mov byte ptr [rsi + 3], r8b ; xor eax, eax ; ret
0x0000000000089d04 : mov byte ptr [rsi + rdx + 1], al ; jg 0x89cf7 ; ret
0x0000000000185318 : mov byte ptr [rsi + rsi*8], cl ; call qword ptr [rdx]
0x00000000001744d8 : mov byte ptr [rsi - 0x14], bl ; call rcx
0x000000000004411f : mov byte ptr [rsi], al ; jne 0x4410f ; mov rax, rsi ; ret
0x00000000000441a3 : mov byte ptr [rsi], al ; jne 0x44187 ; mov rax, rsi ; ret
0x00000000000c7003 : mov byte ptr [rsp + 0x38], 0xa ; call 0xc32f7
0x00000000000e06b0 : mov byte ptr [rsp - 0x50], al ; mov eax, ebx ; syscall
0x000000000011c434 : mov ch, 0 ; add byte ptr [rax], al ; syscall
0x00000000000026aa : mov ch, 0x24 ; retf 0x54da
0x00000000000bb927 : mov ch, 0x30 ; cld ; dec dword ptr [rax - 0x77] ; ret 0x16eb
0x0000000000157ee2 : mov ch, 0x31 ; mov ah, bl ; push rsi ; ret
0x0000000000159223 : mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x0000000000159eb6 : mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x000000000015a5bf : mov ch, 0x99 ; in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x000000000015af6a : mov ch, 0xab ; ret
0x000000000000379f : mov ch, 0xb7 ; cli ; add ebx, ebp ; in al, -0x12 ; jne 0x378b ; ret 0x975
0x000000000016da51 : mov ch, 0xf5 ; call rsp
0x000000000016e609 : mov ch, 0xf7 ; jmp rsp
0x000000000016aee9 : mov ch, 0xfc ; call rsp
0x000000000016adad : mov ch, 0xfc ; jmp qword ptr [rax + 0x20fffcb4]
0x000000000016ada9 : mov ch, 0xfc ; jmp qword ptr [rax]
0x0000000000001b6c : mov ch, 4 ; retf
0x0000000000144ed6 : mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000da3f7 : mov ch, 9 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000001830d1 : mov ch, dh ; jmp qword ptr [rcx]
0x0000000000025636 : mov ch, dl ; add byte ptr [rax], al ; add bh, dh ; ret 0xf800
0x00000000000e9331 : mov cl, 0 ; add byte ptr [rax], al ; syscall
0x000000000008386b : mov cl, 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000017bc05 : mov cl, 0 ; add byte ptr [rax], bh ; jrcxz 0x17bc01 ; jmp rbx
0x000000000016bfa5 : mov cl, 0 ; add byte ptr [rdi + rdi*4 - 0x11], dh ; call rsp
0x00000000000eaeee : mov cl, 0x15 ; sub al, 0xe3 ; sub al, byte ptr [rax] ; je 0xeaf01 ; pop rbp ; ret
0x0000000000003bbc : mov cl, 0x22 ; xchg eax, ebp ; ret
0x000000000010de0b : mov cl, 0x29 ; add eax, 0x89499000 ; retf 0x334c
0x000000000003f0ea : mov cl, 0x35 ; nop ; ret
0x00000000000228f3 : mov cl, 0x35 ; ret
0x000000000004c8f4 : mov cl, 0x35 ; retf 0x34ed
0x000000000003f0df : mov cl, 0x35 ; wait ; ret
0x000000000015a9c1 : mov cl, 0x3f ; retf
0x0000000000112c39 : mov cl, 0x48 ; add eax, ecx ; jmp rax
0x0000000000118738 : mov cl, 0x48 ; shr edx, 3 ; add rax, rcx ; jmp rax
0x0000000000002bf1 : mov cl, 0x65 ; or cl, cl ; clc ; ret
0x00000000000c9156 : mov cl, 0x8b ; pop rax ; or bh, dh ; ret
0x000000000018a0a6 : mov cl, 0xa ; ret
0x000000000011ed40 : mov cl, 0xe9 ; add esi, ebx ; movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00000000000e3a48 : mov cl, 0xf9 ; inc dword ptr [rbp - 0x7cee8b40] ; ret
0x000000000016af09 : mov cl, 0xfc ; call rsp
0x000000000016adcd : mov cl, 0xfc ; jmp qword ptr [rax + 0x10fffcb0]
0x000000000016adc9 : mov cl, 0xfc ; jmp qword ptr [rax]
0x000000000016a109 : mov cl, 0xfd ; call rsi
0x000000000005b443 : mov cl, 0xff ; dec dword ptr [rax - 0x7d] ; ret 0xbe08
0x000000000018bb85 : mov cl, 1 ; add byte ptr [rax + 0x46], bh ; stc ; call qword ptr [rax]
0x00000000001910f8 : mov cl, ah ; clc ; call qword ptr [rdi]
0x000000000002af59 : mov cl, byte ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x578b
0x0000000000020161 : mov cl, byte ptr [rax + rax] ; call 0x2c3e5
0x0000000000086985 : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x000000000008eda3 : mov cl, byte ptr [rcx + rax - 0x30] ; jmp rax
0x000000000007ecc4 : mov cl, byte ptr [rdi - 0x73] ; adc al, 0xa ; jmp r10
0x000000000015a392 : mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x0000000000146590 : mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000009a43b : mov cl, dl ; and cl, 0xf ; je 0x9a467 ; ret
0x00000000000429f9 : mov cs, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000015a64c : mov cs, edi ; ret 0x8b36
0x0000000000041ca2 : mov cs, word ptr [rax + 1] ; int1 ; cmp r9d, 0x2f ; jmp rcx
0x00000000000f0251 : mov cs, word ptr [rax - 0x39] ; ret 0xffff
0x000000000007ae12 : mov cs, word ptr [rcx] ; xor al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001267ce : mov cs, word ptr [rip - 0x7cb80000] ; ret 0xe910
0x00000000000944f0 : mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000011c484 : mov dh, 0 ; add byte ptr [rax], al ; syscall
0x0000000000072d5d : mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000073a5c : mov dh, 0 ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000071443 : mov dh, 0 ; ret
0x000000000008e38a : mov dh, 0x14 ; adc byte ptr [rax + rcx*4 + 0x14], al ; adc dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x0000000000133f91 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x0000000000083a54 : mov dh, 0x16 ; sub eax, edx ; ret
0x0000000000031758 : mov dh, 0x17 ; test dl, dl ; jne 0x3173e ; ret
0x00000000000ba64c : mov dh, 0x17 ; test dl, dl ; jne 0xba62f ; xor eax, eax ; ret
0x000000000015defc : mov dh, 0x22 ; cmc ; jmp qword ptr [rbx - 0x2b000ade]
0x00000000000bfebf : mov dh, 0x34 ; mov al, 0x39 ; retf
0x00000000000c084d : mov dh, 0x34 ; or cl, byte ptr [rax + 0x63] ; retf
0x000000000010c762 : mov dh, 0x40 ; or dh, dh ; ret 0x8802
0x00000000000bac44 : mov dh, 0x42 ; add al, byte ptr [rbx - 0x7cb7fd37] ; ret 0xe901
0x00000000000ba922 : mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00000000000bf488 : mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0xeb01
0x00000000000cc549 : mov dh, 0x42 ; or byte ptr [rcx + 1], al ; retf -0x76bc
0x00000000000383f1 : mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000148af1 : mov dh, 0x47 ; cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000148ae1 : mov dh, 0x47 ; hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000148ab1 : mov dh, 0x47 ; int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000148ad1 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000148ac1 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x000000000002515f : mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000028068 : mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000011f14f : mov dh, 0x4b ; add al, 0x89 ; retf -0x1540
0x000000000008d799 : mov dh, 0x4c ; add dword ptr ds:[rbp + 0x38], eax ; retf 0x2d75
0x000000000008d7ec : mov dh, 0x4c ; add dword ptr ds:[rbp + 0x38], eax ; retf 0x7175
0x00000000000cdf39 : mov dh, 0x4c ; add dword ptr ss:[rax], edi ; retf 0x1375
0x00000000000cdec9 : mov dh, 0x4c ; add dword ptr ss:[rax], edi ; retf 0x3275
0x0000000000159382 : mov dh, 0x4e ; ret 0x474c
0x00000000000bff2c : mov dh, 0x51 ; add dword ptr [rax - 0x77], ecx ; retf
0x000000000010448d : mov dh, 0x52 ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x00000000000bd266 : mov dh, 0x53 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000bd259 : mov dh, 0x53 ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000004ab88 : mov dh, 0x53 ; or al, 0x85 ; sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x0000000000066671 : mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x0000000000103959 : mov dh, 0x55 ; add dh, dh ; ret
0x0000000000148af5 : mov dh, 0x56 ; cmc ; sub eax, edx ; ret
0x0000000000148ae5 : mov dh, 0x56 ; hlt ; sub eax, edx ; ret
0x0000000000148ab5 : mov dh, 0x56 ; int1 ; sub eax, edx ; ret
0x0000000000148ac5 : mov dh, 0x56 ; sub eax, edx ; ret
0x000000000005021d : mov dh, 0x57 ; or al, 0x83 ; ret
0x00000000000501aa : mov dh, 0x57 ; or al, 0xf6 ; ret 0xf08
0x00000000000cdeb7 : mov dh, 0x5e ; add dword ptr [rbp + 0x38], eax ; ret
0x00000000000ffc0d : mov dh, 0x66 ; nop ; xor eax, eax ; ret
0x00000000000baaa0 : mov dh, 0x70 ; adc cl, byte ptr [rbp + rcx*4 + 0x48] ; adc ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x00000000000832a8 : mov dh, 0x75 ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x0000000000027de5 : mov dh, 0x79 ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000f2c09 : mov dh, 0x7b ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000ac7f4 : mov dh, 0x83 ; ret 0x8301
0x000000000016a6cc : mov dh, 0x94 ; cld ; inc dword ptr [rsi - 0x6c] ; cld ; call rsi
0x000000000016a104 : mov dh, 0xb0 ; std ; inc dword ptr [rsi - 0x4f] ; std ; call rsi
0x000000000016abc4 : mov dh, 0xbb ; cld ; inc dword ptr [rsi - 0x45] ; cld ; call rsi
0x000000000007e415 : mov dh, 0xc ; adc dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x0000000000089a85 : mov dh, 0xc ; xchg byte ptr [rax - 0x73], cl ; add dword ptr [r9 + 0x39], ecx ; ret 0x8949
0x00000000001111a7 : mov dh, 0xc0 ; add eax, 1 ; ret
0x000000000010ceb8 : mov dh, 0xc0 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000117a9c : mov dh, 0xc0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000010ca3d : mov dh, 0xc0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011d588 : mov dh, 0xc0 ; add rsp, 8 ; ret
0x00000000000d206f : mov dh, 0xc0 ; cmova eax, edx ; ret
0x0000000000065cd4 : mov dh, 0xc0 ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x0000000000055339 : mov dh, 0xc0 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000422ae : mov dh, 0xc0 ; neg eax ; or eax, 1 ; ret
0x00000000000dd1f5 : mov dh, 0xc0 ; neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000064d2d : mov dh, 0xc0 ; neg eax ; pop rbx ; ret
0x0000000000064cfa : mov dh, 0xc0 ; neg eax ; ret
0x00000000000b97d7 : mov dh, 0xc0 ; neg rax ; or rax, 0x20 ; ret
0x00000000000b96a7 : mov dh, 0xc0 ; neg rax ; or rax, 0x7f ; ret
0x00000000000b98b7 : mov dh, 0xc0 ; neg rax ; or rax, 1 ; ret
0x0000000000111a45 : mov dh, 0xc0 ; pop rbp ; pop r12 ; ret
0x000000000010da9b : mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x00000000000b2e5c : mov dh, 0xc0 ; pop rbx ; ret
0x00000000000338ea : mov dh, 0xc0 ; ret
0x0000000000021161 : mov dh, 0xc0 ; xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x0000000000099151 : mov dh, 0xc1 ; pop rbx ; ret
0x000000000006475f : mov dh, 0xc2 ; add rsp, 0x98 ; ret
0x0000000000073c5c : mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000071413 : mov dh, 0xc7 ; mov qword ptr [rsi + 0x28], rcx ; mov byte ptr [rdx], dil ; ret
0x000000000006ad7e : mov dh, 0xc7 ; ret
0x000000000015a5c4 : mov dh, 0xc7 ; ret 0xe71f
0x00000000000abfc5 : mov dh, 0xc9 ; movsxd rdx, dword ptr [rdi + rcx*4] ; add rdx, rdi ; jmp rdx
0x00000000000aeb66 : mov dh, 0xd0 ; movsxd rdx, dword ptr [r8 + rdx*4] ; add rdx, r8 ; jmp rdx
0x00000000000ced3a : mov dh, 0xd1 ; movsxd rdx, dword ptr [r12 + rdx*4] ; add rdx, r12 ; jmp rdx
0x000000000003119b : mov dh, 0xd2 ; movsxd rdx, dword ptr [r10 + rdx*4] ; add rdx, r10 ; jmp rdx
0x0000000000083a7a : mov dh, 0xd2 ; sub eax, edx ; ret
0x00000000000aeaf8 : mov dh, 0xd6 ; movsxd rax, dword ptr [rcx + rdx*4] ; add rax, rcx ; jmp rax
0x0000000000083f89 : mov dh, 0xe ; mov byte ptr [rdi], cl ; ret
0x0000000000080071 : mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000143fb4 : mov dh, 0xe ; sub eax, ecx ; ret
0x0000000000055753 : mov dh, 0xe4 ; movsxd rax, dword ptr [rdx + r12*4] ; add rax, rdx ; jmp rax
0x00000000000cbe07 : mov dh, 0xed ; movsxd rax, dword ptr [rsi + rbp*4] ; add rax, rsi ; jmp rax
0x00000000001794f1 : mov dh, 0xef ; call qword ptr [rbx]
0x000000000016c8a1 : mov dh, 0xf0 ; call rsp
0x000000000015e3c1 : mov dh, 0xf5 ; call qword ptr [rax]
0x000000000015e3b9 : mov dh, 0xf5 ; call rax
0x000000000015e3bd : mov dh, 0xf5 ; inc eax ; mov dh, 0xf5 ; call qword ptr [rax]
0x000000000015e3b5 : mov dh, 0xf5 ; inc eax ; mov dh, 0xf5 ; call rax
0x000000000015e3ad : mov dh, 0xf5 ; jmp rax
0x000000000015e3a9 : mov dh, 0xf5 ; push qword ptr [rax - 0x4a] ; cmc ; jmp rax
0x000000000015e3e5 : mov dh, 0xf5 ; push rax ; mov dh, 0xf5 ; call qword ptr [rax]
0x00000000000c14f4 : mov dh, 0xf6 ; add eax, eax ; or eax, esi ; jne 0xc1509 ; ret
0x000000000006226d : mov dh, 0xff ; dec dword ptr [rax - 0x7d] ; ret 0xbe08
0x00000000000cbeeb : mov dh, 0xff ; movsxd rax, dword ptr [rdx + r15*4] ; add rax, rdx ; jmp rax
0x000000000016ea75 : mov dh, 1 ; add byte ptr [rcx + rax - 8], ah ; call rsp
0x000000000008b257 : mov dh, 1 ; test al, al ; jne 0x8b2c9 ; mov rax, rdi ; ret
0x0000000000191b38 : mov dh, 2 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000073a69 : mov dh, 2 ; ret
0x00000000000c5bcc : mov dh, 4 ; xor byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000c0122 : mov dh, 4 ; xor edi, dword ptr [rcx] ; retf
0x0000000000143fb1 : mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x0000000000083a51 : mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000080074 : mov dh, 7 ; sub eax, ecx ; ret
0x000000000015f725 : mov dh, bh ; call qword ptr [rax + 0x17fff78a]
0x000000000015f831 : mov dh, bh ; call qword ptr [rax]
0x000000000015f68d : mov dh, bh ; call qword ptr [rdi]
0x00000000000b1a57 : mov dh, bh ; dec dword ptr [rax - 0x77] ; ret
0x0000000000181ff8 : mov dh, bh ; hlt ; jmp qword ptr [rcx]
0x000000000009929c : mov dh, byte ptr [rcx - 0xd] ; ret
0x000000000016bfb5 : mov dl, 0 ; add ah, al ; ret 0xffef
0x00000000000e9574 : mov dl, 0 ; add byte ptr [rax], al ; syscall
0x000000000016bfbd : mov dl, 0 ; add byte ptr [rsp + rax*8 - 0x11], ah ; call rsp
0x0000000000003ab4 : mov dl, 0x1e ; ret
0x0000000000001f55 : mov dl, 0x3a ; jrcxz 0x1f37 ; retf -0x41cb
0x00000000000b99de : mov dl, 0x48 ; add eax, edx ; jmp rax
0x00000000001084ed : mov dl, 0x5b ; pop rbp ; pop r12 ; ret
0x000000000016a730 : mov dl, 0x97 ; cld ; inc dword ptr [rdx - 0x69] ; cld ; call rdx
0x000000000016ac20 : mov dl, 0xb8 ; cld ; jmp qword ptr [rdx]
0x000000000016ac28 : mov dl, 0xbe ; cld ; inc dword ptr [rdx - 0x42] ; cld ; call rdx
0x0000000000001e6e : mov dl, 0xcd ; push r13 ; salc ; retf 0x559a
0x00000000000d169a : mov dl, 0xef ; cli ; dec dword ptr [rax + 1] ; ret
0x00000000000776a8 : mov dl, 0xf3 ; ret
0x000000000016f6e1 : mov dl, 0xf9 ; call rsp
0x00000000001748c1 : mov dl, 0xfa ; jmp qword ptr [rcx]
0x00000000000c9062 : mov dl, 0xfb ; call rcx
0x0000000000169fc9 : mov dl, 0xfb ; jmp rax
0x000000000016af01 : mov dl, 0xfc ; call rsp
0x000000000016adc5 : mov dl, 0xfc ; jmp qword ptr [rax + 0x20fffcb1]
0x000000000016adc1 : mov dl, 0xfc ; jmp qword ptr [rax]
0x000000000016a0d1 : mov dl, 0xfd ; call qword ptr [rcx]
0x00000000000ec165 : mov dl, 3 ; add al, 0xa ; ret
0x00000000000ec182 : mov dl, al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rsp ; retf -0x74c0
0x00000000000951c3 : mov dl, byte ptr [rsi + 2] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; ret
0x00000000000951e2 : mov dl, byte ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x0000000000095223 : mov dl, byte ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; ret
0x000000000012dbc0 : mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00000000000968f0 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000951a0 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000098360 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x000000000017b909 : mov dr0, eax ; call qword ptr [rax]
0x000000000017b921 : mov dr0, eax ; jmp qword ptr [rsi]
0x00000000001832c1 : mov dr0, ebp ; jmp qword ptr [rcx]
0x000000000016cc81 : mov dr0, ecx ; jmp rsp
0x0000000000003035 : mov dr0, word ptr [rax] ; retf
0x000000000016f5e9 : mov dr1, ecx ; jmp rsp
0x000000000016aab1 : mov dr1, esp ; call qword ptr [rax + 0x10fffc8d]
0x000000000016aaad : mov dr1, esp ; call qword ptr [rax]
0x000000000016a931 : mov dr1, esp ; call rdx
0x00000000000bafd4 : mov dr1, esp ; dec dword ptr [rax - 0x7d] ; ret
0x000000000016aa71 : mov dr1, esp ; jmp qword ptr [rax + 0x20fffc8d]
0x000000000016aa6d : mov dr1, esp ; jmp qword ptr [rax]
0x00000000000c45c0 : mov dr1, word ptr [rbx] ; add al, byte ptr [rax] ; add byte ptr [rbp + 0x63], cl ; retf
0x000000000002708f : mov dr1, word ptr [rdx] ; add al, 0 ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x000000000015a9de : mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x00000000000a7df0 : mov dword ptr [r11 + 0xc], edi ; pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000077623 : mov dword ptr [r12 + 0x10], eax ; pop r12 ; ret
0x000000000010c1ce : mov dword ptr [r14], 0 ; ret
0x0000000000104521 : mov dword ptr [r8], ecx ; mov qword ptr [r9], r10 ; ret
0x0000000000036563 : mov dword ptr [r8], edx ; mov dword ptr [rsi], edx ; ret
0x0000000000104494 : mov dword ptr [r8], edx ; mov qword ptr [r9], r10 ; ret
0x00000000000f5b40 : mov dword ptr [r8], edx ; xor eax, eax ; ret
0x00000000000e0709 : mov dword ptr [r8], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e07a1 : mov dword ptr [r8], r12d ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000146586 : mov dword ptr [r9 - 2], ecx ; ret
0x0000000000146571 : mov dword ptr [r9 - 4], ecx ; ret
0x00000000000e5941 : mov dword ptr [rax + 0x10], ecx ; ret
0x000000000006b5c9 : mov dword ptr [rax + 0x10], edx ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000006b609 : mov dword ptr [rax + 0x10], esi ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000006bb99 : mov dword ptr [rax + 0x18], edx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000070899 : mov dword ptr [rax + 0x20], edx ; pop rbx ; ret
0x00000000000c321b : mov dword ptr [rax + 0x20], edx ; xor eax, eax ; ret
0x00000000000c324d : mov dword ptr [rax + 0x20], esi ; xor eax, eax ; ret
0x000000000006b5cd : mov dword ptr [rax + 0x40], ecx ; ret
0x000000000006bc37 : mov dword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x000000000010d3a4 : mov dword ptr [rax + 0x58], eax ; mov eax, 1 ; ret
0x00000000000f8026 : mov dword ptr [rax + 0xc], eax ; jne 0xf7fcc ; mov rax, rdi ; ret
0x00000000000f8025 : mov dword ptr [rax + 0xc], r8d ; jne 0xf7fcd ; mov rax, rdi ; ret
0x000000000014a597 : mov dword ptr [rax + 8], 0 ; pop rbx ; ret
0x000000000007503a : mov dword ptr [rax + 8], 0 ; ret
0x00000000000e5909 : mov dword ptr [rax + 8], ecx ; ret
0x00000000000c314a : mov dword ptr [rax - 4], edx ; cmp esi, dword ptr [rdi + 4] ; jl 0xc3149 ; ret
0x000000000011859d : mov dword ptr [rax], 0 ; pop rbx ; ret
0x00000000000e1338 : mov dword ptr [rax], 0x16 ; mov eax, edi ; ret
0x000000000004c9c5 : mov dword ptr [rax], 0x16 ; mov eax, esi ; ret
0x00000000000e5558 : mov dword ptr [rax], 0x16 ; ret
0x00000000000df878 : mov dword ptr [rax], 0x16 ; xor eax, eax ; ret
0x00000000000319f0 : mov dword ptr [rax], 0x2a ; mov rax, rcx ; ret
0x0000000000079ac8 : mov dword ptr [rax], 0xc ; xor eax, eax ; ret
0x00000000000e0f24 : mov dword ptr [rax], 0xffffffff ; xor eax, eax ; ret
0x00000000000b3970 : mov dword ptr [rax], 2 ; xor eax, eax ; ret
0x00000000000b8c46 : mov dword ptr [rax], 7 ; ret
0x0000000000020b08 : mov dword ptr [rax], 9 ; mov eax, edi ; ret
0x000000000009a0f3 : mov dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000db491 : mov dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000000d1fd4 : mov dword ptr [rax], eax ; mov eax, 0xffffffff ; ret
0x00000000000e45c9 : mov dword ptr [rax], ebp ; mov eax, 3 ; syscall
0x000000000005ce04 : mov dword ptr [rax], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000069eda : mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; ret
0x0000000000104522 : mov dword ptr [rax], ecx ; mov qword ptr [r9], r10 ; ret
0x00000000000d6319 : mov dword ptr [rax], ecx ; xor eax, eax ; ret
0x000000000007ae06 : mov dword ptr [rax], edi ; ret
0x00000000000e8be1 : mov dword ptr [rax], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000009ae31 : mov dword ptr [rax], edx ; jne 0x9ae2d ; ret
0x000000000010428a : mov dword ptr [rax], edx ; lea eax, dword ptr [r9 + r8 + 2] ; pop rbx ; ret
0x0000000000036564 : mov dword ptr [rax], edx ; mov dword ptr [rsi], edx ; ret
0x00000000000d202a : mov dword ptr [rax], edx ; mov eax, 0xffffffff ; ret
0x0000000000104495 : mov dword ptr [rax], edx ; mov qword ptr [r9], r10 ; ret
0x000000000002bc63 : mov dword ptr [rax], edx ; ret
0x000000000006c271 : mov dword ptr [rax], edx ; xor eax, eax ; ret
0x00000000000facd7 : mov dword ptr [rax], esp ; mov rdi, r12 ; call 0x107787
0x00000000000e070a : mov dword ptr [rax], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e07a2 : mov dword ptr [rax], esp ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d1fd3 : mov dword ptr [rax], r8d ; mov eax, 0xffffffff ; ret
0x0000000000052400 : mov dword ptr [rbp - 0x10c8], edi ; jmp rax
0x000000000005319d : mov dword ptr [rbp - 0x10d0], edx ; call 0x4f488
0x00000000000da81b : mov dword ptr [rbp - 0x17c], ecx ; syscall
0x00000000001082e6 : mov dword ptr [rbp - 0x34], ecx ; call 0x845a5
0x00000000000e6edc : mov dword ptr [rbp - 0x40], esp ; syscall
0x00000000000e6ed8 : mov dword ptr [rbp - 0x48], esp ; mov qword ptr [rbp - 0x40], r12 ; syscall
0x0000000000062ada : mov dword ptr [rbp - 0x498], edx ; jmp 0x62ab4
0x000000000006313f : mov dword ptr [rbp - 0x520], edx ; jmp 0x5fb81
0x000000000004713f : mov dword ptr [rbp - 0x530], esi ; jmp rax
0x000000000005f1b2 : mov dword ptr [rbp - 0x558], eax ; call 0x6bc58
0x000000000005f69e : mov dword ptr [rbp - 0x558], edx ; call 0xec118
0x000000000005f1b1 : mov dword ptr [rbp - 0x558], r8d ; call 0x6bc59
0x0000000000060958 : mov dword ptr [rbp - 0x55c], ebx ; jmp 0x5d378
0x0000000000058627 : mov dword ptr [rbp - 0x628], eax ; call 0x748b8
0x0000000000058626 : mov dword ptr [rbp - 0x628], r8d ; call 0x748b9
0x000000000005ae02 : mov dword ptr [rbp - 0x660], eax ; jmp 0x57897
0x0000000000057ea4 : mov dword ptr [rbp - 0x670], eax ; call 0x748b8
0x00000000000ea9d0 : mov dword ptr [rbp - 0x6d0], eax ; mov eax, ebx ; syscall
0x00000000000f427b : mov dword ptr [rbp - 0x70], edx ; mov rdx, r13 ; call rax
0x00000000000f4939 : mov dword ptr [rbp - 0x80], eax ; call r8
0x00000000000f43da : mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x00000000000f4c78 : mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x00000000000f437c : mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x00000000000f44a3 : mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x000000000007d357 : mov dword ptr [rbp], eax ; je 0x7d429 ; call rax
0x000000000011dced : mov dword ptr [rbp], ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000003ed81 : mov dword ptr [rbp], ebx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000010375f : mov dword ptr [rbp], ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000a81d8 : mov dword ptr [rbp], ebx ; call r12
0x0000000000108fe8 : mov dword ptr [rbp], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000035eaa : mov dword ptr [rbp], edx ; call rax
0x0000000000102652 : mov dword ptr [rbp], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000102651 : mov dword ptr [rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000029132 : mov dword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000071a97 : mov dword ptr [rbx + 0x10], eax ; mov rax, rbx ; pop rbx ; ret
0x000000000011f366 : mov dword ptr [rbx + 0x10], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000072549 : mov dword ptr [rbx + 0x10], eax ; xor eax, eax ; pop rbx ; ret
0x00000000000f0394 : mov dword ptr [rbx + 0x10], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000118212 : mov dword ptr [rbx + 0x18], 0 ; pop rbx ; ret
0x000000000011f31e : mov dword ptr [rbx + 0x18], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000000f03c4 : mov dword ptr [rbx + 0x18], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000006fff5 : mov dword ptr [rbx + 0x18], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000118269 : mov dword ptr [rbx + 0x20], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d007b : mov dword ptr [rbx + 0x28], 0 ; pop rbx ; ret
0x00000000000a9a19 : mov dword ptr [rbx + 0x28], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000708c5 : mov dword ptr [rbx + 0x28], eax ; pop rbx ; ret
0x000000000007e243 : mov dword ptr [rbx + 0x30], eax ; mov qword ptr [rbx], rdi ; call rcx
0x00000000000c18a0 : mov dword ptr [rbx + 0x34], esp ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000032d8d : mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x00000000000e0381 : mov dword ptr [rbx + 0x48], eax ; pop rbx ; ret
0x000000000007e2f7 : mov dword ptr [rbx + 0x48], ecx ; mov qword ptr [rbx], rsi ; mov rdi, r9 ; call rcx
0x000000000007471b : mov dword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x0000000000072fd2 : mov dword ptr [rbx + 0x70], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000006b654 : mov dword ptr [rbx + 0x74], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000a7df1 : mov dword ptr [rbx + 0xc], edi ; pop rbp ; pop r12 ; pop r14 ; ret
0x00000000000f0364 : mov dword ptr [rbx + 8], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000337d8 : mov dword ptr [rbx + 8], edx ; add rsp, 0x40 ; pop rbx ; ret
0x000000000007e58d : mov dword ptr [rbx + 8], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e5542 : mov dword ptr [rbx], 0 ; pop rbx ; ret
0x00000000000011d4 : mov dword ptr [rbx], 0x3c90000 ; add byte ptr [rax], al ; retf 3
0x0000000000118433 : mov dword ptr [rbx], eax ; add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x00000000000749fc : mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000000000011f511 : mov dword ptr [rbx], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000011504f : mov dword ptr [rbx], eax ; pop rbx ; ret
0x00000000000e54f0 : mov dword ptr [rbx], eax ; setne al ; movzx eax, al ; pop rbx ; ret
0x000000000011488a : mov dword ptr [rbx], eax ; xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000114579 : mov dword ptr [rbx], eax ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000de207 : mov dword ptr [rbx], eax ; xor eax, eax ; pop rbx ; ret
0x000000000006a295 : mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000103b61 : mov dword ptr [rbx], ecx ; add rsp, 0x10 ; ret
0x000000000006bb9c : mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x000000000007e247 : mov dword ptr [rbx], edi ; call rcx
0x000000000005ce02 : mov dword ptr [rbx], edx ; mov dword ptr [rax], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003346e : mov dword ptr [rbx], edx ; xor eax, eax ; add rsp, 8 ; pop rbx ; ret
0x000000000007cffd : mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x000000000007e2fb : mov dword ptr [rbx], esi ; mov rdi, r9 ; call rcx
0x00000000000677bb : mov dword ptr [rbx], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000110414 : mov dword ptr [rcx + 0x10], edx ; mov eax, 1 ; ret
0x00000000000e5905 : mov dword ptr [rcx + 0x10], edx ; mov qword ptr [rax + 8], r9 ; ret
0x000000000006750e : mov dword ptr [rcx + 0x130], edx ; ret
0x000000000000044d : mov dword ptr [rcx + 0x7c05000c], eax ; adc byte ptr [rsp + rcx], bl ; ret 0x4412
0x000000000013e842 : mov dword ptr [rcx + 3], edx ; ret
0x000000000009a570 : mov dword ptr [rcx + 4], eax ; jne 0x9a53e ; ret
0x000000000013e833 : mov dword ptr [rcx + 4], edx ; ret
0x000000000009ae00 : mov dword ptr [rcx + 4], esi ; jne 0x9ae11 ; mov dword ptr [rcx + 8], esi ; ret
0x000000000009a56f : mov dword ptr [rcx + 4], r8d ; jne 0x9a53f ; ret
0x000000000013e8a4 : mov dword ptr [rcx + 5], edx ; ret
0x000000000013e8b4 : mov dword ptr [rcx + 6], edx ; ret
0x000000000013e883 : mov dword ptr [rcx + 7], edx ; ret
0x00000000000e593d : mov dword ptr [rcx + 8], edx ; mov qword ptr [rax + 0x10], r9 ; ret
0x000000000013e874 : mov dword ptr [rcx + 8], edx ; ret
0x000000000009ae05 : mov dword ptr [rcx + 8], esi ; ret
0x0000000000146587 : mov dword ptr [rcx - 2], ecx ; ret
0x0000000000146572 : mov dword ptr [rcx - 4], ecx ; ret
0x0000000000146561 : mov dword ptr [rcx - 8], ecx ; ret
0x000000000009a738 : mov dword ptr [rcx], 0 ; jne 0x9a739 ; ret
0x0000000000000e28 : mov dword ptr [rcx], 0x1c80000 ; add byte ptr [rax], al ; retf
0x00000000000ba63d : mov dword ptr [rcx], 0xf7bfa80 ; xchg eax, esp ; ret 0xb60f
0x000000000018d1c5 : mov dword ptr [rcx], 0xf806a800 ; jmp rsi
0x000000000016ed2d : mov dword ptr [rcx], 0xf8552400 ; call rsp
0x00000000001893ed : mov dword ptr [rcx], eax ; add al, ah ; push rsi ; call qword ptr [rdi]
0x00000000001893d5 : mov dword ptr [rcx], eax ; add al, bl ; push rsi ; call qword ptr [rdi]
0x0000000000189405 : mov dword ptr [rcx], eax ; add al, ch ; push rsi ; call qword ptr [rax]
0x00000000000c3372 : mov dword ptr [rcx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000000000009a766 : mov dword ptr [rcx], eax ; jne 0x9a755 ; ret
0x000000000003332a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000006abf7 : mov dword ptr [rcx], eax ; ret
0x000000000006ea70 : mov dword ptr [rcx], eax ; xor eax, eax ; pop rbx ; ret
0x000000000006aa61 : mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x00000000001044d9 : mov dword ptr [rcx], edi ; ret
0x00000000000835c7 : mov dword ptr [rcx], edx ; add rsp, 0x100 ; ret
0x000000000013e801 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 2], dl ; ret
0x000000000013e820 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x000000000013e861 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 8], dl ; ret
0x000000000013e840 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x000000000013e881 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 7], edx ; ret
0x000000000013e891 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 8], edx ; ret
0x000000000013e8a1 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 5], rdx ; ret
0x000000000013e8b1 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 6], rdx ; ret
0x000000000013e8c1 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 7], rdx ; ret
0x000000000013e8d1 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 8], rdx ; ret
0x0000000000076ee1 : mov dword ptr [rcx], edx ; mov rax, rdx ; add rsp, 8 ; ret
0x000000000013e830 : mov dword ptr [rcx], edx ; mov word ptr [rcx + 4], dx ; ret
0x000000000013e871 : mov dword ptr [rcx], edx ; mov word ptr [rcx + 8], dx ; ret
0x0000000000104498 : mov dword ptr [rcx], edx ; ret
0x000000000009a765 : mov dword ptr [rcx], r8d ; jne 0x9a756 ; ret
0x00000000000daf7b : mov dword ptr [rdi + 0x100], edx ; ret
0x00000000000dafb2 : mov dword ptr [rdi + 0x108], eax ; xor eax, eax ; ret
0x0000000000095c5d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x0000000000096aad : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x0000000000095c9b : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x0000000000096aeb : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x14] ; ret
0x0000000000095d1d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x0000000000096b6d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x18] ; ret
0x000000000009462b : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000952fe : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000946ad : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000e58ba : mov dword ptr [rdi + 0x10], ecx ; mov qword ptr [rdx], rdi ; ret
0x000000000004293f : mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000009851d : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x000000000009855b : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000985dd : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x0000000000095380 : mov dword ptr [rdi + 0x10], edx ; mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000946f0 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x0000000000094710 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000112c63 : mov dword ptr [rdi + 0x10], edx ; mov eax, 1 ; ret
0x00000000000946d1 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; ret
0x00000000000dafa0 : mov dword ptr [rdi + 0x10c], esi ; xor eax, eax ; ret
0x0000000000095d83 : mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x0000000000096bd3 : mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x00000000000946f3 : mov dword ptr [rdi + 0x17], ecx ; ret
0x0000000000098643 : mov dword ptr [rdi + 0x17], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1b], ch ; ret
0x0000000000117f00 : mov dword ptr [rdi + 0x18], eax ; mov eax, 1 ; ret
0x0000000000074613 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000070c77 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x0000000000095d65 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x0000000000096bb5 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x0000000000095da3 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x0000000000096bf3 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000000946d5 : mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000098625 : mov dword ptr [rdi + 0x18], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x0000000000098663 : mov dword ptr [rdi + 0x18], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1c], ch ; ret
0x0000000000117f92 : mov dword ptr [rdi + 0x18], edx ; mov eax, 1 ; ret
0x0000000000117ec6 : mov dword ptr [rdi + 0x18], esi ; ret
0x00000000000a8d3f : mov dword ptr [rdi + 0x20], ecx ; ret
0x000000000011353c : mov dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x0000000000118041 : mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000a8d3b : mov dword ptr [rdi + 0x28], esi ; mov qword ptr [rdi + 0x20], rcx ; ret
0x00000000000c2995 : mov dword ptr [rdi + 0x2c], eax ; mov dword ptr [rdi + 0x30], eax ; ret
0x00000000000c2998 : mov dword ptr [rdi + 0x30], eax ; ret
0x00000000001134f4 : mov dword ptr [rdi + 0x38], edx ; mov eax, 1 ; ret
0x0000000000112ce8 : mov dword ptr [rdi + 0x48], eax ; mov eax, 1 ; ret
0x0000000000074643 : mov dword ptr [rdi + 0x48], edx ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000112c45 : mov dword ptr [rdi + 0x54], eax ; mov eax, 1 ; ret
0x0000000000112d15 : mov dword ptr [rdi + 0x58], eax ; mov eax, 1 ; ret
0x000000000007669d : mov dword ptr [rdi + 0x58], ecx ; or eax, 1 ; mov dword ptr [rdi + 4], eax ; ret
0x00000000000da37e : mov dword ptr [rdi + 0x80], edx ; ret
0x000000000010390f : mov dword ptr [rdi + 0xc], edx ; mov qword ptr [rsi], rdi ; ret
0x0000000000095cdd : mov dword ptr [rdi + 0xe], ecx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x0000000000096b2d : mov dword ptr [rdi + 0xe], ecx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x000000000009464d : mov dword ptr [rdi + 0xe], ecx ; ret
0x000000000009859d : mov dword ptr [rdi + 0xe], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x0000000000095c7b : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x0000000000096acb : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x0000000000095cfd : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x0000000000096b4d : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x000000000009460b : mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009853b : mov dword ptr [rdi + 0xf], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000985bd : mov dword ptr [rdi + 0xf], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x0000000000133dd5 : mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000133c18 : mov dword ptr [rdi + 1], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000133eb8 : mov dword ptr [rdi + 1], edx ; mov word ptr [rdi], cx ; ret
0x0000000000133d65 : mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000133ba8 : mov dword ptr [rdi + 2], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000036c23 : mov dword ptr [rdi + 2], edx ; ret
0x0000000000095b47 : mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x0000000000096977 : mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000133cf5 : mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000133b38 : mov dword ptr [rdi + 3], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000094537 : mov dword ptr [rdi + 3], edx ; ret
0x00000000000983e7 : mov dword ptr [rdi + 3], edx ; xor ch, ch ; mov byte ptr [rdi + 7], ch ; ret
0x000000000008edc3 : mov dword ptr [rdi + 4], eax ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000008ec62 : mov dword ptr [rdi + 4], eax ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000008ed23 : mov dword ptr [rdi + 4], eax ; mov rax, rdi ; ret
0x000000000007668a : mov dword ptr [rdi + 4], eax ; ret
0x0000000000036c1d : mov dword ptr [rdi + 4], eax ; xor eax, eax ; mov word ptr [rdi + 2], dx ; ret
0x000000000008ecc6 : mov dword ptr [rdi + 4], ebx ; mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000008ee13 : mov dword ptr [rdi + 4], edx ; lea rax, qword ptr [rdi + 5] ; ret
0x0000000000096959 : mov dword ptr [rdi + 4], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x0000000000133ac8 : mov dword ptr [rdi + 4], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000008ed13 : mov dword ptr [rdi + 4], edx ; mov rax, rdi ; ret
0x0000000000094529 : mov dword ptr [rdi + 4], edx ; ret
0x00000000000983c9 : mov dword ptr [rdi + 4], edx ; xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000da3d0 : mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x000000000008edc2 : mov dword ptr [rdi + 4], r8d ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000008ed22 : mov dword ptr [rdi + 4], r8d ; mov rax, rdi ; ret
0x0000000000095bdb : mov dword ptr [rdi + 5], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x0000000000096a1b : mov dword ptr [rdi + 5], edx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x0000000000133a58 : mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000009459b : mov dword ptr [rdi + 5], edx ; ret
0x000000000009848b : mov dword ptr [rdi + 5], edx ; xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x0000000000095bfb : mov dword ptr [rdi + 6], edx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x0000000000096a3b : mov dword ptr [rdi + 6], edx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000001339e8 : mov dword ptr [rdi + 6], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000945ab : mov dword ptr [rdi + 6], edx ; ret
0x00000000000984ab : mov dword ptr [rdi + 6], edx ; xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x0000000000095b99 : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000000969d9 : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x0000000000095c1b : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x0000000000096a5b : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000133978 : mov dword ptr [rdi + 7], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000094579 : mov dword ptr [rdi + 7], edx ; ret
0x0000000000098449 : mov dword ptr [rdi + 7], edx ; xor ch, ch ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000984cb : mov dword ptr [rdi + 7], edx ; xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000e2f78 : mov dword ptr [rdi + 8], 0 ; ret
0x000000000010e006 : mov dword ptr [rdi + 8], eax ; pop rbx ; ret
0x0000000000074617 : mov dword ptr [rdi + 8], eax ; ret
0x00000000000428c4 : mov dword ptr [rdi + 8], ecx ; ret
0x00000000000969bb : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x0000000000095bb9 : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000000969f9 : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x0000000000095b7b : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 9] ; ret
0x0000000000042134 : mov dword ptr [rdi + 8], edx ; mov eax, ecx ; adc eax, eax ; ret
0x0000000000036544 : mov dword ptr [rdi + 8], edx ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000007143f : mov dword ptr [rdi + 8], edx ; movzx eax, byte ptr [rax] ; ret
0x0000000000036535 : mov dword ptr [rdi + 8], edx ; ret
0x000000000009842b : mov dword ptr [rdi + 8], edx ; xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x0000000000098469 : mov dword ptr [rdi + 8], edx ; xor ch, ch ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000e04f2 : mov dword ptr [rdi + 8], esi ; ret
0x0000000000104608 : mov dword ptr [rdi + rdx + 0x10], edx ; ret
0x0000000000104603 : mov dword ptr [rdi + rdx + 8], ecx ; mov qword ptr [rdi + rdx + 0x10], r10 ; ret
0x000000000008442b : mov dword ptr [rdi + rdx - 2], ecx ; mov word ptr [rdi], cx ; ret
0x0000000000083fb5 : mov dword ptr [rdi + rdx - 2], ecx ; mov word ptr [rdi], si ; ret
0x0000000000084423 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; ret
0x0000000000129565 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x0000000000083fa5 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000008441b : mov dword ptr [rdi + rdx - 8], ecx ; mov qword ptr [rdi], rcx ; ret
0x0000000000083f97 : mov dword ptr [rdi + rdx - 8], ecx ; mov qword ptr [rdi], rsi ; ret
0x000000000012d885 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000012d8c3 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000004282f : mov dword ptr [rdi - 0x10], ecx ; ret
0x000000000012dc0c : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000133428 : mov dword ptr [rdi - 0xa], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012ddec : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001333a8 : mov dword ptr [rdi - 0xb], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012dfdc : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000133328 : mov dword ptr [rdi - 0xc], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012e1ad : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000133299 : mov dword ptr [rdi - 0xd], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000012e3ad : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000133209 : mov dword ptr [rdi - 0xe], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000012e5ad : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000133179 : mov dword ptr [rdi - 0xf], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000000954c0 : mov dword ptr [rdi - 1], edx ; ret
0x000000000012df8d : mov dword ptr [rdi - 2], ecx ; ret
0x000000000012dda5 : mov dword ptr [rdi - 2], edx ; ret
0x000000000012df89 : mov dword ptr [rdi - 3], edx ; mov word ptr [rdi - 2], cx ; ret
0x000000000012e369 : mov dword ptr [rdi - 4], ecx ; ret
0x000000000012da3f : mov dword ptr [rdi - 4], edx ; ret
0x000000000012e366 : mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012e566 : mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012e766 : mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000427ba : mov dword ptr [rdi - 8], ecx ; ret
0x000000000012d8c7 : mov dword ptr [rdi - 8], edx ; ret
0x000000000012da3c : mov dword ptr [rdi - 9], eax ; mov dword ptr [rdi - 4], edx ; ret
0x000000000012db38 : mov dword ptr [rdi - 9], ecx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000012da84 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001334a8 : mov dword ptr [rdi - 9], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000006a2c0 : mov dword ptr [rdi], 0 ; mov rax, rdi ; ret
0x0000000000036040 : mov dword ptr [rdi], 0 ; xor eax, eax ; pop rbx ; ret
0x000000000008eca4 : mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000008ecb7 : mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000008ecc9 : mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000008ecdd : mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000010e003 : mov dword ptr [rdi], eax ; mov qword ptr [rdi + 8], rax ; pop rbx ; ret
0x00000000000e2f65 : mov dword ptr [rdi], eax ; mov qword ptr [rdi + 8], rsi ; ret
0x000000000004403b : mov dword ptr [rdi], eax ; mov rax, rdi ; ret
0x00000000000427b4 : mov dword ptr [rdi], eax ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x00000000000428be : mov dword ptr [rdi], eax ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x00000000000339d3 : mov dword ptr [rdi], eax ; xor eax, eax ; ret
0x000000000004e7d6 : mov dword ptr [rdi], ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008ec82 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000008edf0 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000095b15 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x0000000000095b67 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000095af4 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000944f4 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000008ec92 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dl ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000951c7 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dl ; ret
0x000000000008ed70 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x0000000000096945 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000951e5 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x0000000000096997 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 8], dl ; lea rax, qword ptr [rdi + 9] ; ret
0x0000000000095227 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 8], dl ; ret
0x0000000000095b45 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x0000000000096975 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000094535 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x000000000008ed20 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 4], r8d ; mov rax, rdi ; ret
0x0000000000095b97 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000000969d7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x0000000000094577 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000095bb7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000000969f7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x0000000000094587 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000146c47 : mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x000000000004f521 : mov dword ptr [rdi], ecx ; mov eax, 0xffffffff ; ret
0x0000000000094598 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000945a8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000945b8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; ret
0x000000000008ed60 : mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x000000000008ed10 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; mov rax, rdi ; ret
0x0000000000094526 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x0000000000094568 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; ret
0x0000000000146c53 : mov dword ptr [rdi], ecx ; mov word ptr [rsi - 2], cx ; ret
0x00000000000325e6 : mov dword ptr [rdi], ecx ; ret
0x000000000012955f : mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x0000000000032c52 : mov dword ptr [rdi], edx ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000095ae4 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000096904 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000095b02 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000096932 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 4] ; ret
0x0000000000095b54 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000096984 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000954e0 : mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x0000000000095521 : mov dword ptr [rdi], edx ; mov byte ptr [rdi + 8], dl ; ret
0x0000000000095541 : mov dword ptr [rdi], edx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000095551 : mov dword ptr [rdi], edx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000095561 : mov dword ptr [rdi], edx ; mov qword ptr [rdi + 5], rdx ; ret
0x0000000000095571 : mov dword ptr [rdi], edx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000954f0 : mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x0000000000095531 : mov dword ptr [rdi], edx ; mov word ptr [rdi + 8], dx ; ret
0x0000000000032926 : mov dword ptr [rdi], edx ; ret
0x0000000000098374 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000983a2 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000983f4 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x000000000008edd1 : mov dword ptr [rdi], esi ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000008ed51 : mov dword ptr [rdi], esi ; mov byte ptr [rdi + 2], 0 ; mov rax, rdi ; ret
0x000000000014656f : mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x0000000000043a86 : mov dword ptr [rdi], esi ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000014655e : mov dword ptr [rdi], esi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000008ed41 : mov dword ptr [rdi], esi ; mov rax, rdi ; ret
0x0000000000146583 : mov dword ptr [rdi], esi ; mov word ptr [r9 - 2], cx ; ret
0x0000000000043a6b : mov dword ptr [rdi], esi ; ret
0x00000000000da3b1 : mov dword ptr [rdi], esi ; xor eax, eax ; ret
0x000000000012c4a2 : mov dword ptr [rdi], esp ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x280f
0x000000000008ec81 : mov dword ptr [rdi], r9d ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000001135fc : mov dword ptr [rdx + 0x10], eax ; mov eax, 1 ; ret
0x0000000000071af5 : mov dword ptr [rdx + 0x130], edi ; pop rbx ; ret
0x000000000006aa5e : mov dword ptr [rdx + 0x20], eax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x000000000006abf4 : mov dword ptr [rdx + 0x20], esi ; mov dword ptr [rcx], eax ; ret
0x000000000010d010 : mov dword ptr [rdx + 0x20], esi ; ret
0x000000000010cfec : mov dword ptr [rdx + 0x58], edi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000010cff0 : mov dword ptr [rdx + 0x68], ecx ; ret
0x00000000001104b0 : mov dword ptr [rdx + 0x6c], eax ; mov eax, 1 ; ret
0x00000000001134dc : mov dword ptr [rdx + 0xc], eax ; mov eax, 1 ; ret
0x0000000000140bc7 : mov dword ptr [rdx + 3], eax ; lea rax, qword ptr [rdx + 6] ; ret
0x00000000000912bc : mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x0000000000064e4b : mov dword ptr [rdx + 4], 1 ; ret
0x0000000000140ba9 : mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x000000000009129e : mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x0000000000140c5b : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x0000000000140bd9 : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 8] ; ret
0x000000000013c889 : mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x0000000000140c7b : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x0000000000140bf9 : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 9] ; ret
0x000000000013c899 : mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x0000000000140c19 : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xa] ; ret
0x0000000000140c9b : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x0000000000091340 : mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x0000000000064df4 : mov dword ptr [rdx + 8], eax ; add dword ptr [rdx + 4], 1 ; ret
0x0000000000140c39 : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xb] ; ret
0x0000000000140b2b : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x0000000000091322 : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x00000000000c32c2 : mov dword ptr [rdx + 8], ecx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000110431 : mov dword ptr [rdx + 8], edi ; ret
0x00000000000e088f : mov dword ptr [rdx], eax ; add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x00000000000b398f : mov dword ptr [rdx], eax ; jmp 0xb3961
0x0000000000140b54 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 1] ; ret
0x0000000000140b82 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x0000000000140ad4 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 7] ; ret
0x00000000000722ba : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000000332fa : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000043a88 : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000011ca23 : mov dword ptr [rdx], eax ; mov eax, ecx ; ret
0x00000000000b555d : mov dword ptr [rdx], eax ; mov eax, esi ; add rsp, 0x48 ; ret
0x0000000000072dec : mov dword ptr [rdx], eax ; mov rax, -1 ; ret
0x0000000000091239 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x00000000000b4d12 : mov dword ptr [rdx], eax ; mov rax, rsi ; add rsp, 8 ; ret
0x000000000002c42d : mov dword ptr [rdx], eax ; ret
0x000000000006f6ef : mov dword ptr [rdx], eax ; xor eax, eax ; pop rbx ; ret
0x0000000000082b2e : mov dword ptr [rdx], ebx ; mov rax, r10 ; pop rbx ; ret
0x00000000000d1d27 : mov dword ptr [rdx], ecx ; pop rdx ; pop rcx ; pop rbx ; ret
0x000000000008e8c2 : mov dword ptr [rdx], ecx ; ret
0x00000000000cf81b : mov dword ptr [rdx], edi ; ret
0x000000000007047e : mov dword ptr [rdx], esi ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000b53b3 : mov dword ptr [rdx], esi ; add rsp, 0x18 ; ret
0x00000000000b547d : mov dword ptr [rdx], esi ; add rsp, 8 ; ret
0x000000000011042e : mov dword ptr [rdx], esi ; mov qword ptr [rdx + 8], rdi ; ret
0x0000000000089327 : mov dword ptr [rdx], esp ; mov rax, r11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b555c : mov dword ptr [rdx], r8d ; mov eax, esi ; add rsp, 0x48 ; ret
0x0000000000149d9f : mov dword ptr [rip + 0x25197b], ebx ; jne 0x149d91 ; pop rbx ; ret
0x00000000000f5e18 : mov dword ptr [rip + 0x2a7302], eax ; pop rbp ; ret
0x00000000000eaea0 : mov dword ptr [rip + 0x2ae37a], ebx ; pop rbx ; ret
0x00000000000e443a : mov dword ptr [rip + 0x2b4dc8], edi ; ret
0x00000000000e3709 : mov dword ptr [rip + 0x2b89e1], edx ; ret
0x0000000000082702 : mov dword ptr [rip + 0x319180], eax ; ret
0x000000000007aefa : mov dword ptr [rip + 0x3208d8], esi ; xor eax, eax ; ret
0x0000000000033cbb : mov dword ptr [rip + 0x3653cb], eax ; mov eax, edx ; ret
0x0000000000033cac : mov dword ptr [rip + 0x3653d6], edx ; ret
0x000000000002aec5 : mov dword ptr [rip + 0x36fb3d], eax ; mov eax, ecx ; syscall
0x000000000001f9bb : mov dword ptr [rip + 0x37e947], edx ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000000d0394 : mov dword ptr [rsi + 0x10], eax ; ret
0x0000000000036b46 : mov dword ptr [rsi + 0x10], eax ; xor eax, eax ; ret
0x00000000000364ad : mov dword ptr [rsi + 0x10], edx ; mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x00000000000c32dc : mov dword ptr [rsi + 0x18], edx ; mov dword ptr [rsi + 0x38], eax ; xor eax, eax ; ret
0x00000000000364b1 : mov dword ptr [rsi + 0x28], eax ; xor eax, eax ; ret
0x0000000000071416 : mov dword ptr [rsi + 0x28], ecx ; mov byte ptr [rdx], dil ; ret
0x00000000000c32df : mov dword ptr [rsi + 0x38], eax ; xor eax, eax ; ret
0x00000000000e0367 : mov dword ptr [rsi + 0x48], eax ; ret
0x000000000006c195 : mov dword ptr [rsi + 0x60], ebx ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000df716 : mov dword ptr [rsi + 0x66], edx ; xor eax, eax ; ret
0x00000000000da2ef : mov dword ptr [rsi + 0x78], eax ; xor eax, eax ; ret
0x0000000000036b90 : mov dword ptr [rsi + 0xc], eax ; xor eax, eax ; ret
0x0000000000036bd7 : mov dword ptr [rsi + 0xe], eax ; xor eax, eax ; ret
0x000000000009a5b8 : mov dword ptr [rsi + 4], 0 ; ret
0x00000000000d0377 : mov dword ptr [rsi + 8], 0 ; ret
0x000000000010c1b1 : mov dword ptr [rsi + 8], eax ; ret
0x00000000000d0390 : mov dword ptr [rsi + 8], ecx ; mov qword ptr [rsi + 0x10], r8 ; ret
0x00000000000a7a11 : mov dword ptr [rsi + rcx], edx ; jne 0xa7a0e ; ret
0x0000000000146c56 : mov dword ptr [rsi - 2], ecx ; ret
0x0000000000146c49 : mov dword ptr [rsi - 4], ecx ; ret
0x000000000010c1cf : mov dword ptr [rsi], 0 ; ret
0x000000000010c260 : mov dword ptr [rsi], 0xa ; ret
0x000000000010c250 : mov dword ptr [rsi], 0xb ; ret
0x000000000010c280 : mov dword ptr [rsi], 0xc ; ret
0x000000000010c270 : mov dword ptr [rsi], 8 ; ret
0x000000000011b120 : mov dword ptr [rsi], eax ; mov eax, 0xffffffff ; ret
0x0000000000105ca1 : mov dword ptr [rsi], eax ; mov eax, 1 ; ret
0x0000000000070c7b : mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000007684c : mov dword ptr [rsi], edi ; ret
0x00000000000f9671 : mov dword ptr [rsi], edi ; xor eax, eax ; ret
0x0000000000036566 : mov dword ptr [rsi], edx ; ret
0x0000000000032a85 : mov dword ptr [rsp + 0x10], eax ; fld xword ptr [rsp + 8] ; ret
0x0000000000077624 : mov dword ptr [rsp + 0x10], eax ; pop r12 ; ret
0x0000000000078b87 : mov dword ptr [rsp + 0x10], ecx ; mov qword ptr [rsp + 8], r8 ; call rdx
0x00000000000789bf : mov dword ptr [rsp + 0x10], esi ; call qword ptr [rax]
0x00000000000f38c6 : mov dword ptr [rsp + 0x18], eax ; call 0x6fae6
0x0000000000078791 : mov dword ptr [rsp + 0x18], ecx ; call qword ptr [rax]
0x0000000000078b05 : mov dword ptr [rsp + 0x18], edx ; call rcx
0x0000000000078b00 : mov dword ptr [rsp + 0x20], edx ; mov qword ptr [rsp + 0x18], r10 ; call rcx
0x000000000007878c : mov dword ptr [rsp + 0x20], edx ; mov qword ptr [rsp + 0x18], rcx ; call qword ptr [rax]
0x00000000000cc7c6 : mov dword ptr [rsp + 0x30], edi ; add rax, rcx ; jmp rax
0x0000000000032fb1 : mov dword ptr [rsp + 0x80], eax ; syscall
0x000000000010b5fa : mov dword ptr [rsp + 8], eax ; call 0x118056
0x000000000007e2b0 : mov dword ptr [rsp + 8], eax ; call qword ptr [rdx]
0x0000000000078b8c : mov dword ptr [rsp + 8], eax ; call rdx
0x000000000011833c : mov dword ptr [rsp + 8], eax ; xor eax, eax ; call rdx
0x0000000000022207 : mov dword ptr [rsp + 8], ecx ; call 0x7ec46
0x000000000006d45f : mov dword ptr [rsp + 8], ecx ; mov rdi, r15 ; call rax
0x0000000000078ab0 : mov dword ptr [rsp + 8], edx ; xor edi, edi ; call qword ptr [rax]
0x0000000000032b63 : mov dword ptr [rsp - 0x10], eax ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000043bea : mov dword ptr [rsp - 0x14], eax ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000e8c98 : mov dword ptr [rsp - 0x30], ecx ; syscall
0x00000000000e8c93 : mov dword ptr [rsp - 0x38], eax ; mov qword ptr [rsp - 0x30], r9 ; syscall
0x00000000000e1e74 : mov dword ptr [rsp - 0x48], 0x18 ; syscall
0x0000000000032d05 : mov dword ptr [rsp - 2], edi ; fldcw word ptr [rsp - 2] ; ret
0x000000000007d220 : mov dword ptr [rsp], eax ; je 0x7d2e9 ; call rax
0x00000000001082e3 : mov dword ptr [rsp], eax ; mov dword ptr [rbp - 0x34], ecx ; call 0x845a8
0x00000000000db923 : mov dword ptr [rsp], eax ; mov eax, 0 ; syscall
0x00000000000e1063 : mov dword ptr [rsp], eax ; mov eax, 0x13 ; syscall
0x00000000000e9893 : mov dword ptr [rsp], eax ; mov eax, 0x130 ; syscall
0x00000000000e10c3 : mov dword ptr [rsp], eax ; mov eax, 0x14 ; syscall
0x00000000000e4763 : mov dword ptr [rsp], eax ; mov eax, 0x1a ; syscall
0x00000000000b8223 : mov dword ptr [rsp], eax ; mov eax, 0x22 ; syscall
0x00000000000b8283 : mov dword ptr [rsp], eax ; mov eax, 0x23 ; syscall
0x00000000000e9a33 : mov dword ptr [rsp], eax ; mov eax, 0x2a ; syscall
0x00000000000e99a3 : mov dword ptr [rsp], eax ; mov eax, 0x2b ; syscall
0x00000000000e17b3 : mov dword ptr [rsp], eax ; mov eax, 0x4a ; syscall
0x00000000000e1843 : mov dword ptr [rsp], eax ; mov eax, 0x4b ; syscall
0x00000000000dc093 : mov dword ptr [rsp], eax ; mov eax, 0x55 ; syscall
0x00000000000db983 : mov dword ptr [rsp], eax ; mov eax, 1 ; syscall
0x00000000000db703 : mov dword ptr [rsp], eax ; mov eax, 2 ; syscall
0x00000000000dbf43 : mov dword ptr [rsp], eax ; mov eax, 3 ; syscall
0x00000000000df8b3 : mov dword ptr [rsp], eax ; mov eax, 7 ; syscall
0x000000000007d50a : mov dword ptr [rsp], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000071fe3 : mov dword ptr [rsp], ecx ; mov rdi, rbx ; call rax
0x00000000001151ba : mov dword ptr [rsp], ecx ; pop rbp ; pop r12 ; ret
0x000000000007a543 : mov dword ptr [rsp], edx ; call 0x76ff5
0x0000000000043c23 : mov dword ptr [rsp], esi ; mov rbx, rdx ; call 0x80658
0x00000000000e0708 : mov dword ptr fs:[r8], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e1337 : mov dword ptr fs:[rax], 0x16 ; mov eax, edi ; ret
0x000000000004c9c4 : mov dword ptr fs:[rax], 0x16 ; mov eax, esi ; ret
0x00000000000e5557 : mov dword ptr fs:[rax], 0x16 ; ret
0x00000000000df877 : mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x0000000000079ac7 : mov dword ptr fs:[rax], 0xc ; xor eax, eax ; ret
0x00000000000b396f : mov dword ptr fs:[rax], 2 ; xor eax, eax ; ret
0x00000000000b8c45 : mov dword ptr fs:[rax], 7 ; ret
0x0000000000020b07 : mov dword ptr fs:[rax], 9 ; mov eax, edi ; ret
0x00000000000e45c8 : mov dword ptr fs:[rax], ebp ; mov eax, 3 ; syscall
0x00000000000d2029 : mov dword ptr fs:[rax], edx ; mov eax, 0xffffffff ; ret
0x00000000000d1fd2 : mov dword ptr fs:[rax], r8d ; mov eax, 0xffffffff ; ret
0x0000000000102650 : mov dword ptr fs:[rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000033329 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000b398e : mov dword ptr fs:[rdx], eax ; jmp 0xb3962
0x00000000000722b9 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000000332f9 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x000000000011ca22 : mov dword ptr fs:[rdx], eax ; mov eax, ecx ; ret
0x00000000000b53b2 : mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x00000000000b547c : mov dword ptr fs:[rdx], esi ; add rsp, 8 ; ret
0x0000000000083fa4 : mov dword ptr ss:[rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000012dda0 : mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00000000000944e0 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000df9f6 : mov eax, 0 ; cmova eax, edx ; ret
0x00000000000c2ffc : mov eax, 0 ; cmove eax, esi ; ret
0x00000000000db909 : mov eax, 0 ; syscall
0x000000000010a944 : mov eax, 0x10 ; pop rbx ; pop rbp ; ret
0x00000000000991c5 : mov eax, 0x10 ; pop rbx ; ret
0x0000000000064e33 : mov eax, 0x10 ; ret
0x00000000000e0907 : mov eax, 0x10 ; syscall
0x00000000000b394d : mov eax, 0x101 ; syscall
0x00000000000db6b0 : mov eax, 0x102 ; syscall
0x00000000000db3ea : mov eax, 0x103 ; syscall
0x00000000000dc9e3 : mov eax, 0x104 ; syscall
0x00000000000e2e58 : mov eax, 0x105 ; syscall
0x00000000000db444 : mov eax, 0x106 ; syscall
0x00000000000dd110 : mov eax, 0x107 ; syscall
0x0000000000064d73 : mov eax, 0x108 ; syscall
0x00000000000dcff3 : mov eax, 0x109 ; syscall
0x00000000000dd050 : mov eax, 0x10a ; syscall
0x00000000000dd0b3 : mov eax, 0x10b ; syscall
0x00000000000db622 : mov eax, 0x10c ; syscall
0x00000000000dbb33 : mov eax, 0x10d ; syscall
0x00000000000e167a : mov eax, 0x10e ; syscall
0x00000000000df926 : mov eax, 0x10f ; syscall
0x00000000000d9edc : mov eax, 0x11 ; syscall
0x00000000000e96c0 : mov eax, 0x110 ; syscall
0x00000000000e95dc : mov eax, 0x113 ; syscall
0x00000000000e966c : mov eax, 0x114 ; syscall
0x00000000000e039c : mov eax, 0x115 ; syscall
0x00000000000e972c : mov eax, 0x116 ; syscall
0x00000000000dfc3b : mov eax, 0x118 ; syscall
0x00000000000e8eb9 : mov eax, 0x119 ; syscall
0x00000000000e9780 : mov eax, 0x11b ; syscall
0x00000000000e0403 : mov eax, 0x11d ; syscall
0x00000000000e97b3 : mov eax, 0x11e ; syscall
0x00000000000e97e0 : mov eax, 0x11f ; syscall
0x00000000000d9f3c : mov eax, 0x12 ; syscall
0x00000000000ea1b0 : mov eax, 0x120 ; syscall
0x00000000000e8f6b : mov eax, 0x121 ; syscall
0x00000000000e8fa0 : mov eax, 0x122 ; syscall
0x00000000000e9270 : mov eax, 0x123 ; syscall
0x00000000000dbfe0 : mov eax, 0x124 ; syscall
0x00000000000dc040 : mov eax, 0x125 ; syscall
0x00000000000e93f0 : mov eax, 0x126 ; syscall
0x00000000000e110c : mov eax, 0x127 ; syscall
0x00000000000e116c : mov eax, 0x128 ; syscall
0x00000000000ea252 : mov eax, 0x12b ; syscall
0x00000000000e9810 : mov eax, 0x12c ; syscall
0x00000000000e90f3 : mov eax, 0x12d ; syscall
0x00000000000e9023 : mov eax, 0x12e ; syscall
0x00000000000e9843 : mov eax, 0x12f ; syscall
0x00000000000e1049 : mov eax, 0x13 ; syscall
0x00000000000e9879 : mov eax, 0x130 ; syscall
0x00000000000e91b0 : mov eax, 0x131 ; syscall
0x00000000000e1880 : mov eax, 0x132 ; syscall
0x00000000000ea302 : mov eax, 0x133 ; syscall
0x00000000000e98d0 : mov eax, 0x134 ; syscall
0x00000000000db1d7 : mov eax, 0x135 ; syscall
0x00000000000e9903 : mov eax, 0x136 ; syscall
0x00000000000e9933 : mov eax, 0x137 ; syscall
0x00000000000e10a9 : mov eax, 0x14 ; syscall
0x00000000000db9c0 : mov eax, 0x15 ; syscall
0x00000000000daf93 : mov eax, 0x16 ; jbe 0xdafa8 ; ret
0x000000000007cfb4 : mov eax, 0x16 ; je 0x7cfc7 ; ret
0x00000000000da3a5 : mov eax, 0x16 ; je 0xda3b8 ; ret
0x000000000007d008 : mov eax, 0x16 ; ret
0x00000000000dc010 : mov eax, 0x16 ; syscall
0x00000000000e15dc : mov eax, 0x17 ; syscall
0x00000000000d1eb0 : mov eax, 0x18 ; syscall
0x00000000000e94b3 : mov eax, 0x19 ; syscall
0x00000000000e4749 : mov eax, 0x1a ; syscall
0x00000000000e47d0 : mov eax, 0x1b ; syscall
0x00000000000dafc8 : mov eax, 0x1c ; syscall
0x00000000000ea6a0 : mov eax, 0x1d ; syscall
0x00000000000ea640 : mov eax, 0x1e ; syscall
0x00000000000ea6d0 : mov eax, 0x1f ; syscall
0x00000000000991d3 : mov eax, 0x20 ; pop rbx ; ret
0x00000000000b97bf : mov eax, 0x20 ; ret
0x00000000000dbf80 : mov eax, 0x20 ; syscall
0x000000000002c187 : mov eax, 0x200 ; ret
0x00000000000dbfb0 : mov eax, 0x21 ; syscall
0x00000000000b8209 : mov eax, 0x22 ; syscall
0x00000000000b8269 : mov eax, 0x23 ; syscall
0x00000000000ab440 : mov eax, 0x24 ; syscall
0x00000000000b8180 : mov eax, 0x25 ; syscall
0x00000000000ab470 : mov eax, 0x26 ; syscall
0x00000000000b8f10 : mov eax, 0x27 ; syscall
0x00000000000dfc03 : mov eax, 0x28 ; syscall
0x00000000000e9f10 : mov eax, 0x29 ; syscall
0x00000000000e9a19 : mov eax, 0x2a ; syscall
0x00000000000e9989 : mov eax, 0x2b ; syscall
0x00000000000e9d06 : mov eax, 0x2c ; syscall
0x00000000000e9b46 : mov eax, 0x2d ; syscall
0x00000000000e9dc0 : mov eax, 0x2e ; syscall
0x00000000000e9c60 : mov eax, 0x2f ; syscall
0x00000000000991cc : mov eax, 0x30 ; pop rbx ; ret
0x00000000000e9ee0 : mov eax, 0x30 ; syscall
0x00000000000e99e0 : mov eax, 0x31 ; syscall
0x00000000000e9b00 : mov eax, 0x32 ; syscall
0x00000000000e9aa0 : mov eax, 0x33 ; syscall
0x00000000000e9a70 : mov eax, 0x34 ; syscall
0x00000000000e9f43 : mov eax, 0x35 ; syscall
0x00000000000e9eb3 : mov eax, 0x36 ; syscall
0x00000000000e9ad3 : mov eax, 0x37 ; syscall
0x000000000003f063 : mov eax, 0x38 ; syscall
0x00000000000b85b1 : mov eax, 0x3a ; syscall
0x00000000000b8640 : mov eax, 0x3b ; syscall
0x00000000000b7f59 : mov eax, 0x3d ; syscall
0x000000000003f3a9 : mov eax, 0x3e ; mov rbx, rdi ; syscall
0x0000000000033310 : mov eax, 0x3e ; syscall
0x00000000000b7ec0 : mov eax, 0x3f ; syscall
0x00000000000991e8 : mov eax, 0x40 ; pop rbx ; ret
0x00000000000b9805 : mov eax, 0x40 ; ret
0x00000000000ea5b0 : mov eax, 0x40 ; syscall
0x00000000000ea580 : mov eax, 0x41 ; syscall
0x00000000000ea5e3 : mov eax, 0x42 ; syscall
0x00000000000ea670 : mov eax, 0x43 ; syscall
0x00000000000ea520 : mov eax, 0x44 ; syscall
0x00000000000ea46c : mov eax, 0x45 ; syscall
0x00000000001584db : mov eax, 0x45155e93 ; ret 0x591c
0x00000000000ea4cc : mov eax, 0x46 ; syscall
0x00000000000ea550 : mov eax, 0x47 ; syscall
0x00000000000dbccb : mov eax, 0x48 ; syscall
0x00000000000dbde0 : mov eax, 0x49 ; syscall
0x00000000000e1799 : mov eax, 0x4a ; syscall
0x00000000000e1829 : mov eax, 0x4b ; syscall
0x00000000000e2e90 : mov eax, 0x4c ; syscall
0x00000000000e2ec0 : mov eax, 0x4d ; syscall
0x00000000000dc193 : mov eax, 0x4f ; syscall
0x00000000000dc0d0 : mov eax, 0x50 ; syscall
0x00000000000dc100 : mov eax, 0x51 ; syscall
0x0000000000064d40 : mov eax, 0x52 ; syscall
0x00000000000db680 : mov eax, 0x53 ; syscall
0x00000000000dd140 : mov eax, 0x54 ; syscall
0x00000000000dc079 : mov eax, 0x55 ; syscall
0x00000000000dcfc0 : mov eax, 0x56 ; syscall
0x00000000000dd0e0 : mov eax, 0x57 ; syscall
0x00000000000dd020 : mov eax, 0x58 ; syscall
0x00000000000dd080 : mov eax, 0x59 ; syscall
0x00000000000db590 : mov eax, 0x5a ; syscall
0x00000000000db5c0 : mov eax, 0x5b ; syscall
0x00000000000dc950 : mov eax, 0x5c ; syscall
0x00000000000dc980 : mov eax, 0x5d ; syscall
0x00000000000dc9b0 : mov eax, 0x5e ; syscall
0x00000000000db580 : mov eax, 0x5f ; syscall
0x00000000000991e1 : mov eax, 0x60 ; pop rbx ; ret
0x00000000000a88a0 : mov eax, 0x60 ; syscall
0x00000000000e0ad0 : mov eax, 0x61 ; syscall
0x00000000000e0b30 : mov eax, 0x62 ; syscall
0x00000000000e9630 : mov eax, 0x63 ; syscall
0x0000000000003510 : mov eax, 0x637514da ; jle 0x354e ; retf -0x786e
0x00000000000b7ef0 : mov eax, 0x64 ; syscall
0x00000000000b8f30 : mov eax, 0x66 ; syscall
0x00000000000e9450 : mov eax, 0x67 ; syscall
0x00000000000b8f50 : mov eax, 0x68 ; syscall
0x00000000000b8fac : mov eax, 0x69 ; syscall
0x00000000000b901c : mov eax, 0x6a ; syscall
0x00000000000b8f40 : mov eax, 0x6b ; syscall
0x00000000000b8f60 : mov eax, 0x6c ; syscall
0x00000000000b9140 : mov eax, 0x6d ; syscall
0x00000000000b8f20 : mov eax, 0x6e ; syscall
0x00000000000b9170 : mov eax, 0x6f ; syscall
0x00000000000b91d0 : mov eax, 0x70 ; syscall
0x00000000000e11ce : mov eax, 0x71 ; syscall
0x00000000000e123e : mov eax, 0x72 ; syscall
0x00000000000b8f70 : mov eax, 0x73 ; syscall
0x00000000000b4bfa : mov eax, 0x74 ; syscall
0x00000000000dac22 : mov eax, 0x75 ; mov rdi, rdx ; syscall
0x00000000000b9270 : mov eax, 0x75 ; syscall
0x00000000000b9200 : mov eax, 0x76 ; syscall
0x00000000000dac51 : mov eax, 0x77 ; mov rdi, rdx ; syscall
0x00000000000b92f0 : mov eax, 0x77 ; syscall
0x00000000000b9230 : mov eax, 0x78 ; syscall
0x00000000000b9110 : mov eax, 0x79 ; syscall
0x00000000000e8dd0 : mov eax, 0x7a ; syscall
0x00000000000e8e00 : mov eax, 0x7b ; syscall
0x00000000000b91a0 : mov eax, 0x7c ; syscall
0x00000000000e9150 : mov eax, 0x7d ; syscall
0x00000000000b96d9 : mov eax, 0x7d00 ; ret
0x00000000000b9708 : mov eax, 0x7e ; ret
0x00000000000e9180 : mov eax, 0x7e ; syscall
0x00000000000b965b : mov eax, 0x7f ; ret
0x0000000000033345 : mov eax, 0x7f ; syscall
0x00000000000991da : mov eax, 0x80 ; pop rbx ; ret
0x0000000000033fdc : mov eax, 0x81 ; syscall
0x000000000003338f : mov eax, 0x82 ; syscall
0x00000000000337f0 : mov eax, 0x83 ; syscall
0x00000000000db1f0 : mov eax, 0x84 ; syscall
0x00000000000db389 : mov eax, 0x85 ; syscall
0x00000000000e96f0 : mov eax, 0x86 ; syscall
0x00000000000e9050 : mov eax, 0x87 ; syscall
0x00000000000e6b97 : mov eax, 0x88 ; syscall
0x00000000000db490 : mov eax, 0x89 ; syscall
0x00000000000e7c5a : mov eax, 0x89000000 ; ret 0xe8c1
0x00000000000db4c0 : mov eax, 0x8a ; syscall
0x00000000000e0df5 : mov eax, 0x8c ; syscall
0x000000000006df01 : mov eax, 0x8c48348 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000e0e30 : mov eax, 0x8d ; syscall
0x00000000000d1df0 : mov eax, 0x8e ; syscall
0x00000000000d1e20 : mov eax, 0x8f ; syscall
0x00000000000d1e50 : mov eax, 0x90 ; syscall
0x00000000000d1e80 : mov eax, 0x91 ; syscall
0x00000000000d1ee0 : mov eax, 0x92 ; syscall
0x00000000000d1f10 : mov eax, 0x93 ; syscall
0x00000000000d1f40 : mov eax, 0x94 ; syscall
0x00000000000e4830 : mov eax, 0x95 ; syscall
0x00000000000e4860 : mov eax, 0x96 ; syscall
0x00000000000e4890 : mov eax, 0x97 ; syscall
0x00000000000e48c0 : mov eax, 0x98 ; syscall
0x00000000000e1bf0 : mov eax, 0x99 ; syscall
0x00000000000e90b0 : mov eax, 0x9a ; syscall
0x00000000000e9510 : mov eax, 0x9b ; syscall
0x00000000000e9543 : mov eax, 0x9d ; syscall
0x00000000000e9080 : mov eax, 0x9e ; syscall
0x00000000000e9120 : mov eax, 0x9f ; syscall
0x00000000000e4710 : mov eax, 0xa ; syscall
0x00000000000e0b00 : mov eax, 0xa0 ; syscall
0x00000000000e1760 : mov eax, 0xa1 ; syscall
0x0000000000003194 : mov eax, 0xa1a3e95a ; ret 0xba88
0x00000000000e17f0 : mov eax, 0xa2 ; syscall
0x00000000000e1730 : mov eax, 0xa3 ; syscall
0x00000000000a8980 : mov eax, 0xa4 ; syscall
0x00000000000e9483 : mov eax, 0xa5 ; syscall
0x00000000000e8d70 : mov eax, 0xa6 ; syscall
0x00000000000e1c20 : mov eax, 0xa7 ; syscall
0x00000000000e1c50 : mov eax, 0xa8 ; syscall
0x00000000000e18bf : mov eax, 0xa9 ; syscall
0x00000000000e1500 : mov eax, 0xaa ; syscall
0x00000000000e15a0 : mov eax, 0xab ; syscall
0x00000000000e8c30 : mov eax, 0xac ; syscall
0x00000000000e8c00 : mov eax, 0xad ; syscall
0x00000000000e91e0 : mov eax, 0xae ; syscall
0x00000000000e9363 : mov eax, 0xaf ; syscall
0x00000000000e46e0 : mov eax, 0xb ; syscall
0x00000000000e9210 : mov eax, 0xb0 ; syscall
0x00000000000e9330 : mov eax, 0xb1 ; syscall
0x00000000000e9573 : mov eax, 0xb2 ; syscall
0x00000000000e95a3 : mov eax, 0xb3 ; syscall
0x00000000000e94e0 : mov eax, 0xb4 ; syscall
0x000000000011c433 : mov eax, 0xb5 ; syscall
0x000000000011c483 : mov eax, 0xb6 ; syscall
0x000000000011053f : mov eax, 0xb8000000 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000032fc6 : mov eax, 0xba ; syscall
0x00000000000e8da0 : mov eax, 0xbb ; syscall
0x00000000000e7673 : mov eax, 0xbc ; syscall
0x000000000016eadd : mov eax, 0xbc40001 ; clc ; call rsp
0x00000000000e7613 : mov eax, 0xbd ; syscall
0x00000000000e74f3 : mov eax, 0xbe ; syscall
0x00000000000e7523 : mov eax, 0xbf ; syscall
0x000000000016ab61 : mov eax, 0xbf50fffc ; cld ; jmp rax
0x00000000000c3d6d : mov eax, 0xc ; jmp 0xc3d3d
0x00000000000c18d1 : mov eax, 0xc ; pop rbp ; pop r12 ; ret
0x00000000000e7583 : mov eax, 0xc0 ; syscall
0x00000000000e6eda : mov eax, 0xc065894c ; syscall
0x0000000000032e53 : mov eax, 0xc0850036 ; jne 0x32e68 ; ret
0x00000000000e7463 : mov eax, 0xc1 ; syscall
0x00000000000e7550 : mov eax, 0xc2 ; syscall
0x00000000000e75b0 : mov eax, 0xc3 ; syscall
0x00000000000e7490 : mov eax, 0xc4 ; syscall
0x00000000000e7640 : mov eax, 0xc5 ; syscall
0x00000000000e75e0 : mov eax, 0xc6 ; syscall
0x00000000000e74c0 : mov eax, 0xc7 ; syscall
0x00000000000a87e0 : mov eax, 0xc9 ; syscall
0x00000000000f96b2 : mov eax, 0xca ; add rsp, 0x28 ; ret
0x00000000000f9660 : mov eax, 0xca ; ret
0x00000000000f54c4 : mov eax, 0xca ; syscall
0x00000000000e9240 : mov eax, 0xd5 ; syscall
0x00000000000e4803 : mov eax, 0xd8 ; syscall
0x00000000000ea613 : mov eax, 0xdc ; syscall
0x00000000000df9e6 : mov eax, 0xdd ; syscall
0x0000000000032ff8 : mov eax, 0xe ; syscall
0x00000000001151e6 : mov eax, 0xe0 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000f5c00 : mov eax, 0xe3 ; syscall
0x00000000000b2e4c : mov eax, 0xe4 ; syscall
0x00000000000b9d7f : mov eax, 0xe5 ; syscall
0x00000000000f5cdd : mov eax, 0xe6 ; mov r10, rcx ; syscall
0x00000000000f5c87 : mov eax, 0xe6 ; syscall
0x00000000000e92dc : mov eax, 0xe8 ; syscall
0x000000000005f8eb : mov eax, 0xe8fffffa ; pop rsp ; ret
0x00000000000e92a3 : mov eax, 0xe9 ; syscall
0x0000000000032fd6 : mov eax, 0xea ; syscall
0x00000000000e2cd0 : mov eax, 0xeb ; syscall
0x00000000000d2e9d : mov eax, 0xf ; je 0xd2f08 ; ret
0x0000000000033061 : mov eax, 0xf ; syscall
0x00000000000b80e4 : mov eax, 0xf7 ; syscall
0x00000000000b96ff : mov eax, 0xfa ; ret
0x00000000000b9720 : mov eax, 0xfc17 ; ret
0x00000000000e93c0 : mov eax, 0xfd ; syscall
0x00000000000b968c : mov eax, 0xfde8 ; jne 0xb9663 ; ret
0x00000000000e9390 : mov eax, 0xfe ; syscall
0x00000000000e9420 : mov eax, 0xff ; syscall
0x00000000000b9710 : mov eax, 0xfffa ; ret
0x0000000000103a80 : mov eax, 0xffffffff ; add rsp, 0x10 ; ret
0x000000000006c346 : mov eax, 0xffffffff ; jb 0x6c358 ; ret
0x00000000000b89fd : mov eax, 0xffffffff ; leave ; ret
0x000000000004f4c8 : mov eax, 0xffffffff ; mov qword ptr [rdi], r10 ; ret
0x00000000000e0eb8 : mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x0000000000028af0 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000069d6c : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x0000000000031a5e : mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000028c40 : mov eax, 0xffffffff ; ret
0x00000000000e239e : mov eax, 1 ; add rsp, 8 ; ret
0x00000000001495f0 : mov eax, 1 ; jg 0x149609 ; neg eax ; ret
0x000000000009a180 : mov eax, 1 ; jg 0x9a192 ; neg eax ; ret
0x00000000001463d6 : mov eax, 1 ; jl 0x1463e9 ; neg eax ; ret
0x00000000000484eb : mov eax, 1 ; jmp rax
0x00000000000b98f2 : mov eax, 1 ; js 0xb9908 ; ret
0x000000000010d848 : mov eax, 1 ; mov qword ptr [rdi + 0x20], rcx ; ret
0x0000000000043a65 : mov eax, 1 ; mov qword ptr [rdi], rsi ; ret
0x000000000009b250 : mov eax, 1 ; movzx eax, al ; ret
0x000000000007e282 : mov eax, 1 ; pop rbp ; pop r12 ; ret
0x0000000000074f82 : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000224e4 : mov eax, 1 ; pop rbx ; pop rbp ; ret
0x000000000006bb4f : mov eax, 1 ; pop rbx ; ret
0x0000000000033baf : mov eax, 1 ; ret
0x000000000001fa14 : mov eax, 1 ; syscall
0x000000000009a4a1 : mov eax, 2 ; ret
0x000000000001fa72 : mov eax, 2 ; syscall
0x00000000000f5b36 : mov eax, 3 ; cmovne eax, edx ; ret
0x0000000000102272 : mov eax, 3 ; mov esi, dword ptr fs:[rdx] ; syscall
0x00000000000b38a6 : mov eax, 3 ; mov r8d, dword ptr fs:[rsi] ; syscall
0x0000000000072294 : mov eax, 3 ; movsxd rdi, dword ptr [rbx + 0x70] ; syscall
0x000000000009a4b1 : mov eax, 3 ; ret
0x000000000001fad5 : mov eax, 3 ; syscall
0x000000000009a4c1 : mov eax, 4 ; ret
0x00000000000db28e : mov eax, 4 ; syscall
0x00000000000db2d8 : mov eax, 5 ; mov rsi, rdx ; syscall
0x00000000000d704c : mov eax, 5 ; pop rbp ; pop r12 ; ret
0x000000000009a4d1 : mov eax, 5 ; ret
0x000000000009a4e1 : mov eax, 6 ; ret
0x00000000000db32e : mov eax, 6 ; syscall
0x00000000000f3aec : mov eax, 7 ; pop rbx ; pop rbp ; ret
0x000000000009a4f1 : mov eax, 7 ; ret
0x00000000000df899 : mov eax, 7 ; syscall
0x00000000000991be : mov eax, 8 ; pop rbx ; ret
0x0000000000021120 : mov eax, 8 ; ret
0x00000000000e8d30 : mov eax, 8 ; syscall
0x00000000000da197 : mov eax, 9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e78f5 : mov eax, 9 ; pop rbx ; pop rbp ; ret
0x00000000000e4643 : mov eax, 9 ; syscall
0x00000000000f4935 : mov eax, dword ptr [r14 - 0x30] ; mov dword ptr [rbp - 0x80], eax ; call r8
0x00000000000319da : mov eax, dword ptr [r9 + rdx*4 + 8] ; add rax, qword ptr [rdi + 0x20] ; ret
0x00000000000e7701 : mov eax, dword ptr [rax + 0x110] ; ret
0x000000000011f28f : mov eax, dword ptr [rax + 0x130] ; jmp rax
0x00000000000eb280 : mov eax, dword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x00000000000eb2d8 : mov eax, dword ptr [rax + 0x18] ; add word ptr [rax], 1 ; ret
0x0000000000107ab7 : mov eax, dword ptr [rax + 0x18] ; test eax, eax ; jne 0x107ac7 ; ret
0x00000000000e1408 : mov eax, dword ptr [rax + 0x18] ; test rax, rax ; je 0xe141b ; ret
0x000000000006dc03 : mov eax, dword ptr [rax + 0x20] ; jmp rax
0x00000000000f4e09 : mov eax, dword ptr [rax + 0x30] ; ret
0x00000000000eb927 : mov eax, dword ptr [rax + 0x38] ; ret
0x00000000000e744c : mov eax, dword ptr [rax + 0x38] ; test eax, eax ; cmove eax, edx ; ret
0x0000000000112b94 : mov eax, dword ptr [rax + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000006e3d4 : mov eax, dword ptr [rax + 0x4c] ; ret
0x0000000000113474 : mov eax, dword ptr [rax + 0x50] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000035fc6 : mov eax, dword ptr [rax + 0x58] ; ret
0x000000000002b25e : mov eax, dword ptr [rax + 0xa8] ; ret
0x00000000000e76da : mov eax, dword ptr [rax + 8] ; ret
0x000000000007e50b : mov eax, dword ptr [rax + 8] ; test rax, rax ; jne 0x7e509 ; ret
0x0000000000029958 : mov eax, dword ptr [rax + rbp*8] ; test rax, rax ; je 0x2996a ; call rax
0x000000000002c185 : mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002c347 : mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002bcaf : mov eax, dword ptr [rax + rdi*8 + 0x80] ; ret
0x0000000000029ae2 : mov eax, dword ptr [rax + rdi*8] ; test rax, rax ; je 0x29af4 ; call rax
0x000000000002bcf8 : mov eax, dword ptr [rax + rdx] ; ret
0x00000000000ec2b4 : mov eax, dword ptr [rax + rdx] ; shr eax, cl ; and eax, 1 ; ret
0x000000000002b25c : mov eax, dword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; ret
0x000000000002c15c : mov eax, dword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x0000000000035fc3 : mov eax, dword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x0000000000107d39 : mov eax, dword ptr [rax] ; ret
0x00000000000770ab : mov eax, dword ptr [rax] ; test rax, rax ; je 0x770bb ; call rax
0x000000000007c0b6 : mov eax, dword ptr [rax] ; test rax, rax ; je 0x7c0c6 ; call rax
0x0000000000001ac9 : mov eax, dword ptr [rbp + 0x7872a51b] ; out dx, eax ; fidiv word ptr [rbx] ; retf
0x00000000000e5bb7 : mov eax, dword ptr [rbp - 0x48] ; call rax
0x00000000000d4f85 : mov eax, dword ptr [rbp - 0x88] ; call rax
0x000000000007476d : mov eax, dword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x00000000000708c1 : mov eax, dword ptr [rbx + 0x20] ; mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x0000000000074ca9 : mov eax, dword ptr [rbx + 0x40] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x00000000000c6627 : mov eax, dword ptr [rbx + 4] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010cf91 : mov eax, dword ptr [rbx + 8] ; mov rsi, rsp ; mov rdi, rbx ; call qword ptr [rax]
0x000000000011501a : mov eax, dword ptr [rbx] ; test rax, rax ; je 0x115030 ; pop rbx ; ret
0x00000000000912b9 : mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x000000000013c886 : mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x000000000013c896 : mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x000000000009133d : mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x000000000009135d : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x00000000000f0830 : mov eax, dword ptr [rcx + 8] ; sub eax, dword ptr [rdx + 8] ; ret
0x00000000001222da : mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x0000000000123bb2 : mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00000000000319db : mov eax, dword ptr [rcx + rdx*4 + 8] ; add rax, qword ptr [rdi + 0x20] ; ret
0x00000000001895cd : mov eax, dword ptr [rcx] ; add al, ah ; add esi, edi ; call qword ptr [rcx]
0x0000000000140b80 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x00000000001104c0 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000091265 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x0000000000140ad1 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x000000000013c7a1 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x0000000000140b51 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x0000000000091236 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000191479 : mov eax, dword ptr [rcx] ; retf 2
0x000000000006c1ef : mov eax, dword ptr [rdi + 0x10] ; shr rdx, 2 ; sub eax, edx ; ret
0x0000000000075c00 : mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000075c28 : mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000014a57c : mov eax, dword ptr [rdi + 0x10] ; test eax, eax ; jne 0x14a590 ; pop rbx ; ret
0x00000000000f55c0 : mov eax, dword ptr [rdi + 0x10] ; test eax, eax ; jne 0xf55d8 ; ret
0x00000000000b84ad : mov eax, dword ptr [rdi + 0x10] ; test rax, rax ; je 0xb84c2 ; call rax
0x0000000000118233 : mov eax, dword ptr [rdi + 0x18] ; ret
0x0000000000117e61 : mov eax, dword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x000000000010c1ae : mov eax, dword ptr [rdi + 0x20] ; mov dword ptr [rsi + 8], eax ; ret
0x00000000000b3e91 : mov eax, dword ptr [rdi + 0x20] ; ret
0x00000000001499e8 : mov eax, dword ptr [rdi + 0x20] ; test rax, rax ; je 0x1499ff ; call rax
0x000000000009a100 : mov eax, dword ptr [rdi + 0x24] ; cmp eax, dword ptr [rsi + 0x24] ; jne 0x9a188 ; ret
0x000000000009a115 : mov eax, dword ptr [rdi + 0x28] ; cmp eax, dword ptr [rsi + 0x28] ; jne 0x9a188 ; ret
0x000000000010c207 : mov eax, dword ptr [rdi + 0x28] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000001181b0 : mov eax, dword ptr [rdi + 0x28] ; ret
0x0000000000070901 : mov eax, dword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x000000000009a120 : mov eax, dword ptr [rdi + 0x2c] ; cmp eax, dword ptr [rsi + 0x2c] ; jne 0x9a188 ; ret
0x000000000009a13b : mov eax, dword ptr [rdi + 0x30] ; cmp eax, dword ptr [rsi + 0x30] ; jne 0x9a188 ; ret
0x000000000009a150 : mov eax, dword ptr [rdi + 0x34] ; cmp eax, dword ptr [rsi + 0x34] ; jne 0x9a188 ; ret
0x000000000009a165 : mov eax, dword ptr [rdi + 0x38] ; cmp eax, dword ptr [rsi + 0x38] ; jne 0x9a188 ; ret
0x000000000009a170 : mov eax, dword ptr [rdi + 0x3c] ; cmp eax, dword ptr [rsi + 0x3c] ; jne 0x9a188 ; ret
0x000000000010c23f : mov eax, dword ptr [rdi + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000707f1 : mov eax, dword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x000000000006e3d1 : mov eax, dword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x00000000000c5c18 : mov eax, dword ptr [rdi + 0x4c] ; ret
0x0000000000075eb1 : mov eax, dword ptr [rdi + 0x68] ; ret
0x000000000006eee8 : mov eax, dword ptr [rdi + 0x70] ; test eax, eax ; js 0x6ef00 ; ret
0x00000000000da3c0 : mov eax, dword ptr [rdi + 4] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000e04a0 : mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x0000000000117316 : mov eax, dword ptr [rdi + 8] ; jmp qword ptr [rax]
0x000000000010cec1 : mov eax, dword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x00000000001157f9 : mov eax, dword ptr [rdi + 8] ; mov rsi, rbx ; mov rdi, r15 ; call qword ptr [rax]
0x0000000000117409 : mov eax, dword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000010ae97 : mov eax, dword ptr [rdi + 8] ; push 0 ; push 0x19 ; call qword ptr [rax]
0x000000000009ab1d : mov eax, dword ptr [rdi + rax*4] ; test r8d, r8d ; jne 0x9aaf9 ; ret
0x0000000000070860 : mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
0x0000000000070830 : mov eax, dword ptr [rdi] ; and eax, 0x804 ; ret
0x0000000000112ca0 : mov eax, dword ptr [rdi] ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000075bef : mov eax, dword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x00000000000f55d5 : mov eax, dword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x00000000000b3fa0 : mov eax, dword ptr [rdi] ; ret
0x00000000000713e0 : mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x00000000000713f0 : mov eax, dword ptr [rdi] ; shr eax, 5 ; and eax, 1 ; ret
0x0000000000111184 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x111196 ; ret
0x0000000000111183 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x111197 ; ret
0x0000000000115ea4 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x115eb6 ; ret
0x0000000000115ea3 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x115eb7 ; ret
0x000000000009abd8 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x9abd8 ; xor eax, eax ; ret
0x00000000000d2f31 : mov eax, dword ptr [rdx + 8] ; ret
0x000000000002c113 : mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x0000000000099297 : mov eax, dword ptr [rdx + rax*4] ; sub eax, dword ptr [rdx + rcx*4] ; je 0x99289 ; ret
0x0000000000086986 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000002b21d : mov eax, dword ptr [rdx + rdi*8 + 0x40] ; ret
0x000000000006db80 : mov eax, dword ptr [rdx] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000006bd8f : mov eax, dword ptr [rdx] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000cf818 : mov eax, dword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x0000000000069edc : mov eax, dword ptr [rdx] ; ret
0x0000000000075be1 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x75be0 ; ret
0x000000000011ccd4 : mov eax, dword ptr [rip + 0x27d716] ; call qword ptr [rax]
0x000000000011c6a7 : mov eax, dword ptr [rip + 0x27dd43] ; call qword ptr [rax]
0x00000000001017d1 : mov eax, dword ptr [rip + 0x299081] ; ret
0x00000000000eb921 : mov eax, dword ptr [rip + 0x2ad541] ; mov eax, dword ptr [rax + 0x38] ; ret
0x000000000007adff : mov eax, dword ptr [rip + 0x31e0db] ; mov qword ptr [rax], rdi ; ret
0x0000000000078bb1 : mov eax, dword ptr [rip + 0x320211] ; xor edi, edi ; call qword ptr [rax]
0x0000000000075e91 : mov eax, dword ptr [rip + 0x324669] ; ret
0x0000000000033c80 : mov eax, dword ptr [rip + 0x365402] ; ret
0x0000000000033c70 : mov eax, dword ptr [rip + 0x365416] ; ret
0x000000000002bc5c : mov eax, dword ptr [rip + 0x36d186] ; mov qword ptr [rax], rdx ; ret
0x00000000000289a1 : mov eax, dword ptr [rip + 0x371f29] ; ret
0x00000000000212d1 : mov eax, dword ptr [rip + 0x37d039] ; ret
0x00000000000212c1 : mov eax, dword ptr [rip + 0x37d059] ; ret
0x00000000000d216e : mov eax, dword ptr [rsi + 0x14] ; ret
0x000000000002c341 : mov eax, dword ptr [rsi + 0x70] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002c351 : mov eax, dword ptr [rsi + 0x78] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000000c3249 : mov eax, dword ptr [rsi + 8] ; mov qword ptr [rax + 0x20], rsi ; xor eax, eax ; ret
0x000000000002b239 : mov eax, dword ptr [rsi + rax*8 + 0x80] ; ret
0x00000000000f4936 : mov eax, dword ptr [rsi - 0x30] ; mov dword ptr [rbp - 0x80], eax ; call r8
0x00000000000ef7db : mov eax, dword ptr [rsi] ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000b38ad : mov eax, dword ptr [rsi] ; syscall
0x000000000011ee3e : mov eax, dword ptr [rsp + 0x10] ; call rax
0x00000000000202db : mov eax, dword ptr [rsp + 0x18] ; call rax
0x0000000000024fe2 : mov eax, dword ptr [rsp + 0x20] ; call rax
0x00000000000333e9 : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000e08b9 : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x000000000011f3dd : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x38 ; ret
0x00000000000a68c4 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000368e9 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000a858f : mov eax, dword ptr [rsp + 8] ; call rax
0x000000000007133e : mov eax, dword ptr [rsp + 8] ; jmp 0x71314
0x00000000000b832a : mov eax, dword ptr [rsp + 8] ; test rax, rax ; je 0xb833e ; call rax
0x00000000000e1ea0 : mov eax, dword ptr [rsp - 0x50] ; ret
0x00000000000b81f0 : mov eax, dword ptr [rsp] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000eb983 : mov eax, dword ptr [rsp] ; add rsp, 0x38 ; ret
0x00000000000eb9e4 : mov eax, dword ptr [rsp] ; add rsp, 0x40 ; ret
0x000000000007ab7c : mov eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000104384 : mov eax, eax ; mov byte ptr [rdi + rdx], 0 ; ret
0x000000000002099a : mov eax, eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000035f39 : mov eax, eax ; or rax, rdx ; ret
0x0000000000033007 : mov eax, eax ; pop rbx ; ret
0x000000000004a262 : mov eax, eax ; ret
0x00000000000321df : mov eax, eax ; syscall
0x00000000000fc1ee : mov eax, ebp ; call 0x108ce4
0x000000000001fb06 : mov eax, ebp ; cmp r9, rax ; je 0x1fab1 ; jmp 0x1fada
0x000000000002a8cc : mov eax, ebp ; mov rdi, rcx ; syscall
0x0000000000114427 : mov eax, ebp ; mov rsi, rbx ; mov rdi, rax ; call qword ptr [r10]
0x00000000000e57be : mov eax, ebp ; pop rbp ; pop r12 ; jmp rax
0x000000000006a3ec : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006b14c : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000072cd4 : mov eax, ebp ; pop rbp ; pop r12 ; ret
0x0000000000069b13 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002c951 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000049e92 : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000001fab5 : mov eax, ebp ; syscall
0x0000000000042273 : mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x00000000000d623e : mov eax, ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000009a7c0 : mov eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000b46dd : mov eax, ebx ; call rax
0x00000000000e72cf : mov eax, ebx ; mov byte ptr [rdx], 0 ; pop rbx ; ret
0x00000000000e06e2 : mov eax, ebx ; mov r12d, dword ptr fs:[r8] ; syscall
0x0000000000108eb0 : mov eax, ebx ; mov rcx, r14 ; mov rdi, r13 ; call r12
0x000000000008b596 : mov eax, ebx ; pop rbx ; cmovne rax, rdx ; ret
0x00000000000e3a17 : mov eax, ebx ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000067b39 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000029294 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000030358 : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000003634f : mov eax, ebx ; pop rbx ; ret
0x00000000000e4f7a : mov eax, ebx ; pop rdx ; pop rbx ; ret
0x000000000002e5f7 : mov eax, ebx ; syscall
0x0000000000042137 : mov eax, ecx ; adc eax, eax ; ret
0x00000000000da95b : mov eax, ecx ; mov edx, dword ptr [r14 + 0x1c] ; syscall
0x00000000000e4460 : mov eax, ecx ; mov r9, qword ptr [rsp + 8] ; syscall
0x00000000000a6bfb : mov eax, ecx ; pop rbx ; pop rbp ; ret
0x00000000000319f7 : mov eax, ecx ; ret
0x00000000000289e7 : mov eax, ecx ; syscall
0x000000000002c856 : mov eax, edi ; add rsp, 0x18 ; ret
0x000000000002c1b0 : mov eax, edi ; and eax, 0x7f ; ret
0x00000000000f96e6 : mov eax, edi ; and eax, 0xffffff ; ret
0x00000000000f96c0 : mov eax, edi ; bswap eax ; ret
0x0000000000035f41 : mov eax, edi ; cqo ; idiv rsi ; ret
0x000000000009aeec : mov eax, edi ; jne 0x9af02 ; ret
0x00000000000e300f : mov eax, edi ; mov byte ptr [r8 - 1], 0 ; ret
0x000000000008ed87 : mov eax, edi ; mov byte ptr [rdi + 6], 0 ; ret
0x000000000006a293 : mov eax, edi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000020afb : mov eax, edi ; neg eax ; ret
0x0000000000076c74 : mov eax, edi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000020b0e : mov eax, edi ; ret
0x00000000000f96d0 : mov eax, edi ; ror ax, 8 ; ret
0x0000000000035ee2 : mov eax, edi ; sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x00000000000f939a : mov eax, edi ; sar rax, 6 ; ret
0x00000000000f9766 : mov eax, edi ; shr eax, 0x18 ; ret
0x0000000000032fbf : mov eax, edi ; syscall
0x00000000000441ff : mov eax, edx ; add rax, r9 ; add rsp, 0x28 ; ret
0x00000000000a7f68 : mov eax, edx ; add rsp, 0x18 ; ret
0x00000000000e1d87 : mov eax, edx ; add rsp, 0x48 ; ret
0x0000000000041a53 : mov eax, edx ; add rsp, 8 ; ret
0x00000000001044d6 : mov eax, edx ; mov qword ptr [r9], rdi ; ret
0x000000000007a7f0 : mov eax, edx ; pop r14 ; pop r15 ; ret
0x00000000000b51bf : mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000069810 : mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000004e5db : mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000007a79b : mov eax, edx ; pop rbx ; pop r14 ; pop r15 ; ret
0x00000000000698b9 : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000b384d : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000067090 : mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000042e35 : mov eax, edx ; pop rbx ; ret
0x0000000000033cc1 : mov eax, edx ; ret
0x0000000000020352 : mov eax, edx ; syscall
0x00000000000b555f : mov eax, esi ; add rsp, 0x48 ; ret
0x000000000010d121 : mov eax, esi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000b4d15 : mov eax, esi ; add rsp, 8 ; ret
0x0000000000043fea : mov eax, esi ; cmovae rax, rdi ; ret
0x0000000000032e46 : mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; jmp rdx
0x00000000000f71be : mov eax, esi ; pop rbp ; pop r12 ; ret
0x00000000000679c4 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f6eb0 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000035b24 : mov eax, esi ; pop rbx ; pop rbp ; ret
0x0000000000065013 : mov eax, esi ; pop rbx ; ret
0x0000000000043ff2 : mov eax, esi ; ret
0x0000000000068ea1 : mov eax, esi ; syscall
0x0000000000066dd6 : mov eax, esp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000070df7 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000001faed : mov eax, esp ; syscall
0x000000000017ea94 : mov eax, fs ; add byte ptr [rax], al ; mov dh, bh ; call qword ptr [rax]
0x000000000002a9b0 : mov eax, r10d ; syscall
0x000000000001faec : mov eax, r12d ; syscall
0x000000000002a8cb : mov eax, r13d ; mov rdi, rcx ; syscall
0x000000000006b14b : mov eax, r13d ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000d6ee5 : mov eax, r13d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000001fab4 : mov eax, r13d ; syscall
0x000000000011d68f : mov eax, r14d ; syscall
0x000000000011db8d : mov eax, r15d ; syscall
0x0000000000104383 : mov eax, r8d ; mov byte ptr [rdi + rdx], 0 ; ret
0x0000000000033006 : mov eax, r8d ; pop rbx ; ret
0x000000000004a261 : mov eax, r8d ; ret
0x00000000000321de : mov eax, r8d ; syscall
0x0000000000033452 : mov eax, r9d ; syscall
0x00000000001002c6 : mov ebp, 0x10029d3 ; pop rbx ; ret
0x0000000000179fbb : mov ebp, 0x41380e02 ; ret
0x00000000000e22b9 : mov ebp, 0x441f0f66 ; add byte ptr [rax], al ; ret
0x000000000008f0a1 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000008f0b1 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dh ; ret
0x000000000008f091 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00000000000ab4bf : mov ebp, 0x48ffffd4 ; add esp, 0x18 ; ret
0x000000000015a3d4 : mov ebp, 0x63b1101 ; rcl qword ptr [r14 + 0x27], cl ; retf -0x3f02
0x00000000000d0154 : mov ebp, 0x7400002c ; xor eax, eax ; ret
0x0000000000078900 : mov ebp, 0x83480006 ; clc ; dec dword ptr [rax - 0x77] ; ret 0x8b4c
0x000000000010b4a0 : mov ebp, 0x8d4c0000 ; and al, 0x18 ; call qword ptr [rax]
0x000000000017c7ed : mov ebp, 0xa2d00000 ; sti ; call qword ptr [rax]
0x000000000016abb9 : mov ebp, 0xbc96fffc ; cld ; jmp qword ptr [rsi]
0x000000000015e815 : mov ebp, 0xbd00fff5 ; cmc ; jmp qword ptr [rax]
0x000000000015e7f9 : mov ebp, 0xbd20fff5 ; cmc ; jmp qword ptr [rax]
0x000000000015e819 : mov ebp, 0xbd20fff5 ; cmc ; jmp rax
0x000000000015e7f5 : mov ebp, 0xbd30fff5 ; cmc ; jmp qword ptr [rax]
0x000000000016acf1 : mov ebp, 0xbd44fffc ; cld ; call rsp
0x000000000015e801 : mov ebp, 0xbdf0fff5 ; cmc ; jmp qword ptr [rax]
0x0000000000152764 : mov ebp, 0xc000000f ; sldt word ptr [rax] ; ret
0x000000000015709d : mov ebp, 0xc1c0bfbe ; ret 0xc4c3
0x000000000008f111 : mov ebp, 0xea8348c0 ; adc byte ptr [rax + 1], cl ; ret 0x147c
0x000000000008f0f1 : mov ebp, 0xea8348c0 ; and byte ptr [rax + 1], cl ; ret 0x347c
0x000000000008f0d1 : mov ebp, 0xea8348c0 ; xor byte ptr [rax + 1], cl ; ret 0x547c
0x0000000000003546 : mov ebp, 0xef5aa220 ; nop ; retf -0x1612
0x000000000008f1c2 : mov ebp, 0xf80148c0 ; add rax, r8 ; ret
0x0000000000082388 : mov ebp, 0xf80148c0 ; ret
0x000000000008260c : mov ebp, 0xf80148c6 ; ret
0x0000000000159106 : mov ebp, 0xfb67d10d ; ret
0x0000000000052401 : mov ebp, 0xffffef38 ; jmp rax
0x0000000000053b27 : mov ebp, 0xffffef38 ; or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd189
0x000000000005e9e6 : mov ebp, 0xfffffa20 ; xor esi, esi ; call 0x9b499
0x000000000005f975 : mov ebp, 0xfffffab8 ; call 0x6bc57
0x000000000004fe8d : mov ebp, 0xfffffb60 ; call rax
0x00000000000bb079 : mov ebp, 0xfffffce8 ; call rbx
0x00000000000d4a7d : mov ebp, 0xffffff48 ; call r14
0x00000000001831c9 : mov ebp, dr0 ; jmp qword ptr [rcx]
0x00000000000e3575 : mov ebp, dword ptr [rbx] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000001bf1 : mov ebp, dword ptr [rsi + rbx*8 + 0x6d] ; ret 0x1bb7
0x000000000005a0f1 : mov ebp, eax ; jmp 0x56b3a
0x00000000000da5e5 : mov ebp, eax ; mov eax, 3 ; syscall
0x00000000000b414d : mov ebp, ebp ; mov rdi, rbx ; call r12
0x0000000000032e4c : mov ebp, ecx ; jmp rdx
0x00000000000dfa62 : mov ebp, edi ; call 0xdbd64
0x0000000000178969 : mov ebp, edi ; jmp qword ptr [rdi]
0x0000000000076d5d : mov ebp, edx ; call qword ptr [r14]
0x000000000008abc4 : mov ebp, edx ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000000f8db2 : mov ebp, esp ; call 0x75054
0x000000000005c77b : mov ebp, esp ; jmp 0x59237
0x000000000016b7e1 : mov ebp, esp ; jmp rsp
0x00000000000f5d04 : mov ebp, esp ; pop rbp ; ret
0x000000000015a124 : mov ebx, 0x1b5c347e ; jmp 0x15a0fc
0x0000000000002d1a : mov ebx, 0x24d3e900 ; and eax, ebp ; clc ; ret
0x0000000000133667 : mov ebx, 0x46f00ff2 ; retf
0x00000000000b42c1 : mov ebx, 0x48fffffd ; mov edi, ebx ; call 0x20519
0x00000000000dbea1 : mov ebx, 0x48fffffe ; add esp, 0x20 ; pop rbx ; ret
0x000000000003fad9 : mov ebx, 0x4c60035 ; adc byte ptr [rax], al ; ret
0x000000000012e1c4 : mov ebx, 0x4e6f0ff3 ; retf
0x000000000012e1e2 : mov ebx, 0x4f7f0ff3 ; retf
0x0000000000001f1f : mov ebx, 0x79e33a1c ; retf 0x6321
0x00000000000b0c09 : mov ebx, 0x89000ad3 ; retf 0x6348
0x00000000000895e1 : mov ebx, 0x89480c75 ; ret 0x8d48
0x0000000000003681 : mov ebx, 0x952a6c41 ; ret
0x00000000000c1a03 : mov ebx, 0xa4 ; add dword ptr [rdi], ecx ; lahf ; ret 0x8feb
0x00000000000f5524 : mov ebx, 0xafb8341 ; je 0xf5533 ; ret
0x0000000000078169 : mov ebx, 0xb8000ee0 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000016ad89 : mov ebx, 0xba90fffc ; cld ; jmp qword ptr [rax]
0x000000000016abc5 : mov ebx, 0xbb46fffc ; cld ; call rsi
0x000000000015e485 : mov ebx, 0xbc08fff5 ; cmc ; call qword ptr [rdx]
0x000000000015709b : mov ebx, 0xbfbebdbc ; rol cl, 0xc2 ; ret
0x0000000000110396 : mov ebx, 0xc8 ; call rax
0x000000000002e5f0 : mov ebx, 2 ; xor esi, esi ; mov eax, ebx ; syscall
0x0000000000066c3f : mov ebx, dr1 ; dec dword ptr [rcx + 0x415d5be8] ; pop rsp ; ret
0x000000000002da29 : mov ebx, dword ptr [rbp - 0x98] ; call 0x8a508
0x00000000000b89e6 : mov ebx, dword ptr [rbp - 8] ; leave ; ret
0x000000000015a744 : mov ebx, dword ptr [rdx] ; retf 0x7272
0x000000000010cacb : mov ebx, eax ; jne 0x10ca69 ; xor eax, eax ; pop rbx ; ret
0x000000000007168f : mov ebx, eax ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f7d5f : mov ebx, eax ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000e0bff : mov ebx, eax ; mov rax, rbx ; pop rbx ; ret
0x000000000003f3af : mov ebx, edi ; syscall
0x000000000002aa56 : mov ebx, edi ; test rax, rax ; je 0x2aa66 ; call rax
0x0000000000043c27 : mov ebx, edx ; call 0x80654
0x00000000000c17f1 : mov ebx, edx ; mov rsi, rbx ; mov rdi, rbp ; call r12
0x00000000000b3f23 : mov ebx, esi ; sub rsp, 8 ; syscall
0x00000000000ecc42 : mov ecx, 0x400 ; call 0x108e77
0x0000000000041111 : mov ecx, 0x441f0f66 ; add byte ptr [rax], al ; ret
0x00000000001585d9 : mov ecx, 0x5b92ac50 ; retf
0x0000000000001d95 : mov ecx, 0x72b02084 ; retf
0x000000000015a0ae : mov ecx, 0x7ce1a201 ; pop rdx ; leave ; retf
0x000000000016ac1d : mov ecx, 0xb8b2fffc ; cld ; jmp qword ptr [rdx]
0x000000000016ad95 : mov ecx, 0xb940fffc ; cld ; call rax
0x000000000016ad15 : mov ecx, 0xb954fffc ; cld ; jmp rsp
0x000000000016abd5 : mov ecx, 0xb986fffc ; cld ; call qword ptr [rsi]
0x00000000000e0ee0 : mov ecx, 0xc ; mov eax, ecx ; syscall
0x000000000016c0a5 : mov ecx, 0xe4140000 ; out dx, eax ; jmp rsp
0x0000000000025066 : mov ecx, 0xf7000004 ; ret 0
0x0000000000048218 : mov ecx, 1 ; jmp rax
0x0000000000003033 : mov ecx, dr0 ; mov dr0, word ptr [rax] ; retf
0x000000000007e9ce : mov ecx, dword ptr [rax + rax] ; ret
0x000000000011f1b4 : mov ecx, dword ptr [rax - 0x77] ; ror dword ptr [rax + 3], 1 ; or byte ptr [rax + 0x39], cl ; retf
0x0000000000021ad4 : mov ecx, dword ptr [rbp - 0x60] ; call rcx
0x000000000010a227 : mov ecx, dword ptr [rcx + 0x18] ; jmp rcx
0x000000000014656c : mov ecx, dword ptr [rcx - 4] ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x00000000000b7f34 : mov ecx, dword ptr [rdi + 0x18] ; mov qword ptr [rdi + 0x18], rcx ; ret
0x0000000000117fa0 : mov ecx, dword ptr [rdi + 0x28] ; cmp ecx, edx ; jae 0x117fb9 ; xor eax, eax ; ret
0x0000000000117fe0 : mov ecx, dword ptr [rdi + 0x28] ; cmp ecx, edx ; jae 0x117ff9 ; xor eax, eax ; ret
0x0000000000041bc6 : mov ecx, dword ptr [rdi + 0x30] ; mov rdi, qword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x000000000012bfee : mov ecx, dword ptr [rdi - 0x73] ; or al, 0xb ; jmp r9
0x000000000006e3ab : mov ecx, dword ptr [rdx + 0x48] ; cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x0000000000086983 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000000b8ce4 : mov ecx, dword ptr [rdx] ; add al, ch ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000009ab09 : mov ecx, dword ptr [rdx] ; test ecx, ecx ; jne 0x9ab07 ; ret
0x0000000000041ef6 : mov ecx, dword ptr [rsi + 0x30] ; mov rsi, qword ptr [rsi + 0x70] ; xor eax, eax ; ret
0x000000000015a564 : mov ecx, dword ptr [rsi + rdi*2 + 0xaaed8a9] ; jne 0x15a599 ; retf 0x32dd
0x000000000012e363 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012e563 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012e763 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000094510 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x0000000000094551 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000133dd3 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000133d63 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000133cf3 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000133c15 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000133ba5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000133b35 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000133ac5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000133a55 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000001339e5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000133975 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000133eb5 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x00000000000944f1 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000001108b5 : mov ecx, dword ptr [rsp + 0x28] ; call rcx
0x000000000011069b : mov ecx, dword ptr [rsp + 0x30] ; call rcx
0x00000000001137c9 : mov ecx, dword ptr [rsp + 8] ; call rcx
0x00000000000e4463 : mov ecx, dword ptr [rsp + 8] ; syscall
0x000000000010be33 : mov ecx, dword ptr [rsp] ; call rcx
0x000000000010c21c : mov ecx, eax ; movsxd rdx, dword ptr [r8 + rcx*4] ; add rdx, r8 ; jmp rdx
0x000000000008e8d6 : mov ecx, eax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x000000000006e6f4 : mov ecx, ebp ; mov rdi, r15 ; xor r8d, r8d ; call rbx
0x0000000000112891 : mov ecx, ebp ; mov rdx, rbx ; xor eax, eax ; call 0x4f369
0x000000000008ed9e : mov ecx, ecx ; movsxd rax, dword ptr [r10 + r9*4] ; add rax, r10 ; jmp rax
0x00000000000eba59 : mov ecx, edi ; shr eax, cl ; and eax, 1 ; ret
0x0000000000074f00 : mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x0000000000083f72 : mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000108fd3 : mov ecx, edx ; xor edx, edx ; call rax
0x0000000000074f3a : mov ecx, edx ; xor edx, edx ; jmp rax
0x00000000000210e3 : mov ecx, esi ; call rbx
0x0000000000108eb3 : mov ecx, esi ; mov rdi, r13 ; call r12
0x000000000016cf79 : mov edi, 0x18bcfff2 ; add dword ptr [rax], eax ; add al, 0xc8 ; call rsp
0x00000000000f0f84 : mov edi, 0x2000004 ; call rax
0x0000000000032fba : mov edi, 0x27 ; mov eax, edi ; syscall
0x000000000015dee8 : mov edi, 0x2bfff520 ; and dh, ch ; call rsp
0x0000000000036993 : mov edi, 0x4800367a ; add esp, 8 ; ret
0x00000000000eaa40 : mov edi, 0x4cd6894c ; mov edi, esp ; mov eax, ebx ; syscall
0x00000000000c2e75 : mov edi, 0x4cfff5ca ; mov edi, esp ; call 0x1f941
0x0000000000063e2b : mov edi, 0x8348ffff ; ret 0xbe08
0x00000000000f066d : mov edi, 0x89000001 ; ret 0xf789
0x00000000000e0a4d : mov edi, 0x89000005 ; ret 0x448b
0x0000000000032c31 : mov edi, 0x89f02444 ; ret 0xe281
0x000000000017c9cd : mov edi, 0x93500000 ; cli ; jmp qword ptr [rdi]
0x000000000017c9e5 : mov edi, 0x94680000 ; cli ; call qword ptr [rdi]
0x000000000017c93d : mov edi, 0xa6500000 ; int1 ; jmp rbx
0x0000000000067657 : mov edi, 0xe0 ; call rax
0x000000000006761b : mov edi, 0xe0 ; jmp rax
0x00000000000b3989 : mov edi, 0xffffffff ; mov dword ptr fs:[rdx], eax ; jmp 0xb3967
0x00000000000da746 : mov edi, 1 ; call rax
0x000000000005333d : mov edi, 1 ; jmp rax
0x00000000000524c9 : mov edi, 1 ; xor esi, esi ; jmp rax
0x0000000000003cda : mov edi, cs ; retf
0x000000000015f769 : mov edi, dr0 ; call rax
0x000000000018adc1 : mov edi, dr0 ; call rsi
0x00000000000c2f29 : mov edi, dword ptr [rax + rbx + 0x18] ; call 0x1f93e
0x00000000000a77c4 : mov edi, dword ptr [rax] ; call r14
0x00000000000c2e88 : mov edi, dword ptr [rbp + 0x18] ; call 0x1f93d
0x00000000000c2ea3 : mov edi, dword ptr [rbp + 8] ; call 0x1f93d
0x00000000000bb078 : mov edi, dword ptr [rbp - 0x318] ; call rbx
0x0000000000022e7a : mov edi, dword ptr [rbp - 0x48] ; call 0x1f93d
0x000000000004fe8c : mov edi, dword ptr [rbp - 0x4a0] ; call rax
0x000000000005f974 : mov edi, dword ptr [rbp - 0x548] ; call 0x6bc58
0x00000000000d4a7c : mov edi, dword ptr [rbp - 0xb8] ; call r14
0x00000000000b36c3 : mov edi, dword ptr [rbx + 0x18] ; call 0x1f93d
0x00000000000b36cc : mov edi, dword ptr [rbx + 0x20] ; call 0x1f93d
0x00000000000b36bb : mov edi, dword ptr [rbx] ; call 0x1f93c
0x0000000000149cd6 : mov edi, dword ptr [rdi + 0x10] ; test rdi, rdi ; jne 0x149cd9 ; ret
0x0000000000111181 : mov edi, dword ptr [rdi + 0x40] ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x111199 ; ret
0x0000000000115ea1 : mov edi, dword ptr [rdi + 0x40] ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x115eb9 ; ret
0x0000000000041bca : mov edi, dword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x0000000000067656 : mov edi, dword ptr [rdi + 0xe0] ; call rax
0x000000000006761a : mov edi, dword ptr [rdi + 0xe0] ; jmp rax
0x000000000002a6e8 : mov edi, dword ptr [rdi] ; syscall
0x00000000000f3e64 : mov edi, dword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x00000000000c2e9a : mov edi, dword ptr [rdx + 8] ; call 0x1f93d
0x00000000001593c6 : mov edi, dword ptr [rdx] ; ret
0x0000000000149ca1 : mov edi, dword ptr [rip + 0x250f59] ; call 0xe5fa8
0x00000000000da958 : mov edi, dword ptr [rsi + 0x10] ; mov eax, ecx ; mov edx, dword ptr [r14 + 0x1c] ; syscall
0x00000000000c2e70 : mov edi, dword ptr [rsp + 0x10] ; call 0x1f93e
0x00000000000e59ca : mov edi, dword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000233dc : mov edi, dword ptr [rsp + 0x20] ; call r15
0x00000000000b486d : mov edi, dword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000023b90 : mov edi, dword ptr [rsp + 0x30] ; call r14
0x0000000000024481 : mov edi, dword ptr [rsp + 0x30] ; call r15
0x0000000000023d7c : mov edi, dword ptr [rsp + 0x30] ; call rbx
0x0000000000023962 : mov edi, dword ptr [rsp + 0x38] ; call r14
0x0000000000023823 : mov edi, dword ptr [rsp + 0x38] ; call r15
0x00000000000253df : mov edi, dword ptr [rsp + 0x38] ; call rbx
0x0000000000025c28 : mov edi, dword ptr [rsp + 0x38] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000024fdd : mov edi, dword ptr [rsp + 0x38] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000041799 : mov edi, dword ptr [rsp + 0x3c] ; call rax
0x0000000000027244 : mov edi, dword ptr [rsp + 0x48] ; call r14
0x00000000000247ac : mov edi, dword ptr [rsp + 0x48] ; call r15
0x0000000000074cdb : mov edi, dword ptr [rsp + 8] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x0000000000031b7b : mov edi, dword ptr [rsp + 8] ; mov eax, 2 ; syscall
0x0000000000033f1e : mov edi, dword ptr [rsp + 8] ; mov eax, ecx ; syscall
0x00000000000e6d83 : mov edi, dword ptr [rsp + 8] ; xor eax, eax ; syscall
0x0000000000074796 : mov edi, dword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000033dc5 : mov edi, dword ptr [rsp] ; mov eax, ecx ; syscall
0x00000000000e9304 : mov edi, dword ptr [rsp] ; mov rdx, rax ; call 0xf5568
0x000000000011442d : mov edi, eax ; call qword ptr [r10]
0x0000000000032fc4 : mov edi, eax ; mov eax, 0xba ; syscall
0x00000000000e1b33 : mov edi, eax ; mov eax, 1 ; syscall
0x000000000001fad3 : mov edi, eax ; mov eax, 3 ; syscall
0x000000000011c7f1 : mov edi, eax ; mov eax, ebx ; syscall
0x00000000000e7374 : mov edi, eax ; mov eax, esi ; syscall
0x000000000002ecce : mov edi, eax ; mov eax, r10d ; syscall
0x000000000001fab2 : mov edi, eax ; mov eax, r13d ; syscall
0x0000000000033450 : mov edi, eax ; mov eax, r9d ; syscall
0x00000000000d4f82 : mov edi, eax ; mov rax, qword ptr [rbp - 0x88] ; call rax
0x000000000010a224 : mov edi, eax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x00000000000b0c86 : mov edi, eax ; movsxd rdx, dword ptr [r8 + rdi*4] ; add rdx, r8 ; jmp rdx
0x00000000000e6ca7 : mov edi, eax ; sub rdx, rsi ; xor eax, eax ; syscall
0x00000000000e7356 : mov edi, eax ; xor eax, eax ; mov rsi, rbp ; syscall
0x00000000000e1936 : mov edi, eax ; xor eax, eax ; syscall
0x00000000000c2eac : mov edi, ebp ; add r14, 8 ; call 0x1f940
0x0000000000149670 : mov edi, ebp ; add rdi, qword ptr [r13 + 0x10] ; call rbx
0x000000000010b5ca : mov edi, ebp ; call 0x118054
0x0000000000082818 : mov edi, ebp ; call 0x4f244
0x00000000000f3671 : mov edi, ebp ; call 0xf00b4
0x000000000010cb6e : mov edi, ebp ; call qword ptr [rbx]
0x00000000000c1799 : mov edi, ebp ; call r12
0x000000000010a9fd : mov edi, ebp ; call r14
0x00000000000203a0 : mov edi, ebp ; call rax
0x000000000009b756 : mov edi, ebp ; call rbx
0x0000000000118071 : mov edi, ebp ; call rcx
0x000000000010c725 : mov edi, ebp ; call rdx
0x000000000010b3e5 : mov edi, ebp ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000010b226 : mov edi, ebp ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x0000000000028a62 : mov edi, ebp ; mov eax, 3 ; syscall
0x0000000000022204 : mov edi, ebp ; mov qword ptr [rsp + 8], rcx ; call 0x7ec49
0x00000000001137c6 : mov edi, ebp ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x0000000000076d72 : mov edi, ebp ; neg rdi ; call qword ptr [r14]
0x0000000000113664 : mov edi, ebp ; pop rbx ; pop rbp ; jmp 0x1f93e
0x000000000011718d : mov edi, ebp ; pop rbx ; pop rbp ; jmp rax
0x00000000000a8157 : mov edi, ebp ; sub rsp, 8 ; call r12
0x000000000010c07d : mov edi, ebp ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x000000000010bdd0 : mov edi, ebx ; call 0x118034
0x00000000000e36d9 : mov edi, ebx ; call 0x1f93c
0x00000000000b42c6 : mov edi, ebx ; call 0x20514
0x00000000000ba865 : mov edi, ebx ; call qword ptr [r15]
0x000000000010cf98 : mov edi, ebx ; call qword ptr [rax]
0x0000000000028957 : mov edi, ebx ; call r12
0x000000000002146e : mov edi, ebx ; call r14
0x0000000000066471 : mov edi, ebx ; call r8
0x00000000000660c8 : mov edi, ebx ; call rax
0x0000000000170691 : mov edi, ebx ; jmp rsp
0x0000000000149b5b : mov edi, ebx ; jne 0x149b50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000321d8 : mov edi, ebx ; lea rsi, qword ptr [rax + r12] ; mov eax, r8d ; syscall
0x00000000000c7001 : mov edi, ebx ; mov byte ptr [rsp + 0x38], 0xa ; call 0xc32f9
0x00000000000df978 : mov edi, ebx ; mov eax, 0x10f ; syscall
0x00000000000db1d5 : mov edi, ebx ; mov eax, 0x135 ; syscall
0x00000000000333cd : mov edi, ebx ; mov eax, 0x82 ; syscall
0x000000000001fa12 : mov edi, ebx ; mov eax, 1 ; syscall
0x0000000000031bed : mov edi, ebx ; mov eax, 3 ; syscall
0x000000000001faea : mov edi, ebx ; mov eax, r12d ; syscall
0x000000000011ee3b : mov edi, ebx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x000000000010be30 : mov edi, ebx ; mov rcx, qword ptr [rsp] ; call rcx
0x00000000000b36d5 : mov edi, ebx ; pop rbx ; jmp 0x1f93d
0x00000000000e57ba : mov edi, ebx ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; jmp rax
0x0000000000069225 : mov edi, ebx ; pop rbx ; pop rbp ; jmp rax
0x000000000006b97f : mov edi, ebx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000000727ba : mov edi, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000007d669 : mov edi, ecx ; call rax
0x000000000007e2fe : mov edi, ecx ; call rcx
0x00000000000781be : mov edi, ecx ; mov eax, 3 ; syscall
0x0000000000078192 : mov edi, ecx ; mov eax, r8d ; syscall
0x000000000002a8cf : mov edi, ecx ; syscall
0x000000000007a477 : mov edi, edi ; call 0x766c4
0x0000000000022222 : mov edi, edi ; call 0x7ec44
0x000000000005ff09 : mov edi, edi ; call 0xec114
0x00000000000f3653 : mov edi, edi ; call 0xf00b4
0x0000000000115800 : mov edi, edi ; call qword ptr [rax]
0x00000000001170ee : mov edi, edi ; call r14
0x000000000006d464 : mov edi, edi ; call rax
0x00000000000dc191 : mov edi, edi ; mov eax, 0x4f ; syscall
0x00000000000b8faa : mov edi, edi ; mov eax, 0x69 ; syscall
0x00000000000b901a : mov edi, edi ; mov eax, 0x6a ; syscall
0x000000000011d25d : mov edi, edi ; mov eax, 1 ; syscall
0x0000000000031b26 : mov edi, edi ; mov eax, 2 ; syscall
0x000000000011d2b7 : mov edi, edi ; mov eax, 3 ; syscall
0x00000000000b926c : mov edi, edi ; mov edx, edx ; mov eax, 0x75 ; syscall
0x00000000000b92ec : mov edi, edi ; mov edx, edx ; mov eax, 0x77 ; syscall
0x00000000000e11ca : mov edi, edi ; mov esi, esi ; mov eax, 0x71 ; syscall
0x00000000000e123a : mov edi, edi ; mov esi, esi ; mov eax, 0x72 ; syscall
0x000000000007db13 : mov edi, edi ; mov rdx, rbx ; mov rsi, r13 ; call rax
0x00000000000ec4fc : mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x000000000006e6f7 : mov edi, edi ; xor r8d, r8d ; call rbx
0x00000000000f55d8 : mov edi, edx ; jmp rax
0x00000000000441a1 : mov edi, edx ; mov byte ptr [rsi], al ; jne 0x44189 ; mov rax, rsi ; ret
0x000000000011d426 : mov edi, edx ; mov eax, 2 ; syscall
0x00000000000e06e0 : mov edi, edx ; mov eax, ebx ; mov r12d, dword ptr fs:[r8] ; syscall
0x000000000011ddd3 : mov edi, edx ; mov eax, ebx ; syscall
0x00000000000b8601 : mov edi, edx ; mov eax, esi ; syscall
0x00000000000b8611 : mov edi, edx ; mov eax, r8d ; syscall
0x0000000000079c9a : mov edi, edx ; pop rbx ; pop rbp ; jmp 0x766c6
0x00000000000dac28 : mov edi, edx ; syscall
0x000000000005f19c : mov edi, esi ; call 0x6bc54
0x00000000000f2fe5 : mov edi, esi ; call 0xefae4
0x000000000015f689 : mov edi, esi ; call qword ptr [rax + 0x17fff78a]
0x000000000015f815 : mov edi, esi ; call qword ptr [rax]
0x000000000015f80d : mov edi, esi ; call qword ptr [rdi + 0x10fff787]
0x000000000002d149 : mov edi, esi ; call rax
0x000000000015f7ad : mov edi, esi ; jmp rdx
0x000000000002a784 : mov edi, esi ; mov eax, 3 ; syscall
0x000000000002a9ae : mov edi, esi ; mov eax, r10d ; syscall
0x0000000000070af7 : mov edi, esi ; mov eax, r9d ; syscall
0x00000000000789bc : mov edi, esi ; mov qword ptr [rsp + 0x10], r14 ; call qword ptr [rax]
0x00000000000e5bb4 : mov edi, esi ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x000000000002a96a : mov edi, esi ; xor eax, eax ; syscall
0x00000000000facda : mov edi, esp ; call 0x107784
0x00000000000c2e7a : mov edi, esp ; call 0x1f93c
0x0000000000037130 : mov edi, esp ; call 0x43c04
0x000000000016aac9 : mov edi, esp ; call qword ptr [rax + 0x10fffc8a]
0x000000000016aac5 : mov edi, esp ; call qword ptr [rax]
0x000000000007bba6 : mov edi, esp ; call rax
0x000000000006e449 : mov edi, esp ; call rbx
0x00000000001171f1 : mov edi, esp ; call rdx
0x000000000016aa89 : mov edi, esp ; jmp qword ptr [rax + 0x20fffc8a]
0x000000000016aa85 : mov edi, esp ; jmp qword ptr [rax]
0x00000000000ea8e1 : mov edi, esp ; mov eax, 0x14 ; syscall
0x00000000000ea79e : mov edi, esp ; mov eax, 1 ; syscall
0x00000000000eab9a : mov edi, esp ; mov eax, 2 ; syscall
0x00000000000eaa7d : mov edi, esp ; mov eax, 3 ; syscall
0x00000000000e4641 : mov edi, esp ; mov eax, 9 ; syscall
0x00000000000eaa45 : mov edi, esp ; mov eax, ebx ; syscall
0x0000000000021ad1 : mov edi, esp ; mov rcx, qword ptr [rbp - 0x60] ; call rcx
0x00000000001108b2 : mov edi, esp ; mov rcx, qword ptr [rsp + 0x28] ; call rcx
0x0000000000110698 : mov edi, esp ; mov rcx, qword ptr [rsp + 0x30] ; call rcx
0x00000000000f09ac : mov edi, esp ; pop rbx ; pop rbp ; pop r12 ; mov rdx, rax ; jmp rcx
0x000000000005ff08 : mov edi, r15d ; call 0xec115
0x0000000000104716 : mov edx, 0 ; cmovae rax, rdx ; ret
0x00000000000ea3f6 : mov edx, 0 ; cmovb rax, rdx ; ret
0x00000000000991b4 : mov edx, 0 ; cmove rax, rdx ; ret
0x0000000000071af6 : mov edx, 0x130 ; pop rbx ; ret
0x000000000016eb5d : mov edx, 0x14140001 ; clc ; call rsp
0x00000000001335e7 : mov edx, 0x46f00ff2 ; retf 0xff3
0x00000000000e3732 : mov edx, 0x48002b89 ; add esp, 8 ; ret
0x000000000012e3c4 : mov edx, 0x4e6f0ff3 ; retf -0x74b4
0x000000000012e3e2 : mov edx, 0x4f7f0ff3 ; retf -0x76b4
0x000000000016a85c : mov edx, 0x60fffc92 ; xchg eax, edx ; cld ; call rax
0x000000000016ac4d : mov edx, 0xba52fffc ; cld ; jmp rdx
0x000000000015e7c9 : mov edx, 0xba62fff5 ; cmc ; jmp qword ptr [rax]
0x000000000016ab8d : mov edx, 0xba80fffc ; cld ; call qword ptr [rax]
0x000000000015e415 : mov edx, 0xbad9fff5 ; cmc ; jmp rbx
0x000000000015e5f5 : mov edx, 0xbccdfff5 ; cmc ; call rdi
0x000000000017c4d5 : mov edx, 0xe0880000 ; cld ; call qword ptr [rax]
0x000000000016c0bd : mov edx, 0xe9340000 ; out dx, eax ; jmp rsp
0x000000000008037a : mov edx, 0xffffffff ; cmovbe eax, edx ; ret
0x0000000000023207 : mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x0000000000041a60 : mov edx, 0xffffffff ; mov eax, edx ; ret
0x00000000001178ff : mov edx, 0xffffffff ; xor eax, eax ; jmp rcx
0x000000000004721d : mov edx, 1 ; jmp rax
0x00000000000d2ef0 : mov edx, 2 ; cmove eax, edx ; ret
0x0000000000033155 : mov edx, 8 ; mov eax, ecx ; syscall
0x00000000000da95d : mov edx, dword ptr [r14 + 0x1c] ; syscall
0x0000000000070895 : mov edx, dword ptr [rax + 0x18] ; mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x00000000000b843c : mov edx, dword ptr [rax + 0x18] ; test rdx, rdx ; je 0xb8451 ; call rdx
0x00000000001498d0 : mov edx, dword ptr [rax + rbp*8] ; test rdx, rdx ; je 0x1498e2 ; call rdx
0x00000000000e7b39 : mov edx, dword ptr [rax - 0x77000000] ; ret 0xe8c1
0x00000000000202d8 : mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000f4379 : mov edx, dword ptr [rbp + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x00000000000f475b : mov edx, dword ptr [rbp + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x00000000000f43d7 : mov edx, dword ptr [rbx + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x00000000000f4c75 : mov edx, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x00000000000f4a5e : mov edx, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x00000000000f47ee : mov edx, dword ptr [rcx + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x0000000000123baf : mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00000000001222dd : mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x00000000000f581a : mov edx, dword ptr [rcx] ; test rdx, rdx ; jne 0xf5818 ; ret
0x000000000006e8fa : mov edx, dword ptr [rdi + 0xc0] ; mov eax, edx ; ret
0x00000000000f55d1 : mov edx, dword ptr [rdi + 8] ; mov rax, qword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x000000000007e5b5 : mov edx, dword ptr [rdx + 8] ; test rdx, rdx ; jne 0x7e5b9 ; ret
0x00000000000f486f : mov edx, dword ptr [rsi + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x00000000000da95e : mov edx, dword ptr [rsi + 0x1c] ; syscall
0x00000000000c3217 : mov edx, dword ptr [rsi + 0x20] ; mov qword ptr [rax + 0x20], rdx ; xor eax, eax ; ret
0x0000000000094532 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x0000000000094523 : mov edx, dword ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x0000000000094573 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000a79de : mov edx, dword ptr [rsi + 8] ; cmp dword ptr [rdi + 8], edx ; jne 0xa79c6 ; ret
0x0000000000094583 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000f44a0 : mov edx, dword ptr [rsi - 0x30] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x000000000012dda1 : mov edx, dword ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000012e160 : mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000012d9f1 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000095b00 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000096930 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 4] ; ret
0x0000000000094500 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000983a0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x0000000000095b51 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000096981 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000094541 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000095ae1 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000096901 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000944e1 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000f0f80 : mov edx, dword ptr [rsp + 0x10] ; mov edi, 0x2000004 ; call rax
0x00000000000f0e7c : mov edx, dword ptr [rsp + 0x10] ; mov rsi, qword ptr [rsp + 8] ; call rax
0x00000000000e8cf6 : mov edx, dword ptr [rsp + 8] ; mov eax, 0x38 ; syscall
0x00000000000d4208 : mov edx, dword ptr [rsp] ; mov rsi, rbx ; call r14
0x00000000000e9308 : mov edx, eax ; call 0xf5564
0x00000000000f09b3 : mov edx, eax ; jmp rcx
0x0000000000106120 : mov edx, eax ; mov byte ptr [rdx], 0 ; ret
0x00000000000db387 : mov edx, eax ; mov eax, 0x85 ; syscall
0x00000000001025d0 : mov edx, eax ; mov eax, 3 ; syscall
0x000000000002a967 : mov edx, eax ; mov rdi, r14 ; xor eax, eax ; syscall
0x000000000010bdcd : mov edx, eax ; mov rdi, rbx ; call 0x118037
0x00000000000ca2d6 : mov edx, eax ; movsxd rax, dword ptr [rcx + rdx*4] ; add rax, rcx ; jmp rax
0x000000000011f7df : mov edx, ebp ; add r9, qword ptr [rbp - 0x88] ; call rax
0x00000000000f427f : mov edx, ebp ; call rax
0x00000000000e0457 : mov edx, ebp ; mov eax, 0x11d ; syscall
0x000000000009b892 : mov edx, ebp ; mov rdi, rbp ; call rbx
0x000000000010d9cb : mov edx, ebp ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000000f44a7 : mov edx, ebx ; call rax
0x0000000000149ff7 : mov edx, ebx ; jne 0x149fee ; pop rbx ; ret
0x000000000003712d : mov edx, ebx ; mov rdi, r12 ; call 0x43c07
0x000000000010d8c6 : mov edx, ebx ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x000000000007db16 : mov edx, ebx ; mov rsi, r13 ; call rax
0x000000000007dcf2 : mov edx, ebx ; mov rsi, r13 ; mov rdi, r12 ; call rax
0x0000000000072833 : mov edx, ebx ; mov rsi, rbp ; mov eax, r13d ; syscall
0x0000000000112894 : mov edx, ebx ; xor eax, eax ; call 0x4f366
0x00000000000dc9e1 : mov edx, ecx ; mov eax, 0x104 ; syscall
0x00000000000db442 : mov edx, ecx ; mov eax, 0x106 ; syscall
0x0000000000064d71 : mov edx, ecx ; mov eax, 0x108 ; syscall
0x00000000000dcff1 : mov edx, ecx ; mov eax, 0x109 ; syscall
0x00000000000dd0b1 : mov edx, ecx ; mov eax, 0x10b ; syscall
0x00000000000d9eda : mov edx, ecx ; mov eax, 0x11 ; syscall
0x00000000000e95da : mov edx, ecx ; mov eax, 0x113 ; syscall
0x00000000000e966a : mov edx, ecx ; mov eax, 0x114 ; syscall
0x00000000000e039a : mov edx, ecx ; mov eax, 0x115 ; syscall
0x00000000000e972a : mov edx, ecx ; mov eax, 0x116 ; syscall
0x00000000000e97b1 : mov edx, ecx ; mov eax, 0x11e ; syscall
0x00000000000d9f3a : mov edx, ecx ; mov eax, 0x12 ; syscall
0x00000000000e110a : mov edx, ecx ; mov eax, 0x127 ; syscall
0x00000000000e116a : mov edx, ecx ; mov eax, 0x128 ; syscall
0x00000000000e90f1 : mov edx, ecx ; mov eax, 0x12d ; syscall
0x00000000000e9021 : mov edx, ecx ; mov eax, 0x12e ; syscall
0x00000000000e9841 : mov edx, ecx ; mov eax, 0x12f ; syscall
0x00000000000e9901 : mov edx, ecx ; mov eax, 0x136 ; syscall
0x00000000000e9931 : mov edx, ecx ; mov eax, 0x137 ; syscall
0x00000000000e15da : mov edx, ecx ; mov eax, 0x17 ; syscall
0x00000000000e94b1 : mov edx, ecx ; mov eax, 0x19 ; syscall
0x00000000000dfc01 : mov edx, ecx ; mov eax, 0x28 ; syscall
0x00000000000e9e5a : mov edx, ecx ; mov eax, 0x2c ; syscall
0x00000000000e9bfa : mov edx, ecx ; mov eax, 0x2d ; syscall
0x00000000000e9f41 : mov edx, ecx ; mov eax, 0x35 ; syscall
0x00000000000e9eb1 : mov edx, ecx ; mov eax, 0x36 ; syscall
0x00000000000e9ad1 : mov edx, ecx ; mov eax, 0x37 ; syscall
0x00000000000b80a1 : mov edx, ecx ; mov eax, 0x3d ; syscall
0x00000000000ea5e1 : mov edx, ecx ; mov eax, 0x42 ; syscall
0x00000000000ea46a : mov edx, ecx ; mov eax, 0x45 ; syscall
0x00000000000ea4ca : mov edx, ecx ; mov eax, 0x46 ; syscall
0x00000000000e9541 : mov edx, ecx ; mov eax, 0x9d ; syscall
0x00000000000e9481 : mov edx, ecx ; mov eax, 0xa5 ; syscall
0x00000000000e9361 : mov edx, ecx ; mov eax, 0xaf ; syscall
0x00000000000e9571 : mov edx, ecx ; mov eax, 0xb2 ; syscall
0x00000000000e95a1 : mov edx, ecx ; mov eax, 0xb3 ; syscall
0x000000000011c431 : mov edx, ecx ; mov eax, 0xb5 ; syscall
0x000000000011c481 : mov edx, ecx ; mov eax, 0xb6 ; syscall
0x00000000000e7671 : mov edx, ecx ; mov eax, 0xbc ; syscall
0x00000000000e7611 : mov edx, ecx ; mov eax, 0xbd ; syscall
0x00000000000e74f1 : mov edx, ecx ; mov eax, 0xbe ; syscall
0x00000000000e7521 : mov edx, ecx ; mov eax, 0xbf ; syscall
0x00000000000e7581 : mov edx, ecx ; mov eax, 0xc0 ; syscall
0x00000000000e7461 : mov edx, ecx ; mov eax, 0xc1 ; syscall
0x00000000000e4801 : mov edx, ecx ; mov eax, 0xd8 ; syscall
0x00000000000ea611 : mov edx, ecx ; mov eax, 0xdc ; syscall
0x00000000000f5c85 : mov edx, ecx ; mov eax, 0xe6 ; syscall
0x00000000000e92da : mov edx, ecx ; mov eax, 0xe8 ; syscall
0x00000000000e92a1 : mov edx, ecx ; mov eax, 0xe9 ; syscall
0x00000000000b0c0d : mov edx, ecx ; movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x00000000000f5ce3 : mov edx, ecx ; syscall
0x000000000007a515 : mov edx, edi ; call 0x76f24
0x00000000000f04c1 : mov edx, edi ; mov rsi, r13 ; mov rdi, rbx ; call r14
0x00000000000fdadf : mov edx, edi ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x0000000000084338 : mov edx, edi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x00000000000db620 : mov edx, edx ; mov eax, 0x10c ; syscall
0x00000000000b926e : mov edx, edx ; mov eax, 0x75 ; syscall
0x00000000000b92ee : mov edx, edx ; mov eax, 0x77 ; syscall
0x00000000000f4380 : mov edx, esi ; call rax
0x000000000009bb52 : mov edx, esi ; mov rdi, rbp ; call rbx
0x00000000000dfbc0 : mov edx, esi ; xor esi, esi ; syscall
0x00000000000f43de : mov edx, esp ; call rax
0x0000000000033fda : mov edx, esp ; mov eax, 0x81 ; syscall
0x00000000000b8138 : mov edx, esp ; mov eax, 0xf7 ; syscall
0x000000000007d666 : mov edx, esp ; mov rdi, rcx ; call rax
0x00000000000e0806 : mov edx, esp ; syscall
0x00000000000d1df1 : mov es, word ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000016b9ed : mov es, word ptr [rax] ; add byte ptr [rcx + rdi*4], al ; in al, dx ; call rsp
0x00000000000ec389 : mov es, word ptr [rbx] ; add al, 0x11 ; ret
0x00000000000f02be : mov es, word ptr [rbx] ; stc ; dec dword ptr [rax - 0x77] ; ret
0x000000000009674e : mov es, word ptr [rsi] ; add byte ptr [rax], al ; ret
0x000000000008eb66 : mov esi, 0x39410704 ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, esp ; ret 0x3941
0x00000000000f045d : mov esi, 0x39442414 ; retf 0x3b74
0x000000000007d119 : mov esi, 0x3948feda ; ret 0x2f74
0x000000000009a9de : mov esi, 0x48000000 ; lea eax, dword ptr [rdi - 0x10] ; ret
0x000000000015a386 : mov esi, 0x497b96cc ; retf -0x6620
0x00000000000c220e : mov esi, 0x54c8d41 ; add byte ptr [rcx], bh ; retf -0x72f1
0x000000000015a423 : mov esi, 0x6400fd4c ; retf 0xf64
0x000000000015850a : mov esi, 0x6a25743d ; scasd eax, dword ptr [rdi] ; xlatb ; out 0xb3, al ; retf 0xe80
0x000000000008ea51 : mov esi, 0x74c08407 ; sub edi, dword ptr [rcx] ; ret 0x2774
0x000000000008ebb5 : mov esi, 0x75c9840f ; in eax, dx ; xor eax, eax ; ret
0x000000000004a25b : mov esi, 0x77cf39ca ; fild word ptr [rcx + rcx*4 - 0x40] ; ret
0x000000000017c8dd : mov esi, 0x78900000 ; int1 ; jmp qword ptr [rbx]
0x000000000017c8f5 : mov esi, 0x7ea80000 ; int1 ; call rsp
0x00000000000aeac3 : mov esi, 0x7fffffff ; jmp 0xaea9b
0x00000000000f5931 : mov esi, 0x80 ; mov eax, r9d ; syscall
0x00000000000f55a8 : mov esi, 0x80 ; syscall
0x00000000000b84d8 : mov esi, 0x81 ; mov eax, r12d ; syscall
0x000000000002257a : mov esi, 0x83480147 ; ret
0x00000000000386f2 : mov esi, 0x83480153 ; ret
0x000000000003d692 : mov esi, 0x83480163 ; ret
0x000000000005b49d : mov esi, 0x8348ffff ; ret 0xbe08
0x000000000008eace : mov esi, 0x84450704 ; sal byte ptr [rbp - 0x26], 0xf3 ; ret
0x000000000005cb6d : mov esi, 0x89000000 ; ret 0x348
0x00000000000e2fa1 : mov esi, 0x89c08507 ; ret 0x840f
0x000000000008eaf1 : mov esi, 0x89c63907 ; ret 0xb8
0x00000000000b6224 : mov esi, 0x8b486408 ; xor cl, byte ptr [rax - 0x77] ; retf 0x44f6
0x000000000004041d : mov esi, 0x8d480253 ; add cl, byte ptr [r8 - 0x77] ; retf
0x000000000016ab71 : mov esi, 0xbd90fffc ; cld ; jmp qword ptr [rax]
0x000000000016ac29 : mov esi, 0xbe42fffc ; cld ; call rdx
0x000000000016aba9 : mov esi, 0xbe56fffc ; cld ; jmp rsi
0x000000000016ad65 : mov esi, 0xbe80fffc ; cld ; call qword ptr [rax]
0x000000000015e599 : mov esi, 0xbecdfff5 ; cmc ; call rdi
0x000000000015e59d : mov esi, 0xbed7fff5 ; cmc ; jmp rcx
0x000000000008ec0d : mov esi, 0xc0844507 ; jne 0x8ebf9 ; xor eax, eax ; ret
0x000000000015709e : mov esi, 0xc2c1c0bf ; ret
0x000000000017c81d : mov esi, 0xc3f00000 ; sti ; call qword ptr [rax]
0x00000000000f0310 : mov esi, 0xc48348c3 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000e7300 : mov esi, 0xc9058d48 ; ret 7
0x000000000008ea75 : mov esi, 0xc984070c ; jne 0x8ea70 ; ret
0x0000000000003cd7 : mov esi, 0xcf8cb236 ; retf
0x000000000008ea31 : mov esi, 0xd2840714 ; jne 0x8ea30 ; ret
0x0000000000099094 : mov esi, 0xf000000 ; lahf ; ret 0xea81
0x000000000016c13d : mov esi, 0xf7a40000 ; out dx, eax ; jmp rsp
0x0000000000002bf9 : mov esi, 0xf8cbeb8f ; ret
0x0000000000053390 : mov esi, 1 ; jmp rax
0x000000000006646b : mov esi, 1 ; mov rdi, rbx ; call r8
0x00000000000660c2 : mov esi, 1 ; mov rdi, rbx ; call rax
0x000000000015ac07 : mov esi, dr1 ; jrcxz 0x15abef ; cmp al, 0x93 ; in al, dx ; retf -0x51ce
0x0000000000102278 : mov esi, dword ptr [rdx] ; syscall
0x000000000005d537 : mov esi, dword ptr [rip + 0x33ba33] ; call rax
0x000000000005548f : mov esi, dword ptr [rip + 0x343adb] ; call rax
0x0000000000054e53 : mov esi, dword ptr [rip + 0x344117] ; call rax
0x000000000005229f : mov esi, dword ptr [rip + 0x346ccb] ; call rax
0x0000000000049deb : mov esi, dword ptr [rip + 0x34f17f] ; call rax
0x0000000000046fbf : mov esi, dword ptr [rip + 0x351fab] ; call rax
0x0000000000041efa : mov esi, dword ptr [rsi + 0x70] ; xor eax, eax ; ret
0x0000000000083fa3 : mov esi, dword ptr [rsi] ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000010a9f8 : mov esi, dword ptr [rsp + 0x10] ; mov rdi, rbp ; call r14
0x00000000000210de : mov esi, dword ptr [rsp + 0x18] ; mov r9, r14 ; call rbx
0x00000000000a858a : mov esi, dword ptr [rsp + 0x18] ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000007bba1 : mov esi, dword ptr [rsp + 0x28] ; mov rdi, r12 ; call rax
0x0000000000023d77 : mov esi, dword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x00000000000253da : mov esi, dword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x00000000000f0e81 : mov esi, dword ptr [rsp + 8] ; call rax
0x00000000001006d9 : mov esi, dword ptr [rsp + 8] ; mov rdi, r13 ; call r12
0x000000000007b599 : mov esi, dword ptr [rsp] ; jmp rax
0x0000000000102277 : mov esi, dword ptr fs:[rdx] ; syscall
0x000000000017b789 : mov esi, eax ; call qword ptr [rax]
0x000000000017b7b9 : mov esi, eax ; jmp rbx
0x000000000011ed3f : mov esi, eax ; shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x000000000007db19 : mov esi, ebp ; call rax
0x00000000000ea1fe : mov esi, ebp ; mov eax, 0x120 ; syscall
0x00000000000ea356 : mov esi, ebp ; mov eax, 0x133 ; syscall
0x00000000000e9e07 : mov esi, ebp ; mov eax, 0x2e ; syscall
0x00000000000e9ca7 : mov esi, ebp ; mov eax, 0x2f ; syscall
0x000000000011df4b : mov esi, ebp ; mov eax, 1 ; syscall
0x00000000000f5bd9 : mov esi, ebp ; mov eax, ecx ; syscall
0x0000000000072836 : mov esi, ebp ; mov eax, r13d ; syscall
0x000000000007dcf5 : mov esi, ebp ; mov rdi, r12 ; call rax
0x0000000000070af4 : mov esi, ebp ; mov rdi, r14 ; mov eax, r9d ; syscall
0x00000000000b9cde : mov esi, ebp ; mov rdi, r8 ; mov eax, r9d ; syscall
0x00000000000f04c4 : mov esi, ebp ; mov rdi, rbx ; call r14
0x000000000007d4fb : mov esi, ebp ; mov rdi, rbx ; call rax
0x0000000000079c97 : mov esi, ebp ; mov rdi, rdx ; pop rbx ; pop rbp ; jmp 0x766c9
0x00000000000e735b : mov esi, ebp ; syscall
0x00000000000d420c : mov esi, ebx ; call r14
0x000000000016d1b9 : mov esi, ebx ; call rsp
0x0000000000033d21 : mov esi, ebx ; mov eax, ecx ; syscall
0x000000000011db8b : mov esi, ebx ; mov eax, r15d ; syscall
0x000000000011dc41 : mov esi, ebx ; mov eax, r8d ; syscall
0x0000000000033f1b : mov esi, ebx ; mov rdi, qword ptr [rsp + 8] ; mov eax, ecx ; syscall
0x0000000000033dc2 : mov esi, ebx ; mov rdi, qword ptr [rsp] ; mov eax, ecx ; syscall
0x000000000007dbfc : mov esi, ebx ; mov rdi, r13 ; call rax
0x000000000002221f : mov esi, ebx ; mov rdi, r15 ; call 0x7ec47
0x00000000001157fd : mov esi, ebx ; mov rdi, r15 ; call qword ptr [rax]
0x00000000001170eb : mov esi, ebx ; mov rdi, r15 ; call r14
0x000000000002eccb : mov esi, ebx ; mov rdi, r8 ; mov eax, r10d ; syscall
0x000000000011442a : mov esi, ebx ; mov rdi, rax ; call qword ptr [r10]
0x000000000010b5c7 : mov esi, ebx ; mov rdi, rbp ; call 0x118057
0x00000000000c1796 : mov esi, ebx ; mov rdi, rbp ; call r12
0x000000000011806e : mov esi, ebx ; mov rdi, rbp ; call rcx
0x00000000000b2e48 : mov esi, ebx ; xor edi, edi ; mov eax, 0xe4 ; syscall
0x00000000000db3e8 : mov esi, ecx ; mov eax, 0x103 ; syscall
0x0000000000068aa1 : mov esi, ecx ; mov eax, r8d ; syscall
0x000000000002a9ab : mov esi, ecx ; mov rdi, r14 ; mov eax, r10d ; syscall
0x000000000015f829 : mov esi, edi ; call qword ptr [rax]
0x000000000015f771 : mov esi, edi ; call rax
0x000000000018ad39 : mov esi, edi ; jmp qword ptr [rdi]
0x00000000000e8f1e : mov esi, edi ; mov eax, 0x119 ; syscall
0x000000000011d68d : mov esi, edi ; mov eax, r14d ; syscall
0x0000000000044d0c : mov esi, edi ; mov rdi, r14 ; call rax
0x00000000000b2e33 : mov esi, edi ; xor edi, edi ; call rax
0x0000000000110efa : mov esi, edx ; add rdi, 0x10 ; jmp rcx
0x00000000000f3e68 : mov esi, edx ; call rax
0x00000000000db28c : mov esi, edx ; mov eax, 4 ; syscall
0x00000000000db32c : mov esi, edx ; mov eax, 6 ; syscall
0x0000000000001bef : mov esi, edx ; mov ebp, dword ptr [rsi + rbx*8 + 0x6d] ; ret 0x1bb7
0x00000000000eaa42 : mov esi, edx ; mov rdi, r12 ; mov eax, ebx ; syscall
0x000000000001faaf : mov esi, edx ; mov rdi, r8 ; mov eax, r13d ; syscall
0x00000000000dab56 : mov esi, edx ; mov rdi, r9 ; mov eax, r8d ; syscall
0x000000000001fae7 : mov esi, edx ; mov rdi, rbx ; mov eax, r12d ; syscall
0x00000000000db2de : mov esi, edx ; syscall
0x00000000000ffe62 : mov esi, esi ; call 0x2c8c4
0x0000000000077c9d : mov esi, esi ; call 0xe47a4
0x00000000000ea2ad : mov esi, esi ; mov eax, 0x12b ; syscall
0x00000000000e9d66 : mov esi, esi ; mov eax, 0x2c ; syscall
0x00000000000e9ba6 : mov esi, esi ; mov eax, 0x2d ; syscall
0x00000000000e11cc : mov esi, esi ; mov eax, 0x71 ; syscall
0x00000000000e123c : mov esi, esi ; mov eax, 0x72 ; syscall
0x00000000000e0df3 : mov esi, esi ; mov eax, 0x8c ; syscall
0x00000000000e6d80 : mov esi, esi ; mov rdi, qword ptr [rsp + 8] ; xor eax, eax ; syscall
0x00000000000fdae2 : mov esi, esi ; mov rdi, r13 ; call rax
0x000000000007a474 : mov esi, esi ; mov rdi, r15 ; call 0x766c7
0x0000000000112c34 : mov esi, esi ; movsxd rax, dword ptr [rcx + rsi*4] ; add rax, rcx ; jmp rax
0x00000000001103e4 : mov esi, esi ; movsxd rax, dword ptr [rdi + rsi*4] ; add rax, rdi ; jmp rax
0x00000000000b99d9 : mov esi, esi ; movsxd rax, dword ptr [rdx + rsi*4] ; add rax, rdx ; jmp rax
0x00000000000805dc : mov esi, esp ; call 0x2c8c4
0x000000000011740d : mov esi, esp ; call qword ptr [rax]
0x00000000000db83e : mov esi, esp ; mov eax, 0x101 ; syscall
0x00000000000e16d3 : mov esi, esp ; mov eax, 0x10e ; syscall
0x00000000000b8041 : mov esi, esp ; mov eax, 0x3d ; syscall
0x000000000011c7ee : mov esi, esp ; mov rdi, r8 ; mov eax, ebx ; syscall
0x000000000010d8c9 : mov esi, esp ; mov rdi, rbp ; call rax
0x000000000010cf95 : mov esi, esp ; mov rdi, rbx ; call qword ptr [rax]
0x000000000006b97c : mov esi, esp ; mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000000037e7 : mov esi, fs ; mov al, 0x85 ; jbe 0x379a ; outsb dx, byte ptr [rsi] ; retf
0x000000000016eb5c : mov esp, 0x140001ba ; adc al, 0xf8 ; call rsp
0x000000000016fa6c : mov esp, 0x1400021f ; and al, 0xfa ; jmp rsp
0x00000000001831c4 : mov esp, 0x18000127 ; mov ebp, dr0 ; jmp qword ptr [rcx]
0x00000000000cb23d : mov esp, 0x18824 ; add cl, ch ; retf -3
0x000000000016ebdd : mov esp, 0x1b640001 ; clc ; call rsp
0x000000000016d4e4 : mov esp, 0x2400013d ; mov esp, esi ; call rsp
0x000000000016ed2c : mov esp, 0x240001c7 ; push rbp ; clc ; call rsp
0x000000000016c01c : mov esp, 0x340000b4 ; retf
0x000000000016c89c : mov esp, 0x340000ec ; mov dh, 0xf0 ; call rsp
0x000000000016d354 : mov esp, 0x34000133 ; fpatan ; call rsp
0x0000000000173dc4 : mov esp, 0x38000033 ; in al, dx ; jmp rsp
0x000000000016b744 : mov esp, 0x4000081 ; xchg ah, ch ; call rsp
0x000000000016b784 : mov esp, 0x4000082 ; mov esp, ebp ; call rsp
0x000000000016f13c : mov esp, 0x440001dd ; sar al, 1 ; call rsp
0x0000000000084547 : mov esp, 0x440f48c7 ; ret 0xc083
0x0000000000115ab1 : mov esp, 0x440f49df ; fmul qword ptr [rax - 0x7d] ; ret
0x00000000000838b1 : mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x00000000000838e1 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x00000000000838d1 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x0000000000170884 : mov esp, 0x5400011b ; ret
0x000000000016c5f4 : mov esp, 0x640000dc ; ja 0x16c5f2 ; call rsp
0x000000000016d684 : mov esp, 0x6400014b ; iretd ; hlt ; jmp rsp
0x000000000016ebdc : mov esp, 0x640001bc ; sbb edi, eax ; call rsp
0x000000000016f6bc : mov esp, 0x64000202 ; lodsb al, byte ptr [rsi] ; stc ; call rsp
0x0000000000185ac4 : mov esp, 0x68000150 ; xor dh, dh ; jmp qword ptr [rcx]
0x000000000016cccc : mov esp, 0x74000106 ; xchg eax, edx ; int1 ; call rsp
0x0000000000187fc4 : mov esp, 0x8000175 ; sal dh, 1 ; jmp qword ptr [rsi]
0x00000000000514c0 : mov esp, 0x8300109d ; ret
0x000000000016f39c : mov esp, 0x840001ee ; stc ; jmp rsp
0x000000000005aff0 : mov esp, 0x89000000 ; ret 0x348
0x00000000000eeb8a : mov esp, 0x8948002a ; ret 0x9ee9
0x000000000010d0f8 : mov esp, 0x8948fffd ; ret 0xffb8
0x00000000000265cd : mov esp, 0x89fffffe ; ret 0xe283
0x00000000000752d2 : mov esp, 0x8c48348 ; pop rbx ; pop rbp ; ret
0x000000000016ceb4 : mov esp, 0x94000112 ; cmp edx, esi ; jmp rsp
0x000000000017b9c4 : mov esp, 0x980000af ; mov al, 0xf0 ; call qword ptr [rax]
0x0000000000184dc4 : mov esp, 0x98000143 ; cli ; cmc ; jmp qword ptr [rcx]
0x00000000000c8662 : mov esp, 0x9824 ; add al, ch ; retf
0x000000000016c224 : mov esp, 0xa40000c3 ; or dh, al ; jmp rsp
0x000000000016e794 : mov esp, 0xa40001ab ; fcompi st(7) ; call rsp
0x000000000016ff1c : mov esp, 0xb400023d ; stosd dword ptr [rdi], eax ; cli ; call rsp
0x00000000001909c4 : mov esp, 0xb80001ff ; ret 0xfff8
0x000000000015e6bd : mov esp, 0xba62fff5 ; cmc ; jmp rcx
0x000000000015d539 : mov esp, 0xbbc0fff3 ; jmp rax
0x000000000015e7a1 : mov esp, 0xbbf4fff5 ; cmc ; jmp rbx
0x000000000015e48d : mov esp, 0xbc1cfff5 ; cmc ; jmp qword ptr [rsi]
0x000000000016ab7d : mov esp, 0xbc40fffc ; cld ; call rax
0x000000000016ad79 : mov esp, 0xbc50fffc ; cld ; jmp rax
0x000000000016ac39 : mov esp, 0xbc82fffc ; cld ; call qword ptr [rdx]
0x000000000015e7ed : mov esp, 0xbcd0fff5 ; cmc ; jmp qword ptr [rax]
0x000000000015e7e5 : mov esp, 0xbcd0fff5 ; cmc ; jmp rax
0x000000000015e7e9 : mov esp, 0xbce0fff5 ; cmc ; call rax
0x000000000015e7e1 : mov esp, 0xbcf0fff5 ; cmc ; call rax
0x0000000000084536 : mov esp, 0xc2440fc7 ; add eax, 1 ; ret
0x0000000000094c15 : mov esp, 0xc28348d2 ; adc byte ptr [rax + 0x29], cl ; retf 0x394c
0x000000000016b5bc : mov esp, 0xc400007b ; jae 0x16b5b6 ; call rsp
0x000000000016eadc : mov esp, 0xc40001b8 ; or edi, eax ; call rsp
0x000000000017e1c4 : mov esp, 0xc80000d7 ; popfq ; jmp qword ptr [rcx]
0x00000000001804c4 : mov esp, 0xc80000fa ; retf
0x00000000000807e3 : mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x000000000016baec : mov esp, 0xd4000093 ; out dx, al ; in al, dx ; call rsp
0x000000000016e894 : mov esp, 0xe40001ae ; in eax, -9 ; call rsp
0x0000000000173ec4 : mov esp, 0xe8000034 ; sub esp, ebp ; jmp qword ptr [rax]
0x0000000000182fc4 : mov esp, 0xe8000125 ; xchg ch, dh ; jmp qword ptr [rcx]
0x000000000016ecfc : mov esp, 0xf40001c6 ; push rdx ; clc ; jmp rsp
0x000000000016edc4 : mov esp, 0xf40001cc ; xchg al, bh ; call rsp
0x0000000000001eb8 : mov esp, 0xf69e7650 ; xchg eax, r11d ; retf
0x0000000000171ac4 : mov esp, 0xf8000010 ; jne 0x171abd ; call qword ptr [rdx]
0x000000000008a55b : mov esp, 0xf80148c0 ; add rax, rcx ; ret
0x00000000000838c1 : mov esp, 0xf80148c0 ; ret
0x000000000016aac1 : mov esp, dr1 ; call qword ptr [rax + 0x10fffc8b]
0x000000000016aabd : mov esp, dr1 ; call qword ptr [rax]
0x000000000016a941 : mov esp, dr1 ; call rdx
0x000000000016aa81 : mov esp, dr1 ; jmp qword ptr [rax + 0x20fffc8b]
0x000000000016aa7d : mov esp, dr1 ; jmp qword ptr [rax]
0x00000000000e06e6 : mov esp, dword ptr [rax] ; syscall
0x0000000000032e49 : mov esp, eax ; mov rbp, r9 ; jmp rdx
0x000000000016b789 : mov esp, ebp ; call rsp
0x00000000000b89e3 : mov esp, ebx ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x000000000016a8d9 : mov esp, edi ; call rax
0x000000000016d4e9 : mov esp, esi ; call rsp
0x0000000000076d58 : mov esp, esi ; xor edi, edi ; mov r13, rdx ; call qword ptr [r14]
0x00000000000a3245 : mov fs, word ptr [rbx - 0x7cfffff8] ; ret
0x00000000000a67fe : mov fs, word ptr [rcx + 4] ; add byte ptr [rbp + 0x390a74db], al ; ret
0x0000000000158804 : mov gs, ebp ; lodsb al, byte ptr [rsi] ; xchg eax, edi ; jo 0x158877 ; salc ; retf
0x0000000000158803 : mov gs, r13d ; lodsb al, byte ptr [rsi] ; xchg eax, edi ; jo 0x158878 ; salc ; retf
0x0000000000003835 : mov gs, word ptr [rbx] ; retf 0x707d
0x00000000000b9bbe : mov gs, word ptr [rdx - 4] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000103b60 : mov qword ptr [r11], rcx ; add rsp, 0x10 ; ret
0x000000000007d509 : mov qword ptr [r12], rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001151b9 : mov qword ptr [r12], rcx ; pop rbp ; pop r12 ; ret
0x00000000000d6318 : mov qword ptr [r8], r9 ; xor eax, eax ; ret
0x00000000000e5904 : mov qword ptr [r9 + 0x10], rdx ; mov qword ptr [rax + 8], r9 ; ret
0x00000000000e593c : mov qword ptr [r9 + 8], rdx ; mov qword ptr [rax + 0x10], r9 ; ret
0x0000000000146560 : mov qword ptr [r9 - 8], rcx ; ret
0x0000000000104497 : mov qword ptr [r9], r10 ; ret
0x00000000001044d8 : mov qword ptr [r9], rdi ; ret
0x00000000000e5940 : mov qword ptr [rax + 0x10], r9 ; ret
0x000000000006b5c8 : mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000006b608 : mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000006bb98 : mov qword ptr [rax + 0x18], rdx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000070898 : mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x00000000000c321a : mov qword ptr [rax + 0x20], rdx ; xor eax, eax ; ret
0x00000000000c324c : mov qword ptr [rax + 0x20], rsi ; xor eax, eax ; ret
0x000000000006b5cc : mov qword ptr [rax + 0x40], rcx ; ret
0x000000000006bc36 : mov qword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x000000000010d3a3 : mov qword ptr [rax + 0x58], r8 ; mov eax, 1 ; ret
0x000000000014a596 : mov qword ptr [rax + 8], 0 ; pop rbx ; ret
0x0000000000075039 : mov qword ptr [rax + 8], 0 ; ret
0x00000000000e5908 : mov qword ptr [rax + 8], r9 ; ret
0x00000000000e0f23 : mov qword ptr [rax], -1 ; xor eax, eax ; ret
0x0000000000104289 : mov qword ptr [rax], r10 ; lea eax, dword ptr [r9 + r8 + 2] ; pop rbx ; ret
0x00000000000facd6 : mov qword ptr [rax], r12 ; mov rdi, r12 ; call 0x107788
0x0000000000069ed9 : mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x000000000007ae05 : mov qword ptr [rax], rdi ; ret
0x000000000002bc62 : mov qword ptr [rax], rdx ; ret
0x000000000006c270 : mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00000000000523ff : mov qword ptr [rbp - 0x10c8], rdi ; jmp rax
0x000000000005319c : mov qword ptr [rbp - 0x10d0], r10 ; call 0x4f489
0x00000000000e6edb : mov qword ptr [rbp - 0x40], r12 ; syscall
0x00000000000e6ed7 : mov qword ptr [rbp - 0x48], r12 ; mov qword ptr [rbp - 0x40], r12 ; syscall
0x0000000000062ad9 : mov qword ptr [rbp - 0x498], rdx ; jmp 0x62ab5
0x000000000006313e : mov qword ptr [rbp - 0x520], rdx ; jmp 0x5fb82
0x000000000004713e : mov qword ptr [rbp - 0x530], rsi ; jmp rax
0x000000000005f69d : mov qword ptr [rbp - 0x558], rdx ; call 0xec119
0x000000000005ae01 : mov qword ptr [rbp - 0x660], rax ; jmp 0x57898
0x0000000000057ea3 : mov qword ptr [rbp - 0x670], r8 ; call 0x748b9
0x00000000000ea9cf : mov qword ptr [rbp - 0x6d0], rax ; mov eax, ebx ; syscall
0x00000000000f427a : mov qword ptr [rbp - 0x70], rdx ; mov rdx, r13 ; call rax
0x00000000000a81d7 : mov qword ptr [rbp], rbx ; call r12
0x0000000000035ea9 : mov qword ptr [rbp], rdx ; call rax
0x0000000000071a96 : mov qword ptr [rbx + 0x10], rax ; mov rax, rbx ; pop rbx ; ret
0x000000000011f365 : mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000072548 : mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000118211 : mov qword ptr [rbx + 0x18], 0 ; pop rbx ; ret
0x000000000011f31d : mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000006fff4 : mov qword ptr [rbx + 0x18], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000118268 : mov qword ptr [rbx + 0x20], r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d007a : mov qword ptr [rbx + 0x28], 0 ; pop rbx ; ret
0x00000000000a9a18 : mov qword ptr [rbx + 0x28], rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000708c4 : mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x00000000000e0380 : mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x000000000007471a : mov qword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x000000000007e58c : mov qword ptr [rbx + 8], rsi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e5541 : mov qword ptr [rbx], 0 ; pop rbx ; ret
0x000000000011f510 : mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000011504e : mov qword ptr [rbx], rax ; pop rbx ; ret
0x00000000000de206 : mov qword ptr [rbx], rax ; xor eax, eax ; pop rbx ; ret
0x000000000007e246 : mov qword ptr [rbx], rdi ; call rcx
0x000000000007cffc : mov qword ptr [rbx], rdx ; xor eax, eax ; pop rbx ; ret
0x000000000007e2fa : mov qword ptr [rbx], rsi ; mov rdi, r9 ; call rcx
0x0000000000110413 : mov qword ptr [rcx + 0x10], rdx ; mov eax, 1 ; ret
0x000000000006750d : mov qword ptr [rcx + 0x130], rdx ; ret
0x000000000013e8a3 : mov qword ptr [rcx + 5], rdx ; ret
0x000000000013e8b3 : mov qword ptr [rcx + 6], rdx ; ret
0x000000000013e8c3 : mov qword ptr [rcx + 7], rdx ; ret
0x000000000013e8d3 : mov qword ptr [rcx + 8], rdx ; ret
0x00000000000c3371 : mov qword ptr [rcx], rax ; add rsp, 0x20 ; pop rbx ; ret
0x000000000006ea6f : mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x000000000013e860 : mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x000000000013e880 : mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 7], edx ; ret
0x000000000013e890 : mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 8], edx ; ret
0x000000000013e8a0 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 5], rdx ; ret
0x000000000013e8b0 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 6], rdx ; ret
0x000000000013e8c0 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 7], rdx ; ret
0x000000000013e8d0 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 8], rdx ; ret
0x000000000013e870 : mov qword ptr [rcx], rdx ; mov word ptr [rcx + 8], dx ; ret
0x000000000013e850 : mov qword ptr [rcx], rdx ; ret
0x00000000000daf7a : mov qword ptr [rdi + 0x100], rdx ; ret
0x00000000000e58b9 : mov qword ptr [rdi + 0x10], r9 ; mov qword ptr [rdx], rdi ; ret
0x000000000004293e : mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000095d1c : mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x0000000000096b6c : mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000946ac : mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000009468c : mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000985dc : mov qword ptr [rdi + 0x10], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x000000000009537f : mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000946ef : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000009470f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000112c62 : mov qword ptr [rdi + 0x10], rdx ; mov eax, 1 ; ret
0x00000000000946d0 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x0000000000074612 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000070c76 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x00000000000b7f37 : mov qword ptr [rdi + 0x18], rcx ; ret
0x0000000000117ec5 : mov qword ptr [rdi + 0x18], rsi ; ret
0x00000000000a8d3e : mov qword ptr [rdi + 0x20], rcx ; ret
0x000000000011353b : mov qword ptr [rdi + 0x28], rdx ; mov eax, 1 ; ret
0x00000000001134f3 : mov qword ptr [rdi + 0x38], rdx ; mov eax, 1 ; ret
0x0000000000074642 : mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000da37d : mov qword ptr [rdi + 0x80], rdx ; ret
0x0000000000095cdc : mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x0000000000096b2c : mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x000000000009464c : mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000009859c : mov qword ptr [rdi + 0xe], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x0000000000095cfc : mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x0000000000096b4c : mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x000000000009466c : mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000985bc : mov qword ptr [rdi + 0xf], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x0000000000133c17 : mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000133ba7 : mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000133b37 : mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000133ac7 : mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000095bda : mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x0000000000096a1a : mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x0000000000133a57 : mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000009459a : mov qword ptr [rdi + 5], rdx ; ret
0x000000000009848a : mov qword ptr [rdi + 5], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x0000000000095bfa : mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x0000000000096a3a : mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000001339e7 : mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000945aa : mov qword ptr [rdi + 6], rdx ; ret
0x00000000000984aa : mov qword ptr [rdi + 6], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x0000000000095c1a : mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x0000000000096a5a : mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000133977 : mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000945ba : mov qword ptr [rdi + 7], rdx ; ret
0x00000000000984ca : mov qword ptr [rdi + 7], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000e2f77 : mov qword ptr [rdi + 8], 0 ; ret
0x0000000000042133 : mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x00000000000428c3 : mov qword ptr [rdi + 8], r9 ; ret
0x000000000010e005 : mov qword ptr [rdi + 8], rax ; pop rbx ; ret
0x0000000000074616 : mov qword ptr [rdi + 8], rax ; ret
0x0000000000036543 : mov qword ptr [rdi + 8], rdx ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000007143e : mov qword ptr [rdi + 8], rdx ; movzx eax, byte ptr [rax] ; ret
0x0000000000036534 : mov qword ptr [rdi + 8], rdx ; ret
0x00000000000e2f67 : mov qword ptr [rdi + 8], rsi ; ret
0x0000000000104607 : mov qword ptr [rdi + rdx + 0x10], r10 ; ret
0x000000000008441a : mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rcx ; ret
0x0000000000083f96 : mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x000000000012d884 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000012d8c2 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000004282e : mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000012dc0b : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000133427 : mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012ddeb : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001333a7 : mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012dfdb : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000133327 : mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012e1ac : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000133298 : mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000012e3ac : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000133208 : mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000012e5ac : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000133178 : mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000095500 : mov qword ptr [rdi - 1], rdx ; ret
0x00000000000427b9 : mov qword ptr [rdi - 8], r9 ; ret
0x000000000012d888 : mov qword ptr [rdi - 8], rcx ; ret
0x000000000012d8c6 : mov qword ptr [rdi - 8], rdx ; ret
0x000000000012da3b : mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000012db37 : mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000012da83 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001334a7 : mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000004f4cd : mov qword ptr [rdi], r10 ; ret
0x000000000004e7d5 : mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010e002 : mov qword ptr [rdi], r8 ; mov qword ptr [rdi + 8], rax ; pop rbx ; ret
0x0000000000042788 : mov qword ptr [rdi], r9 ; ret
0x00000000000e2f64 : mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x000000000004403a : mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x00000000000339d2 : mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000095b66 : mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000095226 : mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; ret
0x0000000000094576 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000094586 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000004f520 : mov qword ptr [rdi], rcx ; mov eax, 0xffffffff ; ret
0x0000000000094597 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000945a7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000945b7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x0000000000094567 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x000000000008441f : mov qword ptr [rdi], rcx ; ret
0x000000000012955e : mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x0000000000095b53 : mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000096983 : mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000095520 : mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x0000000000095540 : mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000095550 : mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000095560 : mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x0000000000095570 : mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 6], rdx ; ret
0x0000000000095530 : mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x000000000008e96f : mov qword ptr [rdi], rdx ; ret
0x00000000000983f3 : mov qword ptr [rdi], rdx ; xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x000000000014655d : mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x0000000000043a6a : mov qword ptr [rdi], rsi ; ret
0x0000000000071af4 : mov qword ptr [rdx + 0x130], rdi ; pop rbx ; ret
0x000000000006aa5d : mov qword ptr [rdx + 0x20], rax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x000000000006abf3 : mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x000000000010d00f : mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000010cfeb : mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000010cfef : mov qword ptr [rdx + 0x68], rcx ; ret
0x0000000000140c5a : mov qword ptr [rdx + 5], rax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000013c8ca : mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x0000000000140c7a : mov qword ptr [rdx + 6], rax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x000000000013c8ea : mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x0000000000140c9a : mov qword ptr [rdx + 7], rax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x000000000013c90a : mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x0000000000064df3 : mov qword ptr [rdx + 8], r8 ; add dword ptr [rdx + 4], 1 ; ret
0x0000000000140b2a : mov qword ptr [rdx + 8], rax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x000000000013c7fa : mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x0000000000110430 : mov qword ptr [rdx + 8], rdi ; ret
0x0000000000140ad3 : mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x00000000001104fa : mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x000000000013c7a3 : mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000002c42c : mov qword ptr [rdx], rax ; ret
0x000000000006f6ee : mov qword ptr [rdx], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000082b2d : mov qword ptr [rdx], rbx ; mov rax, r10 ; pop rbx ; ret
0x000000000008e8c1 : mov qword ptr [rdx], rcx ; ret
0x00000000000cf81a : mov qword ptr [rdx], rdi ; ret
0x000000000011042d : mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x00000000000f5e17 : mov qword ptr [rip + 0x2a7302], rax ; pop rbp ; ret
0x00000000000eae9f : mov qword ptr [rip + 0x2ae37a], rbx ; pop rbx ; ret
0x00000000000e3708 : mov qword ptr [rip + 0x2b89e1], rdx ; ret
0x0000000000082701 : mov qword ptr [rip + 0x319180], rax ; ret
0x000000000007aef9 : mov qword ptr [rip + 0x3208d8], rsi ; xor eax, eax ; ret
0x000000000002aec4 : mov qword ptr [rip + 0x36fb3d], rax ; mov eax, ecx ; syscall
0x00000000000d0393 : mov qword ptr [rsi + 0x10], r8 ; ret
0x000000000010c1ee : mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000036b45 : mov qword ptr [rsi + 0x10], rax ; xor eax, eax ; ret
0x00000000000c32db : mov qword ptr [rsi + 0x18], rdx ; mov dword ptr [rsi + 0x38], eax ; xor eax, eax ; ret
0x00000000000364b0 : mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x0000000000071415 : mov qword ptr [rsi + 0x28], rcx ; mov byte ptr [rdx], dil ; ret
0x00000000000e0366 : mov qword ptr [rsi + 0x48], rax ; ret
0x000000000006c194 : mov qword ptr [rsi + 0x60], rbx ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000da2ee : mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x00000000000d0376 : mov qword ptr [rsi + 8], 0 ; ret
0x000000000010c1be : mov qword ptr [rsi + 8], rax ; ret
0x00000000000d038f : mov qword ptr [rsi + 8], rcx ; mov qword ptr [rsi + 0x10], r8 ; ret
0x0000000000070c7a : mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x000000000007684b : mov qword ptr [rsi], rdi ; ret
0x00000000000f9670 : mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x00000000000789be : mov qword ptr [rsp + 0x10], r14 ; call qword ptr [rax]
0x0000000000078b04 : mov qword ptr [rsp + 0x18], r10 ; call rcx
0x00000000000f38c5 : mov qword ptr [rsp + 0x18], rax ; call 0x6fae7
0x0000000000078790 : mov qword ptr [rsp + 0x18], rcx ; call qword ptr [rax]
0x00000000000cc7c5 : mov qword ptr [rsp + 0x30], rdi ; add rax, rcx ; jmp rax
0x0000000000032fb0 : mov qword ptr [rsp + 0x80], r8 ; syscall
0x0000000000078b8b : mov qword ptr [rsp + 8], r8 ; call rdx
0x000000000010b5f9 : mov qword ptr [rsp + 8], rax ; call 0x118057
0x000000000007e2af : mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x000000000011833b : mov qword ptr [rsp + 8], rax ; xor eax, eax ; call rdx
0x0000000000022206 : mov qword ptr [rsp + 8], rcx ; call 0x7ec47
0x000000000006d45e : mov qword ptr [rsp + 8], rcx ; mov rdi, r15 ; call rax
0x0000000000078aaf : mov qword ptr [rsp + 8], rdx ; xor edi, edi ; call qword ptr [rax]
0x00000000000e8c97 : mov qword ptr [rsp - 0x30], r9 ; syscall
0x00000000001082e2 : mov qword ptr [rsp], rax ; mov dword ptr [rbp - 0x34], ecx ; call 0x845a9
0x00000000000db922 : mov qword ptr [rsp], rax ; mov eax, 0 ; syscall
0x00000000000e1062 : mov qword ptr [rsp], rax ; mov eax, 0x13 ; syscall
0x00000000000e9892 : mov qword ptr [rsp], rax ; mov eax, 0x130 ; syscall
0x00000000000e10c2 : mov qword ptr [rsp], rax ; mov eax, 0x14 ; syscall
0x00000000000e4762 : mov qword ptr [rsp], rax ; mov eax, 0x1a ; syscall
0x00000000000b8222 : mov qword ptr [rsp], rax ; mov eax, 0x22 ; syscall
0x00000000000b8282 : mov qword ptr [rsp], rax ; mov eax, 0x23 ; syscall
0x00000000000e9a32 : mov qword ptr [rsp], rax ; mov eax, 0x2a ; syscall
0x00000000000e99a2 : mov qword ptr [rsp], rax ; mov eax, 0x2b ; syscall
0x00000000000e17b2 : mov qword ptr [rsp], rax ; mov eax, 0x4a ; syscall
0x00000000000e1842 : mov qword ptr [rsp], rax ; mov eax, 0x4b ; syscall
0x00000000000dc092 : mov qword ptr [rsp], rax ; mov eax, 0x55 ; syscall
0x00000000000db982 : mov qword ptr [rsp], rax ; mov eax, 1 ; syscall
0x00000000000db702 : mov qword ptr [rsp], rax ; mov eax, 2 ; syscall
0x00000000000dbf42 : mov qword ptr [rsp], rax ; mov eax, 3 ; syscall
0x00000000000df8b2 : mov qword ptr [rsp], rax ; mov eax, 7 ; syscall
0x0000000000071fe2 : mov qword ptr [rsp], rcx ; mov rdi, rbx ; call rax
0x000000000007a542 : mov qword ptr [rsp], rdx ; call 0x76ff6
0x0000000000043c22 : mov qword ptr [rsp], rsi ; mov rbx, rdx ; call 0x80659
0x0000000000114ffe : mov qword ptr fs:[rax], rdx ; ret
0x0000000000035ea8 : mov qword ptr fs:[rbp], rdx ; call rax
0x000000000011504d : mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x000000000002c42b : mov qword ptr fs:[rdx], rax ; ret
0x0000000000083f95 : mov qword ptr ss:[rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x00000000000dc9e0 : mov r10, rcx ; mov eax, 0x104 ; syscall
0x0000000000064d70 : mov r10, rcx ; mov eax, 0x108 ; syscall
0x00000000000dcff0 : mov r10, rcx ; mov eax, 0x109 ; syscall
0x00000000000dd0b0 : mov r10, rcx ; mov eax, 0x10b ; syscall
0x00000000000d9ed9 : mov r10, rcx ; mov eax, 0x11 ; syscall
0x00000000000e95d9 : mov r10, rcx ; mov eax, 0x113 ; syscall
0x00000000000e9669 : mov r10, rcx ; mov eax, 0x114 ; syscall
0x00000000000e0399 : mov r10, rcx ; mov eax, 0x115 ; syscall
0x00000000000e9729 : mov r10, rcx ; mov eax, 0x116 ; syscall
0x00000000000e97b0 : mov r10, rcx ; mov eax, 0x11e ; syscall
0x00000000000d9f39 : mov r10, rcx ; mov eax, 0x12 ; syscall
0x00000000000e1109 : mov r10, rcx ; mov eax, 0x127 ; syscall
0x00000000000e1169 : mov r10, rcx ; mov eax, 0x128 ; syscall
0x00000000000e90f0 : mov r10, rcx ; mov eax, 0x12d ; syscall
0x00000000000e9020 : mov r10, rcx ; mov eax, 0x12e ; syscall
0x00000000000e9840 : mov r10, rcx ; mov eax, 0x12f ; syscall
0x00000000000e9900 : mov r10, rcx ; mov eax, 0x136 ; syscall
0x00000000000e9930 : mov r10, rcx ; mov eax, 0x137 ; syscall
0x00000000000e15d9 : mov r10, rcx ; mov eax, 0x17 ; syscall
0x00000000000e94b0 : mov r10, rcx ; mov eax, 0x19 ; syscall
0x00000000000dfc00 : mov r10, rcx ; mov eax, 0x28 ; syscall
0x00000000000e9e59 : mov r10, rcx ; mov eax, 0x2c ; syscall
0x00000000000e9bf9 : mov r10, rcx ; mov eax, 0x2d ; syscall
0x00000000000e9f40 : mov r10, rcx ; mov eax, 0x35 ; syscall
0x00000000000e9eb0 : mov r10, rcx ; mov eax, 0x36 ; syscall
0x00000000000e9ad0 : mov r10, rcx ; mov eax, 0x37 ; syscall
0x00000000000b80a0 : mov r10, rcx ; mov eax, 0x3d ; syscall
0x00000000000ea5e0 : mov r10, rcx ; mov eax, 0x42 ; syscall
0x00000000000ea469 : mov r10, rcx ; mov eax, 0x45 ; syscall
0x00000000000ea4c9 : mov r10, rcx ; mov eax, 0x46 ; syscall
0x00000000000e9540 : mov r10, rcx ; mov eax, 0x9d ; syscall
0x00000000000e9480 : mov r10, rcx ; mov eax, 0xa5 ; syscall
0x00000000000e9360 : mov r10, rcx ; mov eax, 0xaf ; syscall
0x00000000000e9570 : mov r10, rcx ; mov eax, 0xb2 ; syscall
0x00000000000e95a0 : mov r10, rcx ; mov eax, 0xb3 ; syscall
0x000000000011c430 : mov r10, rcx ; mov eax, 0xb5 ; syscall
0x000000000011c480 : mov r10, rcx ; mov eax, 0xb6 ; syscall
0x00000000000e7670 : mov r10, rcx ; mov eax, 0xbc ; syscall
0x00000000000e7610 : mov r10, rcx ; mov eax, 0xbd ; syscall
0x00000000000e74f0 : mov r10, rcx ; mov eax, 0xbe ; syscall
0x00000000000e7520 : mov r10, rcx ; mov eax, 0xbf ; syscall
0x00000000000e7580 : mov r10, rcx ; mov eax, 0xc0 ; syscall
0x00000000000e7460 : mov r10, rcx ; mov eax, 0xc1 ; syscall
0x00000000000e4800 : mov r10, rcx ; mov eax, 0xd8 ; syscall
0x00000000000ea610 : mov r10, rcx ; mov eax, 0xdc ; syscall
0x00000000000f5c84 : mov r10, rcx ; mov eax, 0xe6 ; syscall
0x00000000000e92d9 : mov r10, rcx ; mov eax, 0xe8 ; syscall
0x00000000000e92a0 : mov r10, rcx ; mov eax, 0xe9 ; syscall
0x00000000000f5ce2 : mov r10, rcx ; syscall
0x00000000001335e6 : mov r10d, 0x46f00ff2 ; retf 0xff3
0x000000000012e3e1 : mov r10d, 0x4f7f0ff3 ; retf -0x76b4
0x0000000000033154 : mov r10d, 8 ; mov eax, ecx ; syscall
0x0000000000133666 : mov r11d, 0x46f00ff2 ; retf
0x000000000012e1e1 : mov r11d, 0x4f7f0ff3 ; retf
0x0000000000076d57 : mov r12, rsi ; xor edi, edi ; mov r13, rdx ; call qword ptr [r14]
0x00000000000e06e5 : mov r12d, dword ptr [r8] ; syscall
0x00000000000e06e4 : mov r12d, dword ptr fs:[r8] ; syscall
0x000000000005c77a : mov r13, r12 ; jmp 0x59238
0x000000000005a0f0 : mov r13, r8 ; jmp 0x56b3b
0x0000000000076d5c : mov r13, rdx ; call qword ptr [r14]
0x00000000000dfa61 : mov r13d, edi ; call 0xdbd65
0x00000000000805db : mov r14, rsp ; call 0x2c8c5
0x00000000000aeac2 : mov r14d, 0x7fffffff ; jmp 0xaea9c
0x000000000005333c : mov r15d, 1 ; jmp rax
0x00000000000524c8 : mov r15d, 1 ; xor esi, esi ; jmp rax
0x00000000000e5bb3 : mov r15d, r14d ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000000e445f : mov r8, r9 ; mov r9, qword ptr [rsp + 8] ; syscall
0x00000000000484ea : mov r8d, 1 ; jmp rax
0x00000000000b38ac : mov r8d, dword ptr [rsi] ; syscall
0x00000000000b38ab : mov r8d, dword ptr fs:[rsi] ; syscall
0x00000000000fc1ed : mov r8d, r13d ; call 0x108ce5
0x00000000000e4462 : mov r9, qword ptr [rsp + 8] ; syscall
0x00000000000210e2 : mov r9, r14 ; call rbx
0x0000000000032f26 : mov rax, -1 ; ret
0x0000000000033060 : mov rax, 0xf ; syscall
0x000000000009a490 : mov rax, 1 ; ret
0x000000000009a4a0 : mov rax, 2 ; ret
0x000000000009a4b0 : mov rax, 3 ; ret
0x000000000009a4c0 : mov rax, 4 ; ret
0x000000000009a4d0 : mov rax, 5 ; ret
0x000000000009a4e0 : mov rax, 6 ; ret
0x000000000009a4f0 : mov rax, 7 ; ret
0x00000000000e7700 : mov rax, qword ptr [rax + 0x110] ; ret
0x000000000011f28e : mov rax, qword ptr [rax + 0x130] ; jmp rax
0x00000000000eb27f : mov rax, qword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x00000000000eb2d7 : mov rax, qword ptr [rax + 0x18] ; add word ptr [rax], 1 ; ret
0x000000000006dc02 : mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00000000000f4e08 : mov rax, qword ptr [rax + 0x30] ; ret
0x0000000000112b93 : mov rax, qword ptr [rax + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000006e3d3 : mov rax, qword ptr [rax + 0x4c] ; ret
0x0000000000113473 : mov rax, qword ptr [rax + 0x50] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000e76f8 : mov rax, qword ptr [rax + 0x58] ; ret
0x00000000000e76d9 : mov rax, qword ptr [rax + 8] ; ret
0x0000000000029ae1 : mov rax, qword ptr [rax + r15*8] ; test rax, rax ; je 0x29af5 ; call rax
0x0000000000029957 : mov rax, qword ptr [rax + rbp*8] ; test rax, rax ; je 0x2996b ; call rax
0x000000000002c1a4 : mov rax, qword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002bcae : mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000002b25b : mov rax, qword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; ret
0x0000000000035fc2 : mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x0000000000107d38 : mov rax, qword ptr [rax] ; ret
0x00000000000770aa : mov rax, qword ptr [rax] ; test rax, rax ; je 0x770bc ; call rax
0x000000000007c0b5 : mov rax, qword ptr [rax] ; test rax, rax ; je 0x7c0c7 ; call rax
0x00000000000e5bb6 : mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000000d4f84 : mov rax, qword ptr [rbp - 0x88] ; call rax
0x000000000007476c : mov rax, qword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x00000000000708c0 : mov rax, qword ptr [rbx + 0x20] ; mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x0000000000074ca8 : mov rax, qword ptr [rbx + 0x40] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x0000000000115019 : mov rax, qword ptr [rbx] ; test rax, rax ; je 0x115031 ; pop rbx ; ret
0x000000000013c7a0 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x00000000000b84ac : mov rax, qword ptr [rdi + 0x10] ; test rax, rax ; je 0xb84c3 ; call rax
0x0000000000118232 : mov rax, qword ptr [rdi + 0x18] ; ret
0x0000000000117e60 : mov rax, qword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000b3e90 : mov rax, qword ptr [rdi + 0x20] ; ret
0x00000000001499e7 : mov rax, qword ptr [rdi + 0x20] ; test rax, rax ; je 0x149a00 ; call rax
0x000000000010c206 : mov rax, qword ptr [rdi + 0x28] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000070900 : mov rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x000000000010c23e : mov rax, qword ptr [rdi + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000707f0 : mov rax, qword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x000000000006e3d0 : mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x0000000000075eb0 : mov rax, qword ptr [rdi + 0x68] ; ret
0x0000000000117315 : mov rax, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x000000000010cec0 : mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x0000000000117408 : mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000010ae96 : mov rax, qword ptr [rdi + 8] ; push 0 ; push 0x19 ; call qword ptr [rax]
0x0000000000075bee : mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x00000000000f55d4 : mov rax, qword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x000000000002c142 : mov rax, qword ptr [rdx + rax*4 + 0x200] ; ret
0x000000000002b21c : mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x00000000000cf817 : mov rax, qword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x0000000000075be0 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x75be1 ; ret
0x000000000011ccd3 : mov rax, qword ptr [rip + 0x27d716] ; call qword ptr [rax]
0x000000000011c6a6 : mov rax, qword ptr [rip + 0x27dd43] ; call qword ptr [rax]
0x00000000001017d0 : mov rax, qword ptr [rip + 0x299081] ; ret
0x0000000000078bb0 : mov rax, qword ptr [rip + 0x320211] ; xor edi, edi ; call qword ptr [rax]
0x0000000000075e90 : mov rax, qword ptr [rip + 0x324669] ; ret
0x00000000000289a0 : mov rax, qword ptr [rip + 0x371f29] ; ret
0x00000000000212d0 : mov rax, qword ptr [rip + 0x37d039] ; ret
0x00000000000212c0 : mov rax, qword ptr [rip + 0x37d059] ; ret
0x000000000002b238 : mov rax, qword ptr [rsi + rax*8 + 0x80] ; ret
0x000000000011ee3d : mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000000202da : mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000024fe1 : mov rax, qword ptr [rsp + 0x20] ; call rax
0x00000000000368e8 : mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000a858e : mov rax, qword ptr [rsp + 8] ; call rax
0x000000000007133d : mov rax, qword ptr [rsp + 8] ; jmp 0x71315
0x00000000000e1e9f : mov rax, qword ptr [rsp - 0x50] ; ret
0x00000000000eb982 : mov rax, qword ptr [rsp] ; add rsp, 0x38 ; ret
0x00000000000eb9e3 : mov rax, qword ptr [rsp] ; add rsp, 0x40 ; ret
0x0000000000107d37 : mov rax, qword ptr fs:[rax] ; ret
0x0000000000082b30 : mov rax, r10 ; pop rbx ; ret
0x0000000000089329 : mov rax, r11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000070df6 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007ab7b : mov rax, r8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000001fb05 : mov rax, rbp ; cmp r9, rax ; je 0x1fab2 ; jmp 0x1fadb
0x00000000000e57bd : mov rax, rbp ; pop rbp ; pop r12 ; jmp rax
0x0000000000072cd3 : mov rax, rbp ; pop rbp ; pop r12 ; ret
0x0000000000070d66 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002c950 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000064639 : mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000000d623d : mov rax, rbx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000009a7bf : mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000b46dc : mov rax, rbx ; call rax
0x00000000000e72ce : mov rax, rbx ; mov byte ptr [rdx], 0 ; pop rbx ; ret
0x000000000008b595 : mov rax, rbx ; pop rbx ; cmovne rax, rdx ; ret
0x0000000000067b38 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000029293 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000030357 : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000003634e : mov rax, rbx ; pop rbx ; ret
0x00000000000e4f79 : mov rax, rbx ; pop rdx ; pop rbx ; ret
0x00000000000319f6 : mov rax, rcx ; ret
0x000000000002c855 : mov rax, rdi ; add rsp, 0x18 ; ret
0x0000000000035f40 : mov rax, rdi ; cqo ; idiv rsi ; ret
0x000000000009aeeb : mov rax, rdi ; jne 0x9af03 ; ret
0x00000000000e300e : mov rax, rdi ; mov byte ptr [r8 - 1], 0 ; ret
0x000000000008ed86 : mov rax, rdi ; mov byte ptr [rdi + 6], 0 ; ret
0x000000000006a292 : mov rax, rdi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000076c73 : mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002c875 : mov rax, rdi ; ret
0x00000000000f9399 : mov rax, rdi ; sar rax, 6 ; ret
0x00000000000a7f67 : mov rax, rdx ; add rsp, 0x18 ; ret
0x0000000000076ee3 : mov rax, rdx ; add rsp, 8 ; ret
0x000000000007a7ef : mov rax, rdx ; pop r14 ; pop r15 ; ret
0x000000000006745c : mov rax, rdx ; pop rbp ; pop r12 ; ret
0x000000000007a79a : mov rax, rdx ; pop rbx ; pop r14 ; pop r15 ; ret
0x00000000000b3b3a : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000b384c : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007afcc : mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000042e34 : mov rax, rdx ; pop rbx ; ret
0x0000000000042315 : mov rax, rdx ; ret
0x00000000000b4d14 : mov rax, rsi ; add rsp, 8 ; ret
0x0000000000043fe9 : mov rax, rsi ; cmovae rax, rdi ; ret
0x00000000000f7862 : mov rax, rsi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000035b23 : mov rax, rsi ; pop rbx ; pop rbp ; ret
0x000000000006954e : mov rax, rsi ; pop rbx ; ret
0x0000000000043ff1 : mov rax, rsi ; ret
0x00000000000b414c : mov rbp, r13 ; mov rdi, rbx ; call r12
0x0000000000032e4b : mov rbp, r9 ; jmp rdx
0x000000000008abc3 : mov rbp, rdx ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000000f8db1 : mov rbp, rsp ; call 0x75055
0x00000000000f5d03 : mov rbp, rsp ; pop rbp ; ret
0x000000000002da28 : mov rbx, qword ptr [rbp - 0x98] ; call 0x8a509
0x00000000000b89e5 : mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x000000000010caca : mov rbx, rax ; jne 0x10ca6a ; xor eax, eax ; pop rbx ; ret
0x00000000000f7d5e : mov rbx, rax ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000e0bfe : mov rbx, rax ; mov rax, rbx ; pop rbx ; ret
0x000000000003f3ae : mov rbx, rdi ; syscall
0x000000000002aa55 : mov rbx, rdi ; test rax, rax ; je 0x2aa67 ; call rax
0x0000000000043c26 : mov rbx, rdx ; call 0x80655
0x00000000000b3f22 : mov rbx, rsi ; sub rsp, 8 ; syscall
0x0000000000021ad3 : mov rcx, qword ptr [rbp - 0x60] ; call rcx
0x000000000010a226 : mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x00000000000b7f33 : mov rcx, qword ptr [rdi + 0x18] ; mov qword ptr [rdi + 0x18], rcx ; ret
0x0000000000094550 : mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00000000001108b4 : mov rcx, qword ptr [rsp + 0x28] ; call rcx
0x000000000011069a : mov rcx, qword ptr [rsp + 0x30] ; call rcx
0x00000000001137c8 : mov rcx, qword ptr [rsp + 8] ; call rcx
0x000000000010be32 : mov rcx, qword ptr [rsp] ; call rcx
0x000000000006e6f3 : mov rcx, r13 ; mov rdi, r15 ; xor r8d, r8d ; call rbx
0x0000000000108eb2 : mov rcx, r14 ; mov rdi, r13 ; call r12
0x000000000008e8d5 : mov rcx, rax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x0000000000083f71 : mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000108fd2 : mov rcx, rdx ; xor edx, edx ; call rax
0x00000000000c2e6f : mov rdi, qword ptr [r12 + 0x10] ; call 0x1f93f
0x00000000000c2e87 : mov rdi, qword ptr [r13 + 0x18] ; call 0x1f93e
0x00000000000c2ea2 : mov rdi, qword ptr [r13 + 8] ; call 0x1f93e
0x00000000000c2f28 : mov rdi, qword ptr [rax + rbx + 0x18] ; call 0x1f93f
0x00000000000a77c3 : mov rdi, qword ptr [rax] ; call r14
0x00000000000bb077 : mov rdi, qword ptr [rbp - 0x318] ; call rbx
0x0000000000022e79 : mov rdi, qword ptr [rbp - 0x48] ; call 0x1f93e
0x000000000004fe8b : mov rdi, qword ptr [rbp - 0x4a0] ; call rax
0x000000000005f973 : mov rdi, qword ptr [rbp - 0x548] ; call 0x6bc59
0x00000000000d4a7b : mov rdi, qword ptr [rbp - 0xb8] ; call r14
0x00000000000b36c2 : mov rdi, qword ptr [rbx + 0x18] ; call 0x1f93e
0x00000000000b36cb : mov rdi, qword ptr [rbx + 0x20] ; call 0x1f93e
0x00000000000b36ba : mov rdi, qword ptr [rbx] ; call 0x1f93d
0x0000000000041bc9 : mov rdi, qword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x0000000000067655 : mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x0000000000067619 : mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x000000000002a6e7 : mov rdi, qword ptr [rdi] ; syscall
0x00000000000f3e63 : mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x00000000000c2e99 : mov rdi, qword ptr [rdx + 8] ; call 0x1f93e
0x0000000000149ca0 : mov rdi, qword ptr [rip + 0x250f59] ; call 0xe5fa9
0x00000000000233db : mov rdi, qword ptr [rsp + 0x20] ; call r15
0x0000000000023b8f : mov rdi, qword ptr [rsp + 0x30] ; call r14
0x0000000000024480 : mov rdi, qword ptr [rsp + 0x30] ; call r15
0x0000000000023d7b : mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000023961 : mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000023822 : mov rdi, qword ptr [rsp + 0x38] ; call r15
0x00000000000253de : mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000027243 : mov rdi, qword ptr [rsp + 0x48] ; call r14
0x00000000000247ab : mov rdi, qword ptr [rsp + 0x48] ; call r15
0x0000000000033f1d : mov rdi, qword ptr [rsp + 8] ; mov eax, ecx ; syscall
0x00000000000e6d82 : mov rdi, qword ptr [rsp + 8] ; xor eax, eax ; syscall
0x0000000000074795 : mov rdi, qword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000033dc4 : mov rdi, qword ptr [rsp] ; mov eax, ecx ; syscall
0x00000000000e9303 : mov rdi, qword ptr [rsp] ; mov rdx, rax ; call 0xf5569
0x00000000000e06df : mov rdi, r10 ; mov eax, ebx ; mov r12d, dword ptr fs:[r8] ; syscall
0x00000000000facd9 : mov rdi, r12 ; call 0x107785
0x00000000000c2e79 : mov rdi, r12 ; call 0x1f93d
0x000000000003712f : mov rdi, r12 ; call 0x43c05
0x000000000007bba5 : mov rdi, r12 ; call rax
0x000000000006e448 : mov rdi, r12 ; call rbx
0x00000000000ea8e0 : mov rdi, r12 ; mov eax, 0x14 ; syscall
0x00000000000ea79d : mov rdi, r12 ; mov eax, 1 ; syscall
0x00000000000eaa7c : mov rdi, r12 ; mov eax, 3 ; syscall
0x00000000000e4640 : mov rdi, r12 ; mov eax, 9 ; syscall
0x00000000000eaa44 : mov rdi, r12 ; mov eax, ebx ; syscall
0x0000000000021ad0 : mov rdi, r12 ; mov rcx, qword ptr [rbp - 0x60] ; call rcx
0x00000000001108b1 : mov rdi, r12 ; mov rcx, qword ptr [rsp + 0x28] ; call rcx
0x0000000000110697 : mov rdi, r12 ; mov rcx, qword ptr [rsp + 0x30] ; call rcx
0x00000000000c2eab : mov rdi, r13 ; add r14, 8 ; call 0x1f941
0x00000000000f3670 : mov rdi, r13 ; call 0xf00b5
0x00000000001006dd : mov rdi, r13 ; call r12
0x000000000007dbfe : mov rdi, r13 ; call rax
0x000000000005f19b : mov rdi, r14 ; call 0x6bc55
0x00000000000f2fe4 : mov rdi, r14 ; call 0xefae5
0x000000000002d148 : mov rdi, r14 ; call rax
0x000000000002a783 : mov rdi, r14 ; mov eax, 3 ; syscall
0x000000000002a9ad : mov rdi, r14 ; mov eax, r10d ; syscall
0x0000000000070af6 : mov rdi, r14 ; mov eax, r9d ; syscall
0x00000000000789bb : mov rdi, r14 ; mov qword ptr [rsp + 0x10], r14 ; call qword ptr [rax]
0x000000000002a969 : mov rdi, r14 ; xor eax, eax ; syscall
0x000000000007a476 : mov rdi, r15 ; call 0x766c5
0x0000000000022221 : mov rdi, r15 ; call 0x7ec45
0x00000000000f3652 : mov rdi, r15 ; call 0xf00b5
0x00000000001157ff : mov rdi, r15 ; call qword ptr [rax]
0x00000000001170ed : mov rdi, r15 ; call r14
0x000000000006d463 : mov rdi, r15 ; call rax
0x00000000000dc190 : mov rdi, r15 ; mov eax, 0x4f ; syscall
0x000000000011d25c : mov rdi, r15 ; mov eax, 1 ; syscall
0x0000000000031b25 : mov rdi, r15 ; mov eax, 2 ; syscall
0x000000000011d2b6 : mov rdi, r15 ; mov eax, 3 ; syscall
0x000000000007db12 : mov rdi, r15 ; mov rdx, rbx ; mov rsi, r13 ; call rax
0x000000000006e6f6 : mov rdi, r15 ; xor r8d, r8d ; call rbx
0x00000000000e1b32 : mov rdi, r8 ; mov eax, 1 ; syscall
0x000000000001fad2 : mov rdi, r8 ; mov eax, 3 ; syscall
0x000000000011c7f0 : mov rdi, r8 ; mov eax, ebx ; syscall
0x00000000000e7373 : mov rdi, r8 ; mov eax, esi ; syscall
0x000000000002eccd : mov rdi, r8 ; mov eax, r10d ; syscall
0x000000000001fab1 : mov rdi, r8 ; mov eax, r13d ; syscall
0x000000000003344f : mov rdi, r8 ; mov eax, r9d ; syscall
0x00000000000e7355 : mov rdi, r8 ; xor eax, eax ; mov rsi, rbp ; syscall
0x00000000000e1935 : mov rdi, r8 ; xor eax, eax ; syscall
0x000000000007e2fd : mov rdi, r9 ; call rcx
0x00000000000781bd : mov rdi, r9 ; mov eax, 3 ; syscall
0x0000000000078191 : mov rdi, r9 ; mov eax, r8d ; syscall
0x000000000011442c : mov rdi, rax ; call qword ptr [r10]
0x0000000000032fc3 : mov rdi, rax ; mov eax, 0xba ; syscall
0x000000000010a223 : mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x00000000000e6ca6 : mov rdi, rax ; sub rdx, rsi ; xor eax, eax ; syscall
0x000000000014966f : mov rdi, rbp ; add rdi, qword ptr [r13 + 0x10] ; call rbx
0x000000000010b5c9 : mov rdi, rbp ; call 0x118055
0x0000000000082817 : mov rdi, rbp ; call 0x4f245
0x000000000010cb6d : mov rdi, rbp ; call qword ptr [rbx]
0x00000000000c1798 : mov rdi, rbp ; call r12
0x000000000010a9fc : mov rdi, rbp ; call r14
0x000000000002039f : mov rdi, rbp ; call rax
0x000000000009b755 : mov rdi, rbp ; call rbx
0x0000000000118070 : mov rdi, rbp ; call rcx
0x000000000010c724 : mov rdi, rbp ; call rdx
0x000000000010b3e4 : mov rdi, rbp ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000010b225 : mov rdi, rbp ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x0000000000028a61 : mov rdi, rbp ; mov eax, 3 ; syscall
0x00000000001137c5 : mov rdi, rbp ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x0000000000076d71 : mov rdi, rbp ; neg rdi ; call qword ptr [r14]
0x0000000000113663 : mov rdi, rbp ; pop rbx ; pop rbp ; jmp 0x1f93f
0x000000000011718c : mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x00000000000a8156 : mov rdi, rbp ; sub rsp, 8 ; call r12
0x000000000010c07c : mov rdi, rbp ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x000000000010bdcf : mov rdi, rbx ; call 0x118035
0x00000000000e36d8 : mov rdi, rbx ; call 0x1f93d
0x00000000000b42c5 : mov rdi, rbx ; call 0x20515
0x00000000000ba864 : mov rdi, rbx ; call qword ptr [r15]
0x000000000010cf97 : mov rdi, rbx ; call qword ptr [rax]
0x0000000000028956 : mov rdi, rbx ; call r12
0x000000000002146d : mov rdi, rbx ; call r14
0x0000000000066470 : mov rdi, rbx ; call r8
0x00000000000660c7 : mov rdi, rbx ; call rax
0x0000000000149b5a : mov rdi, rbx ; jne 0x149b51 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000df977 : mov rdi, rbx ; mov eax, 0x10f ; syscall
0x00000000000db1d4 : mov rdi, rbx ; mov eax, 0x135 ; syscall
0x00000000000333cc : mov rdi, rbx ; mov eax, 0x82 ; syscall
0x000000000001fa11 : mov rdi, rbx ; mov eax, 1 ; syscall
0x0000000000031bec : mov rdi, rbx ; mov eax, 3 ; syscall
0x000000000001fae9 : mov rdi, rbx ; mov eax, r12d ; syscall
0x000000000011ee3a : mov rdi, rbx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x000000000010be2f : mov rdi, rbx ; mov rcx, qword ptr [rsp] ; call rcx
0x00000000000b36d4 : mov rdi, rbx ; pop rbx ; jmp 0x1f93e
0x0000000000069224 : mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000006b97e : mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000000727b9 : mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000007d668 : mov rdi, rcx ; call rax
0x000000000002a8ce : mov rdi, rcx ; syscall
0x00000000000f55d7 : mov rdi, rdx ; jmp rax
0x000000000011d425 : mov rdi, rdx ; mov eax, 2 ; syscall
0x000000000011ddd2 : mov rdi, rdx ; mov eax, ebx ; syscall
0x00000000000b8600 : mov rdi, rdx ; mov eax, esi ; syscall
0x00000000000b8610 : mov rdi, rdx ; mov eax, r8d ; syscall
0x0000000000079c99 : mov rdi, rdx ; pop rbx ; pop rbp ; jmp 0x766c7
0x00000000000dac27 : mov rdi, rdx ; syscall
0x000000000010a315 : mov rdi, rsp ; call rax
0x00000000001171f0 : mov rdi, rsp ; call rdx
0x00000000000eab99 : mov rdi, rsp ; mov eax, 2 ; syscall
0x00000000000d4207 : mov rdx, qword ptr [r12] ; mov rsi, rbx ; call r14
0x00000000000f5819 : mov rdx, qword ptr [r9] ; test rdx, rdx ; jne 0xf5819 ; ret
0x0000000000070894 : mov rdx, qword ptr [rax + 0x18] ; mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x00000000000b843b : mov rdx, qword ptr [rax + 0x18] ; test rdx, rdx ; je 0xb8452 ; call rdx
0x00000000001498cf : mov rdx, qword ptr [rax + rbp*8] ; test rdx, rdx ; je 0x1498e3 ; call rdx
0x00000000000202d7 : mov rdx, qword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000012d9f0 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000094540 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000000f43dd : mov rdx, r12 ; call rax
0x00000000000b8137 : mov rdx, r12 ; mov eax, 0xf7 ; syscall
0x000000000007d665 : mov rdx, r12 ; mov rdi, rcx ; call rax
0x00000000000f427e : mov rdx, r13 ; call rax
0x000000000009b891 : mov rdx, r13 ; mov rdi, rbp ; call rbx
0x000000000010d9ca : mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000000f437f : mov rdx, r14 ; call rax
0x000000000009bb51 : mov rdx, r14 ; mov rdi, rbp ; call rbx
0x000000000007a514 : mov rdx, r15 ; call 0x76f25
0x00000000000fdade : mov rdx, r15 ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x000000000002a966 : mov rdx, r8 ; mov rdi, r14 ; xor eax, eax ; syscall
0x00000000000e9307 : mov rdx, rax ; call 0xf5565
0x00000000000f09b2 : mov rdx, rax ; jmp rcx
0x000000000010611f : mov rdx, rax ; mov byte ptr [rdx], 0 ; ret
0x00000000000db386 : mov rdx, rax ; mov eax, 0x85 ; syscall
0x00000000000e0456 : mov rdx, rbp ; mov eax, 0x11d ; syscall
0x00000000000f44a6 : mov rdx, rbx ; call rax
0x0000000000149ff6 : mov rdx, rbx ; jne 0x149fef ; pop rbx ; ret
0x000000000003712c : mov rdx, rbx ; mov rdi, r12 ; call 0x43c08
0x000000000010d8c5 : mov rdx, rbx ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x000000000007db15 : mov rdx, rbx ; mov rsi, r13 ; call rax
0x000000000007dcf1 : mov rdx, rbx ; mov rsi, r13 ; mov rdi, r12 ; call rax
0x0000000000072832 : mov rdx, rbx ; mov rsi, rbp ; mov eax, r13d ; syscall
0x0000000000112893 : mov rdx, rbx ; xor eax, eax ; call 0x4f367
0x00000000000db441 : mov rdx, rcx ; mov eax, 0x106 ; syscall
0x0000000000084337 : mov rdx, rdi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x00000000000dfbbf : mov rdx, rsi ; xor esi, esi ; syscall
0x0000000000033fd9 : mov rdx, rsp ; mov eax, 0x81 ; syscall
0x00000000000e0805 : mov rdx, rsp ; syscall
0x000000000005d536 : mov rsi, qword ptr [rip + 0x33ba33] ; call rax
0x000000000005548e : mov rsi, qword ptr [rip + 0x343adb] ; call rax
0x0000000000054e52 : mov rsi, qword ptr [rip + 0x344117] ; call rax
0x000000000005229e : mov rsi, qword ptr [rip + 0x346ccb] ; call rax
0x0000000000049dea : mov rsi, qword ptr [rip + 0x34f17f] ; call rax
0x0000000000046fbe : mov rsi, qword ptr [rip + 0x351fab] ; call rax
0x0000000000041ef9 : mov rsi, qword ptr [rsi + 0x70] ; xor eax, eax ; ret
0x000000000010a9f7 : mov rsi, qword ptr [rsp + 0x10] ; mov rdi, rbp ; call r14
0x00000000000210dd : mov rsi, qword ptr [rsp + 0x18] ; mov r9, r14 ; call rbx
0x000000000007bba0 : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, r12 ; call rax
0x00000000000f0e80 : mov rsi, qword ptr [rsp + 8] ; call rax
0x00000000001006d8 : mov rsi, qword ptr [rsp + 8] ; mov rdi, r13 ; call r12
0x000000000007b598 : mov rsi, qword ptr [rsp] ; jmp rax
0x00000000000eaa41 : mov rsi, r10 ; mov rdi, r12 ; mov eax, ebx ; syscall
0x000000000001faae : mov rsi, r10 ; mov rdi, r8 ; mov eax, r13d ; syscall
0x00000000000dab55 : mov rsi, r10 ; mov rdi, r9 ; mov eax, r8d ; syscall
0x000000000001fae6 : mov rsi, r10 ; mov rdi, rbx ; mov eax, r12d ; syscall
0x00000000000db83d : mov rsi, r12 ; mov eax, 0x101 ; syscall
0x00000000000e16d2 : mov rsi, r12 ; mov eax, 0x10e ; syscall
0x00000000000b8040 : mov rsi, r12 ; mov eax, 0x3d ; syscall
0x000000000011c7ed : mov rsi, r12 ; mov rdi, r8 ; mov eax, ebx ; syscall
0x000000000010d8c8 : mov rsi, r12 ; mov rdi, rbp ; call rax
0x000000000007db18 : mov rsi, r13 ; call rax
0x00000000000ea1fd : mov rsi, r13 ; mov eax, 0x120 ; syscall
0x00000000000ea355 : mov rsi, r13 ; mov eax, 0x133 ; syscall
0x000000000007dcf4 : mov rsi, r13 ; mov rdi, r12 ; call rax
0x0000000000070af3 : mov rsi, r13 ; mov rdi, r14 ; mov eax, r9d ; syscall
0x00000000000f04c3 : mov rsi, r13 ; mov rdi, rbx ; call r14
0x00000000000ffe61 : mov rsi, r14 ; call 0x2c8c5
0x0000000000077c9c : mov rsi, r14 ; call 0xe47a5
0x00000000000ea2ac : mov rsi, r14 ; mov eax, 0x12b ; syscall
0x00000000000e9d65 : mov rsi, r14 ; mov eax, 0x2c ; syscall
0x00000000000e9ba5 : mov rsi, r14 ; mov eax, 0x2d ; syscall
0x00000000000fdae1 : mov rsi, r14 ; mov rdi, r13 ; call rax
0x000000000007a473 : mov rsi, r14 ; mov rdi, r15 ; call 0x766c8
0x00000000000e8f1d : mov rsi, r15 ; mov eax, 0x119 ; syscall
0x000000000011d68c : mov rsi, r15 ; mov eax, r14d ; syscall
0x0000000000044d0b : mov rsi, r15 ; mov rdi, r14 ; call rax
0x00000000000db3e7 : mov rsi, r9 ; mov eax, 0x103 ; syscall
0x0000000000068aa0 : mov rsi, r9 ; mov eax, r8d ; syscall
0x000000000002a9aa : mov rsi, r9 ; mov rdi, r14 ; mov eax, r10d ; syscall
0x000000000011ed3e : mov rsi, rax ; shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00000000000e9e06 : mov rsi, rbp ; mov eax, 0x2e ; syscall
0x00000000000e9ca6 : mov rsi, rbp ; mov eax, 0x2f ; syscall
0x000000000011df4a : mov rsi, rbp ; mov eax, 1 ; syscall
0x00000000000f5bd8 : mov rsi, rbp ; mov eax, ecx ; syscall
0x0000000000072835 : mov rsi, rbp ; mov eax, r13d ; syscall
0x00000000000b9cdd : mov rsi, rbp ; mov rdi, r8 ; mov eax, r9d ; syscall
0x000000000007d4fa : mov rsi, rbp ; mov rdi, rbx ; call rax
0x00000000000e735a : mov rsi, rbp ; syscall
0x00000000000d420b : mov rsi, rbx ; call r14
0x0000000000033d20 : mov rsi, rbx ; mov eax, ecx ; syscall
0x000000000011db8a : mov rsi, rbx ; mov eax, r15d ; syscall
0x000000000011dc40 : mov rsi, rbx ; mov eax, r8d ; syscall
0x0000000000033dc1 : mov rsi, rbx ; mov rdi, qword ptr [rsp] ; mov eax, ecx ; syscall
0x000000000007dbfb : mov rsi, rbx ; mov rdi, r13 ; call rax
0x000000000002221e : mov rsi, rbx ; mov rdi, r15 ; call 0x7ec48
0x00000000001157fc : mov rsi, rbx ; mov rdi, r15 ; call qword ptr [rax]
0x00000000001170ea : mov rsi, rbx ; mov rdi, r15 ; call r14
0x000000000002ecca : mov rsi, rbx ; mov rdi, r8 ; mov eax, r10d ; syscall
0x0000000000114429 : mov rsi, rbx ; mov rdi, rax ; call qword ptr [r10]
0x000000000010b5c6 : mov rsi, rbx ; mov rdi, rbp ; call 0x118058
0x00000000000c1795 : mov rsi, rbx ; mov rdi, rbp ; call r12
0x000000000011806d : mov rsi, rbx ; mov rdi, rbp ; call rcx
0x00000000000b2e32 : mov rsi, rdi ; xor edi, edi ; call rax
0x0000000000110ef9 : mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x00000000000f3e67 : mov rsi, rdx ; call rax
0x00000000000db28b : mov rsi, rdx ; mov eax, 4 ; syscall
0x00000000000db32b : mov rsi, rdx ; mov eax, 6 ; syscall
0x00000000000db2dd : mov rsi, rdx ; syscall
0x000000000011740c : mov rsi, rsp ; call qword ptr [rax]
0x000000000010cf94 : mov rsi, rsp ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000032e48 : mov rsp, r8 ; mov rbp, r9 ; jmp rdx
0x00000000000b89e2 : mov rsp, rbx ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00000000000c163d : mov ss, word ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x63], cl ; ret
0x0000000000146585 : mov word ptr [r9 - 2], cx ; ret
0x000000000003e1e7 : mov word ptr [rax + rdx*2], fs ; sbb eax, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; retf -0x7cf1
0x000000000010b9bd : mov word ptr [rax + rsi + 0x75000001], ss ; ret
0x0000000000188a94 : mov word ptr [rax - 0x1527ffff], es ; idiv bh ; retf
0x0000000000094d40 : mov word ptr [rax], cs ; add byte ptr [rax], al ; ret
0x0000000000174294 : mov word ptr [rax], dr1 ; add byte ptr [rax], al ; clc ; xor ebp, esp ; call qword ptr [rax]
0x00000000000e0df6 : mov word ptr [rax], es ; add byte ptr [rax], al ; syscall
0x000000000016bdbc : mov word ptr [rbp + 0x35d40000], fs ; out dx, al ; call rsp
0x00000000000e33df : mov word ptr [rbx], gs ; add byte ptr [rax - 0x76b7ffc8], al ; ret
0x000000000013e832 : mov word ptr [rcx + 4], dx ; ret
0x000000000013e873 : mov word ptr [rcx + 8], dx ; ret
0x0000000000182e94 : mov word ptr [rcx + rax], fs ; add al, bh ; test esi, ebp ; jmp qword ptr [rcx]
0x000000000013e800 : mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x000000000013e7f0 : mov word ptr [rcx], dx ; ret
0x0000000000095c5c : mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x0000000000096aac : mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000945ec : mov word ptr [rdi + 0x10], cx ; ret
0x000000000009851c : mov word ptr [rdi + 0x10], cx ; xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x0000000000095d64 : mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x0000000000096bb4 : mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x00000000000946d4 : mov word ptr [rdi + 0x18], cx ; ret
0x0000000000098624 : mov word ptr [rdi + 0x18], cx ; xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x0000000000133eb7 : mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x0000000000036c22 : mov word ptr [rdi + 2], dx ; ret
0x000000000008ee12 : mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 5] ; ret
0x0000000000096958 : mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000008ed12 : mov word ptr [rdi + 4], dx ; mov rax, rdi ; ret
0x0000000000094528 : mov word ptr [rdi + 4], dx ; ret
0x00000000000983c8 : mov word ptr [rdi + 4], dx ; xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000969ba : mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x0000000000095b7a : mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000009456a : mov word ptr [rdi + 8], dx ; ret
0x000000000009842a : mov word ptr [rdi + 8], dx ; xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x000000000008442a : mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], cx ; ret
0x0000000000083fb4 : mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x0000000000179994 : mov word ptr [rdi - 0x3cd80000], cs ; out dx, eax ; jmp qword ptr [rdx]
0x000000000017b994 : mov word ptr [rdi - 0x43b80000], gs ; cli ; call qword ptr [rax]
0x000000000012df8c : mov word ptr [rdi - 2], cx ; ret
0x000000000012dda4 : mov word ptr [rdi - 2], dx ; ret
0x000000000012df88 : mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x00000000000944f3 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000000951c6 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; ret
0x0000000000146c52 : mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x000000000008442f : mov word ptr [rdi], cx ; ret
0x0000000000129574 : mov word ptr [rdi], cx ; vzeroupper ; ret
0x0000000000095ae3 : mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000096903 : mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000944e3 : mov word ptr [rdi], dx ; ret
0x0000000000098373 : mov word ptr [rdi], dx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x000000000008ec80 : mov word ptr [rdi], r9w ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000008edd0 : mov word ptr [rdi], si ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000008ed40 : mov word ptr [rdi], si ; mov rax, rdi ; ret
0x0000000000146582 : mov word ptr [rdi], si ; mov word ptr [r9 - 2], cx ; ret
0x0000000000083fb9 : mov word ptr [rdi], si ; ret
0x00000000000da3b0 : mov word ptr [rdi], si ; xor eax, eax ; ret
0x00000000001104af : mov word ptr [rdx + 0x6c], ax ; mov eax, 1 ; ret
0x0000000000140ba8 : mov word ptr [rdx + 4], ax ; lea rax, qword ptr [rdx + 5] ; ret
0x000000000009129d : mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x0000000000091321 : mov word ptr [rdx + 8], ax ; mov rax, rdi ; ret
0x000000000007e4c8 : mov word ptr [rdx - 0x76b7ffcf], gs ; and al, 8 ; call qword ptr [rdx]
0x0000000000140b53 : mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x0000000000091238 : mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00000000000eb2c6 : mov word ptr [rdx], ax ; ret
0x0000000000175494 : mov word ptr [rdx], cs ; add al, ch ; in eax, dx ; call qword ptr [rdi]
0x000000000017beeb : mov word ptr [rdx], es ; push rdx ; ret
0x000000000016fdbc : mov word ptr [rip - 0x6bebfffe], dr0 ; cli ; jmp rsp
0x00000000000df715 : mov word ptr [rsi + 0x66], dx ; xor eax, eax ; ret
0x0000000000036b8f : mov word ptr [rsi + 0xc], ax ; xor eax, eax ; ret
0x0000000000036bd6 : mov word ptr [rsi + 0xe], ax ; xor eax, eax ; ret
0x0000000000179094 : mov word ptr [rsi - 0x57d80000], es ; out dx, eax ; jmp qword ptr [rsi]
0x0000000000146c55 : mov word ptr [rsi - 2], cx ; ret
0x00000000000da393 : mov word ptr [rsi], ax ; xor eax, eax ; ret
0x0000000000184094 : mov word ptr [rsi], dr0 ; add dword ptr [rax], eax ; pop rax ; iretd ; cmc ; call qword ptr [rsi]
0x0000000000190830 : mov word ptr [rsi], es ; add dword ptr [r15], 3 ; pop rbp ; add dword ptr [rdx], ecx ; ret
0x0000000000172688 : mov word ptr [rsi], es ; add dword ptr [rdi], 3 ; ret
0x000000000017ff58 : mov word ptr [rsi], es ; add qword ptr [rdi], 0x76 ; ret
0x000000000016fb6c : mov word ptr [rsi], fs ; add al, byte ptr [rax] ; xchg eax, esp ; cli ; jmp rsp
0x0000000000032b62 : mov word ptr [rsp - 0x10], ax ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000032d04 : mov word ptr [rsp - 2], di ; fldcw word ptr [rsp - 2] ; ret
0x0000000000083fb3 : mov word ptr ss:[rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x000000000017d43c : movabs al, byte ptr [0x3c00000014000003] ; retf 0
0x000000000000cc88 : movabs al, byte ptr [0x40000d0012000000] ; retf
0x000000000016a2a0 : movabs al, byte ptr [0x41fffdc241fffdc1] ; ret 0xfffd
0x000000000008daf3 : movabs al, byte ptr [0x6348060c8d48d231] ; ret
0x0000000000129227 : movabs al, byte ptr [0x77f8c5237f7ec1c4] ; ret
0x0000000000053eb9 : movabs al, byte ptr [0x840fc08548000000] ; retf
0x00000000000cdcdf : movabs al, byte ptr [0x8948c7894c000000] ; retf -0x76bc
0x00000000000ce120 : movabs al, byte ptr [0x8948df8948000000] ; retf -0x76bc
0x000000000010221c : movabs al, byte ptr [0x896478c085fffe7d] ; ret
0x000000000017631d : movabs al, byte ptr [0xa41200e4c01a00e] ; ret
0x000000000015ff98 : movabs al, byte ptr [0xc0fffac2d0fffac2] ; ret 0xfffa
0x0000000000102d37 : movabs al, byte ptr [0xf5e8fffffff5bd41] ; retf
0x000000000011e321 : movabs byte ptr [0x58948ef89480027], al ; ret 0x27c0
0x000000000003178a : movabs byte ptr [0x8948c08548fffee1], al ; ret
0x0000000000100d13 : movabs byte ptr [0x940f01fb83fffffe], al ; ret
0x0000000000003adf : movabs byte ptr [0xd0bd63067c9a2d95], al ; retf 0x6e33
0x000000000015a4c3 : movabs byte ptr [0xd900432ac06c5d01], al ; retf -0x156f
0x00000000000024fb : movabs byte ptr [0xdec51188012c607d], al ; retf 0x736c
0x000000000015a121 : movabs byte ptr [0xeb1b5c347ebb9329], al ; retf
0x0000000000002cb9 : movabs dword ptr [0x1ad04fca8653d0e9], eax ; retf 0x2217
0x00000000000e4f75 : movabs dword ptr [0x5b5ad8894858fff6], eax ; ret
0x0000000000030794 : movabs dword ptr [0x8348ff894cd7894d], eax ; ret
0x0000000000008a88 : movabs dword ptr [0xa0000d0012000024], eax ; retf
0x000000000011e9d1 : movabs dword ptr [0xe83e8b45640027a4], eax ; ret 0xfbe5
0x00000000000c5d23 : movabs dword ptr [0xf3ffffff6e820fc8], eax ; ret
0x000000000000087f : movabs eax, dword ptr [0x10c0449000e] ; ret 0x440c
0x0000000000158567 : movabs eax, dword ptr [0x2130504dd97d9556] ; retf
0x00000000000ab389 : movabs eax, dword ptr [0x8348d78948fffffb] ; ret 0x8010
0x00000000000b388b : movabs eax, dword ptr [0x8948c08548fff6c0] ; ret 0x8575
0x000000000007b35b : movabs eax, dword ptr [0x8948c08548ffffe5] ; ret 0x840f
0x0000000000158e1a : movabs eax, dword ptr [0x95a55d87a0d1e161] ; retf 0x33e6
0x00000000000324a0 : movapd xmm0, xmm1 ; ret
0x00000000000324a1 : movaps xmm0, xmm1 ; ret
0x000000000012c512 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000012c50e : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000012c5bc : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000032923 : movd mm0, eax ; mov dword ptr [rdi], edx ; ret
0x00000000000323ba : movd mm0, eax ; ret
0x00000000000323b9 : movd mm0, rax ; ret
0x000000000003242f : movd mm1, eax ; movsd qword ptr [rdi], xmm1 ; ret
0x0000000000032798 : movd mm1, eax ; movss dword ptr [rdi], xmm1 ; ret
0x000000000003249d : movd mm1, edi ; movapd xmm0, xmm1 ; ret
0x0000000000032819 : movd mm1, edi ; movaps xmm0, xmm1 ; ret
0x000000000003242e : movd mm1, rax ; movsd qword ptr [rdi], xmm1 ; ret
0x000000000003249c : movd mm1, rdi ; movapd xmm0, xmm1 ; ret
0x0000000000032922 : movd xmm0, eax ; mov dword ptr [rdi], edx ; ret
0x000000000003276e : movd xmm0, eax ; ret
0x0000000000032797 : movd xmm1, eax ; movss dword ptr [rdi], xmm1 ; ret
0x0000000000032818 : movd xmm1, edi ; movaps xmm0, xmm1 ; ret
0x00000000000945c0 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000095e1d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x0000000000096c6d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x20] ; ret
0x0000000000095480 : movdqu xmmword ptr [rdi + 0x10], xmm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x000000000009478d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x0000000000096ed3 : movdqu xmmword ptr [rdi + 0x30], xmm7 ; lea rax, qword ptr [rdi + 0x40] ; ret
0x00000000000956c3 : movdqu xmmword ptr [rdi + 0x30], xmm7 ; ret
0x0000000000133b8f : movdqu xmmword ptr [rdi + 0xa], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000133b1f : movdqu xmmword ptr [rdi + 0xb], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000133aaf : movdqu xmmword ptr [rdi + 0xc], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000133a3f : movdqu xmmword ptr [rdi + 0xd], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000095dbd : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x0000000000096c0d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x000000000009472d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000001339cf : movdqu xmmword ptr [rdi + 0xe], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000095ddd : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x0000000000096c2d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x000000000009474d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000013395f : movdqu xmmword ptr [rdi + 0xf], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000095dfd : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x0000000000096c4d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000009476d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x0000000000133f7f : movdqu xmmword ptr [rdi + 1], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000133f0f : movdqu xmmword ptr [rdi + 2], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000133e9f : movdqu xmmword ptr [rdi + 3], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000133e2f : movdqu xmmword ptr [rdi + 4], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000133dbf : movdqu xmmword ptr [rdi + 5], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000133d4f : movdqu xmmword ptr [rdi + 6], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000133cdf : movdqu xmmword ptr [rdi + 7], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000133c6f : movdqu xmmword ptr [rdi + 8], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000133bff : movdqu xmmword ptr [rdi + 9], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000008439d : movdqu xmmword ptr [rdi + rdx - 0x20], xmm0 ; ret
0x00000000001330eb : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x000000000013315b : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000095580 : movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x0000000000096a74 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x0000000000095c34 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000000952a7 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000945d4 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x0000000000094617 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000094607 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000094688 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x0000000000094648 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x0000000000094668 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000945e8 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x0000000000094789 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x0000000000094729 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x0000000000094749 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x0000000000094769 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000008432a : movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000984e4 : movdqu xmmword ptr [rdi], xmm0 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x0000000000133964 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000091382 : movlpd qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x00000000000913a2 : movlpd qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x00000000000913c2 : movlpd qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x000000000009120c : movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000911b6 : movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x0000000000091383 : movlps qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x00000000000913a3 : movlps qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x00000000000913c3 : movlps qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x000000000009120d : movlps qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000911b7 : movlps qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00000000000e4deb : movmskpd eax, xmm0 ; and eax, 1 ; jmp 0xe4dbf
0x00000000000e4dec : movmskps eax, xmm0 ; and eax, 1 ; jmp 0xe4dbe
0x00000000000945c1 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000095e1e : movq qword ptr [rdi + 0x10], mm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x0000000000096c6e : movq qword ptr [rdi + 0x10], mm2 ; lea rax, qword ptr [rdi + 0x20] ; ret
0x0000000000095481 : movq qword ptr [rdi + 0x10], mm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x000000000009478e : movq qword ptr [rdi + 0x10], mm2 ; ret
0x00000000000986de : movq qword ptr [rdi + 0x10], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x20], ch ; ret
0x0000000000096ed4 : movq qword ptr [rdi + 0x30], mm7 ; lea rax, qword ptr [rdi + 0x40] ; ret
0x00000000000956c4 : movq qword ptr [rdi + 0x30], mm7 ; ret
0x0000000000098754 : movq qword ptr [rdi + 0x30], mm7 ; xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x0000000000133b90 : movq qword ptr [rdi + 0xa], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000133b20 : movq qword ptr [rdi + 0xb], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000133ab0 : movq qword ptr [rdi + 0xc], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000133a40 : movq qword ptr [rdi + 0xd], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000095dbe : movq qword ptr [rdi + 0xd], mm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x0000000000096c0e : movq qword ptr [rdi + 0xd], mm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x000000000009472e : movq qword ptr [rdi + 0xd], mm2 ; ret
0x000000000009867e : movq qword ptr [rdi + 0xd], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000001339d0 : movq qword ptr [rdi + 0xe], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000095dde : movq qword ptr [rdi + 0xe], mm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x0000000000096c2e : movq qword ptr [rdi + 0xe], mm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x000000000009474e : movq qword ptr [rdi + 0xe], mm2 ; ret
0x000000000009869e : movq qword ptr [rdi + 0xe], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1e], ch ; ret
0x0000000000133960 : movq qword ptr [rdi + 0xf], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000095dfe : movq qword ptr [rdi + 0xf], mm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x0000000000096c4e : movq qword ptr [rdi + 0xf], mm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000009476e : movq qword ptr [rdi + 0xf], mm2 ; ret
0x00000000000986be : movq qword ptr [rdi + 0xf], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1f], ch ; ret
0x0000000000133f80 : movq qword ptr [rdi + 1], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000133f10 : movq qword ptr [rdi + 2], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000133ea0 : movq qword ptr [rdi + 3], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000133e30 : movq qword ptr [rdi + 4], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000133dc0 : movq qword ptr [rdi + 5], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000133d50 : movq qword ptr [rdi + 6], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000133ce0 : movq qword ptr [rdi + 7], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000133c70 : movq qword ptr [rdi + 8], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000133c00 : movq qword ptr [rdi + 9], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000084325 : movq qword ptr [rdi + rdx - 0x10], mm0 ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000008439e : movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x00000000001330ec : movq qword ptr [rdi - 0x10], mm0 ; ret
0x000000000013315c : movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000133897 : movq qword ptr [rdi - 0x11], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000133817 : movq qword ptr [rdi - 0x12], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000133787 : movq qword ptr [rdi - 0x13], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000133707 : movq qword ptr [rdi - 0x14], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000133687 : movq qword ptr [rdi - 0x15], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000133607 : movq qword ptr [rdi - 0x16], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000133587 : movq qword ptr [rdi - 0x17], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000133507 : movq qword ptr [rdi - 0x18], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000133487 : movq qword ptr [rdi - 0x19], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000133407 : movq qword ptr [rdi - 0x1a], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000133387 : movq qword ptr [rdi - 0x1b], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000133307 : movq qword ptr [rdi - 0x1c], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000133277 : movq qword ptr [rdi - 0x1d], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001331e7 : movq qword ptr [rdi - 0x1e], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000133157 : movq qword ptr [rdi - 0x1f], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000095581 : movq qword ptr [rdi - 1], mm0 ; ret
0x0000000000096a75 : movq qword ptr [rdi], mm0 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x0000000000095c35 : movq qword ptr [rdi], mm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000000952a8 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000945d5 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x0000000000094628 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000952fb : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x0000000000094618 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000094608 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000094689 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x0000000000094649 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x0000000000094669 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000945e9 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000009478a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000009472a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000009474a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000009476a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000008432b : movq qword ptr [rdi], mm0 ; ret
0x00000000000984e5 : movq qword ptr [rdi], mm0 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x0000000000133965 : movq qword ptr [rdi], mm1 ; ret
0x00000000000323b8 : movq xmm0, rax ; ret
0x000000000003242d : movq xmm1, rax ; movsd qword ptr [rdi], xmm1 ; ret
0x000000000003249b : movq xmm1, rdi ; movapd xmm0, xmm1 ; ret
0x0000000000181fac : movsb byte ptr [rdi], byte ptr [rsi] ; adc eax, 0xfe400001 ; hlt ; jmp qword ptr [rcx]
0x00000000000aa758 : movsb byte ptr [rdi], byte ptr [rsi] ; adc ebp, dword ptr [rdi] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000016fdec : movsb byte ptr [rdi], byte ptr [rsi] ; add al, byte ptr ss:[rax] ; mov ah, 0x96 ; cli ; call rsp
0x00000000000767d8 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0xf08
0x0000000000184dac : movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [r8], eax ; cmp dl, 0xf5 ; jmp qword ptr [rcx]
0x0000000000182eac : movsb byte ptr [rdi], byte ptr [rsi] ; and al, 1 ; add byte ptr [rax], dl ; xchg ch, dh ; jmp qword ptr [rcx]
0x0000000000182fac : movsb byte ptr [rdi], byte ptr [rsi] ; and eax, 0x86d00001 ; cmc ; jmp qword ptr [rcx]
0x0000000000083ef5 : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x00000000001742ac : movsb byte ptr [rdi], byte ptr [rsi] ; cmp byte ptr [rax], al ; add al, dh ; xor ebp, esp ; call qword ptr [rdx]
0x000000000016e798 : movsb byte ptr [rdi], byte ptr [rsi] ; fcompi st(7) ; call rsp
0x00000000000ffbc0 : movsb byte ptr [rdi], byte ptr [rsi] ; fisubr dword ptr [rcx] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000017e3ac : movsb byte ptr [rdi], byte ptr [rsi] ; fld dword ptr [rax] ; add byte ptr [rax], dl ; movsb byte ptr [rdi], byte ptr [rsi] ; jmp qword ptr [rax]
0x00000000001709e8 : movsb byte ptr [rdi], byte ptr [rsi] ; hlt ; std ; jmp rsp
0x000000000016c140 : movsb byte ptr [rdi], byte ptr [rsi] ; imul edi ; jmp rsp
0x0000000000159242 : movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x0000000000157219 : movsb byte ptr [rdi], byte ptr [rsi] ; in eax, dx ; call qword ptr [rdx]
0x0000000000157241 : movsb byte ptr [rdi], byte ptr [rsi] ; in eax, dx ; dec dword ptr [rsi - 0x60] ; in eax, dx ; call rcx
0x000000000016b6a4 : movsb byte ptr [rdi], byte ptr [rsi] ; jle 0x16b6ae ; add ah, dl ; jge 0x16b69e ; call rsp
0x000000000017e3b1 : movsb byte ptr [rdi], byte ptr [rsi] ; jmp qword ptr [rax]
0x000000000016dd74 : movsb byte ptr [rdi], byte ptr [rsi] ; jp 0x16dd7f ; add byte ptr [rbx + rsi*8 - 0xa], dh ; jmp rsp
0x00000000001882ac : movsb byte ptr [rdi], byte ptr [rsi] ; js 0x1882b7 ; add al, dl ; sal esi, 1 ; jmp qword ptr [rsi]
0x000000000016c0a4 : movsb byte ptr [rdi], byte ptr [rsi] ; mov ecx, 0xe4140000 ; out dx, eax ; jmp rsp
0x000000000007331d : movsb byte ptr [rdi], byte ptr [rsi] ; movsxd rdi, r12d ; mov eax, 3 ; syscall
0x000000000016c228 : movsb byte ptr [rdi], byte ptr [rsi] ; or dh, al ; jmp rsp
0x0000000000157919 : movsb byte ptr [rdi], byte ptr [rsi] ; out dx, al ; call qword ptr [rax]
0x0000000000157915 : movsb byte ptr [rdi], byte ptr [rsi] ; out dx, al ; push qword ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; out dx, al ; call qword ptr [rax]
0x000000000018f9ac : movsb byte ptr [rdi], byte ptr [rsi] ; out dx, eax ; add dword ptr [rax], eax ; mov al, 0x82 ; clc ; jmp qword ptr [rdi]
0x0000000000185aac : movsb byte ptr [rdi], byte ptr [rsi] ; push rax ; add dword ptr [rax], eax ; xor dh, dh ; call qword ptr [rcx]
0x000000000016d83c : movsb byte ptr [rdi], byte ptr [rsi] ; push rbx ; add dword ptr [rax], eax ; xchg eax, esp ; add ch, dh ; call rsp
0x000000000016d86c : movsb byte ptr [rdi], byte ptr [rsi] ; push rsp ; add dword ptr [rax], eax ; sub ebp, esi ; call rsp
0x0000000000080518 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000011e150 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x27
0x000000000018ccac : movsb byte ptr [rdi], byte ptr [rsi] ; ret 1
0x00000000001700d0 : movsb byte ptr [rdi], byte ptr [rsi] ; retf
0x000000000016f0d8 : movsb byte ptr [rdi], byte ptr [rsi] ; retf -8
0x0000000000058f51 : movsb byte ptr [rdi], byte ptr [rsi] ; sbb al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000016bb20 : movsb byte ptr [rdi], byte ptr [rsi] ; sbb ch, ch ; jmp rsp
0x0000000000158125 : movsb byte ptr [rdi], byte ptr [rsi] ; sub eax, 0xea4ca798 ; retf
0x0000000000179cac : movsb byte ptr [rdi], byte ptr [rsi] ; xchg eax, edx ; add byte ptr [rax], al ; rol bh, 1 ; out dx, eax ; call qword ptr [rdx]
0x0000000000173eac : movsb byte ptr [rdi], byte ptr [rsi] ; xor al, 0 ; add al, dl ; sub esp, ebp ; jmp qword ptr [rbx]
0x0000000000183dac : movsb byte ptr [rdi], byte ptr [rsi] ; xor eax, dword ptr [rcx] ; add al, dh ; retf -0xb
0x000000000015dfac : movsd dword ptr [rdi], dword ptr [rsi] ; adc eax, 0x1e14fff5 ; cmc ; call rsp
0x000000000006eb4f : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000015a73d : movsd dword ptr [rdi], dword ptr [rsi] ; fxch st(0), st(6) ; mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x000000000015aad5 : movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x0000000000001acc : movsd dword ptr [rdi], dword ptr [rsi] ; jb 0x1b4d ; out dx, eax ; fidiv word ptr [rbx] ; retf
0x000000000017e441 : movsd dword ptr [rdi], dword ptr [rsi] ; jmp qword ptr [rcx]
0x000000000015a391 : movsd dword ptr [rdi], dword ptr [rsi] ; mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x0000000000082321 : movsd dword ptr [rdi], dword ptr [rsi] ; or eax, dword ptr [rax] ; ret
0x00000000000037ec : movsd dword ptr [rdi], dword ptr [rsi] ; outsb dx, byte ptr [rsi] ; retf
0x00000000000427e2 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000007a547 : movsd dword ptr [rdi], dword ptr [rsi] ; retf -1
0x0000000000158e21 : movsd dword ptr [rdi], dword ptr [rsi] ; xchg eax, ebp ; retf 0x33e6
0x0000000000032432 : movsd qword ptr [rdi], xmm1 ; ret
0x00000000000323fb : movsd qword ptr [rdi], xmm1 ; subsd xmm0, xmm1 ; ret
0x00000000000a7fd8 : movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x0000000000043ba3 : movsd xmm0, qword ptr [rsp - 8] ; ret
0x000000000011ed45 : movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x000000000003279b : movss dword ptr [rdi], xmm1 ; ret
0x0000000000032780 : movss dword ptr [rdi], xmm1 ; subss xmm0, xmm1 ; ret
0x0000000000043b5d : movss xmm0, dword ptr [rsp - 4] ; ret
0x00000000000f030f : movsx eax, bl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008034a : movsx eax, dl ; ret
0x000000000008ea74 : movsx ecx, byte ptr [rdi + rax] ; test cl, cl ; jne 0x8ea71 ; ret
0x000000000008ebb4 : movsx ecx, byte ptr [rdi] ; test cl, cl ; jne 0x8ebb1 ; xor eax, eax ; ret
0x00000000000f058f : movsx ecx, byte ptr [rdx] ; test cl, cl ; jne 0xf0588 ; ret
0x000000000008ea30 : movsx edx, byte ptr [rdi + rax] ; test dl, dl ; jne 0x8ea31 ; ret
0x00000000000f058e : movsx rcx, byte ptr [rdx] ; test cl, cl ; jne 0xf0589 ; ret
0x00000000000dfc38 : movsxd r10, ecx ; mov eax, 0x118 ; syscall
0x00000000000e8eb6 : movsxd r10, ecx ; mov eax, 0x119 ; syscall
0x00000000000ea1ad : movsxd r10, ecx ; mov eax, 0x120 ; syscall
0x00000000000ea24f : movsxd r10, ecx ; mov eax, 0x12b ; syscall
0x00000000000ea2ff : movsxd r10, ecx ; mov eax, 0x133 ; syscall
0x00000000000e9d03 : movsxd r10, ecx ; mov eax, 0x2c ; syscall
0x00000000000e9b43 : movsxd r10, ecx ; mov eax, 0x2d ; syscall
0x00000000000df9e3 : movsxd r10, ecx ; mov eax, 0xdd ; syscall
0x00000000000b80e1 : movsxd r10, ecx ; mov eax, 0xf7 ; syscall
0x00000000000e468d : movsxd r10, r10d ; mov eax, 9 ; syscall
0x000000000007ecc1 : movsxd r9, dword ptr [r10 + r9*4] ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000013156b : movsxd r9, dword ptr [r11 + r9*4] ; add r9, r11 ; jmp r9
0x000000000012bfeb : movsxd r9, dword ptr [r11 + r9*4] ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x000000000008ed00 : movsxd r9, dword ptr [rax + r9*4] ; add r9, rax ; jmp r9
0x000000000008eda0 : movsxd rax, dword ptr [r10 + r9*4] ; add rax, r10 ; jmp rax
0x000000000008ec4b : movsxd rax, dword ptr [r10 + rax*4] ; add rax, r10 ; jmp rax
0x000000000007c093 : movsxd rax, dword ptr [r14 + rax*4] ; add rax, r14 ; jmp rax
0x000000000005355b : movsxd rax, dword ptr [rax + rdx*4] ; add rax, rdi ; jmp rax
0x0000000000047d56 : movsxd rax, dword ptr [rax + rsi*4] ; add rax, rdi ; jmp rax
0x000000000005d163 : movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x000000000005d627 : movsxd rax, dword ptr [rcx + rdx*4] ; add rax, rcx ; jmp rax
0x0000000000112c36 : movsxd rax, dword ptr [rcx + rsi*4] ; add rax, rcx ; jmp rax
0x00000000001103e6 : movsxd rax, dword ptr [rdi + rsi*4] ; add rax, rdi ; jmp rax
0x00000000000556da : movsxd rax, dword ptr [rdx + r12*4] ; add rax, rdx ; jmp rax
0x00000000000cbeed : movsxd rax, dword ptr [rdx + r15*4] ; add rax, rdx ; jmp rax
0x000000000002099c : movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000b9d4b : movsxd rax, dword ptr [rdx + rbx*4] ; add rax, rdx ; jmp rax
0x00000000000b99db : movsxd rax, dword ptr [rdx + rsi*4] ; add rax, rdx ; jmp rax
0x00000000000cbe09 : movsxd rax, dword ptr [rsi + rbp*4] ; add rax, rsi ; jmp rax
0x00000000000990c7 : movsxd rax, dword ptr [rsi + rdi*4] ; add rax, rsi ; jmp rax
0x0000000000099187 : movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x00000000000363ea : movsxd rax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x0000000000125d74 : movsxd rax, ecx ; add rax, rdi ; ret
0x0000000000125c38 : movsxd rax, ecx ; add rax, rdi ; sub rax, r8 ; ret
0x0000000000125e8d : movsxd rax, ecx ; add rax, rdi ; sub rax, rdx ; ret
0x0000000000125d0a : movsxd rax, ecx ; ret
0x0000000000003832 : movsxd rbx, ebp ; clc ; mov gs, word ptr [rbx] ; retf 0x707d
0x0000000000125db4 : movsxd rbx, ebx ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x0000000000094bfa : movsxd rcx, dword ptr [r11 + r8*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x0000000000143f9d : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x0000000000094389 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000990ef : movsxd rcx, dword ptr [rsi + rax*4] ; add rcx, rsi ; jmp rcx
0x0000000000125c29 : movsxd rcx, ebx ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x0000000000125c90 : movsxd rcx, ecx ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x0000000000125c57 : movsxd rcx, ecx ; lea rax, qword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x00000000000daab0 : movsxd rdi, dword ptr [r14 + 8] ; mov eax, 3 ; syscall
0x00000000000e7031 : movsxd rdi, dword ptr [rbp - 0x60] ; mov eax, 3 ; syscall
0x0000000000068a57 : movsxd rdi, dword ptr [rbx + 0x70] ; mov eax, 3 ; syscall
0x0000000000072299 : movsxd rdi, dword ptr [rbx + 0x70] ; syscall
0x00000000000cf620 : movsxd rdi, dword ptr [rbx + rdi*4] ; add rdi, rbx ; jmp rdi
0x0000000000071a40 : movsxd rdi, dword ptr [rdi + 0x70] ; mov eax, 3 ; syscall
0x0000000000072dd0 : movsxd rdi, dword ptr [rdi + 0x70] ; xor eax, eax ; syscall
0x00000000000da818 : movsxd rdi, dword ptr [rdi] ; mov dword ptr [rbp - 0x17c], ecx ; syscall
0x0000000000102970 : movsxd rdi, dword ptr [rdi] ; mov eax, 3 ; syscall
0x000000000016ed69 : movsxd rdi, eax ; call rsp
0x00000000001201de : movsxd rdi, eax ; mov eax, 0x3e ; syscall
0x000000000011aa51 : movsxd rdi, eax ; mov eax, 3 ; syscall
0x0000000000068dc3 : movsxd rdi, ebp ; mov eax, 3 ; syscall
0x000000000002e678 : movsxd rdi, ebx ; mov eax, 3 ; syscall
0x00000000001025ce : movsxd rdi, ebx ; mov edx, eax ; mov eax, 3 ; syscall
0x00000000000f5bd6 : movsxd rdi, ebx ; mov rsi, rbp ; mov eax, ecx ; syscall
0x0000000000118e54 : movsxd rdi, ecx ; mov eax, 3 ; syscall
0x00000000000d7e16 : movsxd rdi, edi ; call 0x440e4
0x00000000000d7e15 : movsxd rdi, edi ; call 0x440e5
0x00000000000d1f88 : movsxd rdi, edi ; cmovbe rsi, r9 ; mov eax, ecx ; syscall
0x00000000000db7d1 : movsxd rdi, edi ; mov eax, 0x101 ; syscall
0x00000000000e2e56 : movsxd rdi, edi ; mov eax, 0x105 ; syscall
0x00000000000e0401 : movsxd rdi, edi ; mov eax, 0x11d ; syscall
0x00000000000dbcc9 : movsxd rdi, edi ; mov eax, 0x48 ; syscall
0x00000000000f5c19 : movsxd rdi, edi ; mov eax, 0xe3 ; syscall
0x00000000000f5b51 : movsxd rdi, edi ; mov eax, 0xe5 ; syscall
0x000000000002adc1 : movsxd rdi, edi ; mov eax, 3 ; syscall
0x000000000002c345 : movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000000d1fe6 : movsxd rdi, edi ; mov eax, ecx ; syscall
0x00000000000db61e : movsxd rdi, edi ; mov edx, edx ; mov eax, 0x10c ; syscall
0x00000000000e0df1 : movsxd rdi, edi ; mov esi, esi ; mov eax, 0x8c ; syscall
0x000000000002c1d5 : movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x00000000000f79a6 : movsxd rdi, edi ; xor eax, eax ; syscall
0x00000000000f5b24 : movsxd rdi, edx ; syscall
0x000000000007e241 : movsxd rdi, esi ; mov dword ptr [rbx + 0x30], eax ; mov qword ptr [rbx], rdi ; call rcx
0x000000000016a5ad : movsxd rdi, esp ; jmp qword ptr [rax]
0x000000000007331f : movsxd rdi, esp ; mov eax, 3 ; syscall
0x000000000007331e : movsxd rdi, r12d ; mov eax, 3 ; syscall
0x0000000000068dc2 : movsxd rdi, r13d ; mov eax, 3 ; syscall
0x000000000002adc0 : movsxd rdi, r15d ; mov eax, 3 ; syscall
0x000000000011aa50 : movsxd rdi, r8d ; mov eax, 3 ; syscall
0x000000000003119d : movsxd rdx, dword ptr [r10 + rdx*4] ; add rdx, r10 ; jmp rdx
0x000000000012c0bf : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000000ced3c : movsxd rdx, dword ptr [r12 + rdx*4] ; add rdx, r12 ; jmp rdx
0x000000000010c21e : movsxd rdx, dword ptr [r8 + rcx*4] ; add rdx, r8 ; jmp rdx
0x00000000000b0c88 : movsxd rdx, dword ptr [r8 + rdi*4] ; add rdx, r8 ; jmp rdx
0x00000000000aeb68 : movsxd rdx, dword ptr [r8 + rdx*4] ; add rdx, r8 ; jmp rdx
0x00000000000664bb : movsxd rdx, dword ptr [rcx + rdx*4] ; add rdx, rcx ; jmp rdx
0x00000000000abfc7 : movsxd rdx, dword ptr [rdi + rcx*4] ; add rdx, rdi ; jmp rdx
0x0000000000030eb6 : movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x00000000000663fe : movsxd rdx, dword ptr [rsi + rdx*4] ; add rdx, rsi ; jmp rdx
0x000000000005adb9 : movsxd rdx, eax ; add rdx, rdx ; jmp 0x57036
0x000000000005adb8 : movsxd rdx, eax ; add rdx, rdx ; jmp 0x57037
0x0000000000032fd4 : movsxd rdx, ebx ; mov eax, 0xea ; syscall
0x00000000000dfc39 : movsxd rdx, ecx ; mov eax, 0x118 ; syscall
0x00000000000e8eb7 : movsxd rdx, ecx ; mov eax, 0x119 ; syscall
0x00000000000ea1ae : movsxd rdx, ecx ; mov eax, 0x120 ; syscall
0x00000000000ea250 : movsxd rdx, ecx ; mov eax, 0x12b ; syscall
0x00000000000ea300 : movsxd rdx, ecx ; mov eax, 0x133 ; syscall
0x00000000000e9d04 : movsxd rdx, ecx ; mov eax, 0x2c ; syscall
0x00000000000e9b44 : movsxd rdx, ecx ; mov eax, 0x2d ; syscall
0x00000000000df9e4 : movsxd rdx, ecx ; mov eax, 0xdd ; syscall
0x00000000000b80e2 : movsxd rdx, ecx ; mov eax, 0xf7 ; syscall
0x0000000000073341 : movsxd rdx, ecx ; mov eax, 2 ; syscall
0x00000000000dbb31 : movsxd rdx, edx ; mov eax, 0x10d ; syscall
0x00000000000ea91e : movsxd rdx, edx ; mov eax, 0x14 ; syscall
0x00000000000dafc6 : movsxd rdx, edx ; mov eax, 0x1c ; syscall
0x00000000000e9dbe : movsxd rdx, edx ; mov eax, 0x2e ; syscall
0x00000000000e9c5e : movsxd rdx, edx ; mov eax, 0x2f ; syscall
0x00000000000e468e : movsxd rdx, edx ; mov eax, 9 ; syscall
0x0000000000104381 : movsxd rdx, edx ; mov eax, r8d ; mov byte ptr [rdi + rdx], 0 ; ret
0x000000000002a586 : movsxd rsi, dword ptr [r8 + r9*4] ; add rsi, r8 ; jmp rsi
0x000000000017db01 : movsxd rsi, edx ; call qword ptr [rax]
0x000000000016cf51 : movsxd rsi, edx ; jmp rsp
0x0000000000148a7c : movsxd rsi, esi ; ret 0x7520
0x00000000000e04ba : movups xmm0, xmmword ptr [rax] ; add bl, al ; nop ; xor eax, eax ; ret
0x0000000000036899 : movups xmm0, xmmword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000a7fd9 : movups xmm0, xmmword ptr [rsp - 0x10] ; ret
0x0000000000043b5e : movups xmm0, xmmword ptr [rsp - 4] ; ret
0x0000000000043ba4 : movups xmm0, xmmword ptr [rsp - 8] ; ret
0x00000000000840cf : movups xmmword ptr [r11], xmm4 ; ret
0x0000000000084156 : movups xmmword ptr [r11], xmm8 ; ret
0x0000000000036a21 : movups xmmword ptr [rbx], xmm0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000084157 : movups xmmword ptr [rbx], xmm0 ; ret
0x00000000000840d0 : movups xmmword ptr [rbx], xmm4 ; ret
0x00000000000840cb : movups xmmword ptr [rcx - 0x30], xmm0 ; movups xmmword ptr [r11], xmm4 ; ret
0x00000000000840ca : movups xmmword ptr [rcx - 0x30], xmm8 ; movups xmmword ptr [r11], xmm4 ; ret
0x0000000000084152 : movups xmmword ptr [rdi + 0x30], xmm7 ; movups xmmword ptr [r11], xmm8 ; ret
0x0000000000083eb2 : movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000084039 : movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x0000000000084016 : movups xmmword ptr [rdi + rdx - 0x40], xmm7 ; ret
0x0000000000083eaf : movups xmmword ptr [rdi], xmm0 ; movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000032433 : movups xmmword ptr [rdi], xmm1 ; ret
0x00000000000323fc : movups xmmword ptr [rdi], xmm1 ; subsd xmm0, xmm1 ; ret
0x0000000000032781 : movups xmmword ptr [rdi], xmm1 ; subss xmm0, xmm1 ; ret
0x00000000001111a6 : movzx eax, al ; add eax, 1 ; ret
0x000000000010ceb7 : movzx eax, al ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000117a9b : movzx eax, al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000010ca3c : movzx eax, al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011d587 : movzx eax, al ; add rsp, 8 ; ret
0x00000000000d206e : movzx eax, al ; cmova eax, edx ; ret
0x00000000000422ad : movzx eax, al ; neg eax ; or eax, 1 ; ret
0x00000000000dd1f4 : movzx eax, al ; neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000064d2c : movzx eax, al ; neg eax ; pop rbx ; ret
0x0000000000064cf9 : movzx eax, al ; neg eax ; ret
0x0000000000111a44 : movzx eax, al ; pop rbp ; pop r12 ; ret
0x000000000010da9a : movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000000b2e5b : movzx eax, al ; pop rbx ; ret
0x00000000000338e9 : movzx eax, al ; ret
0x0000000000021160 : movzx eax, al ; xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x000000000002bfa5 : movzx eax, ax ; ret
0x000000000006ad7d : movzx eax, bh ; ret
0x0000000000073c5a : movzx eax, bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000072d5c : movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000073a5b : movzx eax, byte ptr [rax] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000071442 : movzx eax, byte ptr [rax] ; ret
0x00000000000d2f50 : movzx eax, byte ptr [rdi + 9] ; and eax, 0xf ; ret
0x0000000000080058 : movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x0000000000143fb0 : movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x0000000000083a50 : movzx eax, byte ptr [rdi] ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000080073 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000073a68 : movzx eax, byte ptr [rdx] ; ret
0x0000000000073c5b : movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000099150 : movzx eax, cl ; pop rbx ; ret
0x000000000006ad7c : movzx eax, dil ; ret
0x00000000000f9743 : movzx eax, si ; or eax, edi ; bswap eax ; ret
0x000000000002c15e : movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x00000000000da390 : movzx eax, word ptr [rdi] ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x0000000000106067 : movzx ecx, byte ptr [rcx - 1] ; test cl, cl ; jne 0x106055 ; ret
0x00000000000988fa : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x988f9 ; ret
0x00000000000989aa : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x989a9 ; ret
0x0000000000144e54 : movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x0000000000083f88 : movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000080070 : movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000143fb3 : movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000000ea3b2 : movzx edi, di ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000031757 : movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x3173f ; ret
0x00000000000ba64b : movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0xba630 ; xor eax, eax ; ret
0x000000000008f6d1 : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x00000000001203ef : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x000000000008f563 : movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x0000000000148aa4 : movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x0000000000148b04 : movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x0000000000148af4 : movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000148ae4 : movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000148ad4 : movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000148ac4 : movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x0000000000148ab4 : movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x00000000001338b0 : movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000144c07 : movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x0000000000148a8b : movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x0000000000133f90 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000083a53 : movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000083a79 : movzx edx, dl ; sub eax, edx ; ret
0x0000000000133830 : movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000133f20 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000dcfb4 : movzx rax, al ; ret
0x0000000000001d93 : mul byte ptr [rax] ; mov ecx, 0x72b02084 ; retf
0x000000000002b22b : mul byte ptr [rdi + 0x13] ; add bl, dh ; ret
0x0000000000082457 : mul byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00000000000324c1 : mulps xmm1, xmm0 ; movapd xmm0, xmm1 ; ret
0x0000000000032837 : mulps xmm1, xmm0 ; movaps xmm0, xmm1 ; ret
0x00000000000324c0 : mulsd xmm1, xmm0 ; movapd xmm0, xmm1 ; ret
0x0000000000032836 : mulss xmm1, xmm0 ; movaps xmm0, xmm1 ; ret
0x00000000000410c9 : neg byte ptr [rbx - 0xd] ; ret
0x00000000001144c3 : neg eax ; add rsp, 0x18 ; ret
0x00000000001147ea : neg eax ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000d2054 : neg eax ; cmp dword ptr [rdi + 0x10], ecx ; cmovb eax, edx ; ret
0x000000000009a69d : neg eax ; cmp ecx, r8d ; cmovg eax, edx ; ret
0x00000000000eb36d : neg eax ; cmp qword ptr [rcx + 0x10], rsi ; cmovb eax, edx ; ret
0x0000000000033327 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000114833 : neg eax ; or eax, 1 ; add rsp, 0x18 ; ret
0x0000000000108cbe : neg eax ; or eax, 1 ; pop r13 ; pop r14 ; ret
0x00000000000422b0 : neg eax ; or eax, 1 ; ret
0x00000000000b97da : neg eax ; or rax, 0x20 ; ret
0x00000000000b96aa : neg eax ; or rax, 0x7f ; ret
0x00000000000b98ba : neg eax ; or rax, 1 ; ret
0x00000000000c14b5 : neg eax ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000dd1f7 : neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000064d2f : neg eax ; pop rbx ; ret
0x0000000000020afd : neg eax ; ret
0x000000000007d821 : neg ebx ; add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x0000000000076d75 : neg edi ; call qword ptr [r14]
0x00000000000b97d9 : neg rax ; or rax, 0x20 ; ret
0x00000000000b96a9 : neg rax ; or rax, 0x7f ; ret
0x00000000000b98b9 : neg rax ; or rax, 1 ; ret
0x0000000000076d74 : neg rdi ; call qword ptr [r14]
0x000000000008bc90 : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000132fe7 : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000020433 : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001442bc : nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000179aa5 : nop ; add byte ptr [rax], al ; clc ; ret
0x00000000000e157d : nop ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000a8dca : nop ; add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x000000000017a2c6 : nop ; add dword ptr [rsi + rcx + 0x10], ecx ; push rcx ; ret
0x0000000000176b81 : nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x000000000005355e : nop ; add rax, rdi ; jmp rax
0x00000000000aeb6b : nop ; add rdx, r8 ; jmp rdx
0x00000000000a68cf : nop ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x00000000000212af : nop ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007118f : nop ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000016a46c : nop ; and edi, esp ; jmp rax
0x00000000000838af : nop ; bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x000000000008f07f : nop ; bsr eax, eax ; add rax, rdi ; ret
0x000000000008f20f : nop ; bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x000000000016a5e4 : nop ; cld ; jmp rax
0x000000000016fd99 : nop ; cli ; jmp rsp
0x0000000000184700 : nop ; fdivr st(5), st(0) ; jmp qword ptr [rsi]
0x00000000000a6869 : nop ; idiv edi ; nop dword ptr [rax] ; pop rbx ; ret
0x000000000016a4bc : nop ; insb byte ptr [rdi], dx ; cld ; jmp qword ptr [rax]
0x0000000000180091 : nop ; jmp qword ptr [rcx]
0x000000000017f0c0 : nop ; jmp qword ptr [rdi]
0x000000000017ec70 : nop ; jmp rsp
0x000000000017c8e0 : nop ; js 0x17c8d7 ; jmp qword ptr [rbx]
0x000000000015e3d4 : nop ; mov bh, 0xf5 ; call qword ptr [rax]
0x000000000016aacc : nop ; mov bh, ah ; call qword ptr [rax]
0x00000000000c11af : nop ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x000000000015f724 : nop ; mov dh, bh ; call qword ptr [rax + 0x17fff78a]
0x000000000015f68c : nop ; mov dh, bh ; call qword ptr [rdi]
0x000000000012dbbf : nop ; mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000016aaac : nop ; mov dr1, esp ; call qword ptr [rax]
0x00000000000f5b3f : nop ; mov dword ptr [r8], edx ; xor eax, eax ; ret
0x000000000012dd9f : nop ; mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00000000000e97df : nop ; mov eax, 0x11f ; syscall
0x00000000000ea63f : nop ; mov eax, 0x1e ; syscall
0x00000000000e9edf : nop ; mov eax, 0x30 ; syscall
0x00000000000e9aff : nop ; mov eax, 0x32 ; syscall
0x00000000000dd0df : nop ; mov eax, 0x57 ; syscall
0x00000000000dd01f : nop ; mov eax, 0x58 ; syscall
0x00000000000db57f : nop ; mov eax, 0x5f ; syscall
0x00000000000e904f : nop ; mov eax, 0x87 ; syscall
0x00000000000db48f : nop ; mov eax, 0x89 ; syscall
0x00000000000e482f : nop ; mov eax, 0x95 ; syscall
0x00000000000e1bef : nop ; mov eax, 0x99 ; syscall
0x00000000000e911f : nop ; mov eax, 0x9f ; syscall
0x00000000000e94df : nop ; mov eax, 0xb4 ; syscall
0x00000000000e754f : nop ; mov eax, 0xc2 ; syscall
0x00000000000e75af : nop ; mov eax, 0xc3 ; syscall
0x00000000000e748f : nop ; mov eax, 0xc4 ; syscall
0x00000000000e763f : nop ; mov eax, 0xc5 ; syscall
0x00000000000e938f : nop ; mov eax, 0xfe ; syscall
0x00000000000b970f : nop ; mov eax, 0xfffa ; ret
0x0000000000028c3f : nop ; mov eax, 0xffffffff ; ret
0x00000000000e34af : nop ; mov eax, 1 ; ret
0x000000000011626f : nop ; mov eax, 2 ; ret
0x00000000000f4934 : nop ; mov eax, dword ptr [r14 - 0x30] ; mov dword ptr [rbp - 0x80], eax ; call r8
0x000000000009a11f : nop ; mov eax, dword ptr [rdi + 0x2c] ; cmp eax, dword ptr [rsi + 0x2c] ; jne 0x9a189 ; ret
0x000000000009a16f : nop ; mov eax, dword ptr [rdi + 0x3c] ; cmp eax, dword ptr [rsi + 0x3c] ; jne 0x9a189 ; ret
0x00000000000713df : nop ; mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x000000000006c34f : nop ; mov eax, dword ptr [rdx] ; ret
0x0000000000110bbf : nop ; mov eax, ecx ; ret
0x00000000000f96cf : nop ; mov eax, edi ; ror ax, 8 ; ret
0x0000000000033ccf : nop ; mov eax, edx ; ret
0x000000000016aac4 : nop ; mov edi, esp ; call qword ptr [rax]
0x000000000012e15f : nop ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000095aff : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000016aabc : nop ; mov esp, dr1 ; call qword ptr [rax]
0x00000000000e992f : nop ; mov r10, rcx ; mov eax, 0x137 ; syscall
0x00000000000e94af : nop ; mov r10, rcx ; mov eax, 0x19 ; syscall
0x00000000000dfbff : nop ; mov r10, rcx ; mov eax, 0x28 ; syscall
0x00000000000e956f : nop ; mov r10, rcx ; mov eax, 0xb2 ; syscall
0x00000000000e959f : nop ; mov r10, rcx ; mov eax, 0xb3 ; syscall
0x000000000011c42f : nop ; mov r10, rcx ; mov eax, 0xb5 ; syscall
0x000000000011c47f : nop ; mov r10, rcx ; mov eax, 0xb6 ; syscall
0x00000000000e751f : nop ; mov r10, rcx ; mov eax, 0xbf ; syscall
0x00000000000e745f : nop ; mov r10, rcx ; mov eax, 0xc1 ; syscall
0x00000000000ea60f : nop ; mov r10, rcx ; mov eax, 0xdc ; syscall
0x00000000000708ff : nop ; mov rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000707ef : nop ; mov rax, qword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x00000000001017cf : nop ; mov rax, qword ptr [rip + 0x299081] ; ret
0x00000000000bd0bf : nop ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000035f3f : nop ; mov rax, rdi ; cqo ; idiv rsi ; ret
0x000000000008ebbf : nop ; mov rax, rdi ; ret
0x00000000000f427d : nop ; mov rdx, r13 ; call rax
0x00000000000da3af : nop ; mov word ptr [rdi], si ; xor eax, eax ; ret
0x00000000000945bf : nop ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000072dcf : nop ; movsxd rdi, dword ptr [rdi + 0x70] ; xor eax, eax ; syscall
0x00000000000da38f : nop ; movzx eax, word ptr [rdi] ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x0000000000169f80 : nop ; nop ; sti ; push qword ptr [rax] ; xchg eax, edx ; sti ; call rax
0x00000000000884ed : nop ; or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000043eff : nop ; pop rbx ; ret
0x000000000016a4b8 : nop ; push 0xfc ; call qword ptr [rax + 0x20fffc6c]
0x0000000000006ae0 : nop ; ret
0x0000000000002fae : nop ; ret 0x5bdb
0x000000000001dcb8 : nop ; retf
0x000000000000354b : nop ; retf -0x1612
0x00000000000056e8 : nop ; retf 0x11
0x00000000000021ca : nop ; retf 0x3844
0x000000000016a2c0 : nop ; sar ch, 0xff ; ret 0xfffd
0x0000000000185920 : nop ; sbb al, 0xf6 ; jmp qword ptr [rcx]
0x000000000016af9c : nop ; scasb al, byte ptr [rdi] ; cld ; jmp qword ptr [rax]
0x0000000000169f1c : nop ; sti ; call rax
0x0000000000169f81 : nop ; sti ; push qword ptr [rax] ; xchg eax, edx ; sti ; call rax
0x00000000000f5631 : nop ; sub al, byte ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000001017d4 : nop ; sub dword ptr [rax], eax ; ret
0x0000000000075c2f : nop ; sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000016a894 : nop ; xchg eax, ebx ; cld ; jmp qword ptr [rax]
0x000000000015d248 : nop ; xchg eax, ebx ; inc eax ; xchg eax, ebx ; jmp rax
0x000000000016a67c : nop ; xchg eax, esi ; cld ; jmp qword ptr [rax]
0x000000000015e39c : nop ; xor al, 0xf5 ; call qword ptr [rax]
0x0000000000185b10 : nop ; xor dh, dh ; jmp qword ptr [rcx]
0x00000000000da21f : nop ; xor eax, eax ; pop rbx ; ret
0x000000000006e3bf : nop ; xor eax, eax ; ret
0x0000000000185c10 : nop ; xor esi, esi ; jmp qword ptr [rcx]
0x000000000016a458 : nop ; xor esp, edi ; jmp rax
0x000000000008392f : nop ; xor rax, rax ; ret
0x00000000001497a3 : nop dword ptr [rax + rax] ; add rsp, 8 ; ret
0x000000000011f433 : nop dword ptr [rax + rax] ; call qword ptr [rbx]
0x000000000011f6d8 : nop dword ptr [rax + rax] ; call rax
0x00000000000c5c13 : nop dword ptr [rax + rax] ; mov eax, dword ptr [rdi + 0x4c] ; ret
0x00000000000944fb : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000f4e03 : nop dword ptr [rax + rax] ; mov rax, qword ptr [rax + 0x30] ; ret
0x00000000000319fb : nop dword ptr [rax + rax] ; mov rax, rcx ; ret
0x000000000009576b : nop dword ptr [rax + rax] ; mov rax, rdi ; ret
0x0000000000076eeb : nop dword ptr [rax + rax] ; mov rax, rdx ; ret
0x000000000010af6b : nop dword ptr [rax + rax] ; pop rbx ; ret
0x0000000000020038 : nop dword ptr [rax + rax] ; ret
0x000000000003609b : nop dword ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x0000000000035843 : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000009a18b : nop dword ptr [rax + rax] ; xor rax, rax ; ret
0x00000000000034db : nop dword ptr [rax - 0x80] ; fcmove st(0), st(5) ; retf
0x000000000009a45c : nop dword ptr [rax] ; add rax, 1 ; ret
0x0000000000149ef5 : nop dword ptr [rax] ; add rsp, 8 ; ret
0x000000000014a539 : nop dword ptr [rax] ; call qword ptr [rbx]
0x0000000000032c59 : nop dword ptr [rax] ; fadd st(0) ; ret
0x000000000009ad45 : nop dword ptr [rax] ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000009ad35 : nop dword ptr [rax] ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000009ad3d : nop dword ptr [rax] ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000e8f9c : nop dword ptr [rax] ; mov eax, 0x122 ; syscall
0x00000000000f5ca4 : nop dword ptr [rax] ; mov eax, 0x16 ; ret
0x000000000003330c : nop dword ptr [rax] ; mov eax, 0x3e ; syscall
0x00000000000b7ebd : nop dword ptr [rax] ; mov eax, 0x3f ; syscall
0x00000000000dbddc : nop dword ptr [rax] ; mov eax, 0x49 ; syscall
0x0000000000064d3d : nop dword ptr [rax] ; mov eax, 0x52 ; syscall
0x00000000000db67c : nop dword ptr [rax] ; mov eax, 0x53 ; syscall
0x00000000000b9705 : nop dword ptr [rax] ; mov eax, 0x7e ; ret
0x00000000000337ec : nop dword ptr [rax] ; mov eax, 0x83 ; syscall
0x00000000000e8bfc : nop dword ptr [rax] ; mov eax, 0xad ; syscall
0x00000000000e2ccc : nop dword ptr [rax] ; mov eax, 0xeb ; syscall
0x0000000000033cc4 : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x00000000001002cd : nop dword ptr [rax] ; mov eax, 1 ; pop rbx ; ret
0x000000000007e515 : nop dword ptr [rax] ; mov eax, 1 ; ret
0x000000000002111d : nop dword ptr [rax] ; mov eax, 8 ; ret
0x00000000000b3f9d : nop dword ptr [rax] ; mov eax, dword ptr [rdi] ; ret
0x000000000006cf09 : nop dword ptr [rax] ; mov eax, dword ptr [rdx] ; ret
0x0000000000033c6d : nop dword ptr [rax] ; mov eax, dword ptr [rip + 0x365416] ; ret
0x000000000002c1ad : nop dword ptr [rax] ; mov eax, edi ; and eax, 0x7f ; ret
0x00000000000f96bc : nop dword ptr [rax] ; mov eax, edi ; bswap eax ; ret
0x0000000000069a79 : nop dword ptr [rax] ; mov eax, edi ; ret
0x00000000000951cd : nop dword ptr [rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000d6315 : nop dword ptr [rax] ; mov qword ptr [r8], r9 ; xor eax, eax ; ret
0x000000000008ece4 : nop dword ptr [rax] ; mov rax, rdi ; ret
0x0000000000073a65 : nop dword ptr [rax] ; movzx eax, byte ptr [rdx] ; ret
0x000000000006766d : nop dword ptr [rax] ; or dword ptr [rdi], 0x20 ; ret
0x000000000014a11c : nop dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a686c : nop dword ptr [rax] ; pop rbx ; ret
0x000000000010d0a5 : nop dword ptr [rax] ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000002a461 : nop dword ptr [rax] ; ret
0x000000000006bac5 : nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000000f89c5 : nop dword ptr [rax] ; xor esi, esi ; mov rax, rsi ; ret
0x0000000000095187 : nop dword ptr cs:[rax + rax] ; ret
0x000000000011f6d7 : nop word ptr [rax + rax] ; call rax
0x00000000000319fa : nop word ptr [rax + rax] ; mov rax, rcx ; ret
0x000000000009576a : nop word ptr [rax + rax] ; mov rax, rdi ; ret
0x000000000010af6a : nop word ptr [rax + rax] ; pop rbx ; ret
0x0000000000041112 : nop word ptr [rax + rax] ; ret
0x000000000003609a : nop word ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x0000000000035842 : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x000000000009a18a : nop word ptr [rax + rax] ; xor rax, rax ; ret
0x00000000001184a1 : not eax ; add rsp, 8 ; shr eax, 0x1f ; ret
0x00000000000322f0 : not eax ; and eax, ecx ; ret
0x0000000000033923 : not eax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x0000000000033922 : not rax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x00000000000f688d : or al, 0 ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000f26d3 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000121367 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000124f79 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000121395 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000000e65a : or al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000c3d6e : or al, 0 ; add byte ptr [rax], al ; jmp 0xc3d3c
0x00000000000e0f3a : or al, 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000e0ee1 : or al, 0 ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x00000000000c18d2 : or al, 0 ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x000000000007ec30 : or al, 0 ; add byte ptr [rax], al ; ret
0x0000000000079aca : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000376da : or al, 0 ; add byte ptr [rbp + 0x21], dh ; ret
0x0000000000121408 : or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000000044f : or al, 0 ; add eax, 0xc1c107c ; ret 0x4412
0x00000000000e0872 : or al, 0 ; add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x0000000000020162 : or al, 0 ; call 0x2c3e4
0x00000000000334d5 : or al, 0 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008ec49 : or al, 0 ; movsxd rax, dword ptr [r10 + rax*4] ; add rax, r10 ; jmp rax
0x00000000000990c5 : or al, 0 ; movsxd rax, dword ptr [rsi + rdi*4] ; add rax, rsi ; jmp rax
0x000000000007e9cf : or al, 0 ; ret
0x0000000000171b14 : or al, 0x11 ; add byte ptr [rax], al ; sub byte ptr [rbp - 3], bh ; jmp qword ptr [rdi]
0x0000000000089d02 : or al, 0x16 ; mov byte ptr [rsi + rdx + 1], al ; jg 0x89cf9 ; ret
0x0000000000080056 : or al, 0x16 ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000010be34 : or al, 0x24 ; call rcx
0x0000000000071fe4 : or al, 0x24 ; mov rdi, rbx ; call rax
0x00000000001151bb : or al, 0x24 ; pop rbp ; pop r12 ; ret
0x00000000000f9b79 : or al, 0x2a ; add byte ptr [rcx - 0x77], cl ; ror byte ptr [rdi], 0x85 ; ret 0xfffe
0x00000000000e8e5a : or al, 0x30 ; ror byte ptr [rcx], 0xf8 ; ret
0x000000000011ebe6 : or al, 0x30 ; ror byte ptr [rcx], cl ; retf -0x3d7d
0x0000000000173c14 : or al, 0x32 ; add byte ptr [rax], al ; clc ; and ch, ah ; call qword ptr [rcx]
0x0000000000174014 : or al, 0x36 ; add byte ptr [rax], al ; cwde ; sub ch, ah ; call qword ptr [rsi]
0x00000000000b8061 : or al, 0x48 ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000333ec : or al, 0x48 ; add esp, 0x10 ; pop rbx ; ret
0x00000000000c36e5 : or al, 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000363ee : or al, 0x48 ; add esp, 0x18 ; ret
0x00000000000b4bcb : or al, 0x48 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011f3e0 : or al, 0x48 ; add esp, 0x38 ; ret
0x000000000009a683 : or al, 0x48 ; cmp eax, edx ; jne 0x9a678 ; xor eax, eax ; ret
0x0000000000103911 : or al, 0x48 ; mov dword ptr [rsi], edi ; ret
0x0000000000185314 : or al, 0x49 ; add dword ptr [rax], eax ; mov byte ptr [rsi + rsi*8], cl ; call qword ptr [rdx]
0x0000000000103e73 : or al, 0x4c ; cmp edx, eax ; jne 0x103e60 ; ret
0x0000000000175e14 : or al, 0x54 ; add byte ptr [rax], al ; sub bh, ch ; out dx, al ; jmp qword ptr [rcx]
0x0000000000080453 : or al, 0x5b ; pop rbp ; pop r12 ; ret
0x0000000000001ea9 : or al, 0x5c ; pop rax ; xchg eax, edi ; retf 0x20f4
0x00000000000a7df3 : or al, 0x5d ; pop r12 ; pop r14 ; ret
0x00000000000f575a : or al, 0x5d ; pop r12 ; ret
0x00000000000f8028 : or al, 0x75 ; cdq ; mov rax, rdi ; ret
0x00000000000834a8 : or al, 0x75 ; fisttp qword ptr [rax - 1] ; ret 0xff48
0x0000000000032963 : or al, 0x75 ; or dh, bl ; addps xmm0, xmm0 ; ret
0x0000000000117a1f : or al, 0x75 ; retf
0x000000000002a5db : or al, 0x76 ; ret 0x25e9
0x0000000000188114 : or al, 0x77 ; add dword ptr [rax], eax ; call 0x27187aa3
0x00000000000004b3 : or al, 0x80 ; push rbx ; add al, 4 ; ret 0x6080
0x00000000000290f3 : or al, 0x83 ; inc byte ptr [rbx] ; je 0x29106 ; ret
0x0000000000094bfc : or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000005021f : or al, 0x83 ; ret
0x0000000000098f01 : or al, 0x83 ; ret 0x8301
0x000000000007c986 : or al, 0x83 ; retf -0x76fe
0x000000000004fd9d : or al, 0x85 ; add byte ptr [rax], 0 ; add byte ptr [rax + 0x63], cl ; ret
0x00000000000a965b : or al, 0x85 ; push qword ptr [rbp + 8] ; ret
0x000000000004ab8a : or al, 0x85 ; sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x000000000004e76c : or al, 0x85 ; sal byte ptr [rbx + rsi*2 + 0x41], 0x39 ; ret 0x4675
0x00000000000c078c : or al, 0x85 ; test byte ptr [rdi], 0x84 ; ret
0x00000000000990f1 : or al, 0x86 ; add rcx, rsi ; jmp rcx
0x000000000008ed02 : or al, 0x88 ; add r9, rax ; jmp r9
0x000000000007ecc3 : or al, 0x8a ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000086984 : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000013156d : or al, 0x8b ; add r9, r11 ; jmp r9
0x000000000012bfed : or al, 0x8b ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x00000000000ec388 : or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000041ca1 : or al, 0x8e ; add rcx, rsi ; cmp r9d, 0x2f ; jmp rcx
0x0000000000143f9f : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000009438b : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x0000000000084590 : or al, 0xaf ; or eax, dword ptr [rax] ; ret
0x0000000000002bd6 : or al, 0xaf ; xbegin 0xfffffffff8c6efda ; ret
0x000000000012bff1 : or al, 0xb ; jmp r9
0x000000000009438f : or al, 0xb ; jmp rcx
0x00000000001134de : or al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000068c85 : or al, 0xb8 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000017db14 : or al, 0xd1 ; add byte ptr [rax], al ; sub byte ptr [rbx - 0xe], ah ; call qword ptr [rax]
0x000000000017e914 : or al, 0xdf ; add byte ptr [rax], al ; pop rax ; retf
0x000000000018ea14 : or al, 0xe0 ; add dword ptr [rax], eax ; fsub dword ptr [rbp - 8] ; call qword ptr [rbx]
0x0000000000105898 : or al, 0xe8 ; ret 0xfffe
0x000000000006c08c : or al, 0xeb ; ret 0x5590
0x000000000002e715 : or al, 0xf ; retf -0x2d77
0x000000000010c3e7 : or al, 0xf ; retf -0x2e77
0x000000000009a075 : or al, 0xf ; test dword ptr [rcx + rax], eax ; add byte ptr [rax], al ; ret
0x0000000000094e83 : or al, 0xf ; test dword ptr [rsi + 7], eax ; add byte ptr [rax], al ; ret
0x0000000000133ab3 : or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000033353 : or al, 0xf3 ; ret
0x0000000000185401 : or al, 0xf6 ; call qword ptr [rax]
0x0000000000185319 : or al, 0xf6 ; call qword ptr [rdx]
0x0000000000066673 : or al, 0xf6 ; ret 0xf04
0x00000000000501ac : or al, 0xf6 ; ret 0xf08
0x00000000000daeb2 : or al, 1 ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x0000000000000884 : or al, 1 ; add byte ptr [rax], al ; ret 0x440c
0x00000000000db623 : or al, 1 ; add byte ptr [rax], al ; syscall
0x00000000000dafa2 : or al, 1 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016f7e5 : or al, 2 ; add byte ptr [rsp - 7], dl ; jmp rsp
0x00000000000950c0 : or al, 5 ; add byte ptr [rax], al ; ret
0x000000000008ea76 : or al, 7 ; test cl, cl ; jne 0x8ea6f ; ret
0x0000000000038f8a : or al, byte ptr [r8] ; add byte ptr [rax + 0x39], cl ; ret 0xed75
0x00000000000844cb : or al, byte ptr [r8] ; ret
0x0000000000176945 : or al, byte ptr [rax] ; add byte ptr [rax + 0x26], cl ; out dx, eax ; call qword ptr [rax]
0x0000000000038f8b : or al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0xed75
0x0000000000038230 : or al, byte ptr [rax] ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x000000000009e0db : or al, byte ptr [rax] ; add byte ptr [rax - 0x48], cl ; retf -2
0x000000000012053d : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000123151 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000120561 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000102e0 : or al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000000760 : or al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdx], dl ; retf
0x000000000010c262 : or al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000e4711 : or al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000081868 : or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000bd51a : or al, byte ptr [rax] ; movsxd rax, dword ptr [rdx + r12*4] ; add rax, rdx ; jmp rax
0x00000000000bdacf : or al, byte ptr [rax] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000b9d49 : or al, byte ptr [rax] ; movsxd rax, dword ptr [rdx + rbx*4] ; add rax, rdx ; jmp rax
0x00000000000801cf : or al, byte ptr [rax] ; ret
0x000000000009ab0a : or al, byte ptr [rbp - 0xc0e8a37] ; ret
0x00000000000e5880 : or al, byte ptr [rcx + 0xf] ; lahf ; ret 0x8545
0x00000000000f045a : or al, byte ptr [rcx + 0xf] ; mov esi, 0x39442414 ; retf 0x3b74
0x0000000000068bdd : or al, byte ptr [rcx + rcx*8 - 0x7cb7b58c] ; ret 0x8001
0x00000000000dd051 : or al, byte ptr [rcx] ; add byte ptr [rax], al ; syscall
0x000000000016cd9d : or al, byte ptr [rcx] ; add byte ptr [rsp + rbp*8 - 0xf], ah ; jmp rsp
0x00000000000004b1 : or al, byte ptr [rcx] ; or al, 0x80 ; push rbx ; add al, 4 ; ret 0x6080
0x000000000003822f : or al, byte ptr es:[rax] ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x0000000000128537 : or al, byte ptr es:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000008263e : or al, byte ptr ss:[rax] ; ret
0x0000000000109b22 : or al, ch ; cwde ; pop rbp ; int1 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c2bf7 : or al, ch ; ret
0x00000000000c3c70 : or al, ch ; ret 0xf5bc
0x0000000000077458 : or al, ch ; ret 0xfffa
0x0000000000030b48 : or al, ch ; ret 0xfffd
0x00000000000df98f : or al, ch ; retf
0x00000000000c9c60 : or al, ch ; retf -0x88
0x00000000000f688a : or al, ch ; ror byte ptr [rax + rax], 1 ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000c2e9c : or al, ch ; xchg eax, esi ; retf -0xb
0x000000000018d331 : or bh, al ; jmp qword ptr [rdi]
0x0000000000117ce7 : or bh, bh ; push rax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000070c5d : or bh, byte ptr [rax - 1] ; ret
0x00000000000a672f : or bh, byte ptr [rcx] ; ret
0x0000000000083972 : or bh, byte ptr [rdi] ; or al, 0 ; ret
0x0000000000176189 : or bh, ch ; jmp qword ptr [rax]
0x00000000000c9159 : or bh, dh ; ret
0x00000000000e3a8d : or bh, dh ; ret 0xfc07
0x000000000011b11e : or bl, al ; mov dword ptr [rsi], eax ; mov eax, 0xffffffff ; ret
0x0000000000109a8e : or bl, al ; mov eax, 1 ; ret
0x000000000009ad43 : or bl, al ; nop dword ptr [rax] ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000e590b : or bl, al ; nop dword ptr [rax] ; ret
0x00000000000022e0 : or bl, byte ptr [rbx + 0x38] ; ja 0xffffffffd6104b72 ; ret
0x000000000008ac15 : or bl, byte ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000d1d28 : or bl, byte ptr [rdx + 0x59] ; pop rbx ; ret
0x0000000000054c08 : or bl, ch ; ret 0x1f0f
0x00000000000661af : or bl, ch ; ret 0x538b
0x0000000000071341 : or bl, ch ; retf
0x000000000016d0b9 : or bl, dh ; jmp rsp
0x0000000000133c73 : or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000002bd0f : or bl, dh ; ret
0x00000000000c122d : or byte ptr [r10], r11b ; mov eax, 2 ; ret
0x000000000010ae98 : or byte ptr [r10], r13b ; push 0x19 ; call qword ptr [rax]
0x00000000000c11b1 : or byte ptr [r10], r8b ; xor eax, eax ; ret
0x000000000003199d : or byte ptr [r11 + r9*4 + 0x4f], r9b ; sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x00000000000291cb : or byte ptr [r11 - 0x72f00108], al ; retf 0
0x000000000004a7dd : or byte ptr [r13 + r9*4 + 0x25], cl ; ret 0x11f2
0x000000000009131f : or byte ptr [r14 - 0x77], spl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000c11a6 : or byte ptr [r14], r10b ; mov eax, 1 ; ret
0x00000000000c1266 : or byte ptr [r14], r11b ; mov eax, 2 ; ret
0x00000000000d1509 : or byte ptr [r15], 0x84 ; retf
0x000000000006d4f6 : or byte ptr [r8 + 0x29], r9b ; ret
0x00000000000b65e2 : or byte ptr [r8 + 0x39], r9b ; ret
0x00000000000c5c52 : or byte ptr [r8 + 0x63], r9b ; ret 0xb60f
0x00000000000c1271 : or byte ptr [r8 + r15*4], r11b ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000c2f34 : or byte ptr [r8 - 0x75], r9b ; jl 0xc2f5b ; or byte ptr [rax - 0x7d], cl ; ret
0x00000000000912fe : or byte ptr [r8 - 0x76b7f7be], cl ; clc ; ret
0x00000000000bd8d3 : or byte ptr [r8 - 0x77], 0x55 ; mov al, ch ; ret 0x375
0x000000000013c7f8 : or byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000010cf92 : or byte ptr [r8 - 0x77], cl ; out 0x48, al ; mov edi, ebx ; call qword ptr [rax]
0x000000000003679a : or byte ptr [r8 - 0x77], cl ; retf
0x00000000001157fa : or byte ptr [r8 - 0x77], r9b ; fimul word ptr [rcx + rcx*4 - 1] ; call qword ptr [rax]
0x000000000003587a : or byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x0000000000128712 : or byte ptr [r8], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000ab160 : or byte ptr [r9 + 0x39], cl ; ret 0x8e0f
0x000000000009135e : or byte ptr [r9 - 0x76b7f7be], cl ; clc ; ret
0x0000000000118978 : or byte ptr [r9], dil ; ret 0x2275
0x00000000000c1209 : or byte ptr [r9], r11b ; mov eax, 1 ; ret
0x00000000000c11ce : or byte ptr [r9], r8b ; mov eax, 1 ; ret
0x00000000000e0771 : or byte ptr [r9], sil ; retf -0x3d09
0x000000000010a943 : or byte ptr [rax + 0x10], bh ; pop rbx ; pop rbp ; ret
0x000000000006d4f7 : or byte ptr [rax + 0x29], cl ; ret
0x00000000000c7e58 : or byte ptr [rax + 0x29], cl ; ret 0x6348
0x00000000000251da : or byte ptr [rax + 0x29], cl ; retf -0x1f7d
0x00000000000e8cf9 : or byte ptr [rax + 0x38], bh ; syscall
0x00000000000296ff : or byte ptr [rax + 0x39], cl ; ret
0x000000000007d111 : or byte ptr [rax + 0x39], cl ; ret 0x6174
0x00000000000cad9e : or byte ptr [rax + 0x39], cl ; ret 0xea75
0x000000000003da1a : or byte ptr [rax + 0x39], cl ; ret 0xf075
0x000000000007aeb1 : or byte ptr [rax + 0x39], cl ; ret 0xf177
0x0000000000082bf6 : or byte ptr [rax + 0x39], cl ; ret 0xf475
0x00000000000777a3 : or byte ptr [rax + 0x39], cl ; retf
0x000000000006bc82 : or byte ptr [rax + 0x39], cl ; retf -0x7df1
0x000000000006c31e : or byte ptr [rax + 0x39], cl ; retf 0x776
0x0000000000075fc9 : or byte ptr [rax + 0x39], cl ; sal byte ptr [rbx + 0x21], 1 ; movzx eax, byte ptr [rax] ; ret
0x00000000000cf61f : or byte ptr [rax + 0x63], cl ; cmp al, 0xbb ; add rdi, rbx ; jmp rdi
0x0000000000111769 : or byte ptr [rax + 0x63], cl ; ret
0x00000000000c5c53 : or byte ptr [rax + 0x63], cl ; ret 0xb60f
0x000000000017ee82 : or byte ptr [rax + 0xb], cl ; push rdx ; ret
0x00000000001852ac : or byte ptr [rax + 0xb], cl ; ret
0x0000000000181c95 : or byte ptr [rax + 0xb], dl ; ret
0x000000000009c3c7 : or byte ptr [rax + 0xf], 0x44 ; ret 0x8348
0x00000000000a82ba : or byte ptr [rax + 0xf], 0x4d ; ret 0xc35b
0x00000000000be5eb : or byte ptr [rax + 0xf], 0xa3 ; ret 0x830f
0x00000000000aa2c7 : or byte ptr [rax + 0xf], cl ; retf -0x76b8
0x000000000007cc66 : or byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8949
0x00000000000224e3 : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x000000000002ec81 : or byte ptr [rax + 1], cl ; ret
0x000000000010d686 : or byte ptr [rax + 1], cl ; retf -0x76b8
0x0000000000031b7e : or byte ptr [rax + 2], bh ; syscall
0x00000000000daab3 : or byte ptr [rax + 3], bh ; syscall
0x00000000000f3aeb : or byte ptr [rax + 7], bh ; pop rbx ; pop rbp ; ret
0x00000000000e78f4 : or byte ptr [rax + 9], bh ; pop rbx ; pop rbp ; ret
0x00000000000b6225 : or byte ptr [rax + rcx*2 - 0x75], ah ; xor cl, byte ptr [rax - 0x77] ; retf 0x44f6
0x00000000000c1272 : or byte ptr [rax + rdi*4], bl ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000ad529 : or byte ptr [rax - 0x1486dbbc], cl ; or dword ptr [rax - 0x7d], ecx ; ret
0x000000000003126d : or byte ptr [rax - 0x39], cl ; ret 0xfffe
0x0000000000108ad9 : or byte ptr [rax - 0x3f], cl ; retf 0x6411
0x000000000006d5ee : or byte ptr [rax - 0x3f], cl ; sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x000000000013e987 : or byte ptr [rax - 0x73], cl ; adc byte ptr [r8 - 0x77], cl ; retf -0x7cb8
0x0000000000083952 : or byte ptr [rax - 0x73], cl ; add eax, 0x26 ; ret
0x000000000009ad76 : or byte ptr [rax - 0x73], cl ; add eax, 0xaa842 ; ret
0x0000000000083966 : or byte ptr [rax - 0x73], cl ; add eax, 0xc0612 ; ret
0x000000000009ad62 : or byte ptr [rax - 0x73], cl ; add eax, 0xcbd6 ; ret
0x000000000009a1b2 : or byte ptr [rax - 0x73], cl ; add eax, 0xd836 ; ret
0x0000000000077563 : or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x00000000000eb981 : or byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x38 ; ret
0x00000000000eb9e2 : or byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x40 ; ret
0x00000000000c2f35 : or byte ptr [rax - 0x75], cl ; jl 0xc2f5a ; or byte ptr [rax - 0x7d], cl ; ret
0x0000000000067654 : or byte ptr [rax - 0x75], cl ; mov edi, 0xe0 ; call rax
0x000000000010c23d : or byte ptr [rax - 0x75], cl ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000113472 : or byte ptr [rax - 0x75], cl ; push rax ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000912ff : or byte ptr [rax - 0x76b7f7be], cl ; clc ; ret
0x00000000000bd8d4 : or byte ptr [rax - 0x77], 0x55 ; mov al, ch ; ret 0x375
0x00000000000f44a5 : or byte ptr [rax - 0x77], 0xda ; call rax
0x00000000000e3707 : or byte ptr [rax - 0x77], cl ; adc eax, 0x2b89e1 ; ret
0x0000000000091210 : or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000f9398 : or byte ptr [rax - 0x77], cl ; clc ; sar rax, 6 ; ret
0x0000000000030356 : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000079602 : or byte ptr [rax - 0x77], cl ; fimul dword ptr [rax - 0x7d] ; retf 0x4801
0x00000000001157fb : or byte ptr [rax - 0x77], cl ; fimul word ptr [rcx + rcx*4 - 1] ; call qword ptr [rax]
0x000000000006bd79 : or byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x5d] ; jmp rax
0x00000000000ea0fc : or byte ptr [rax - 0x77], cl ; fsubp st(0) ; retf
0x000000000009febc : or byte ptr [rax - 0x77], cl ; fucompi st(0) ; retf
0x000000000009d8bd : or byte ptr [rax - 0x77], cl ; fucompi st(0) ; retf -0x5b0
0x00000000000c324b : or byte ptr [rax - 0x77], cl ; jo 0xc3277 ; xor eax, eax ; ret
0x000000000013c7f9 : or byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000010cf93 : or byte ptr [rax - 0x77], cl ; out 0x48, al ; mov edi, ebx ; call qword ptr [rax]
0x0000000000113662 : or byte ptr [rax - 0x77], cl ; out dx, eax ; pop rbx ; pop rbp ; jmp 0x1f940
0x000000000011718b : or byte ptr [rax - 0x77], cl ; out dx, eax ; pop rbx ; pop rbp ; jmp rax
0x000000000010c07b : or byte ptr [rax - 0x77], cl ; out dx, eax ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x000000000007afcb : or byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000009fe5c : or byte ptr [rax - 0x77], cl ; ret
0x00000000000c3de5 : or byte ptr [rax - 0x77], cl ; ret 0x1bb
0x000000000010dfac : or byte ptr [rax - 0x77], cl ; ret 0x3149
0x0000000000117acf : or byte ptr [rax - 0x77], cl ; ret 0x4489
0x00000000000f61c9 : or byte ptr [rax - 0x77], cl ; ret 0x468d
0x00000000000aa9aa : or byte ptr [rax - 0x77], cl ; ret 0x4eb
0x00000000000d5850 : or byte ptr [rax - 0x77], cl ; ret 0x830f
0x000000000009e2cf : or byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000010e657 : or byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000003587b : or byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000003679b : or byte ptr [rax - 0x77], cl ; retf
0x00000000000b8c06 : or byte ptr [rax - 0x77], cl ; retf -0x7e18
0x0000000000062ad8 : or byte ptr [rax - 0x77], cl ; xchg eax, ebp ; push -0x14000005 ; retf
0x00000000000c324a : or byte ptr [rax - 0x77], r9b ; jo 0xc3278 ; xor eax, eax ; ret
0x000000000007e50d : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x13], 0xf3 ; ret
0x000000000007e5b7 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xd], cl ; ret
0x000000000007e809 : or byte ptr [rax - 0x7bf0ffc8], al ; ret 0
0x0000000000079bd8 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000033bff : or byte ptr [rax - 0x7d], cl ; clc ; clc ; jne 0x33bf9 ; xor eax, eax ; ret
0x0000000000033c4f : or byte ptr [rax - 0x7d], cl ; clc ; clc ; jne 0x33c49 ; xor eax, eax ; ret
0x0000000000042a27 : or byte ptr [rax - 0x7d], cl ; ret
0x0000000000037c65 : or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000004e792 : or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x00000000000f997e : or byte ptr [rax - 0x7d], cl ; ret 0x901
0x0000000000102147 : or byte ptr [rax - 0x7d], cl ; ret 0xe841
0x000000000007aee1 : or byte ptr [rax - 0x7d], cl ; retf 0x4802
0x0000000000069d6b : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x000000000012079c : or byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000007923e : or byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x000000000012079d : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001232f1 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001207c1 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000015ff8c : or byte ptr [rax], al ; add byte ptr [rax], al ; add bl, al ; cli ; jmp rax
0x000000000007503c : or byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000000f1d6d : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000007ad76 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x000000000001c228 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp qword ptr [rcx]
0x000000000001dcb0 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; retf
0x000000000001b040 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000001dea8 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1616
0x000000000001c828 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1625
0x0000000000019138 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x000000000001a308 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x14b1
0x000000000000f6f2 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000000df922 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x10f ; syscall
0x00000000000e8f67 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x121 ; syscall
0x0000000000033341 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x7f ; syscall
0x000000000003338b : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x82 ; syscall
0x00000000000332d5 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xe ; syscall
0x0000000000033156 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x0000000000033d1c : or byte ptr [rax], al ; add byte ptr [rax], al ; mov rsi, rbx ; mov eax, ecx ; syscall
0x00000000000991bf : or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000021121 : or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000e8d31 : or byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x00000000000819e8 : or byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000039545 : or byte ptr [rax], al ; add byte ptr [rbx - 0x76b7e73b], al ; ret
0x00000000000a89f4 : or byte ptr [rax], al ; add byte ptr [rcx + 0x29], cl ; ror byte ptr [rax + 0x3d], 1 ; ret 0x10
0x000000000007ac76 : or byte ptr [rax], al ; add byte ptr [rcx + rdi - 0x3e], cl ; jne 0x7ac49 ; ret
0x0000000000045d6c : or byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000047762 : or byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; rol dword ptr [rcx], -0x17 ; ret 0xfffc
0x00000000000f24f1 : or byte ptr [rax], al ; add dh, dh ; test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rax]
0x000000000006ecc1 : or byte ptr [rax], al ; add rsp, 0x80 ; ret
0x00000000000dc538 : or byte ptr [rax], al ; mov eax, 0x101 ; syscall
0x00000000000e1b0c : or byte ptr [rax], al ; mov eax, 2 ; syscall
0x000000000002a8c9 : or byte ptr [rax], al ; mov eax, r13d ; mov rdi, rcx ; syscall
0x0000000000044038 : or byte ptr [rax], al ; mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x000000000011ddd0 : or byte ptr [rax], al ; mov rdi, rdx ; mov eax, ebx ; syscall
0x00000000000d7eb4 : or byte ptr [rax], al ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000114520 : or byte ptr [rax], al ; setne al ; add rsp, 0x78 ; ret
0x000000000009842d : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x000000000009846b : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x000000000009840b : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000645bb : or byte ptr [rax], dl ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000126d0e : or byte ptr [rax], r8b ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000004256d : or byte ptr [rbp + 0x39], cl ; ret
0x000000000010441f : or byte ptr [rbp + 0x5d5b2b04], cl ; ret
0x000000000006b64a : or byte ptr [rbp + 0x708949c9], al ; xor byte ptr [rdi], cl ; ret 0x4389
0x00000000000d0153 : or byte ptr [rbp + 0x7400002c], bh ; xor eax, eax ; ret
0x0000000000176dd5 : or byte ptr [rbp + 0xb], al ; push rbp ; ret
0x0000000000178a3d : or byte ptr [rbp + 0xb], al ; push rdx ; ret
0x0000000000187bec : or byte ptr [rbp + 0xb], cl ; ret
0x0000000000032647 : or byte ptr [rbp + 6], dh ; addsd xmm0, xmm0 ; ret
0x000000000004a7de : or byte ptr [rbp + rcx*4 + 0x25], cl ; ret 0x11f2
0x0000000000042375 : or byte ptr [rbp + rcx*4 + 0x3c], cl ; ret 0x8d4a
0x00000000000c3828 : or byte ptr [rbp + rcx*4 + 0x4a], al ; inc dword ptr [rcx] ; ret 0x5589
0x000000000002acda : or byte ptr [rbp + rcx*4 + 0xc], al ; xor byte ptr [rbp + 0x39], al ; retf -0x7df1
0x0000000000108924 : or byte ptr [rbp - 0x17], dh ; add rsp, 0x18 ; ret
0x00000000000a79e3 : or byte ptr [rbp - 0x29], dh ; ret
0x00000000000c3de1 : or byte ptr [rbp - 0x75], cl ; push rsi ; or byte ptr [rax - 0x77], cl ; ret 0x1bb
0x000000000010e0cd : or byte ptr [rbp - 0x77], cl ; ret
0x0000000000039846 : or byte ptr [rbp - 0x77], cl ; retf
0x00000000000558ff : or byte ptr [rbp - 0x7b], cl ; in al, 0x75 ; ret
0x0000000000003cef : or byte ptr [rbx + 0x4e], ch ; ret 0x6bba
0x00000000000c6626 : or byte ptr [rbx + 0x5d5b0443], cl ; pop r12 ; ret
0x000000000010d13b : or byte ptr [rbx + 0x5d], bl ; add eax, edx ; ret
0x000000000007b070 : or byte ptr [rbx + 0x5d], bl ; jmp rax
0x00000000000228bb : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000007e58f : or byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000212b3 : or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000171f95 : or byte ptr [rbx + rcx + 0x7e], cl ; ret
0x000000000003199e : or byte ptr [rbx + rcx*4 + 0x4f], cl ; sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x0000000000049f47 : or byte ptr [rbx - 0x1776cf3b], al ; pop rbx ; pop rbp ; ret
0x000000000006bd8e : or byte ptr [rbx - 0x3b7cb7fe], cl ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000119d7e : or byte ptr [rbx - 0x6bf0f502], al ; ret
0x00000000000291cc : or byte ptr [rbx - 0x72f00108], al ; retf 0
0x00000000000c305e : or byte ptr [rbx - 0x76bbfb83], cl ; retf -0x76b4
0x0000000000066cb1 : or byte ptr [rbx - 0x76fefbbe], al ; ret 0xe281
0x00000000001614e8 : or byte ptr [rbx - 5], dh ; call qword ptr [rax]
0x00000000000f55a4 : or byte ptr [rbx], al ; add byte ptr [rax], al ; mov esi, 0x80 ; syscall
0x00000000000439eb : or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x00000000000ab161 : or byte ptr [rcx + 0x39], cl ; ret 0x8e0f
0x00000000000c1d89 : or byte ptr [rcx + 0x3ffe1], al ; add byte ptr [rcx], bh ; retf
0x00000000000698b8 : or byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; pop r13 ; ret
0x00000000000690eb : or byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; pop r13 ; ret
0x00000000000679c3 : or byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; pop r13 ; ret
0x000000000003e322 : or byte ptr [rcx + 0x63], cl ; retf
0x000000000017f16c : or byte ptr [rcx + 0xb], cl ; add dh, byte ptr [rsi + rcx + 0x38] ; ret
0x00000000000af00b : or byte ptr [rcx + 0xf], al ; fiadd word ptr [r9] ; retf
0x00000000000cc54b : or byte ptr [rcx + 1], al ; retf -0x76bc
0x000000000004226b : or byte ptr [rcx + 1], cl ; ret 0x894c
0x0000000000042e30 : or byte ptr [rcx + rax - 0x3e], cl ; mov rax, rdx ; pop rbx ; ret
0x0000000000102053 : or byte ptr [rcx + rcx*4 + 0xc], al ; and al, 0xe8 ; ret
0x000000000010f563 : or byte ptr [rcx + rcx*4 + 0xc], cl ; and al, 0xe8 ; ret
0x00000000001006dc : or byte ptr [rcx + rcx*4 - 0x11], cl ; call r12
0x00000000000db83c : or byte ptr [rcx + rcx*4 - 0x1a], cl ; mov eax, 0x101 ; syscall
0x000000000001fad1 : or byte ptr [rcx + rcx*4 - 0x39], cl ; mov eax, 3 ; syscall
0x000000000006d462 : or byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x00000000000789ba : or byte ptr [rcx + rcx*4 - 9], cl ; mov qword ptr [rsp + 0x10], r14 ; call qword ptr [rax]
0x0000000000042272 : or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x000000000010f384 : or byte ptr [rcx - 0x3f7cb7f0], cl ; add al, 0x89 ; retf 0x3944
0x00000000000ea8a9 : or byte ptr [rcx - 0x6bf73], cl ; dec dword ptr [rax + 0x63] ; retf -0x74b8
0x00000000000c79f4 : or byte ptr [rcx - 0x73], cl ; jl 0xc7a25 ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000070a6a : or byte ptr [rcx - 0x74b777ab], cl ; or byte ptr [rax - 0x7d], cl ; ret
0x00000000000c37ec : or byte ptr [rcx - 0x75], cl ; je 0xc381c ; or byte ptr [rcx], ch ; ret
0x00000000000cfb10 : or byte ptr [rcx - 0x75], cl ; push rsi ; adc byte ptr [rax + 0x63], cl ; ret
0x000000000009135f : or byte ptr [rcx - 0x76b7f7be], cl ; clc ; ret
0x0000000000031074 : or byte ptr [rcx - 0x77], cl ; ret
0x0000000000039399 : or byte ptr [rcx - 0x77], cl ; retf
0x00000000000eba58 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xeba6a ; ret
0x00000000000ebae8 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xebafa ; ret
0x00000000000ebb88 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xebb9a ; ret
0x00000000000ebc18 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xebc2a ; ret
0x00000000000ebca8 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xebcba ; ret
0x00000000000ebd38 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xebd4a ; ret
0x00000000000ebdd8 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xebdea ; ret
0x00000000000ebe78 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xebe8a ; ret
0x00000000000ebf18 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xebf2a ; ret
0x00000000000ebfa8 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xebfba ; ret
0x00000000000ec043 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xec055 ; ret
0x00000000000ec0d8 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xec0ea ; ret
0x00000000000ec3ea : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xec3fc ; ret
0x00000000000ec46a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xec47c ; ret
0x00000000000ec4ea : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xec4fc ; ret
0x00000000000ec56a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xec57c ; ret
0x00000000000ec5ea : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xec5fc ; ret
0x00000000000ec66a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xec67c ; ret
0x00000000000ec6ea : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xec6fc ; ret
0x00000000000ec76a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xec77c ; ret
0x00000000000ec7ea : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xec7fc ; ret
0x00000000000ec86a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xec87c ; ret
0x00000000000ec8e7 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xec8f9 ; ret
0x00000000000ec96a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xec97c ; ret
0x00000000000cc6e4 : or byte ptr [rcx - 0x7d], al ; ret 0x4901
0x000000000009ac25 : or byte ptr [rcx - 0x7d], cl ; ret 0x4108
0x000000000008bb7c : or byte ptr [rcx - 0x7d], cl ; ret 0x4801
0x000000000007cc7d : or byte ptr [rcx - 0x7d], cl ; ret 0x4820
0x000000000008d67e : or byte ptr [rcx - 0x7d], cl ; ret 0x4901
0x00000000000d06ca : or byte ptr [rcx - 0x9ce8c28], cl ; ret
0x00000000000daec2 : or byte ptr [rcx], al ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000003352e : or byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x0000000000064d74 : or byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x00000000000dafb4 : or byte ptr [rcx], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000dd684 : or byte ptr [rcx], al ; add byte ptr [rcx + 3], cl ; jbe 0xdd6ac ; mov eax, ecx ; syscall
0x00000000000c124c : or byte ptr [rcx], al ; mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x00000000000c11cf : or byte ptr [rcx], al ; mov eax, 1 ; ret
0x00000000000a79e0 : or byte ptr [rcx], bh ; push rdi ; or byte ptr [rbp - 0x29], dh ; ret
0x0000000000118979 : or byte ptr [rcx], bh ; ret 0x2275
0x00000000000c120a : or byte ptr [rcx], bl ; mov eax, 1 ; ret
0x00000000000a67ad : or byte ptr [rcx], ch ; ret
0x00000000000b394a : or byte ptr [rcx], cl ; add byte ptr [rax + 0x101], bh ; syscall
0x00000000000b39a7 : or byte ptr [rcx], cl ; add byte ptr [rax + 2], bh ; syscall
0x00000000000c1b6b : or byte ptr [rcx], cl ; retf 0x5689
0x00000000000f5d70 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x000000000002238a : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000cf8db : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000e0772 : or byte ptr [rcx], dh ; retf -0x3d09
0x0000000000075c6f : or byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000041198 : or byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000015ad5e : or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x0000000000177452 : or byte ptr [rdi + 0xb], al ; push rsp ; ret
0x00000000001751a3 : or byte ptr [rdi + 0xe], al ; adc byte ptr [rbx + 0xa760202], al ; ret
0x0000000000056385 : or byte ptr [rdi + rcx - 0x4a], al ; sub byte ptr [rax - 0x7d], cl ; ret
0x00000000000d150a : or byte ptr [rdi], 0x84 ; retf
0x0000000000023f2e : or byte ptr [rdi], 0x87 ; retf
0x000000000018d9d8 : or byte ptr [rdi], ch ; clc ; jmp rdi
0x000000000002bfa4 : or byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x00000000000429f7 : or byte ptr [rdi], cl ; mov cs, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000071441 : or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x00000000001111a5 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; add eax, 1 ; ret
0x00000000000e8fe8 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x000000000010da99 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x000000000003f4a8 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000010c3d3 : or byte ptr [rdi], cl ; retf -0x2e77
0x000000000002e70a : or byte ptr [rdi], cl ; retf -0x76bf
0x000000000012c5bb : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x0000000000042c7a : or byte ptr [rdi], cl ; xchg eax, edx ; ret 0x8949
0x0000000000053b2c : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd189
0x000000000002031b : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000008c6a7 : or byte ptr [rdi], dh ; ret
0x000000000008c6a6 : or byte ptr [rdi], sil ; ret
0x00000000001729fa : or byte ptr [rdx + 0xb], cl ; pop rdi ; ret
0x000000000019127d : or byte ptr [rdx], al ; add byte ptr [rax], dh ; loop 0x191281 ; jmp qword ptr [rbx]
0x00000000000c11b2 : or byte ptr [rdx], al ; xor eax, eax ; ret
0x00000000000c122e : or byte ptr [rdx], bl ; mov eax, 2 ; ret
0x000000000010ae99 : or byte ptr [rdx], ch ; push 0x19 ; call qword ptr [rax]
0x00000000000e04a2 : or byte ptr [rip + 0x100f], ah ; ret
0x00000000000e04a1 : or byte ptr [rip + 0x100f], r12b ; ret
0x00000000000c1295 : or byte ptr [rsi + 0x32], 8 ; xor eax, eax ; ret
0x0000000000093f11 : or byte ptr [rsi + 0xf], ah ; adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x0000000000091320 : or byte ptr [rsi - 0x77], ah ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000d20aa : or byte ptr [rsi - 0x7d], ah ; stc ; or dh, byte ptr [rax + rdx*2 - 0xd] ; ret
0x00000000000c1267 : or byte ptr [rsi], bl ; mov eax, 2 ; ret
0x00000000000c11a7 : or byte ptr [rsi], dl ; mov eax, 1 ; ret
0x000000000016a5f0 : or byte ptr [rsp + rdi*8 - 1], 0xd0 ; cld ; jmp qword ptr [rax]
0x0000000000003cee : or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x000000000008aa91 : or ch, bl ; ret 0x1f0f
0x0000000000191468 : or ch, byte ptr [rdi + 5] ; ret
0x0000000000169ff8 : or cl, 0xfb ; call rax
0x0000000000032bcb : or cl, bl ; std ; fstp st(1) ; ret
0x00000000000a7a9f : or cl, byte ptr [rax + 0x29] ; ret 0x8941
0x0000000000028aa8 : or cl, byte ptr [rax + 0x39] ; ret 0x1a76
0x00000000000c084f : or cl, byte ptr [rax + 0x63] ; retf
0x0000000000118e52 : or cl, byte ptr [rax + 0x63] ; stc ; mov eax, 3 ; syscall
0x0000000000072866 : or cl, byte ptr [rax + 1] ; ret 0x8949
0x00000000000d475f : or cl, byte ptr [rax - 0x77] ; ret
0x00000000000d0106 : or cl, byte ptr [rax - 0x77] ; ret 0x91e8
0x00000000000a7d81 : or cl, byte ptr [rax - 0x77] ; ret 0xc148
0x00000000000ad924 : or cl, byte ptr [rax - 0x77] ; ror dword ptr [rax - 0x7d], cl ; ret 0xf601
0x00000000001431fc : or cl, byte ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x85 ; retf -0xb
0x000000000006908b : or cl, byte ptr [rax - 0x7d] ; ret
0x0000000000082c12 : or cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x00000000000656a4 : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00000000000c57e4 : or cl, byte ptr [rbp + 0x63] ; ret
0x00000000000f9765 : or cl, byte ptr [rcx + 0x18e8c1f8] ; ret
0x000000000011aa4f : or cl, byte ptr [rcx + 0x63] ; clc ; mov eax, 3 ; syscall
0x00000000000d5acd : or cl, byte ptr [rcx + 0x63] ; cld ; mov eax, 3 ; syscall
0x00000000000eaa64 : or cl, byte ptr [rcx + rcx*4 - 0x2a] ; mov rdi, r12 ; mov eax, ebx ; syscall
0x00000000000f96e5 : or cl, byte ptr [rcx - 0xda08] ; inc dword ptr [rax] ; ret
0x000000000013e726 : or cl, byte ptr [rdi] ; test dword ptr [rbx + 2], eax ; add byte ptr [rax], al ; ret
0x0000000000119d81 : or cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x00000000000d3844 : or cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xd108
0x00000000000332a7 : or cl, ch ; ret
0x000000000007880f : or cl, ch ; ret 0xfffc
0x0000000000002bf3 : or cl, cl ; clc ; ret
0x00000000000826e5 : or cl, cl ; cmove rax, rdx ; ret
0x000000000016c9b1 : or cl, dh ; jmp rsp
0x000000000016c229 : or dh, al ; jmp rsp
0x000000000015a742 : or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x0000000000032965 : or dh, bl ; addps xmm0, xmm0 ; ret
0x0000000000133b93 : or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000000e6ba5 : or dh, bl ; ret
0x00000000000d20ae : or dh, byte ptr [rax + rdx*2 - 0xd] ; ret
0x000000000015a56a : or dh, byte ptr [rbp + 0x23] ; retf 0x32dd
0x0000000000191394 : or dh, byte ptr [rbp + 5] ; retf
0x000000000007ad99 : or dh, byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000000cee98 : or dh, ch ; dec dword ptr [rax + 0x63] ; ret
0x0000000000079a0c : or dh, dh ; ret 0x7402
0x0000000000079023 : or dh, dh ; ret 0x7404
0x000000000010c764 : or dh, dh ; ret 0x8802
0x0000000000078f66 : or dh, dh ; ret 0xf04
0x000000000002b0c3 : or dword ptr [rax + 0x440ffff9], eax ; retf 0xd88
0x0000000000067580 : or dword ptr [rax + 0x48000000], 0xffffff89 ; fucompi st(0) ; ret
0x000000000012ab17 : or dword ptr [rax + rax], edx ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000e0903 : or dword ptr [rax + rax], edx ; mov eax, 0x10 ; syscall
0x0000000000110393 : or dword ptr [rax - 0x73], ecx ; mov ebx, 0xc8 ; call rax
0x00000000000a62b6 : or dword ptr [rax - 0x7d], 0x394801c0 ; ret 0xf175
0x00000000000207f6 : or dword ptr [rax - 0x7d], 0x834801c2 ; ret
0x00000000000ad52f : or dword ptr [rax - 0x7d], ecx ; ret
0x00000000000a4219 : or dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x00000000000a57a8 : or dword ptr [rax - 0x7d], ecx ; ret 0x4c01
0x0000000000026192 : or dword ptr [rax - 0x7d], ecx ; ret 0x8301
0x000000000002ab9d : or dword ptr [rax - 0x7d], ecx ; rol dword ptr [rcx], 1 ; ret 0x3948
0x000000000007e99e : or dword ptr [rax - 1], ecx ; ret 0xc148
0x000000000003b83f : or dword ptr [rax], eax ; add byte ptr [rax - 0x48], cl ; retf -2
0x0000000000048796 : or dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; retf -0x76b8
0x00000000001206cd : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000126bbf : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000120627 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000006d067 : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000020b0a : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, edi ; ret
0x00000000000da198 : or dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e78f6 : or dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000000e4644 : or dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000008873e : or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000093465 : or dword ptr [rax], eax ; add cl, ch ; ret
0x00000000000b394b : or dword ptr [rax], eax ; mov eax, 0x101 ; syscall
0x00000000000b39a8 : or dword ptr [rax], eax ; mov eax, 2 ; syscall
0x00000000000bf40e : or dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + r12*4] ; add rax, rdx ; jmp rax
0x00000000000cd2a1 : or dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000008918c : or dword ptr [rax], eax ; ret
0x0000000000157717 : or dword ptr [rax], ecx ; retf
0x0000000000159eb3 : or dword ptr [rbp + 0x68], edi ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x000000000003f26b : or dword ptr [rbp + rsi + 0xe2d8300], ebx ; ret 0x35
0x00000000001453d6 : or dword ptr [rbp - 0xcffffff], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x00000000000eb2ee : or dword ptr [rbx + 0x28901c0], eax ; ret
0x000000000010c9c6 : or dword ptr [rbx + 0x31], ebx ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000892a8 : or dword ptr [rbx + 0x49000000], 0xffffff89 ; retf -0x46bf
0x00000000000ef786 : or dword ptr [rbx + 0x5d], ebx ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000067663 : or dword ptr [rbx], 0x20 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000072560 : or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000076478 : or dword ptr [rbx], 8 ; pop rbx ; ret
0x00000000000c3c6c : or dword ptr [rcx - 0x75], 0x7d ; or al, ch ; ret 0xf5bc
0x00000000000dcff4 : or dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x0000000000002388 : or dword ptr [rdi + 0x2735a120], 0xffffff98 ; retf -0x7e40
0x00000000000c31e0 : or dword ptr [rdi + 0x90], eax ; xor eax, eax ; ret
0x0000000000033903 : or dword ptr [rdi + rax*8], edx ; xor eax, eax ; ret
0x0000000000067670 : or dword ptr [rdi], 0x20 ; ret
0x00000000000e0557 : or dword ptr [rdi], 0x80000000 ; xor eax, eax ; ret
0x0000000000033a16 : or dword ptr [rdi], eax ; xor eax, eax ; ret
0x00000000000fda0d : or dword ptr [rdi], ecx ; retf
0x00000000000e24b9 : or dword ptr [rdi], ecx ; test cl, dl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000013e706 : or dword ptr [rdi], ecx ; test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x0000000000038042 : or dword ptr [rdi], ecx ; xchg bh, ch ; add eax, 0x83410000 ; call qword ptr [rax]
0x000000000003a862 : or dword ptr [rdi], ecx ; xchg byte ptr [rdi], bl ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x000000000003df31 : or dword ptr [rdi], ecx ; xchg eax, edi ; ret 0xd284
0x00000000000802f9 : or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0x3145
0x000000000008029f : or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0xf631
0x00000000000e502a : or dword ptr [rdi], ecx ; xchg edi, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000e4ac2 : or dword ptr [rdi], ecx ; xchg edi, esp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000015a70e : or dword ptr [rdx + 2], edx ; rcr dword ptr [rcx], cl ; retf -0x4466
0x0000000000080379 : or dword ptr [rdx - 1], edi ; cmovbe eax, edx ; ret
0x000000000019131d : or dword ptr [rdx], eax ; add byte ptr [rax - 0x19], al ; clc ; call qword ptr [rcx]
0x0000000000183c32 : or dword ptr [rsi], 0x54028310 ; ret
0x000000000012862f : or dword ptr cs:[rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000015df99 : or eax, 0x102bfff5 ; cmc ; call rsp
0x00000000000e0a5a : or eax, 0x10c48348 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003235b : or eax, 0x137290 ; orpd xmm0, xmm1 ; ret
0x000000000015dfa1 : or eax, 0x157bfff5 ; cmc ; call qword ptr [rcx]
0x0000000000002d51 : or eax, 0x1954b385 ; retf 0x172
0x0000000000095dc1 : or eax, 0x1c478d48 ; ret
0x0000000000096c11 : or eax, 0x1d478d48 ; ret
0x000000000013e788 : or eax, 0x1e1850f ; add byte ptr [rax], al ; ret
0x00000000000b97dd : or eax, 0x20 ; ret
0x000000000015de6d : or eax, 0x2041fff5 ; cmc ; call rsp
0x000000000015df0d : or eax, 0x223afff5 ; cmc ; call rsp
0x000000000003d2dc : or eax, 0x2ddb0000 ; stosd dword ptr [rdi], eax ; ret
0x00000000000e0a11 : or eax, 0x30 ; mov dword ptr [rdi + 8], eax ; ret
0x000000000008c525 : or eax, 0x3d8d4800 ; retf 0xda6
0x000000000016a1a0 : or eax, 0x41fffdc0 ; ret 0xfffd
0x000000000008a752 : or eax, 0x48c0bc0f ; lea eax, dword ptr [rdi + rax] ; ret
0x00000000000abc7a : or eax, 0x48d08948 ; add esp, 8 ; ret
0x00000000000646b2 : or eax, 0x5bd88948 ; ret
0x0000000000094ea5 : or eax, 0x724850f ; add byte ptr [rax], al ; ret
0x00000000000b96ad : or eax, 0x7f ; ret
0x0000000000121277 : or eax, 0x83480000 ; ret 0x4910
0x0000000000122e11 : or eax, 0x83480000 ; ret 0xe910
0x00000000001212a5 : or eax, 0x83480000 ; ret 0xeb10
0x00000000000e1f44 : or eax, 0x85480000 ; ror byte ptr [rax - 0x73], 0x15 ; retf 0x817
0x0000000000096559 : or eax, 0x880850f ; add byte ptr [rax], al ; ret
0x0000000000081568 : or eax, 0x894d0000 ; retf
0x00000000000da07a : or eax, 0x8c48348 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000082762 : or eax, 0x8c48348 ; ret
0x00000000001817e5 : or eax, 0x9d280001 ; hlt ; jmp qword ptr [rdi]
0x0000000000044fc9 : or eax, 0xb87 ; add rax, rcx ; jmp rax
0x00000000001524b9 : or eax, 0xdbf0000 ; add byte ptr [rax], al ; ret 0xd
0x00000000001524c5 : or eax, 0xdc80000 ; add byte ptr [rax], al ; retf
0x000000000015dde1 : or eax, 0xdd4fff5 ; cmc ; call rsp
0x000000000015a6f3 : or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf -0x6283
0x000000000015a393 : or eax, 0xeeb0f650 ; fcmovb st(0), st(3) ; ret
0x000000000015df19 : or eax, 0xf14fff5 ; cmc ; call rsp
0x0000000000133a43 : or eax, 0xf7f0ff3 ; ret
0x0000000000031606 : or eax, 0xfffed6e9 ; dec dword ptr [rax - 0x7d] ; retf -0x14f5
0x000000000003332d : or eax, 0xffffffff ; ret
0x0000000000114835 : or eax, 1 ; add rsp, 0x18 ; ret
0x0000000000076687 : or eax, 1 ; mov dword ptr [rdi + 4], eax ; ret
0x0000000000108cc0 : or eax, 1 ; pop r13 ; pop r14 ; ret
0x00000000000422b2 : or eax, 1 ; ret
0x0000000000076684 : or eax, 2 ; or eax, 1 ; mov dword ptr [rdi + 4], eax ; ret
0x0000000000185274 : or eax, dword ptr [r14 + rcx + 8] ; ret
0x000000000004b5ea : or eax, dword ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret 0x8348
0x000000000012046d : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000122fb1 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000120491 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000000ddd8 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 6
0x0000000000005f12 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x000000000018cd6c : or eax, dword ptr [rax] ; add byte ptr [rax], al ; jl 0x18cd7b ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret
0x000000000010c252 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000e46e1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000816e8 : or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000004cc7f : or eax, dword ptr [rax] ; add cl, bl ; in eax, -0x21 ; loopne 0x4cc18 ; ret 0xe680
0x00000000000800c2 : or eax, dword ptr [rax] ; ret
0x000000000018a4b9 : or eax, dword ptr [rbx + 0xa] ; ret
0x00000000000dd0b4 : or eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x000000000004a255 : or eax, dword ptr [rdx + rdx*8 - 0x41f0f18c] ; retf -0x30c7
0x0000000000179177 : or eax, dword ptr [rdx] ; loopne 0x179189 ; ret
0x000000000017a1bf : or eax, dword ptr [rdx] ; push 0x41300e0a ; ret
0x0000000000180f20 : or eax, dword ptr [rdx] ; ret
0x0000000000174826 : or eax, dword ptr [rdx] ; ret 0x900e
0x000000000017e6ec : or eax, dword ptr [rdx] ; retf 0xe0a
0x000000000018a0b8 : or eax, dword ptr [rdx] ; xchg eax, esi ; ret
0x000000000018be23 : or eax, dword ptr [rsi + rcx + 0x18] ; ret
0x00000000001853d7 : or eax, dword ptr [rsi + rcx + 0x38] ; ret
0x0000000000185275 : or eax, dword ptr [rsi + rcx + 8] ; ret
0x000000000004cc7e : or eax, dword ptr es:[rax] ; add cl, bl ; in eax, -0x21 ; loopne 0x4cc19 ; ret 0xe680
0x000000000004b5e9 : or eax, dword ptr gs:[rax] ; add byte ptr [rax + 0x63], cl ; ret 0x8348
0x00000000000c3520 : or eax, ebp ; retf -3
0x00000000000f9746 : or eax, edi ; bswap eax ; ret
0x00000000000e8e46 : or eax, edi ; ret
0x000000000003fa79 : or eax, edx ; cmp ecx, 0x24 ; jne 0x3fa63 ; ret
0x00000000000325d5 : or eax, edx ; movq xmm0, rax ; ret
0x0000000000035f3c : or eax, edx ; ret
0x00000000000326c9 : or eax, edx ; sar eax, 0x1f ; not eax ; and eax, ecx ; ret
0x000000000017a4e9 : or eax, esi ; jmp rbx
0x00000000000c14f8 : or eax, esi ; jne 0xc1505 ; ret
0x0000000000075c24 : or ebp, dword ptr [rbx] ; push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000017a2c3 : or ebp, dword ptr [rdx + 0xe] ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; push rcx ; ret
0x000000000003f0e6 : or ebp, ebx ; and ecx, dword ptr [rdi] ; mov cl, 0x35 ; nop ; ret
0x000000000004c8f0 : or ebp, ebx ; and ecx, dword ptr [rdi] ; mov cl, 0x35 ; retf 0x34ed
0x000000000006a2b0 : or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ee00c : or ebx, dword ptr [rbx - 0x77] ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000133c03 : or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000006eeee : or ebx, esi ; ret
0x00000000000dec14 : or ecx, dword ptr [rax + 0x2b] ; push rax ; xor byte ptr [rax + 1], cl ; retf -0x76b8
0x000000000007be62 : or ecx, dword ptr [rax + 0x63] ; ret
0x0000000000069868 : or ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x0000000000023745 : or ecx, dword ptr [rax - 0x7d] ; mov byte ptr [rax + rcx*2], 0x83 ; ret
0x00000000000aa74e : or ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000e372a : or ecx, dword ptr [rax - 0x7d] ; ret 0x4808
0x0000000000076479 : or ecx, dword ptr [rax] ; pop rbx ; ret
0x000000000009a114 : or ecx, dword ptr [rbx + 0x463b2847] ; sub byte ptr [rbp + 0x63], dh ; ret
0x000000000009a164 : or ecx, dword ptr [rbx + 0x463b3847] ; cmp byte ptr [rbp + 0x13], dh ; ret
0x0000000000118972 : or ecx, dword ptr [rbx - 0x74a3dbac] ; or byte ptr [r9], dil ; ret 0x2275
0x00000000000c7235 : or ecx, dword ptr [rcx - 0x7d] ; ret 0x8b10
0x0000000000103957 : or ecx, dword ptr [rdi] ; mov dh, 0x55 ; add dh, dh ; ret
0x000000000010c3c3 : or ecx, dword ptr [rdi] ; retf -0x2d7b
0x0000000000094e63 : or ecx, dword ptr [rdi] ; test dword ptr [rsi + 7], esp ; add byte ptr [rax], al ; ret
0x0000000000032bac : or ecx, eax ; je 0x32b51 ; ret
0x0000000000032bab : or ecx, r8d ; je 0x32b52 ; ret
0x00000000000b968b : or edi, dword ptr [rax + 0xfde8] ; jne 0xb9664 ; ret
0x00000000000f00bc : or edi, dword ptr [rax + 1] ; ret
0x000000000010c684 : or edi, dword ptr [rax + 2] ; ret
0x00000000000f3e44 : or edi, dword ptr [rax + 7] ; ret
0x00000000000f4206 : or edi, dword ptr [rcx] ; ret 0xf7e
0x000000000016eae1 : or edi, eax ; call rsp
0x0000000000103787 : or edi, eax ; dec dword ptr [rax - 0x75] ; add byte ptr [r8 + 1], r9b ; ret
0x0000000000149e00 : or edi, edi ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000987f7 : or edi, edi ; loope 0x9886a ; nop dword ptr [rax + rax] ; ret
0x0000000000032816 : or edi, edx ; movd xmm1, edi ; movaps xmm0, xmm1 ; ret
0x0000000000002d37 : or edx, ebp ; clc ; ret
0x000000000012bfc3 : or edx, edx ; add byte ptr es:[rax + 0x39], cl ; retf -0x76b7
0x000000000018cb12 : or esi, dword ptr [r14 + r9 + 0x18] ; ret
0x000000000010a3b4 : or esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000018cb13 : or esi, dword ptr [rsi + rcx + 0x18] ; ret
0x00000000000e04ee : or esi, eax ; xor eax, eax ; mov dword ptr [rdi + 8], esi ; ret
0x00000000000677b9 : or esi, ebp ; mov dword ptr [rbx], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000133b23 : or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000000f761a : or esi, edi ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x8e ; retf 0
0x0000000000003a84 : or esi, edx ; push rbp ; jg 0x3af7 ; xchg eax, ebp ; retf 0x10bf
0x00000000000f0503 : or esi, esi ; jno 0xf0512 ; cmovne eax, edx ; ret
0x00000000000f29fb : or esi, esi ; ret 0xf08
0x000000000018261e : or esp, dword ptr [r13 + 0xa] ; ret
0x0000000000067664 : or esp, dword ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000072561 : or esp, dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000018261f : or esp, dword ptr [rbp + 0xa] ; ret
0x0000000000002fa7 : or esp, dword ptr [rdx] ; js 0x2f61 ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00000000000df714 : or esp, dword ptr [rsi - 0x77] ; push rsi ; xor ax, ax ; ret
0x000000000003b83e : or qword ptr [rax], r8 ; add byte ptr [rax - 0x48], cl ; retf -2
0x00000000000c31df : or qword ptr [rdi + 0x90], rax ; xor eax, eax ; ret
0x0000000000033902 : or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x0000000000033a15 : or qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000013e705 : or qword ptr [rdi], rcx ; test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x0000000000133c72 : or r11b, r14b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000133c02 : or r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000133b92 : or r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000133b22 : or r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000180f1f : or r8d, dword ptr [r10] ; ret
0x000000000018be22 : or r8d, dword ptr [r14 + r9 + 0x18] ; ret
0x00000000001853d6 : or r8d, dword ptr [r14 + r9 + 0x38] ; ret
0x000000000018a4b8 : or r8d, dword ptr [rbx + 0xa] ; ret
0x0000000000179176 : or r8d, dword ptr [rdx] ; loopne 0x17918a ; ret
0x000000000017e6eb : or r8d, dword ptr [rdx] ; retf 0xe0a
0x0000000000028aa7 : or r9b, byte ptr [r8 + 0x39] ; ret 0x1a76
0x000000000013e787 : or rax, 0x1e1850f ; add byte ptr [rax], al ; ret
0x00000000000b97dc : or rax, 0x20 ; ret
0x00000000000b96ac : or rax, 0x7f ; ret
0x000000000003332c : or rax, 0xffffffffffffffff ; ret
0x00000000000b98bc : or rax, 1 ; ret
0x000000000018f46e : or rax, qword ptr [r14 + r9 + 0x38] ; ret
0x0000000000128412 : or rax, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000005f11 : or rax, qword ptr [r8] ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000001214f7 : or rax, qword ptr [r8] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000018a0b7 : or rax, qword ptr [rdx] ; xchg eax, esi ; ret
0x00000000000e8e95 : or rax, rdi ; ret
0x000000000003fa78 : or rax, rdx ; cmp ecx, 0x24 ; jne 0x3fa64 ; ret
0x00000000000325d4 : or rax, rdx ; movq xmm0, rax ; ret
0x0000000000035f3b : or rax, rdx ; ret
0x000000000010c763 : or sil, sil ; ret 0x8802
0x0000000000032360 : orpd xmm0, xmm1 ; ret
0x0000000000032361 : orps xmm0, xmm1 ; ret
0x000000000003272e : orps xmm0, xmm3 ; ret
0x000000000015e89c : out -0x13, eax ; cmc ; call qword ptr [rdx]
0x000000000007359a : out -0x18, eax ; cwde ; ret
0x00000000000facdb : out -0x18, eax ; lahf ; retf 0
0x0000000000037131 : out -0x18, eax ; leave ; retf 0
0x00000000000e3586 : out -0x18, eax ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000c426f : out -0x18, eax ; ret
0x00000000000f14bf : out -0x18, eax ; retf
0x000000000002f010 : out -0x18, eax ; retf 0xb56
0x00000000000026c5 : out -0x21, eax ; syscall
0x0000000000159240 : out -0x31, eax ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000000ea8e2 : out -0x48, eax ; adc al, 0 ; add byte ptr [rax], al ; syscall
0x00000000000eab9b : out -0x48, eax ; add al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000ea79f : out -0x48, eax ; add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000000eaa7e : out -0x48, eax ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000e4642 : out -0x48, eax ; or dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000004b968 : out -0x73, eax ; dec dword ptr [r8 - 0x77] ; ret 0xf748
0x00000000000334cf : out -0x77, eax ; ret
0x000000000002e037 : out -0x77, eax ; ret 0x894c
0x000000000002c1c3 : out -0x80, eax ; sete al ; ret
0x0000000000184929 : out -0xb, eax ; call qword ptr [rsi]
0x000000000015af68 : out -0xb, eax ; mov ch, 0xab ; ret
0x00000000000d1165 : out -0xc, eax ; cli ; dec dword ptr [rax + 1] ; ret
0x000000000013348a : out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000018b939 : out -5, eax ; jmp qword ptr [rdx]
0x0000000000191321 : out -8, eax ; call qword ptr [rcx]
0x00000000000f5cde : out 0, al ; add byte ptr [rax], al ; mov r10, rcx ; syscall
0x00000000000f5c88 : out 0, al ; add byte ptr [rax], al ; syscall
0x00000000000f9741 : out 0x10, eax ; movzx eax, si ; or eax, edi ; bswap eax ; ret
0x00000000000a8c55 : out 0x29, eax ; retf -0x72bf
0x00000000000f39e1 : out 0x48, al ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000224d2 : out 0x48, al ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000010d8ca : out 0x48, al ; mov edi, ebp ; call rax
0x000000000010cf96 : out 0x48, al ; mov edi, ebx ; call qword ptr [rax]
0x000000000006b97d : out 0x48, al ; mov edi, ebx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000109ad8 : out 0x48, eax ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000009a200 : out 0x48, eax ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000021ad2 : out 0x48, eax ; mov ecx, dword ptr [rbp - 0x60] ; call rcx
0x00000000001108b3 : out 0x48, eax ; mov ecx, dword ptr [rsp + 0x28] ; call rcx
0x0000000000110699 : out 0x48, eax ; mov ecx, dword ptr [rsp + 0x30] ; call rcx
0x00000000000ea91c : out 0x48, eax ; movsxd rdx, edx ; mov eax, 0x14 ; syscall
0x000000000007bd78 : out 0x48, eax ; sub eax, 0x10 ; ret
0x000000000011c7ef : out 0x4c, al ; mov edi, eax ; mov eax, ebx ; syscall
0x000000000008a9f0 : out 0x4c, eax ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000033c9d : out 0x53, eax ; add byte ptr ss:[rcx], bh ; ret 0x237f
0x0000000000001b16 : out 0x59, eax ; pop rbx ; ret 0x2a63
0x00000000000f09ad : out 0x5b, eax ; pop rbp ; pop r12 ; mov rdx, rax ; jmp rcx
0x0000000000115c18 : out 0x5b, eax ; ret
0x0000000000159f80 : out 0x78, al ; jnp 0x159fe2 ; retf
0x00000000000ba571 : out 0x89, al ; fbld dword ptr [rsp + rax*2 - 0x75] ; add al, ch ; ret 0x20f
0x0000000000002486 : out 0xa9, al ; ret 0xbd07
0x00000000000037e8 : out 0xb0, al ; test dword ptr [rsi - 0x5b], esi ; outsb dx, byte ptr [rsi] ; retf
0x0000000000158511 : out 0xb3, al ; retf 0xe80
0x00000000000db83f : out 0xb8, al ; add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x00000000000c1dc8 : out 0xe8, al ; ret 0xfffd
0x00000000000e20d5 : out 0xe8, al ; retf
0x00000000000b90c1 : out 0xe8, al ; test eax, 0x39fffffe ; ret
0x00000000000bc34a : out 0xf, al ; xchg eax, edx ; ret 0x830f
0x000000000013340a : out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000089d09 : out 0xf3, al ; ret
0x0000000000184861 : out 0xf5, al ; jmp qword ptr [rcx]
0x00000000000e3132 : out 0xf8, al ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf 0
0x000000000018f105 : out 1, al ; add byte ptr [rax + 0x71], bh ; clc ; call qword ptr [rdx]
0x0000000000192150 : out 1, al ; add byte ptr [rax], al ; ret
0x00000000000bdab7 : out 2, al ; add byte ptr [rcx - 0x77], al ; ret
0x00000000000fed56 : out dx, al ; adc bh, dh ; ret 0x8080
0x000000000010cb69 : out dx, al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x000000000003df4c : out dx, al ; add dword ptr [rax - 0x77], ecx ; ret 0xf41
0x000000000010418f : out dx, al ; add dword ptr [rax - 0x78], eax ; ja 0x10419c ; ret
0x000000000016f39d : out dx, al ; add dword ptr [rax], eax ; test byte ptr [rsi], ah ; stc ; jmp rsp
0x000000000008b28b : out dx, al ; add dword ptr [rbp - 0xf], esi ; xor edi, edi ; mov rax, rdi ; ret
0x000000000010418c : out dx, al ; add eax, dword ptr [rbx - 0x77bffe12] ; ja 0x10419f ; ret
0x000000000015791a : out dx, al ; call qword ptr [rax]
0x000000000007db1a : out dx, al ; call rax
0x000000000016bdc2 : out dx, al ; call rsp
0x000000000015e8a1 : out dx, al ; cmc ; jmp rsp
0x000000000016bdba : out dx, al ; dec dword ptr [rbp + 0x35d40000] ; out dx, al ; call rsp
0x0000000000001b14 : out dx, al ; enter 0x59e7, 0x5b ; ret 0x2a63
0x000000000015a397 : out dx, al ; fcmovb st(0), st(3) ; ret
0x000000000016baf1 : out dx, al ; in al, dx ; call rsp
0x00000000001751d9 : out dx, al ; in al, dx ; jmp qword ptr [rdx]
0x0000000000003ab1 : out dx, al ; in eax, 0x78 ; mov dl, 0x1e ; ret
0x0000000000175e1a : out dx, al ; jmp qword ptr [rcx]
0x00000000000037a5 : out dx, al ; jne 0x3785 ; ret 0x975
0x00000000000677ba : out dx, al ; mov dword ptr [rbx], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ea1ff : out dx, al ; mov eax, 0x120 ; syscall
0x00000000000ea357 : out dx, al ; mov eax, 0x133 ; syscall
0x00000000000e9e08 : out dx, al ; mov eax, 0x2e ; syscall
0x00000000000e9ca8 : out dx, al ; mov eax, 0x2f ; syscall
0x0000000000003193 : out dx, al ; mov eax, 0xa1a3e95a ; ret 0xba88
0x000000000011df4c : out dx, al ; mov eax, 1 ; syscall
0x00000000000f5bda : out dx, al ; mov eax, ecx ; syscall
0x0000000000072837 : out dx, al ; mov eax, r13d ; syscall
0x000000000012dc0a : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000007dcf6 : out dx, al ; mov rdi, r12 ; call rax
0x00000000000e463f : out dx, al ; mov rdi, r12 ; mov eax, 9 ; syscall
0x0000000000070af5 : out dx, al ; mov rdi, r14 ; mov eax, r9d ; syscall
0x000000000011d25b : out dx, al ; mov rdi, r15 ; mov eax, 1 ; syscall
0x00000000000b9cdf : out dx, al ; mov rdi, r8 ; mov eax, r9d ; syscall
0x00000000000f04c5 : out dx, al ; mov rdi, rbx ; call r14
0x000000000007d4fc : out dx, al ; mov rdi, rbx ; call rax
0x00000000000df976 : out dx, al ; mov rdi, rbx ; mov eax, 0x10f ; syscall
0x0000000000079c98 : out dx, al ; mov rdi, rdx ; pop rbx ; pop rbp ; jmp 0x766c8
0x000000000013381a : out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000000021c9 : out dx, al ; nop ; retf 0x3844
0x000000000009a5c9 : out dx, al ; nop word ptr [rax + rax] ; ret
0x0000000000126a6e : out dx, al ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000015a6f2 : out dx, al ; or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf -0x6283
0x0000000000159f7f : out dx, al ; out 0x78, al ; jnp 0x159fe3 ; retf
0x0000000000030d6d : out dx, al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000157912 : out dx, al ; push qword ptr [rax - 0x5c] ; out dx, al ; push qword ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; out dx, al ; call qword ptr [rax]
0x0000000000157916 : out dx, al ; push qword ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; out dx, al ; call qword ptr [rax]
0x00000000000c3151 : out dx, al ; ret
0x00000000000025ba : out dx, al ; ret 0x88ad
0x0000000000002899 : out dx, al ; retf 0x182c
0x0000000000170951 : out dx, al ; std ; call rsp
0x00000000000e735c : out dx, al ; syscall
0x00000000000994ad : out dx, eax ; adc byte ptr [rax + 1], cl ; clc ; ret
0x00000000000e502d : out dx, eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000018f9ad : out dx, eax ; add dword ptr [rax], eax ; mov al, 0x82 ; clc ; jmp qword ptr [rdi]
0x0000000000038045 : out dx, eax ; add eax, 0x83410000 ; call qword ptr [rax]
0x00000000000c2ead : out dx, eax ; add r14, 8 ; call 0x1f93f
0x0000000000149671 : out dx, eax ; add rdi, qword ptr [r13 + 0x10] ; call rbx
0x000000000006c05e : out dx, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000006c0ba : out dx, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010b5cb : out dx, eax ; call 0x118053
0x0000000000082819 : out dx, eax ; call 0x4f243
0x00000000000f3672 : out dx, eax ; call 0xf00b3
0x000000000017645a : out dx, eax ; call qword ptr [rax]
0x000000000010cb6f : out dx, eax ; call qword ptr [rbx]
0x0000000000176662 : out dx, eax ; call qword ptr [rcx]
0x000000000017923a : out dx, eax ; call qword ptr [rdx]
0x0000000000179c02 : out dx, eax ; call qword ptr [rsi]
0x00000000000c179a : out dx, eax ; call r12
0x000000000010a9fe : out dx, eax ; call r14
0x00000000000203a1 : out dx, eax ; call rax
0x000000000009b757 : out dx, eax ; call rbx
0x0000000000118072 : out dx, eax ; call rcx
0x000000000015bcae : out dx, eax ; call rdi
0x000000000010c726 : out dx, eax ; call rdx
0x0000000000178682 : out dx, eax ; call rsi
0x000000000016be62 : out dx, eax ; call rsp
0x00000000000d169b : out dx, eax ; cli ; dec dword ptr [rax + 1] ; ret
0x000000000015afe5 : out dx, eax ; cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x000000000015bcaa : out dx, eax ; dec dword ptr [rsi] ; mov al, 0xef ; call rdi
0x0000000000001acf : out dx, eax ; fidiv word ptr [rbx] ; retf
0x000000000016bf82 : out dx, eax ; inc dword ptr [rax + rsi*4 - 0x47ec0000] ; out dx, eax ; call rsp
0x000000000015bd8a : out dx, eax ; jmp qword ptr [rax]
0x00000000001785a2 : out dx, eax ; jmp qword ptr [rbx]
0x0000000000177fe2 : out dx, eax ; jmp qword ptr [rcx]
0x00000000001769a2 : out dx, eax ; jmp qword ptr [rdi]
0x000000000017766a : out dx, eax ; jmp qword ptr [rdx]
0x000000000017801a : out dx, eax ; jmp qword ptr [rsi]
0x000000000015be8e : out dx, eax ; jmp rdx
0x000000000016beba : out dx, eax ; jmp rsp
0x000000000015be8a : out dx, eax ; lcall ptr [rsi + rbp*4] ; out dx, eax ; jmp rdx
0x000000000015be86 : out dx, eax ; lcall ptr [rsi + rbp*4] ; out dx, eax ; lcall ptr [rsi + rbp*4] ; out dx, eax ; jmp rdx
0x000000000010b3e6 : out dx, eax ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000010b227 : out dx, eax ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x000000000016beb2 : out dx, eax ; ljmp ptr [rbx + rbp*4 - 0x6a8c0000] ; out dx, eax ; jmp rsp
0x000000000005cb3c : out dx, eax ; mov bh, 0xff ; dec dword ptr [rax - 0x7d] ; ret 0x4108
0x0000000000028a63 : out dx, eax ; mov eax, 3 ; syscall
0x00000000000d2f30 : out dx, eax ; mov eax, dword ptr [rdx + 8] ; ret
0x000000000012da3a : out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000012db36 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000012da82 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000008e8c0 : out dx, eax ; mov qword ptr [rdx], rcx ; ret
0x0000000000022205 : out dx, eax ; mov qword ptr [rsp + 8], rcx ; call 0x7ec48
0x00000000000e76d8 : out dx, eax ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000042980 : out dx, eax ; mov rax, rdx ; ret
0x00000000001137c7 : out dx, eax ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x000000000013389a : out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000076d73 : out dx, eax ; neg rdi ; call qword ptr [r14]
0x000000000000354a : out dx, eax ; nop ; retf -0x1612
0x0000000000126b6d : out dx, eax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000175e19 : out dx, eax ; out dx, al ; jmp qword ptr [rcx]
0x0000000000002898 : out dx, eax ; out dx, al ; retf 0x182c
0x0000000000149e2f : out dx, eax ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000113665 : out dx, eax ; pop rbx ; pop rbp ; jmp 0x1f93d
0x000000000011718e : out dx, eax ; pop rbx ; pop rbp ; jmp rax
0x0000000000144423 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x1443fb
0x00000000001444a1 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x144479
0x0000000000144933 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x14490b
0x00000000001449b1 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x144989
0x0000000000145a53 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x145a2b
0x0000000000145ad1 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x145aa9
0x0000000000145f63 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x145f3b
0x0000000000145fe1 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x145fb9
0x000000000016c0ba : out dx, eax ; push qword ptr [rdx + rdi*4] ; add byte ptr [rcx + rbp*8], dh ; out dx, eax ; jmp rsp
0x000000000016bfba : out dx, eax ; push qword ptr [rdx + rsi*4] ; add byte ptr [rsp + rax*8 - 0x11], ah ; call rsp
0x0000000000144023 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000144038 : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000014404d : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000099330 : out dx, eax ; ret
0x0000000000098a43 : out dx, eax ; ret 0xf66
0x000000000015a6bb : out dx, eax ; retf -0x54f3
0x0000000000098a26 : out dx, eax ; retf 0x4466
0x000000000007ec6a : out dx, eax ; shl byte ptr [rsi + 0xf], 0x74 ; shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x000000000014553c : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x0000000000145525 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000014550e : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x0000000000143fca : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000170981 : out dx, eax ; std ; jmp rsp
0x000000000009aed0 : out dx, eax ; sub rax, 4 ; ret
0x00000000000a8158 : out dx, eax ; sub rsp, 8 ; call r12
0x000000000010c07e : out dx, eax ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x0000000000041f60 : out dx, eax ; xor eax, eax ; ret
0x000000000012271e : outsb dx, byte ptr [rsi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000067dcf : outsb dx, byte ptr [rsi] ; add al, 1 ; je 0x67e0b ; mov rax, rdx ; pop rbx ; ret
0x000000000007040f : outsb dx, byte ptr [rsi] ; add al, 1 ; je 0x7044b ; mov rax, rdx ; pop rbx ; ret
0x000000000004d898 : outsb dx, byte ptr [rsi] ; add al, byte ptr [rax] ; jmp 0x4d864
0x000000000014764e : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x000000000016ab29 : outsb dx, byte ptr [rsi] ; cld ; jmp qword ptr [rax + 0x20fffc6f]
0x0000000000107dcd : outsb dx, byte ptr [rsi] ; idiv edi ; xor eax, eax ; ret
0x000000000015ab43 : outsb dx, byte ptr [rsi] ; ja 0x15aacc ; ret 0x48f
0x00000000000037ee : outsb dx, byte ptr [rsi] ; retf
0x0000000000158884 : outsb dx, byte ptr [rsi] ; sahf ; ret 0x38ae
0x0000000000159eb8 : outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x000000000006fe86 : outsb dx, byte ptr [rsi] ; std ; dec dword ptr [rax - 0x7f] ; ret
0x0000000000169f0d : outsb dx, byte ptr [rsi] ; sti ; call rax
0x000000000000367d : outsb dx, byte ptr [rsi] ; stosb byte ptr [rdi], al ; stc ; insb byte ptr [rdi], dx ; mov ebx, 0x952a6c41 ; ret
0x000000000007d3df : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000016aaed : outsd dx, dword ptr [rsi] ; cld ; jmp qword ptr [rax + 0x20fffc70]
0x000000000016ab2d : outsd dx, dword ptr [rsi] ; cld ; jmp qword ptr [rax]
0x000000000007ee18 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x0000000000084b3e : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000000e4eed : outsd dx, dword ptr [rsi] ; jae 0xe4f22 ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x000000000012e1c2 : outsd dx, dword ptr [rsi] ; mov ebx, 0x4e6f0ff3 ; retf
0x000000000012e3c2 : outsd dx, dword ptr [rsi] ; mov edx, 0x4e6f0ff3 ; retf -0x74b4
0x000000000014533d : outsd dx, dword ptr [rsi] ; push rdi ; ret
0x00000000001453dd : outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x0000000000144f02 : outsd dx, dword ptr [rsi] ; push rdi ; retf
0x0000000000144f82 : outsd dx, dword ptr [rsi] ; push rdi ; retf -0x354e
0x000000000008245a : outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000008245f : outsd dx, dword ptr [rsi] ; ret
0x0000000000159246 : outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x000000000012e377 : outsd dx, dword ptr [rsi] ; ret 0x8b4c
0x00000000001453e2 : outsd dx, dword ptr [rsi] ; ret 0xc2b2
0x00000000000824aa : outsd dx, dword ptr [rsi] ; ret 0xf66
0x000000000012e242 : outsd dx, dword ptr [rsi] ; retf
0x000000000012e442 : outsd dx, dword ptr [rsi] ; retf -0x74b4
0x00000000001220c9 : outsd dx, dword ptr [rsi] ; retf 0x4466
0x000000000014492a : outsd dx, dword ptr [rsi] ; retf 0xf66
0x000000000014441a : outsd dx, dword ptr [rsi] ; retf 0xff3
0x000000000011b102 : outsd dx, dword ptr [rsi] ; sbb byte ptr [rcx], al ; je 0x11b117 ; xor eax, eax ; ret
0x0000000000159245 : outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x0000000000120362 : pcmpeqb mm0, mm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000009a454 : pcmpeqb mm3, qword ptr [rcx] ; add rax, 2 ; ret
0x000000000009a43f : pcmpeqb mm3, qword ptr [rsi] ; ret
0x0000000000120361 : pcmpeqb xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000015a645 : pcmpeqw mm5, qword ptr [rbp + r12*2 - 0x5f] ; mov cs, edi ; ret 0x8b36
0x000000000015a646 : pcmpeqw mm5, qword ptr [rbp - 0x5f] ; mov cs, edi ; ret 0x8b36
0x000000000008ed11 : pcmpgtd mm1, qword ptr [rcx - 0x76b7fba9] ; clc ; ret
0x000000000008efc5 : pcmpgtd mm1, qword ptr [rdi] ; xlatb ; ret 0xc085
0x0000000000129546 : pextrw edi, mm0, 0x77 ; ret
0x00000000000326a1 : pmovmskb eax, mm0 ; and eax, 0x80 ; ret
0x00000000000329c1 : pmovmskb eax, mm0 ; and eax, 8 ; ret
0x000000000008efd3 : pmovmskb eax, mm1 ; bsr eax, eax ; add rax, rdi ; ret
0x000000000008f075 : pmovmskb eax, mm1 ; test eax, eax ; jne 0x8f0f9 ; xor eax, eax ; ret
0x00000000000326a0 : pmovmskb eax, xmm0 ; and eax, 0x80 ; ret
0x00000000000329c0 : pmovmskb eax, xmm0 ; and eax, 8 ; ret
0x000000000000223f : pmuludq mm4, mm7 ; retf
0x000000000017995d : pop qword ptr [rax] ; add al, ah ; ret 0xffef
0x0000000000179945 : pop qword ptr [rax] ; add al, cl ; ret 0xffef
0x000000000017992d : pop qword ptr [rax] ; add al, dl ; ret 0xffef
0x00000000000d1e21 : pop qword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000179995 : pop qword ptr [rax] ; add byte ptr [rax], ch ; ret
0x00000000000d4759 : pop qword ptr [rbp + 0x31] ; rol byte ptr [rbx - 0x76b7f507], cl ; ret
0x00000000000f54d4 : pop r10 ; ret
0x000000000015aacf : pop r10 ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000006b983 : pop r12 ; jmp rax
0x00000000000f09b0 : pop r12 ; mov rdx, rax ; jmp rcx
0x0000000000069468 : pop r12 ; pop r13 ; jmp rax
0x000000000007b81b : pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000000207c4 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000001fc63 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000001fc15 : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000011792d : pop r12 ; pop r13 ; pop r14 ; xor eax, eax ; jmp rcx
0x0000000000066995 : pop r12 ; pop r13 ; pop rbp ; ret
0x000000000001fb18 : pop r12 ; pop r13 ; ret
0x00000000000f0825 : pop r12 ; pop r14 ; pop r15 ; ret
0x00000000000a3f94 : pop r12 ; pop r14 ; ret
0x00000000000351e6 : pop r12 ; pop rbp ; ret
0x0000000000020439 : pop r12 ; ret
0x00000000000a812e : pop r12 ; sub r8, rdx ; lea rax, qword ptr [r8 + rax*4] ; ret
0x000000000006946a : pop r13 ; jmp rax
0x000000000003c816 : pop r13 ; pop r14 ; pop r15 ; fmul st(0) ; ret
0x000000000003c78e : pop r13 ; pop r14 ; pop r15 ; fmulp st(1) ; ret
0x000000000007b81d : pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000000207c6 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000001fc65 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000001fc17 : pop r13 ; pop r14 ; ret
0x000000000011792f : pop r13 ; pop r14 ; xor eax, eax ; jmp rcx
0x0000000000066997 : pop r13 ; pop rbp ; ret
0x000000000001fb1a : pop r13 ; ret
0x00000000001178fd : pop r14 ; mov edx, 0xffffffff ; xor eax, eax ; jmp rcx
0x000000000003c818 : pop r14 ; pop r15 ; fmul st(0) ; ret
0x000000000003c790 : pop r14 ; pop r15 ; fmulp st(1) ; ret
0x000000000007b81f : pop r14 ; pop r15 ; jmp rax
0x00000000000207c8 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000001fc67 : pop r14 ; pop r15 ; ret
0x000000000001fc19 : pop r14 ; ret
0x0000000000117931 : pop r14 ; xor eax, eax ; jmp rcx
0x000000000003c81a : pop r15 ; fmul st(0) ; ret
0x000000000003c792 : pop r15 ; fmulp st(1) ; ret
0x000000000007b821 : pop r15 ; jmp rax
0x00000000000207ca : pop r15 ; pop rbp ; ret
0x000000000001fc69 : pop r15 ; ret
0x0000000000112d16 : pop r8 ; mov eax, 1 ; ret
0x000000000007669e : pop r8 ; or eax, 1 ; mov dword ptr [rdi + 4], eax ; ret
0x000000000010d806 : pop r8 ; pop rbx ; sete al ; movzx eax, al ; ret
0x000000000016979f : pop r9 ; clc ; ret 0x6e1f
0x000000000018d3b8 : pop rax ; adc edi, eax ; call qword ptr [rsi]
0x000000000011348e : pop rax ; add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x0000000000186295 : pop rax ; add dword ptr [rax], eax ; cmp al, 0xf6 ; jmp qword ptr [rcx]
0x000000000016d8ed : pop rax ; add dword ptr [rax], eax ; insb byte ptr [rdi], dx ; cmc ; call rsp
0x00000000000b32c7 : pop rax ; add dword ptr [rbp - 0x1b], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000117ab7 : pop rax ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000113654 : pop rax ; call rax
0x000000000016a655 : pop rax ; cld ; call qword ptr [rax]
0x000000000014abd0 : pop rax ; cli ; in eax, dx ; call rax
0x00000000000c3167 : pop rax ; cmp al, 0x11 ; je 0xc3177 ; xor eax, eax ; ret
0x00000000000da055 : pop rax ; hlt ; lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000184098 : pop rax ; iretd ; cmc ; call qword ptr [rsi]
0x00000000000d0f6e : pop rax ; je 0xd0f5c ; ret
0x000000000017b568 : pop rax ; jle 0x17b55e ; jmp qword ptr [rcx]
0x0000000000113496 : pop rax ; jmp rcx
0x000000000017b458 : pop rax ; jne 0x17b44e ; jmp qword ptr [rdx]
0x000000000010d3a6 : pop rax ; mov eax, 1 ; ret
0x000000000002c184 : pop rax ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002c112 : pop rax ; mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x0000000000003cd6 : pop rax ; mov esi, 0xcf8cb236 ; retf
0x000000000010cfee : pop rax ; mov qword ptr [rdx + 0x68], rcx ; ret
0x00000000000e4f78 : pop rax ; mov rax, rbx ; pop rdx ; pop rbx ; ret
0x00000000000c9158 : pop rax ; or bh, dh ; ret
0x000000000007923d : pop rax ; or byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x0000000000093464 : pop rax ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000007669f : pop rax ; or eax, 1 ; mov dword ptr [rdi + 4], eax ; ret
0x000000000001f9c1 : pop rax ; pop rbx ; pop rbp ; ret
0x000000000010d807 : pop rax ; pop rbx ; sete al ; movzx eax, al ; ret
0x00000000000e8d0b : pop rax ; pop rdi ; call rax
0x000000000011f321 : pop rax ; pop rdx ; pop rbx ; ret
0x0000000000035fc8 : pop rax ; ret
0x00000000000e36dc : pop rax ; ret 0xfff3
0x0000000000190938 : pop rax ; ret 0xfff8
0x00000000001149d4 : pop rax ; retf
0x0000000000188238 : pop rax ; sal esi, 1 ; jmp qword ptr [rsi]
0x0000000000182b48 : pop rax ; sar cl, 1 ; call qword ptr [rax]
0x000000000016109c : pop rax ; sbb bl, bh ; inc eax ; sbb bl, bh ; jmp rax
0x000000000010efe1 : pop rax ; sbb byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000016f4c9 : pop rax ; stc ; jmp rsp
0x0000000000184e58 : pop rax ; sti ; cmc ; jmp qword ptr [rdx]
0x00000000000e4eb8 : pop rax ; sub eax, dword ptr [rax] ; pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000182f68 : pop rax ; xchg ch, dh ; jmp qword ptr [rcx]
0x000000000007a510 : pop rax ; xchg dword ptr [rsi], ecx ; add byte ptr [rcx + rcx*4 - 6], cl ; call 0x76f29
0x0000000000001eab : pop rax ; xchg eax, edi ; retf 0x20f4
0x0000000000170465 : pop rbp ; add al, byte ptr [rax] ; sti ; jmp rsp
0x00000000000cfb79 : pop rbp ; add cl, ch ; ret
0x0000000000190836 : pop rbp ; add dword ptr [rdx], ecx ; ret
0x000000000010d13d : pop rbp ; add eax, edx ; ret
0x00000000000b89e7 : pop rbp ; clc ; leave ; ret
0x000000000015a4c5 : pop rbp ; insb byte ptr [rdi], dx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf -0x156f
0x0000000000109b25 : pop rbp ; int1 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000113667 : pop rbp ; jmp 0x1f93b
0x0000000000079c9d : pop rbp ; jmp 0x766c3
0x0000000000069228 : pop rbp ; jmp rax
0x000000000010a935 : pop rbp ; jmp rcx
0x000000000010c082 : pop rbp ; jmp rdx
0x000000000008df12 : pop rbp ; mov byte ptr [rax + 0x29], cl ; ret
0x0000000000077622 : pop rbp ; mov dword ptr [r12 + 0x10], eax ; pop r12 ; ret
0x000000000010b49f : pop rbp ; mov ebp, 0x8d4c0000 ; and al, 0x18 ; call qword ptr [rax]
0x0000000000158e20 : pop rbp ; movsd dword ptr [rdi], dword ptr [rsi] ; xchg eax, ebp ; retf 0x33e6
0x000000000006b982 : pop rbp ; pop r12 ; jmp rax
0x00000000000f09af : pop rbp ; pop r12 ; mov rdx, rax ; jmp rcx
0x0000000000069467 : pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000007b81a : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000001fc62 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000001fc14 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000011792c : pop rbp ; pop r12 ; pop r13 ; pop r14 ; xor eax, eax ; jmp rcx
0x000000000001fb17 : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f0824 : pop rbp ; pop r12 ; pop r14 ; pop r15 ; ret
0x00000000000a3f93 : pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000020438 : pop rbp ; pop r12 ; ret
0x000000000010b426 : pop rbp ; pop r13 ; pop r14 ; ret
0x000000000003c817 : pop rbp ; pop r14 ; pop r15 ; fmul st(0) ; ret
0x000000000003c78f : pop rbp ; pop r14 ; pop r15 ; fmulp st(1) ; ret
0x000000000007b81e : pop rbp ; pop r14 ; pop r15 ; jmp rax
0x00000000000207c7 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000001fc66 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000001fc18 : pop rbp ; pop r14 ; ret
0x0000000000117930 : pop rbp ; pop r14 ; xor eax, eax ; jmp rcx
0x0000000000066998 : pop rbp ; pop rbp ; ret
0x0000000000042278 : pop rbp ; pop rbx ; ret
0x000000000001f9c3 : pop rbp ; ret
0x000000000015c1b0 : pop rbp ; sub esi, eax ; call qword ptr [rax]
0x000000000015c128 : pop rbp ; sub esi, eax ; call qword ptr [rdx]
0x000000000009b61a : pop rbp ; sub rax, r12 ; pop r12 ; ret
0x00000000000cf9d4 : pop rbp ; xor byte ptr [rbx + 0x634801c3], al ; retf
0x00000000000f3e71 : pop rbp ; xor eax, eax ; pop rbx ; ret
0x00000000000c9332 : pop rbx ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000001865cd : pop rbx ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; jmp qword ptr [rcx]
0x00000000001865b5 : pop rbx ; add dword ptr [rax], eax ; call 0x22185c03
0x000000000018659d : pop rbx ; add dword ptr [rax], eax ; rol byte ptr [rax - 0xa], 1 ; jmp qword ptr [rcx]
0x0000000000157e18 : pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000000f5757 : pop rbx ; and eax, 0xc ; pop rbp ; pop r12 ; ret
0x000000000018e5d1 : pop rbx ; clc ; jmp qword ptr [rdx]
0x0000000000157e16 : pop rbx ; cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000008b598 : pop rbx ; cmovne rax, rdx ; ret
0x0000000000149d67 : pop rbx ; in eax, dx ; push rbx ; ret
0x00000000000b36d7 : pop rbx ; jmp 0x1f93b
0x0000000000074774 : pop rbx ; jmp rax
0x00000000000c18d0 : pop rbx ; mov eax, 0xc ; pop rbp ; pop r12 ; ret
0x00000000000e0eb7 : pop rbx ; mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x000000000007e281 : pop rbx ; mov eax, 1 ; pop rbp ; pop r12 ; ret
0x00000000000c11fe : pop rbx ; mov eax, 1 ; ret
0x00000000000d704b : pop rbx ; mov eax, 5 ; pop rbp ; pop r12 ; ret
0x0000000000035fc5 : pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x0000000000099202 : pop rbx ; mov eax, eax ; ret
0x00000000000ee4cc : pop rbx ; mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006980f : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000004e5da : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000000f71bd : pop rbx ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x000000000006b14a : pop rbx ; mov eax, r13d ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000074f39 : pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x00000000001151b8 : pop rbx ; mov qword ptr [r12], rcx ; pop rbp ; pop r12 ; ret
0x000000000008e9fd : pop rbx ; mov qword ptr [rdi], rdx ; ret
0x00000000000e57bc : pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; jmp rax
0x000000000007a7ee : pop rbx ; mov rax, rdx ; pop r14 ; pop r15 ; ret
0x000000000006745b : pop rbx ; mov rax, rdx ; pop rbp ; pop r12 ; ret
0x0000000000111a43 : pop rbx ; movzx eax, al ; pop rbp ; pop r12 ; ret
0x0000000000047761 : pop rbx ; or byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; rol dword ptr [rcx], -0x17 ; ret 0xfffc
0x00000000000c3de0 : pop rbx ; or byte ptr [rbp - 0x75], cl ; push rsi ; or byte ptr [rax - 0x77], cl ; ret 0x1bb
0x0000000000066994 : pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000000351e5 : pop rbx ; pop r12 ; pop rbp ; ret
0x000000000007a79d : pop rbx ; pop r14 ; pop r15 ; ret
0x000000000010d13c : pop rbx ; pop rbp ; add eax, edx ; ret
0x0000000000113666 : pop rbx ; pop rbp ; jmp 0x1f93c
0x0000000000079c9c : pop rbx ; pop rbp ; jmp 0x766c4
0x0000000000069227 : pop rbx ; pop rbp ; jmp rax
0x000000000010a934 : pop rbx ; pop rbp ; jmp rcx
0x000000000010c081 : pop rbx ; pop rbp ; jmp rdx
0x000000000006b981 : pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000000f09ae : pop rbx ; pop rbp ; pop r12 ; mov rdx, rax ; jmp rcx
0x0000000000069466 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000001fc13 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000001fb16 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f0823 : pop rbx ; pop rbp ; pop r12 ; pop r14 ; pop r15 ; ret
0x00000000000a3f92 : pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000020437 : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010b425 : pop rbx ; pop rbp ; pop r13 ; pop r14 ; ret
0x000000000001f9c2 : pop rbx ; pop rbp ; ret
0x000000000009b619 : pop rbx ; pop rbp ; sub rax, r12 ; pop r12 ; ret
0x0000000000029139 : pop rbx ; ret
0x0000000000001b18 : pop rbx ; ret 0x2a63
0x000000000015b100 : pop rbx ; ret 0x6f9
0x00000000000b36d9 : pop rbx ; ret 0xfff6
0x000000000007a491 : pop rbx ; retf
0x00000000000e0ddc : pop rbx ; sar eax, 0x1f ; ret
0x000000000010d808 : pop rbx ; sete al ; movzx eax, al ; ret
0x0000000000089daf : pop rbx ; stc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000002fb1 : pop rbx ; sub edi, esi ; retf 0x54f7
0x0000000000001d3d : pop rbx ; test dword ptr [rdx], ebx ; scasb al, byte ptr [rdi] ; retf -0x6dda
0x00000000000890f6 : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000074f02 : pop rbx ; xor edx, edx ; jmp rax
0x000000000008e9eb : pop rbx ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x00000000001703c5 : pop rcx ; add al, byte ptr [rax] ; in al, 0x1d ; sti ; call rsp
0x000000000012bdc7 : pop rcx ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000f65a2 : pop rcx ; add eax, dword ptr [rax] ; ret
0x00000000001173ae : pop rcx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000010b34e : pop rcx ; add rsp, 0x40 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000086c24 : pop rcx ; and al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000a6ec3 : pop rcx ; clc ; add byte ptr cs:[rax + 0x39], cl ; ret
0x0000000000169610 : pop rcx ; clc ; ret 0x6e1f
0x000000000016fbe1 : pop rcx ; cli ; call rsp
0x0000000000032838 : pop rcx ; enter 0x280f, -0x3f ; ret
0x0000000000157105 : pop rcx ; in eax, dx ; call rcx
0x0000000000157101 : pop rcx ; in eax, dx ; ljmp ptr [rdx] ; pop rcx ; in eax, dx ; call rcx
0x00000000001215e7 : pop rcx ; or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000118c4f : pop rcx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000e4ebb : pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d1d2a : pop rcx ; pop rbx ; ret
0x0000000000001b17 : pop rcx ; pop rbx ; ret 0x2a63
0x0000000000181380 : pop rcx ; ret
0x000000000010bdd3 : pop rcx ; ret 0
0x00000000000e4b72 : pop rcx ; retf
0x00000000000e4d82 : pop rcx ; retf -0x3c7d
0x000000000009b463 : pop rcx ; retf 0x2f
0x000000000008ae23 : pop rcx ; stc ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x000000000012c5b8 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000000db672 : pop rdi ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000017699d : pop rdi ; add byte ptr [rax], al ; add byte ptr [rax], ch ; out dx, eax ; jmp qword ptr [rdi]
0x00000000001271fd : pop rdi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000e8d0c : pop rdi ; call rax
0x000000000017f551 : pop rdi ; call rsi
0x000000000016a4c1 : pop rdi ; cld ; jmp rax
0x00000000000c529d : pop rdi ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cmc ; dec dword ptr [rax - 0x77] ; ret
0x000000000003c81b : pop rdi ; fmul st(0) ; ret
0x000000000003c793 : pop rdi ; fmulp st(1) ; ret
0x000000000012dfd9 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000012dde9 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015a3be : pop rdi ; insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x000000000007b822 : pop rdi ; jmp rax
0x0000000000159381 : pop rdi ; mov dh, 0x4e ; ret 0x474c
0x00000000000b85b0 : pop rdi ; mov eax, 0x3a ; syscall
0x000000000012dc09 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000012da39 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000012db35 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000012da81 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000207cb : pop rdi ; pop rbp ; ret
0x000000000001fc6a : pop rdi ; ret
0x0000000000001c26 : pop rdi ; retf 0x49f2
0x0000000000176455 : pop rdx ; add byte ptr [rax], al ; test al, 0x12 ; out dx, eax ; call qword ptr [rax]
0x000000000017649d : pop rdx ; add byte ptr [rax], al ; xor byte ptr [rbx], dl ; out dx, eax ; call rdi
0x00000000000efc93 : pop rdx ; add dword ptr [rax + 0x39], ecx ; retf
0x000000000016d925 : pop rdx ; add dword ptr [rax], eax ; jp 0x16d926 ; jmp rsp
0x00000000001864f5 : pop rdx ; add dword ptr [rax], eax ; sub byte ptr [rax - 0xa], al ; jmp qword ptr [rcx]
0x0000000000121ae6 : pop rdx ; add eax, 0x83480000 ; ret 0x4910
0x00000000000f97d3 : pop rdx ; cmc ; lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x0000000000003aae : pop rdx ; int1 ; imul esi ; in eax, 0x78 ; mov dl, 0x1e ; ret
0x000000000016cbc9 : pop rdx ; int1 ; jmp rsp
0x0000000000159fa1 : pop rdx ; je 0x159f6b ; ret 0xacfc
0x000000000015a0b3 : pop rdx ; leave ; retf
0x00000000000801ce : pop rdx ; or al, byte ptr [rax] ; ret
0x000000000015af67 : pop rdx ; out -0xb, eax ; mov ch, 0xab ; ret
0x0000000000003549 : pop rdx ; out dx, eax ; nop ; retf -0x1612
0x00000000000f54d3 : pop rdx ; pop r10 ; ret
0x00000000000e4f7c : pop rdx ; pop rbx ; ret
0x00000000000d1d29 : pop rdx ; pop rcx ; pop rbx ; ret
0x00000000000f54f9 : pop rdx ; pop rsi ; ret
0x0000000000001b92 : pop rdx ; ret
0x0000000000159f83 : pop rdx ; retf
0x000000000015aad0 : pop rdx ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000009aa75 : pop rdx ; test al, 0xf0 ; jne 0x9aaa9 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x0000000000144424 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x1443fa
0x00000000001444a2 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x144478
0x0000000000144934 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x14490a
0x00000000001449b2 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x144988
0x0000000000145a54 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x145a2a
0x0000000000145ad2 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x145aa8
0x0000000000145f64 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x145f3a
0x0000000000145fe2 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x145fb8
0x00000000001270fe : pop rsi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000170495 : pop rsi ; add al, byte ptr [rax] ; adc al, 0x3c ; sti ; jmp rsp
0x00000000000cdeb8 : pop rsi ; add dword ptr [rbp + 0x38], eax ; ret
0x00000000000d1284 : pop rsi ; and byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0xfaf3
0x000000000015df90 : pop rsi ; and dh, ch ; push qword ptr [rcx + 0x11] ; cmc ; call rsp
0x000000000016a541 : pop rsi ; cld ; inc dword ptr [rax + 0x60] ; cld ; jmp qword ptr [rax]
0x0000000000089a05 : pop rsi ; dec dword ptr [rcx + 0x29] ; retf 0x1deb
0x00000000001744d9 : pop rsi ; in al, dx ; call rcx
0x000000000006226c : pop rsi ; mov dh, 0xff ; dec dword ptr [rax - 0x7d] ; ret 0xbe08
0x00000000001178fe : pop rsi ; mov edx, 0xffffffff ; xor eax, eax ; jmp rcx
0x000000000003c819 : pop rsi ; pop r15 ; fmul st(0) ; ret
0x000000000003c791 : pop rsi ; pop r15 ; fmulp st(1) ; ret
0x000000000007b820 : pop rsi ; pop r15 ; jmp rax
0x00000000000207c9 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000001fc68 : pop rsi ; pop r15 ; ret
0x0000000000089dae : pop rsi ; pop rbx ; stc ; dec dword ptr [rax - 0x77] ; ret
0x000000000001fc1a : pop rsi ; ret
0x00000000000e4d4b : pop rsi ; ret 0xcdbb
0x000000000005adb4 : pop rsi ; retf
0x000000000000245f : pop rsi ; retf -0x75c1
0x00000000000dd734 : pop rsi ; sbb byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000117932 : pop rsi ; xor eax, eax ; jmp rcx
0x0000000000122930 : pop rsp ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000121de4 : pop rsp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000184d64 : pop rsp ; add dword ptr [r8], eax ; cmp dl, bh ; cmc ; jmp qword ptr [rcx]
0x00000000001866bd : pop rsp ; add dword ptr [rax], eax ; and byte ptr [rax - 0xa], cl ; call qword ptr [rdi]
0x0000000000123630 : pop rsp ; add eax, 0x83480000 ; ret 0xe910
0x000000000007a72a : pop rsp ; add eax, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000185964 : pop rsp ; add qword ptr [r8], r8 ; fcomp dword ptr [rsi + rsi*8] ; jmp qword ptr [rcx]
0x00000000000c5ba3 : pop rsp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000fef3a : pop rsp ; and al, 0x44 ; call 0xdb965
0x00000000000a7fd5 : pop rsp ; and al, 0xf0 ; movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x00000000001783ec : pop rsp ; and eax, 0x7e500000 ; out dx, eax ; jmp qword ptr [rcx]
0x0000000000182f64 : pop rsp ; and eax, 0x86580001 ; cmc ; jmp qword ptr [rcx]
0x000000000016c9ac : pop rsp ; cmc ; add byte ptr [rax], al ; je 0x16c9c1 ; int1 ; jmp rsp
0x0000000000174264 : pop rsp ; cmp byte ptr [rax], al ; add al, bh ; xor ebp, esp ; call qword ptr [rax]
0x000000000016f064 : pop rsp ; fld dword ptr [rcx] ; add ah, dh ; ret 0xfff8
0x000000000007d390 : pop rsp ; in al, 0x31 ; add byte ptr [rax - 0x77], cl ; retf -0x76b8
0x0000000000177664 : pop rsp ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; js 0x1776bd ; out dx, eax ; jmp qword ptr [rdx]
0x000000000006b984 : pop rsp ; jmp rax
0x000000000017d364 : pop rsp ; leave ; add byte ptr [rax], al ; call 0xffffffffd817c559
0x00000000000f09b1 : pop rsp ; mov rdx, rax ; jmp rcx
0x00000000000c14b4 : pop rsp ; neg eax ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001207c0 : pop rsp ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000069469 : pop rsp ; pop r13 ; jmp rax
0x000000000003c815 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; fmul st(0) ; ret
0x000000000003c78d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; fmulp st(1) ; ret
0x000000000007b81c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000000207c5 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000001fc64 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000001fc16 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000011792e : pop rsp ; pop r13 ; pop r14 ; xor eax, eax ; jmp rcx
0x0000000000066996 : pop rsp ; pop r13 ; pop rbp ; ret
0x000000000001fb19 : pop rsp ; pop r13 ; ret
0x00000000000f0826 : pop rsp ; pop r14 ; pop r15 ; ret
0x00000000000a3f95 : pop rsp ; pop r14 ; ret
0x0000000000001eaa : pop rsp ; pop rax ; xchg eax, edi ; retf 0x20f4
0x00000000000351e7 : pop rsp ; pop rbp ; ret
0x0000000000185e64 : pop rsp ; push rsp ; add dword ptr [rax], eax ; call 0x221854a9
0x0000000000003848 : pop rsp ; ret
0x000000000003f223 : pop rsp ; ret 0x35
0x00000000000c3f65 : pop rsp ; ret 0x4d08
0x000000000000319d : pop rsp ; ret 0x52c0
0x000000000017d564 : pop rsp ; retf
0x0000000000024d85 : pop rsp ; retf 0x13
0x0000000000042159 : pop rsp ; retf 0x4df0
0x000000000015a127 : pop rsp ; sbb ebp, ebx ; retf
0x000000000017b964 : pop rsp ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; test al, 0x82 ; cli ; call qword ptr [rax]
0x000000000017b564 : pop rsp ; stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; pop rax ; jle 0x17b562 ; jmp qword ptr [rcx]
0x00000000000a812f : pop rsp ; sub r8, rdx ; lea rax, qword ptr [r8 + rax*4] ; ret
0x0000000000173b64 : pop rsp ; xor dword ptr [rax], eax ; add byte ptr [rax], bl ; and ch, ah ; call qword ptr [rcx]
0x00000000000562ff : popfq ; add byte ptr [rax], al ; add byte ptr [rbx - 0x5ff43], al ; call qword ptr [rax]
0x000000000017e181 : popfq ; call qword ptr [rcx]
0x000000000016fe39 : popfq ; cli ; call rsp
0x00000000001817e9 : popfq ; hlt ; jmp qword ptr [rdi]
0x000000000017e1c9 : popfq ; jmp qword ptr [rcx]
0x000000000015a0ac : popfq ; jrcxz 0x15a071 ; add dword ptr [rdx - 0x36a5831f], esp ; retf
0x00000000000f26d2 : popfq ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000cee97 : popfq ; or dh, ch ; dec dword ptr [rax + 0x63] ; ret
0x000000000016bf21 : popfq ; out dx, eax ; jmp rsp
0x0000000000065a47 : popfq ; ret
0x00000000000026b3 : popfq ; retf
0x000000000015ae62 : popfq ; retf -0x21b1
0x00000000000fc3d7 : popfq ; retf 0x29
0x0000000000124010 : popfq ; sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000d2307 : psadbw mm0, qword ptr [rax + rcx*2 + 1] ; and byte ptr [rax - 0x77], cl ; retf -0x118b
0x0000000000133962 : psllq mm1, qword ptr [r15] ; jg 0x13397d ; ret
0x0000000000136482 : psllq mm1, qword ptr [r15] ; jg 0x13649d ; ret
0x0000000000133963 : psllq mm1, qword ptr [rdi] ; jg 0x13397c ; ret
0x0000000000136483 : psllq mm1, qword ptr [rdi] ; jg 0x13649c ; ret
0x0000000000094606 : psllq mm1, qword ptr [rdi] ; jg 0x9461a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000094605 : psllq mm1, qword ptr [rdi] ; jg 0x9461b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000094667 : psllq mm1, qword ptr [rdi] ; jg 0x9467c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000952d6 : psllq mm1, qword ptr [rdi] ; jg 0x952ea ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000952d5 : psllq mm1, qword ptr [rdi] ; jg 0x952eb ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000095337 : psllq mm1, qword ptr [rdi] ; jg 0x9534c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000976e6 : psllq mm1, qword ptr [rdi] ; jg 0x976fa ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000976e5 : psllq mm1, qword ptr [rdi] ; jg 0x976fb ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000097747 : psllq mm1, qword ptr [rdi] ; jg 0x9775c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000981b6 : psllq mm1, qword ptr [rdi] ; jg 0x981ca ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000981b5 : psllq mm1, qword ptr [rdi] ; jg 0x981cb ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000098217 : psllq mm1, qword ptr [rdi] ; jg 0x9822c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000ab06c : psubb mm1, qword ptr [rax - 0x77] ; ret
0x0000000000062adc : push -0x14000005 ; retf
0x0000000000064039 : push -0x14000005 ; ror byte ptr [rax - 0x7d], 1 ; ret 0xbe08
0x00000000000f3628 : push -0x16000001 ; retf -5
0x000000000015a6b5 : push -0x57d3205 ; call 0xffffffffab2371b5
0x0000000000002c09 : push -0x7329150 ; ret
0x000000000010292a : push -0x76000001 ; ret 0x4389
0x0000000000100574 : push -0x76000003 ; ret 0x8aeb
0x000000000003bd42 : push -0x76b716d7 ; fimul dword ptr [rax - 0x77] ; ret
0x00000000000559d6 : push -0x7c000006 ; ret 0x8908
0x0000000000147634 : push -0x9ffffff ; ret 0x7501
0x00000000000290cc : push -0xc6f0001 ; ret
0x000000000009aa67 : push -0xfb872b8 ; ret
0x000000000016b295 : push 0 ; add ah, dh ; loopne 0x16b28c ; call rsp
0x00000000000b901d : push 0 ; add byte ptr [rax], al ; syscall
0x000000000010ae9a : push 0 ; push 0x19 ; call qword ptr [rax]
0x000000000010ae9c : push 0x19 ; call qword ptr [rax]
0x0000000000159eb5 : push 0x1b6e41b5 ; std ; retf
0x000000000010d415 : push 0x1b804 ; add byte ptr [rax], al ; ret
0x000000000017723d : push 0x40f00000 ; out dx, eax ; jmp qword ptr [rdi]
0x0000000000180dde : push 0x41180e0a ; ret
0x000000000017a1c1 : push 0x41300e0a ; ret
0x000000000018f452 : push 0x41380e0a ; ret
0x000000000014abcc : push 0x58ffedfa ; cli ; in eax, dx ; call rax
0x000000000016a515 : push 0x6a20fffc ; cld ; jmp qword ptr [rax]
0x000000000015ab42 : push 0x6e ; ja 0x15aacd ; ret 0x48f
0x0000000000073fcf : push 0x74c98548 ; and byte ptr [rax + 0x39], cl ; retf
0x00000000001586c1 : push 0xa2 ; cld ; shr al, cl ; add al, 0x3d ; retf
0x000000000015850e : push 0xaf ; xlatb ; out 0xb3, al ; retf 0xe80
0x0000000000158e84 : push 0xd0 ; retf -0x18d2
0x000000000017a2c4 : push 0xe ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; push rcx ; ret
0x000000000009ad82 : push 0xe2 ; or al, byte ptr [rax] ; ret
0x000000000016c5a9 : push 0xf0 ; jmp rsp
0x000000000016a4b9 : push 0xfc ; call qword ptr [rax + 0x20fffc6c]
0x00000000000b9bbf : push 0xfc ; dec dword ptr [rax - 0x77] ; ret
0x000000000016a519 : push 0xfc ; jmp qword ptr [rax]
0x000000000015a422 : push 0xfd4cbe ; retf 0xf64
0x0000000000112bae : push 2 ; add rdi, 0x68 ; jmp rcx
0x0000000000095062 : push 5 ; add byte ptr [rax], al ; ret
0x000000000016a483 : push qword ptr [rax + 0x2b] ; cld ; inc eax ; sub al, 0xfc ; call qword ptr [rax]
0x000000000016a053 : push qword ptr [rax + 0x30fffbeb] ; in eax, dx ; sti ; jmp rax
0x000000000016a3ff : push qword ptr [rax + 0x35] ; cld ; jmp qword ptr [rax]
0x000000000016a37f : push qword ptr [rax + 0x36] ; cld ; push qword ptr [rax] ; cmp ah, bh ; call qword ptr [rax]
0x000000000016a3e3 : push qword ptr [rax + 0x37] ; cld ; inc dword ptr [rax + 0x39] ; cld ; jmp qword ptr [rax]
0x000000000016a683 : push qword ptr [rax + 0x40fffc95] ; xchg eax, ebp ; cld ; call rax
0x000000000016a5fb : push qword ptr [rax + 0x50] ; cld ; inc eax ; push rcx ; cld ; call qword ptr [rax]
0x000000000016a89b : push qword ptr [rax + 0x50fffc92] ; mov ah, bh ; call qword ptr [rax]
0x000000000016a64f : push qword ptr [rax + 0x57] ; cld ; inc eax ; pop rax ; cld ; call qword ptr [rax]
0x0000000000169f17 : push qword ptr [rax + 0x70] ; sti ; call qword ptr [rax - 0x2f00049c]
0x000000000015e3a7 : push qword ptr [rax + 0x70fff5b6] ; mov dh, 0xf5 ; jmp rax
0x000000000006baf5 : push qword ptr [rax + rcx + 0x5b] ; ret
0x00000000001700bb : push qword ptr [rax + rcx*2 + 2] ; add ah, dl ; retf -6
0x0000000000106e8a : push qword ptr [rax + rdx + 0x44] ; mov eax, ebp ; syscall
0x000000000015d277 : push qword ptr [rax - 0x1f000c6b] ; xchg eax, ebp ; call qword ptr [rax]
0x0000000000161067 : push qword ptr [rax - 0x3700050c] ; hlt ; cli ; jmp rax
0x000000000015d32b : push qword ptr [rax - 0x3f000c67] ; cdq ; call rax
0x000000000015d2a3 : push qword ptr [rax - 0x3f000c6a] ; xchg eax, esi ; jmp rax
0x000000000015e3ab : push qword ptr [rax - 0x4a] ; cmc ; jmp rax
0x0000000000157913 : push qword ptr [rax - 0x5c] ; out dx, al ; push qword ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; out dx, al ; call qword ptr [rax]
0x0000000000169f8b : push qword ptr [rax - 0x6b] ; sti ; call qword ptr [rax]
0x0000000000169f6b : push qword ptr [rax - 0x78] ; sti ; call qword ptr [rax]
0x000000000015d09b : push qword ptr [rax - 0x80] ; jmp qword ptr [rax - 0x2f000c80]
0x000000000016a34f : push qword ptr [rax] ; cld ; call qword ptr [rax]
0x000000000016a383 : push qword ptr [rax] ; cmp ah, bh ; call qword ptr [rax]
0x0000000000169ff3 : push qword ptr [rax] ; enter -5, -0x80 ; leave ; sti ; call rax
0x000000000016a057 : push qword ptr [rax] ; in eax, dx ; sti ; jmp rax
0x0000000000169f07 : push qword ptr [rax] ; insd dword ptr [rdi], dx ; sti ; inc dword ptr [rax] ; outsb dx, byte ptr [rsi] ; sti ; call rax
0x0000000000169f47 : push qword ptr [rax] ; jl 0x169f4a ; jmp qword ptr [rax]
0x0000000000093e6f : push qword ptr [rax] ; leave ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x000000000016afcf : push qword ptr [rax] ; mov al, 0xfc ; jmp qword ptr [rax + 0x10fffcaf]
0x000000000015e7f7 : push qword ptr [rax] ; mov ebp, 0xbd20fff5 ; cmc ; jmp qword ptr [rax]
0x0000000000157917 : push qword ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; out dx, al ; call qword ptr [rax]
0x000000000016a5ab : push qword ptr [rax] ; movsxd rdi, esp ; jmp qword ptr [rax]
0x000000000015c22f : push qword ptr [rax] ; sub dh, al ; call rsi
0x000000000015c22b : push qword ptr [rax] ; sub dh, al ; push qword ptr [rax] ; sub dh, al ; call rsi
0x0000000000169f63 : push qword ptr [rax] ; test edi, ebx ; call rax
0x0000000000169f83 : push qword ptr [rax] ; xchg eax, edx ; sti ; call rax
0x0000000000148fb8 : push qword ptr [rbp + 0x1a] ; xor eax, eax ; ret
0x0000000000074a78 : push qword ptr [rbp + 0x5b] ; pop rbp ; pop r12 ; ret
0x000000000006dbeb : push qword ptr [rbp + 2] ; pop rbx ; ret
0x00000000000a965d : push qword ptr [rbp + 8] ; ret
0x0000000000111c65 : push qword ptr [rbp + rax - 0x18] ; retf
0x0000000000074f6d : push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x0000000000066e21 : push qword ptr [rbp + rbp*4 - 0x77] ; ret 0xe283
0x000000000011e6c0 : push qword ptr [rbp + rcx + 0x48] ; add esp, 8 ; ret
0x000000000016acef : push qword ptr [rbp + rdi*4 - 0x42bb0004] ; cld ; call rsp
0x000000000016cad3 : push qword ptr [rbp + rdi*8 + 0x31540000] ; int1 ; call rsp
0x00000000000b3fee : push qword ptr [rbp + rsi - 0x77] ; ret 0xe283
0x00000000000eb2c0 : push qword ptr [rbp + rsi - 0x7d] ; rol byte ptr [rcx], 0x66 ; mov dword ptr [rdx], eax ; ret
0x000000000004297e : push qword ptr [rbp - 0x11] ; mov rax, rdx ; ret
0x000000000009aece : push qword ptr [rbp - 0x11] ; sub rax, 4 ; ret
0x0000000000100238 : push qword ptr [rbp - 0x13] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000107afb : push qword ptr [rbp - 0x16] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f39df : push qword ptr [rbp - 0x1a] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000752d0 : push qword ptr [rbp - 0x44] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000149cfd : push qword ptr [rbp - 0xe] ; pop rbx ; ret
0x0000000000149cdb : push qword ptr [rbp - 0xe] ; ret
0x00000000000f5ea2 : push qword ptr [rbp - 0xe] ; xor eax, eax ; leave ; ret
0x00000000000b8215 : push qword ptr [rbx + 0x31] ; ret
0x00000000000d9ee8 : push qword ptr [rbx + 0x34] ; ret
0x000000000003331c : push qword ptr [rbx + 1] ; ret
0x0000000000041b36 : push qword ptr [rbx + 3] ; xor eax, eax ; ret
0x00000000000eab48 : push qword ptr [rbx - 0x48] ; adc al, 0 ; add byte ptr [rax], al ; syscall
0x000000000015bf7b : push qword ptr [rbx] ; sbb eax, esi ; call qword ptr [rax]
0x000000000015bf9f : push qword ptr [rbx] ; sbb eax, esi ; push qword ptr [rbx] ; sbb eax, esi ; call qword ptr [rax]
0x000000000015df93 : push qword ptr [rcx + 0x11] ; cmc ; call rsp
0x00000000000832a4 : push qword ptr [rcx + rsi + 0xf] ; mov dh, 0x75 ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000016da13 : push qword ptr [rcx - 0x596bffff] ; cmc ; jmp rsp
0x000000000016bd2b : push qword ptr [rcx - 0x6e6c0000] ; in eax, dx ; call rsp
0x00000000000d6933 : push qword ptr [rcx] ; fild dword ptr [rbp - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret
0x000000000005e9ea : push qword ptr [rcx] ; imul al ; sahf ; retf 3
0x00000000000c3d34 : push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000c6454 : push qword ptr [rcx] ; rol byte ptr [rax + 0xf00657b], cl ; xchg eax, ebp ; ret 0xd201
0x000000000005875a : push qword ptr [rcx] ; rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x000000000003df0a : push qword ptr [rcx] ; rol byte ptr [rcx - 0x7d], cl ; clc ; adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8348
0x000000000006f398 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00000000000f5c0c : push qword ptr [rdi + 0x1b] ; ret
0x00000000000dbcd7 : push qword ptr [rdi + 0x36] ; ret
0x000000000016a25f : push qword ptr [rdi + 0x41fffdc1] ; ret 0xfffd
0x00000000000e0913 : push qword ptr [rdi + 0xa] ; ret
0x00000000000e9b52 : push qword ptr [rdi + 0xb] ; ret
0x0000000000033351 : push qword ptr [rdi + 0xc] ; ret
0x000000000016e673 : push qword ptr [rdi + 1] ; add ah, al ; ret
0x00000000000b927c : push qword ptr [rdi + 1] ; ret
0x000000000003339b : push qword ptr [rdi + 2] ; ret
0x00000000000db29a : push qword ptr [rdi + 3] ; ret
0x0000000000071a50 : push qword ptr [rdi + 5] ; ret
0x00000000000b7fff : push qword ptr [rdi + 6] ; ret
0x00000000000b4c06 : push qword ptr [rdi + 7] ; ret
0x00000000000332e5 : push qword ptr [rdi + 8] ; ret
0x00000000000722a4 : push qword ptr [rdi + 9] ; pop rbx ; ret
0x00000000000a88ac : push qword ptr [rdi + 9] ; ret
0x00000000000d01b6 : push qword ptr [rdi + rax - 0x48] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000f5be4 : push qword ptr [rdi - 0x33] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000016a72f : push qword ptr [rdx + 0x42fffc97] ; xchg eax, edi ; cld ; call rdx
0x000000000016d0b3 : push qword ptr [rdx + 1] ; add ah, dl ; or bl, dh ; jmp rsp
0x000000000006c34a : push qword ptr [rdx + 3] ; ret
0x000000000016cbc3 : push qword ptr [rdx + rax + 0x5a240001] ; int1 ; jmp rsp
0x000000000016b8f3 : push qword ptr [rdx + rcx*4 - 0x52fc0000] ; in al, dx ; jmp rsp
0x000000000016c0bb : push qword ptr [rdx + rdi*4] ; add byte ptr [rcx + rbp*8], dh ; out dx, eax ; jmp rsp
0x000000000016a7df : push qword ptr [rdx + rdx*4 - 4] ; jmp rsp
0x000000000009b76b : push qword ptr [rdx + rsi*2 - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret 0xe883
0x000000000016bfbb : push qword ptr [rdx + rsi*4] ; add byte ptr [rsp + rax*8 - 0x11], ah ; call rsp
0x000000000016ae4f : push qword ptr [rdx - 0x50] ; cld ; jmp rdx
0x000000000016a6cb : push qword ptr [rsi + 0x46fffc94] ; xchg eax, esp ; cld ; call rsi
0x000000000016a103 : push qword ptr [rsi + 0x46fffdb0] ; mov cl, 0xfd ; call rsi
0x000000000016cb03 : push qword ptr [rsi + rdi*8 + 0x35240000] ; int1 ; jmp rsp
0x000000000016a7f7 : push qword ptr [rsi + rdx*4 - 0x69bb0004] ; cld ; call rsp
0x000000000015defb : push qword ptr [rsi - 0x5c000ade] ; and dh, ch ; call rsp
0x000000000016ef93 : push qword ptr [rsp + rdx*8 - 0x537bffff] ; clc ; call rsp
0x0000000000112c46 : push r12 ; mov eax, 1 ; ret
0x0000000000114f0c : push r13 ; lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x0000000000001e70 : push r13 ; salc ; retf 0x559a
0x0000000000114f0a : push r14 ; push r13 ; lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x000000000007471c : push r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000015856c : push r8 ; xor byte ptr [rcx], ah ; retf
0x000000000010c54a : push rax ; adc al, 0x8b ; push rbx ; xor byte ptr [rdi], cl ; retf 0x5089
0x000000000010c3fc : push rax ; adc al, 0xf ; retf -0x2e77
0x000000000007d490 : push rax ; adc byte ptr [rax + 3], cl ; push rax ; sbb byte ptr [rax + 0x31], cl ; retf -0x76b8
0x000000000010c541 : push rax ; adc byte ptr [rax - 0x75], cl ; push rbx ; sub byte ptr [rdi], cl ; retf 0x5089
0x000000000006b5ca : push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000075c31 : push rax ; adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000010c3f1 : push rax ; adc byte ptr [rdi], cl ; retf -0x2e77
0x000000000010b0f1 : push rax ; adc dh, dh ; ret 0x7401
0x00000000000786cd : push rax ; adc dh, dh ; ret 0xf0f
0x000000000004b965 : push rax ; add al, 0x75 ; out -0x73, eax ; dec dword ptr [r8 - 0x77] ; ret 0xf748
0x0000000000088e2d : push rax ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000007471d : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000003c321 : push rax ; add dword ptr [rax + 0xf], ecx ; fucompp ; retf
0x000000000007143c : push rax ; add dword ptr [rax - 0x77], ecx ; push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x00000000000efb63 : push rax ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000185a35 : push rax ; add dword ptr [rax], eax ; clc ; xor esi, esi ; jmp qword ptr [rcx]
0x000000000016d7bd : push rax ; add dword ptr [rax], eax ; in al, -0x1f ; hlt ; jmp rsp
0x0000000000185aad : push rax ; add dword ptr [rax], eax ; xor dh, dh ; call qword ptr [rcx]
0x000000000008e2fa : push rax ; add dword ptr [rcx - 0x77], ecx ; ret 0x8941
0x0000000000117ce9 : push rax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000006c319 : push rax ; and byte ptr [rax - 0x75], cl ; or byte ptr [rax + 0x39], cl ; retf 0x776
0x000000000011ce11 : push rax ; and byte ptr [rax - 0x77], cl ; ret 0x3d83
0x0000000000021168 : push rax ; call rbx
0x000000000018e2f0 : push rax ; clc ; call qword ptr [rsi]
0x000000000016a5e0 : push rax ; cld ; call qword ptr [rax - 0x1f0003b8]
0x00000000000c314b : push rax ; cld ; cmp esi, dword ptr [rdi + 4] ; jl 0xc3148 ; ret
0x000000000016a5fd : push rax ; cld ; inc eax ; push rcx ; cld ; call qword ptr [rax]
0x0000000000184d80 : push rax ; cli ; cmc ; jmp qword ptr [rcx]
0x000000000016a407 : push rax ; cmp ah, bh ; call rax
0x000000000016a34c : push rax ; cmp al, 0xfc ; push qword ptr [rax] ; cld ; call qword ptr [rax]
0x000000000016a3d0 : push rax ; cmp eax, 0x3f20fffc ; cld ; jmp qword ptr [rax]
0x000000000016a38b : push rax ; cmp edi, esp ; call rax
0x000000000017c940 : push rax ; cmpsb byte ptr [rsi], byte ptr [rdi] ; int1 ; jmp rbx
0x000000000015d2f3 : push rax ; cwde ; call qword ptr [rax]
0x000000000016a66c : push rax ; cwde ; cld ; jmp rax
0x00000000000bbab9 : push rax ; dec dword ptr [rax + 0x39] ; retf
0x0000000000100126 : push rax ; dec dword ptr [rax - 0x7d] ; cli ; std ; jbe 0x100138 ; ret
0x000000000016a4fc : push rax ; insb byte ptr [rdi], dx ; cld ; jmp rax
0x000000000016cb69 : push rax ; int1 ; jmp rsp
0x0000000000169f57 : push rax ; jg 0x169f5a ; jmp qword ptr [rax]
0x00000000001783f0 : push rax ; jle 0x1783e5 ; jmp qword ptr [rcx]
0x000000000006e442 : push rax ; lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x00000000001585da : push rax ; lodsb al, byte ptr [rsi] ; xchg eax, edx ; pop rbx ; retf
0x000000000016a8a0 : push rax ; mov ah, bh ; call qword ptr [rax]
0x000000000015e3e7 : push rax ; mov dh, 0xf5 ; call qword ptr [rax]
0x000000000015e3e3 : push rax ; mov dh, 0xf5 ; push rax ; mov dh, 0xf5 ; call qword ptr [rax]
0x000000000015e803 : push rax ; mov ebp, 0xbd20fff5 ; cmc ; jmp qword ptr [rax]
0x000000000016ab8b : push rax ; mov edx, 0xba80fffc ; cld ; call qword ptr [rax]
0x000000000016ad63 : push rax ; mov esi, 0xbe80fffc ; cld ; call qword ptr [rax]
0x000000000015e7e3 : push rax ; mov esp, 0xbcd0fff5 ; cmc ; jmp rax
0x000000000015e7df : push rax ; mov esp, 0xbcf0fff5 ; cmc ; call rax
0x0000000000113476 : push rax ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000027242 : push rax ; mov rdi, qword ptr [rsp + 0x48] ; call r14
0x00000000000247aa : push rax ; mov rdi, qword ptr [rsp + 0x48] ; call r15
0x00000000001108b0 : push rax ; mov rdi, r12 ; mov rcx, qword ptr [rsp + 0x28] ; call rcx
0x00000000000f3e66 : push rax ; mov rsi, rdx ; call rax
0x000000000010c3e6 : push rax ; or al, 0xf ; retf -0x2e77
0x000000000003126c : push rax ; or byte ptr [rax - 0x39], cl ; ret 0xfffe
0x0000000000108ad8 : push rax ; or byte ptr [rax - 0x3f], cl ; retf 0x6411
0x0000000000077562 : push rax ; or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x000000000010c3d2 : push rax ; or byte ptr [rdi], cl ; retf -0x2e77
0x0000000000079022 : push rax ; or dh, dh ; ret 0x7404
0x0000000000078f65 : push rax ; or dh, dh ; ret 0xf04
0x00000000001206cc : push rax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000016979e : push rax ; pop r9 ; clc ; ret 0x6e1f
0x00000000000ff3dd : push rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000009afed : push rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000007098 : push rax ; ret
0x000000000015ffa3 : push rax ; ret 0xfffa
0x0000000000169fe3 : push rax ; ret 0xfffb
0x00000000000f2f8c : push rax ; retf
0x0000000000007278 : push rax ; retf 0x10
0x0000000000188010 : push rax ; sal dh, 1 ; jmp qword ptr [rsi]
0x0000000000184250 : push rax ; sal ebp, cl ; jmp qword ptr [rcx]
0x000000000007d494 : push rax ; sbb byte ptr [rax + 0x31], cl ; retf -0x76b8
0x000000000006d242 : push rax ; sbb byte ptr [rax - 0x75], cl ; and byte ptr [rax + 0x39], cl ; retf -0x418b
0x0000000000075c26 : push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000006bb9a : push rax ; sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x000000000010c407 : push rax ; sbb byte ptr [rdi], cl ; retf 0x5389
0x000000000003e1e9 : push rax ; sbb eax, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; retf -0x7cf1
0x00000000000f4e55 : push rax ; shr ax, 0xe ; and eax, 1 ; ret
0x00000000000d9ff1 : push rax ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x000000000016a884 : push rax ; xchg eax, ebp ; cld ; jmp rax
0x000000000017c9d0 : push rax ; xchg eax, ebx ; cli ; jmp qword ptr [rdi]
0x000000000015d2d3 : push rax ; xchg eax, edi ; call qword ptr [rax]
0x000000000015d237 : push rax ; xchg eax, edx ; call qword ptr [rax]
0x000000000015d2af : push rax ; xchg eax, esi ; inc dword ptr [rax] ; xchg eax, edi ; jmp qword ptr [rax]
0x000000000015d267 : push rax ; xchg eax, esp ; jmp qword ptr [rax]
0x0000000000185d00 : push rax ; xor al, 0xf6 ; jmp qword ptr [rcx]
0x00000000000dec17 : push rax ; xor byte ptr [rax + 1], cl ; retf -0x76b8
0x000000000015856d : push rax ; xor byte ptr [rcx], ah ; retf
0x000000000015d0f3 : push rax ; xor ebx, 0xf38200ff ; jmp qword ptr [rax]
0x0000000000103837 : push rbp ; adc dword ptr [rcx + rcx*4 - 0x20], ecx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000116df9 : push rbp ; add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x000000000010395a : push rbp ; add dh, dh ; ret
0x000000000010381c : push rbp ; add dh, dh ; ret 0x7507
0x0000000000116df4 : push rbp ; add dword ptr [rax - 0x78], eax ; je 0x116e58 ; add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x0000000000116eec : push rbp ; add dword ptr [rax - 0x78], eax ; je 0x116f50 ; add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x000000000011bec8 : push rbp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000016ed31 : push rbp ; clc ; call rsp
0x0000000000069061 : push rbp ; cmp byte ptr [rax + 0x39], cl ; ret
0x0000000000001cb9 : push rbp ; je 0x1ce7 ; ret
0x0000000000003a86 : push rbp ; jg 0x3af5 ; xchg eax, ebp ; retf 0x10bf
0x0000000000003a85 : push rbp ; jg 0x3af6 ; xchg eax, ebp ; retf 0x10bf
0x0000000000114f0d : push rbp ; lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x00000000000f66ef : push rbp ; lea rax, qword ptr [rip + 0x328f9] ; ret
0x00000000000f661f : push rbp ; lea rax, qword ptr [rip + 0x329e9] ; ret
0x00000000000f654f : push rbp ; lea rax, qword ptr [rip + 0x32ab9] ; ret
0x0000000000089186 : push rbp ; lea rax, qword ptr [rip + 0x9fe92] ; ret
0x00000000000844c6 : push rbp ; lea rax, qword ptr [rip + 0xa4b32] ; ret
0x0000000000083e06 : push rbp ; lea rax, qword ptr [rip + 0xa5212] ; ret
0x00000000000bd8d7 : push rbp ; mov al, ch ; ret 0x375
0x000000000008dbd9 : push rbp ; mov byte ptr [rax + 0x29], cl ; ret 0x6348
0x000000000008c856 : push rbp ; mov byte ptr [rax + 0x29], cl ; ret 0x634c
0x0000000000070a6c : push rbp ; mov byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x7d], cl ; ret
0x000000000008e83b : push rbp ; mov byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000015f830 : push rbp ; mov dh, bh ; call qword ptr [rax]
0x00000000000f427c : push rbp ; nop ; mov rdx, r13 ; call rax
0x000000000003b77a : push rbp ; or al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0xed75
0x0000000000125158 : push rbp ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000f44a4 : push rbp ; or byte ptr [rax - 0x77], 0xda ; call rax
0x00000000000c37eb : push rbp ; or byte ptr [rcx - 0x75], cl ; je 0xc381d ; or byte ptr [rcx], ch ; ret
0x00000000000b3f20 : push rbp ; push rbx ; mov rbx, rsi ; sub rsp, 8 ; syscall
0x0000000000176dd8 : push rbp ; ret
0x00000000000026b5 : push rbp ; retf
0x0000000000001e71 : push rbp ; salc ; retf 0x559a
0x00000000000f437a : push rbp ; sbb byte ptr [rcx - 0x76b37fab], cl ; call rax
0x00000000000025e6 : push rbp ; sbb esi, dword ptr [rdx] ; sahf ; jl 0x2583 ; loop 0x25ce ; ret 0x23cb
0x00000000000f4201 : push rbp ; test byte ptr [rbp + 0x390b74d2], al ; ret 0xf7e
0x00000000000f5d00 : push rbp ; xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x00000000000838aa : push rbp ; xor rax, rax ; ret
0x000000000010c51b : push rbx ; adc byte ptr [rdi], cl ; retf 0x5089
0x00000000000004b5 : push rbx ; add al, 4 ; ret 0x6080
0x00000000001702b5 : push rbx ; add al, byte ptr [rax] ; push rsp ; add edi, ebx ; call rsp
0x0000000000033c9e : push rbx ; add byte ptr ss:[rcx], bh ; ret 0x237f
0x000000000004041e : push rbx ; add cl, byte ptr [rax - 0x73] ; add cl, byte ptr [r8 - 0x77] ; retf
0x00000000000e72c1 : push rbx ; add dword ptr [rax - 0x73], ecx ; add cl, byte ptr [r8 + 0x39] ; ret 0xf48
0x00000000000386f3 : push rbx ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000185d45 : push rbx ; add dword ptr [rax], eax ; cwde ; xor al, 0xf6 ; jmp qword ptr [rcx]
0x000000000016d83d : push rbx ; add dword ptr [rax], eax ; xchg eax, esp ; add ch, dh ; call rsp
0x00000000000777e9 : push rbx ; add eax, 0x39480000 ; ret
0x00000000000bd25a : push rbx ; add ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000f91a2 : push rbx ; and byte ptr [rcx], ch ; retf 0x44e9
0x000000000007013a : push rbx ; and byte ptr [rcx], ch ; retf 0x55e9
0x000000000010c53c : push rbx ; and byte ptr [rdi], cl ; retf 0x5089
0x000000000016a645 : push rbx ; cld ; call rax
0x0000000000002057 : push rbx ; cmp byte ptr [rdi - 0x19ade7f3], dl ; ret
0x0000000000146ef5 : push rbx ; jb 0x146f05 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000b98d5 : push rbx ; je 0xb98aa ; mov eax, 1 ; ret
0x00000000000b98d4 : push rbx ; je 0xb98ab ; mov eax, 1 ; ret
0x000000000009aa4c : push rbx ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000b3f21 : push rbx ; mov rbx, rsi ; sub rsp, 8 ; syscall
0x00000000000956c2 : push rbx ; movq qword ptr [rdi + 0x30], mm7 ; ret
0x000000000004ab89 : push rbx ; or al, 0x85 ; sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x0000000000066672 : push rbx ; or al, 0xf6 ; ret 0xf04
0x0000000000003cec : push rbx ; or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x00000000000f7619 : push rbx ; or esi, edi ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x8e ; retf 0
0x000000000002bb38 : push rbx ; ret
0x0000000000101568 : push rbx ; ret 0x29
0x000000000010c52f : push rbx ; sbb byte ptr [rax - 0x73], cl ; and byte ptr [rdi], cl ; retf 0x5089
0x000000000006fff6 : push rbx ; sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000f1c46 : push rbx ; sbb dh, dh ; ret 0x7504
0x00000000000f269a : push rbx ; sbb dh, dh ; ret 0x7508
0x00000000000c60b9 : push rbx ; sub al, 0x89 ; ror dword ptr [rax - 0x7d], -0x40 ; add dword ptr [rcx], edi ; retf -0x1481
0x00000000000c2a6d : push rbx ; sub byte ptr [rax - 0x75], cl ; cmp eax, dword ptr [rcx] ; ret 0xc083
0x000000000010c545 : push rbx ; sub byte ptr [rdi], cl ; retf 0x5089
0x00000000000e190c : push rbx ; sub rsp, 0xa8 ; syscall
0x0000000000002cbc : push rbx ; xchg dl, cl ; rcr byte ptr [r10], 1 ; retf 0x2217
0x0000000000159f9c : push rbx ; xchg eax, edx ; jae 0x159f7b ; push rsi ; pop rdx ; je 0x159f70 ; ret 0xacfc
0x000000000010c54d : push rbx ; xor byte ptr [rdi], cl ; retf 0x5089
0x0000000000110415 : push rcx ; adc byte ptr [rax + 1], bh ; ret
0x00000000000d447f : push rcx ; add al, 0x85 ; sal byte ptr [rsp + rax + 0x39], cl ; ret 0x8675
0x000000000013402c : push rcx ; add byte ptr es:[rax + 0x39], cl ; retf -0x7cf1
0x00000000000bff2d : push rcx ; add dword ptr [rax - 0x77], ecx ; retf
0x0000000000185b0d : push rcx ; add dword ptr [rax], eax ; nop ; xor dh, dh ; jmp qword ptr [rcx]
0x0000000000185b3d : push rcx ; add dword ptr [rax], eax ; sal byte ptr [rdx], 0xf6 ; jmp qword ptr [rcx]
0x000000000008e979 : push rcx ; add esi, eax ; add dword ptr [rax], eax ; mov qword ptr [rdi], rdx ; ret
0x000000000008e9f8 : push rcx ; add esi, eax ; add dword ptr [rax], eax ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x0000000000159225 : push rcx ; call qword ptr [rsi]
0x000000000007bcfb : push rcx ; clc ; cmovne rax, rdx ; ret
0x000000000016a601 : push rcx ; cld ; call qword ptr [rax]
0x00000000000a6304 : push rcx ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x000000000015e8c3 : push rcx ; hlt ; cmc ; dec dword ptr [rbp + rsi*8 - 0xb] ; jmp rsp
0x00000000001466ed : push rcx ; jl 0x14673e ; adc dword ptr [rcx - 1], edi ; ret
0x0000000000146854 : push rcx ; jl 0x1468a5 ; adc dword ptr [rcx + 7], edi ; ret
0x0000000000001b2c : push rcx ; jns 0x1b39 ; ret
0x000000000016a0c0 : push rcx ; mov al, 0xfd ; call rcx
0x000000000013e986 : push rcx ; or byte ptr [rax - 0x73], cl ; adc byte ptr [r8 - 0x77], cl ; retf -0x7cb8
0x000000000010e0cc : push rcx ; or byte ptr [rbp - 0x77], cl ; ret
0x000000000017a2cb : push rcx ; ret
0x00000000000e930b : push rcx ; ret 0
0x0000000000059543 : push rcx ; retf
0x0000000000184c29 : push rcx ; retf 0
0x000000000010e02d : push rcx ; sbb byte ptr [rcx - 0x77], cl ; retf
0x000000000016a0b0 : push rcx ; scasb al, byte ptr [rdi] ; std ; call rcx
0x000000000016a0b8 : push rcx ; scasd eax, dword ptr [rdi] ; std ; call rcx
0x0000000000170629 : push rcx ; sti ; call rsp
0x0000000000098582 : push rdi ; adc al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x0000000000096b12 : push rdi ; adc al, 0x48 ; lea eax, dword ptr [rdi + 0x15] ; ret
0x000000000007d10c : push rdi ; adc byte ptr [rax + 0x33], cl ; push rdi ; or byte ptr [rax + 0x39], cl ; ret 0x6174
0x0000000000112c64 : push rdi ; adc byte ptr [rax + 1], bh ; ret
0x00000000000986e0 : push rdi ; adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000983b8 : push rdi ; add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000983ca : push rdi ; add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x000000000008ee14 : push rdi ; add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x000000000009695a : push rdi ; add al, 0x48 ; lea eax, dword ptr [rdi + 6] ; ret
0x0000000000133ac9 : push rdi ; add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x000000000008ed84 : push rdi ; add al, 0x48 ; mov eax, edi ; mov byte ptr [rdi + 6], 0 ; ret
0x000000000008ed14 : push rdi ; add al, 0x48 ; mov eax, edi ; ret
0x000000000002bd0c : push rdi ; add al, 0x72 ; or bl, dh ; ret
0x000000000009838a : push rdi ; add dh, byte ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x0000000000095bdc : push rdi ; add eax, 0xc478d48 ; ret
0x0000000000096a1c : push rdi ; add eax, 0xd478d48 ; ret
0x00000000000f6742 : push rdi ; add eax, dword ptr [rax] ; ret
0x00000000000983e8 : push rdi ; add esi, dword ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x0000000000119f35 : push rdi ; and dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000012d8c8 : push rdi ; clc ; ret
0x00000000000038fb : push rdi ; clc ; salc ; jb 0x3981 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x000000000016a651 : push rdi ; cld ; inc eax ; pop rax ; cld ; call qword ptr [rax]
0x000000000012da40 : push rdi ; cld ; ret
0x000000000012e567 : push rdi ; cli ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001333a9 : push rdi ; cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001134f5 : push rdi ; cmp byte ptr [rax + 1], bh ; ret
0x00000000000b85b8 : push rdi ; cmp eax, 0xfffff001 ; jae 0xb85c9 ; ret
0x0000000000133329 : push rdi ; hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000013317a : push rdi ; int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000018cd79 : push rdi ; jmp rsi
0x000000000015f804 : push rdi ; mov bh, dh ; call qword ptr [rdi + 0x10fff787]
0x000000000015f748 : push rdi ; mov bh, dh ; call rax
0x0000000000074644 : push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x000000000013320a : push rdi ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000103910 : push rdi ; or al, 0x48 ; mov dword ptr [rsi], edi ; ret
0x000000000005021e : push rdi ; or al, 0x83 ; ret
0x00000000000501ab : push rdi ; or al, 0xf6 ; ret 0xf08
0x000000000007d110 : push rdi ; or byte ptr [rax + 0x39], cl ; ret 0x6174
0x000000000006d5ed : push rdi ; or byte ptr [rax - 0x3f], cl ; sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x000000000009842c : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x000000000009846a : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x000000000009840a : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000a79e2 : push rdi ; or byte ptr [rbp - 0x29], dh ; ret
0x00000000000439ea : push rdi ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000004226a : push rdi ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x0000000000042271 : push rdi ; or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x0000000000071440 : push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x0000000000079a0b : push rdi ; or dh, dh ; ret 0x7402
0x0000000000095dc0 : push rdi ; or eax, 0x1c478d48 ; ret
0x0000000000096c10 : push rdi ; or eax, 0x1d478d48 ; ret
0x000000000014533e : push rdi ; ret
0x00000000001453de : push rdi ; ret 0xff3
0x0000000000036f90 : push rdi ; ret 0xffef
0x0000000000144f03 : push rdi ; retf
0x0000000000144f83 : push rdi ; retf -0x354e
0x00000000000ffe65 : push rdi ; retf -0xe
0x00000000000efd2d : push rdi ; sbb byte ptr [rax + 0x39], cl ; ret 0x8f0f
0x0000000000117f93 : push rdi ; sbb byte ptr [rax + 1], bh ; ret
0x000000000012e767 : push rdi ; stc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012df8a : push rdi ; std ; mov word ptr [rdi - 2], cx ; ret
0x000000000012e367 : push rdi ; sti ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000011353d : push rdi ; sub byte ptr [rax + 1], bh ; ret
0x0000000000117ef2 : push rdi ; sub byte ptr [rbx - 0x3f7cb7ea], cl ; add al, 0xf ; retf 0x5089
0x0000000000117f22 : push rdi ; sub byte ptr [rbx - 0x3f7cb7f0], cl ; add al, 0xf ; retf 0x1689
0x00000000000e627c : push rdi ; sub dh, al ; add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000986c0 : push rdi ; wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x0000000000075f98 : push rdi ; xor al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000008245b : push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x0000000000185c9d : push rdx ; add dword ptr [rax], eax ; adc byte ptr [rsi + rsi*8], dh ; jmp qword ptr [rcx]
0x0000000000185c85 : push rdx ; add dword ptr [rax], eax ; clc ; xor esi, esi ; jmp qword ptr [rcx]
0x0000000000185ce5 : push rdx ; add dword ptr [rax], eax ; cmp byte ptr [rsi + rsi*8], dh ; jmp qword ptr [rcx]
0x0000000000185c0d : push rdx ; add dword ptr [rax], eax ; nop ; xor esi, esi ; jmp qword ptr [rcx]
0x0000000000185cfd : push rdx ; add dword ptr [rax], eax ; push rax ; xor al, 0xf6 ; jmp qword ptr [rcx]
0x000000000010448e : push rdx ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x000000000016ed01 : push rdx ; clc ; jmp rsp
0x000000000016ae4b : push rdx ; mov al, 0xfc ; push qword ptr [rdx - 0x50] ; cld ; jmp rdx
0x000000000016a930 : push rdx ; mov dr1, esp ; call rdx
0x000000000016a948 : push rdx ; mov edi, esp ; call rdx
0x000000000016ac37 : push rdx ; mov esp, 0xbc82fffc ; cld ; call qword ptr [rdx]
0x000000000016a940 : push rdx ; mov esp, dr1 ; call rdx
0x0000000000083e0b : push rdx ; or al, byte ptr [rax] ; ret
0x000000000007e5b6 : push rdx ; or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xd], cl ; ret
0x000000000007cc7c : push rdx ; or byte ptr [rcx - 0x7d], cl ; ret 0x4820
0x0000000000178a40 : push rdx ; ret
0x0000000000101562 : push rdx ; ret 0x29
0x0000000000001b11 : push rdx ; test dword ptr [rbx + 0x59e7c8ee], esi ; pop rbx ; ret 0x2a63
0x000000000016a758 : push rdx ; xchg eax, ebx ; cld ; jmp rdx
0x00000000000cfb13 : push rsi ; adc byte ptr [rax + 0x63], cl ; ret
0x0000000000144024 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000146d39 : push rsi ; add ah, byte ptr [rdx - 0xf] ; jl 0x146d90 ; adc dword ptr [rsi + 3], edx ; ret
0x000000000017033d : push rsi ; add al, byte ptr [rax] ; je 0x17035c ; sti ; jmp rsp
0x0000000000133d61 : push rsi ; add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x000000000016d8a5 : push rsi ; add dword ptr [rax], eax ; cmc ; jmp rsp
0x00000000001860ed : push rsi ; add dword ptr [rax], eax ; cmp byte ptr [rcx], 0xf6 ; jmp qword ptr [rcx]
0x0000000000186105 : push rsi ; add dword ptr [rax], eax ; cwde ; cmp esi, esi ; jmp qword ptr [rcx]
0x0000000000133dd1 : push rsi ; add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x0000000000094595 : push rsi ; add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x0000000000133cf1 : push rsi ; add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000094533 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; ret
0x0000000000144039 : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000189409 : push rsi ; call qword ptr [rax]
0x00000000001893d9 : push rsi ; call qword ptr [rdi]
0x000000000012d9f2 : push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000012e161 : push rsi ; cld ; mov dword ptr [rdi - 4], edx ; ret
0x000000000012dd95 : push rsi ; cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000012df75 : push rsi ; cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000012e155 : push rsi ; cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000012dbb5 : push rsi ; cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015ab40 : push rsi ; cli ; push 0x6e ; ja 0x15aacf ; ret 0x48f
0x0000000000148af6 : push rsi ; cmc ; sub eax, edx ; ret
0x0000000000148ae6 : push rsi ; hlt ; sub eax, edx ; ret
0x0000000000040da0 : push rsi ; inc byte ptr [rbx - 0x6bf0021e] ; ret 0x8341
0x0000000000148ab6 : push rsi ; int1 ; sub eax, edx ; ret
0x00000000000f3e42 : push rsi ; je 0xf3e58 ; mov eax, 7 ; ret
0x00000000000da37b : push rsi ; js 0xda3cf ; mov dword ptr [rdi + 0x80], edx ; ret
0x00000000000daf78 : push rsi ; js 0xdafcc ; mov dword ptr [rdi + 0x100], edx ; ret
0x000000000016abd3 : push rsi ; mov ecx, 0xb986fffc ; cld ; call qword ptr [rsi]
0x0000000000079601 : push rsi ; or byte ptr [rax - 0x77], cl ; fimul dword ptr [rax - 0x7d] ; retf 0x4801
0x00000000000c3de4 : push rsi ; or byte ptr [rax - 0x77], cl ; ret 0x1bb
0x00000000000e5c8b : push rsi ; or byte ptr [rax - 0x77], cl ; retf
0x000000000010de15 : push rsi ; or byte ptr [rcx - 0x77], cl ; retf
0x00000000000a79df : push rsi ; or byte ptr [rcx], bh ; push rdi ; or byte ptr [rbp - 0x29], dh ; ret
0x00000000000bdab6 : push rsi ; out 2, al ; add byte ptr [rcx - 0x77], al ; ret
0x0000000000159fa0 : push rsi ; pop rdx ; je 0x159f6c ; ret 0xacfc
0x0000000000114f0b : push rsi ; push r13 ; lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x000000000003272f : push rsi ; ret
0x00000000000c9190 : push rsi ; ret 0x7420
0x000000000003bc25 : push rsi ; retf
0x00000000000f3656 : push rsi ; retf -1
0x000000000010deb3 : push rsi ; sbb byte ptr [rbp - 0x77], cl ; ret
0x00000000000c32dd : push rsi ; sbb byte ptr [rcx - 0x3fcec7ba], cl ; ret
0x00000000000d5777 : push rsi ; sub byte ptr [rax - 0x7d], cl ; ret
0x0000000000148ac6 : push rsi ; sub eax, edx ; ret
0x0000000000158568 : push rsi ; xchg eax, ebp ; jge 0x15854d ; push r8 ; xor byte ptr [rcx], ah ; retf
0x000000000016a6b4 : push rsi ; xchg eax, edi ; cld ; jmp rsi
0x00000000000df717 : push rsi ; xor ax, ax ; ret
0x000000000014404e : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000e0904 : push rsp ; add byte ptr [rax], al ; mov eax, 0x10 ; syscall
0x0000000000175e15 : push rsp ; add byte ptr [rax], al ; sub bh, ch ; out dx, al ; jmp qword ptr [rcx]
0x0000000000185e65 : push rsp ; add dword ptr [rax], eax ; call 0x221854a8
0x00000000000833d9 : push rsp ; add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x000000000016d86d : push rsp ; add dword ptr [rax], eax ; sub ebp, esi ; call rsp
0x000000000018485c : push rsp ; add dword ptr ds:[rax], eax ; xor dh, ah ; cmc ; jmp qword ptr [rcx]
0x0000000000186f5c : push rsp ; add dword ptr gs:[rax], eax ; shr byte ptr [rax - 0xa], 1 ; call rsi
0x00000000001702b8 : push rsp ; add edi, ebx ; call rsp
0x000000000016de40 : push rsp ; add esi, edi ; jmp rsp
0x00000000000f0f81 : push rsp ; and al, 0x10 ; mov edi, 0x2000004 ; call rax
0x00000000000f0e7d : push rsp ; and al, 0x10 ; mov rsi, qword ptr [rsp + 8] ; call rax
0x0000000000078b06 : push rsp ; and al, 0x18 ; call rcx
0x0000000000078b01 : push rsp ; and al, 0x20 ; mov qword ptr [rsp + 0x18], r10 ; call rcx
0x000000000007878d : push rsp ; and al, 0x20 ; mov qword ptr [rsp + 0x18], rcx ; call qword ptr [rax]
0x00000000000e1d84 : push rsp ; and al, 0x38 ; mov eax, edx ; add rsp, 0x48 ; ret
0x00000000000e060b : push rsp ; and al, 0xd0 ; syscall
0x0000000000043ba0 : push rsp ; and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x0000000000043b5a : push rsp ; and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x00000000000e8cf7 : push rsp ; and al, 8 ; mov eax, 0x38 ; syscall
0x0000000000078ab1 : push rsp ; and al, 8 ; xor edi, edi ; call qword ptr [rax]
0x0000000000078432 : push rsp ; and eax, 0x950f4100 ; ret
0x0000000000182121 : push rsp ; call qword ptr [rdx]
0x000000000017f2b1 : push rsp ; call rcx
0x0000000000182139 : push rsp ; call rdx
0x000000000011bb3e : push rsp ; cld ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000016a649 : push rsp ; cld ; jmp qword ptr [rax]
0x000000000016e710 : push rsp ; fdivr st(7), st(0) ; jmp rsp
0x000000000017e95c : push rsp ; fild word ptr [rax] ; add al, ah ; retf
0x000000000016f7e8 : push rsp ; in al, -7 ; jmp rsp
0x000000000018815c : push rsp ; ja 0x188167 ; add al, ah ; sal dh, 1 ; jmp qword ptr [rsi]
0x00000000000b96d6 : push rsp ; jne 0xb9663 ; mov eax, 0x7d00 ; ret
0x000000000008f0db : push rsp ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000016aef0 : push rsp ; mov ah, 0xfc ; call rsp
0x000000000016aef8 : push rsp ; mov bl, 0xfc ; call rsp
0x000000000016af08 : push rsp ; mov cl, 0xfc ; call rsp
0x000000000016af00 : push rsp ; mov dl, 0xfc ; call rsp
0x0000000000112c47 : push rsp ; mov eax, 1 ; ret
0x0000000000124e59 : push rsp ; or eax, 0x894d0000 ; retf
0x000000000017995c : push rsp ; pop qword ptr [rax] ; add al, ah ; ret 0xffef
0x000000000016cb68 : push rsp ; push rax ; int1 ; jmp rsp
0x00000000000e190b : push rsp ; push rbx ; sub rsp, 0xa8 ; syscall
0x0000000000032729 : push rsp ; ret
0x000000000016c1f4 : push rsp ; ret 0
0x00000000000220b8 : push rsp ; ret 0x37
0x00000000000eba14 : push rsp ; ret 0x8940
0x00000000000e4d0f : push rsp ; retf
0x00000000000ec189 : push rsp ; retf -0x74c0
0x000000000016f0c8 : push rsp ; retf -8
0x000000000017d45c : push rsp ; retf 0
0x00000000000420f0 : push rsp ; retf 0x48f8
0x000000000016ed83 : push rsp ; retf 1
0x00000000000e6177 : push rsp ; sti ; dec dword ptr [rax + 0x39] ; ret
0x000000000015a76a : push rsp ; syscall
0x000000000017094b : push rsp ; xor al, 1 ; add byte ptr [rsi + rbp*8], al ; std ; call rsp
0x000000000016cad8 : push rsp ; xor ecx, esi ; call rsp
0x0000000000181ba4 : pushfq ; adc dword ptr [rcx], eax ; add al, ch ; loop 0x181ba6 ; jmp qword ptr [rax]
0x00000000001225f0 : pushfq ; adc eax, 0x83480000 ; ret 0xe910
0x000000000019154d : pushfq ; add al, byte ptr [rip - 0x10000] ; add dword ptr [rbx], ecx ; retf
0x000000000018a67d : pushfq ; add dword ptr [rax], eax ; adc byte ptr [rdi - 9], bl ; call qword ptr [rdi]
0x000000000016cc04 : pushfq ; add eax, dword ptr [rcx] ; add byte ptr [rcx + rdi*2], dh ; int1 ; call rsp
0x00000000001858a4 : pushfq ; add qword ptr [rax], r8 ; sbb byte ptr [rsi + rsi*8], bl ; jmp qword ptr [rcx]
0x0000000000040d3f : pushfq ; and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x8b4c
0x00000000001881a4 : pushfq ; ja 0x1881af ; add al, ch ; jg 0x1881ab ; jmp qword ptr [rsi]
0x000000000001fb0c : pushfq ; jmp 0x1fad4
0x0000000000179aa4 : pushfq ; nop ; add byte ptr [rax], al ; clc ; ret
0x00000000001232f0 : pushfq ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001212a4 : pushfq ; or eax, 0x83480000 ; ret 0xeb10
0x000000000016d8ec : pushfq ; pop rax ; add dword ptr [rax], eax ; insb byte ptr [rdi], dx ; cmc ; call rsp
0x0000000000032baf : pushfq ; ret
0x00000000000a9a32 : pushfq ; ret 0xd009
0x000000000016c32c : pushfq ; retf
0x000000000017d4a4 : pushfq ; retf 0
0x000000000016fa14 : pushfq ; sbb eax, 0x1f440002 ; cli ; jmp rsp
0x000000000016fc4c : pushfq ; sub al, 2 ; add byte ptr [rsp - 6], al ; jmp rsp
0x00000000001732a4 : pushfq ; sub byte ptr [rax], al ; add byte ptr [rax + 5], cl ; in al, dx ; jmp qword ptr [rcx]
0x00000000001800a4 : pushfq ; test byte ptr [rax], 0 ; cwde ; nop ; jmp qword ptr [rcx]
0x000000000016d2b4 : pushfq ; xor byte ptr [rcx], al ; add byte ptr [rsi + rcx*8 - 0xd], dh ; jmp rsp
0x000000000003f26c : pushfq ; xor eax, 0xe2d8300 ; ret 0x35
0x00000000000ff2a0 : rcl byte ptr [rax + 6], 1 ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x0000000000087bad : rcl byte ptr [rax + rax], 1 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000016a880 : rcl byte ptr [rbp - 0x6aaf0004], 0xfc ; jmp rax
0x0000000000169f88 : rcl byte ptr [rbx - 0x6a8f0005], 1 ; sti ; call qword ptr [rax]
0x0000000000002cbb : rcl byte ptr [rbx - 0x7a], 1 ; retf -0x2fb1
0x000000000015a8b1 : rcl byte ptr [rdi], cl ; retf
0x000000000015d234 : rcl byte ptr [rdx - 0x6d0f000d], 0xf3 ; call qword ptr [rax]
0x0000000000001ea7 : rcl byte ptr [rip + 0x42585c0c], 1 ; xchg eax, edi ; retf 0x20f4
0x00000000000d9ff0 : rcl dword ptr [rax - 0x3f], -0x17 ; add esi, ebx ; stosq qword ptr [rdi], rax ; ret
0x000000000015a3da : rcl dword ptr [rsi + 0x27], cl ; retf -0x3f02
0x0000000000159f9f : rcl dword ptr [rsi + 0x5a], cl ; je 0x159f6d ; ret 0xacfc
0x000000000015a3d9 : rcl qword ptr [r14 + 0x27], cl ; retf -0x3f02
0x0000000000159f9b : rcpps xmm2, xmmword ptr [rdx + 0x5a56d373] ; je 0x159f71 ; ret 0xacfc
0x0000000000032af2 : rcr bl, 0x3f ; fsubp st(1) ; ret
0x0000000000002cbf : rcr byte ptr [r10], 1 ; retf 0x2217
0x000000000015d2f0 : rcr byte ptr [rax - 0x670f000d], 1 ; call qword ptr [rax]
0x000000000016a668 : rcr byte ptr [rax - 0x67af0004], 0xfc ; jmp rax
0x000000000013987d : rcr byte ptr [rax], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000161084 : rcr byte ptr [rax], 0xfb ; inc eax ; sbb bl, bh ; jmp rax
0x0000000000161088 : rcr byte ptr [rax], 0xfb ; jmp rax
0x00000000000ef7c0 : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x00000000000890f8 : rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000b51c0 : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000069811 : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; ret
0x000000000004e5dc : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000042277 : rcr byte ptr [rbp + 0x5b], 1 ; ret
0x00000000000b90eb : rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x000000000007a79c : rcr byte ptr [rbx + 0x41], 1 ; pop rsi ; pop r15 ; ret
0x000000000007a7ed : rcr byte ptr [rbx + 0x48], cl ; mov eax, edx ; pop r14 ; pop r15 ; ret
0x0000000000030d96 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000002238c : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000a7d26 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r14 ; ret
0x0000000000028c0b : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000b520c : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000698ba : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; ret
0x00000000000b384e : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x0000000000067091 : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x0000000000069465 : rcr byte ptr [rbx + 0x5d], cl ; pop r12 ; pop r13 ; jmp rax
0x00000000000c17d5 : rcr byte ptr [rbx + 0x5d], cl ; pop r12 ; ret
0x00000000000da21c : rcr byte ptr [rbx - 0x3d], 0x90 ; xor eax, eax ; pop rbx ; ret
0x00000000000ee048 : rcr byte ptr [rbx - 0x77], cl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000000874bd : rcr byte ptr [rbx], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000015d330 : rcr byte ptr [rcx - 0x662f000d], 0xf3 ; jmp rax
0x000000000015a3bd : rcr byte ptr [rdi + 0x6d], cl ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x00000000000e2089 : rcr byte ptr [rdi], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000002cc0 : rcr byte ptr [rdx], 1 ; retf 0x2217
0x000000000015a711 : rcr dword ptr [rcx], cl ; retf -0x4466
0x0000000000083ef4 : rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x0000000000083ee6 : rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000011ed44 : rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x000000000008433a : rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x00000000001043b7 : rep stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x000000000003395a : rep stosq qword ptr [rdi], rax ; ret
0x0000000000000937 : ret
0x000000000001fc91 : ret 0
0x000000000000e701 : ret 0x10
0x00000000000007bf : ret 0x102
0x000000000006663f : ret 0x107
0x000000000004d82c : ret 0x11
0x0000000000079212 : ret 0x110
0x000000000004224c : ret 0x114d
0x000000000008eb9c : ret 0x1175
0x000000000004d7c2 : ret 0x11c2
0x000000000004a7e2 : ret 0x11f2
0x000000000003dc89 : ret 0x12
0x000000000005aee6 : ret 0x12e9
0x000000000002c80f : ret 0x13
0x000000000002fa06 : ret 0x1353
0x00000000000f7d0a : ret 0x1376
0x000000000010f502 : ret 0x1378
0x000000000005e384 : ret 0x14
0x00000000000aee5e : ret 0x144
0x00000000000b456b : ret 0x1474
0x000000000008f119 : ret 0x147c
0x000000000005702b : ret 0x148
0x00000000000a63f8 : ret 0x1489
0x00000000000c385b : ret 0x148b
0x00000000000752f2 : ret 0x149
0x000000000005cdf5 : ret 0x14c
0x00000000000899dc : ret 0x14d
0x00000000000d27ab : ret 0x1589
0x000000000001deb0 : ret 0x1616
0x000000000001c830 : ret 0x1625
0x00000000000f7b67 : ret 0x1676
0x00000000000db197 : ret 0x1677
0x000000000002352b : ret 0x1689
0x00000000000bb92d : ret 0x16eb
0x000000000005f7ca : ret 0x17
0x0000000000023da8 : ret 0x1789
0x00000000000e9a43 : ret 0x17e8
0x000000000004cb53 : ret 0x18
0x00000000000e0776 : ret 0x180
0x00000000001469ec : ret 0x180f
0x0000000000083915 : ret 0x1876
0x00000000000835b5 : ret 0x1974
0x000000000007b91c : ret 0x1976
0x00000000000ab112 : ret 0x19e9
0x00000000000a4b9e : ret 0x19eb
0x000000000009d49e : ret 0x1a
0x000000000008e95a : ret 0x1a74
0x0000000000028aab : ret 0x1a76
0x000000000015a91a : ret 0x1ad4
0x00000000001590ad : ret 0x1b49
0x00000000000baabd : ret 0x1b8
0x0000000000105b21 : ret 0x1b9
0x00000000000c3de8 : ret 0x1bb
0x0000000000001bf5 : ret 0x1bb7
0x00000000000aa1f1 : ret 0x1be
0x000000000005bc6f : ret 0x1be8
0x000000000007ad7f : ret 0x1bf
0x00000000000034af : ret 0x1bf9
0x00000000000e0ef1 : ret 0x1c77
0x000000000008c480 : ret 0x1ceb
0x000000000000fef8 : ret 0x1d
0x0000000000154590 : ret 0x1d4
0x0000000000154d28 : ret 0x1d5
0x00000000000834b6 : ret 0x1d74
0x00000000000a8041 : ret 0x1db
0x00000000000021dd : ret 0x1dd4
0x00000000000ac5b9 : ret 0x1e74
0x00000000000e9759 : ret 0x1e8
0x00000000000204ca : ret 0x1f0f
0x00000000001038ae : ret 0x1f72
0x000000000009ac73 : ret 0x1f74
0x000000000002b34f : ret 0x200
0x00000000000dc3e7 : ret 0x2040
0x00000000000a6d24 : ret 0x205f
0x000000000007e8dd : ret 0x2074
0x00000000000ba57a : ret 0x20f
0x000000000003230e : ret 0x2148
0x0000000000042964 : ret 0x2173
0x00000000000e1139 : ret 0x21e8
0x0000000000047593 : ret 0x22
0x000000000007e86b : ret 0x2275
0x0000000000098d67 : ret 0x2276
0x000000000007e998 : ret 0x2288
0x000000000010741e : ret 0x233c
0x0000000000028aa2 : ret 0x2372
0x0000000000145542 : ret 0x2373
0x0000000000033ca2 : ret 0x237f
0x00000000000025ef : ret 0x23cb
0x0000000000153598 : ret 0x24
0x00000000000027e0 : ret 0x244f
0x000000000007b02d : ret 0x2475
0x00000000000f9029 : ret 0x2476
0x00000000000ff486 : ret 0x24e8
0x0000000000057e10 : ret 0x25
0x0000000000073f45 : ret 0x2501
0x000000000002a5dd : ret 0x25e9
0x0000000000007b28 : ret 0x26
0x000000000011e151 : ret 0x27
0x0000000000080936 : ret 0x2774
0x000000000011e32a : ret 0x27c0
0x00000000000b8233 : ret 0x27e8
0x000000000000054f : ret 0x2800
0x000000000008ff45 : ret 0x280f
0x0000000000106f50 : ret 0x2875
0x0000000000083905 : ret 0x2876
0x000000000011502a : ret 0x2896
0x000000000010f9b2 : ret 0x28ae
0x00000000000ac840 : ret 0x28f5
0x0000000000109032 : ret 0x28ff
0x00000000000fcb98 : ret 0x29
0x000000000003bf7d : ret 0x2941
0x000000000010d164 : ret 0x2944
0x00000000000a0742 : ret 0x2945
0x0000000000038acf : ret 0x2948
0x00000000000c7816 : ret 0x2949
0x000000000003b2ef : ret 0x294c
0x000000000007b453 : ret 0x2975
0x0000000000070dda : ret 0x2976
0x00000000000d1ff4 : ret 0x2977
0x00000000000fbab2 : ret 0x29d3
0x000000000002b824 : ret 0x29eb
0x00000000000ecc50 : ret 0x2a
0x00000000000f4e4a : ret 0x2a3f
0x0000000000001b19 : ret 0x2a63
0x00000000000ea4b2 : ret 0x2ae9
0x00000000000e96b2 : ret 0x2af7
0x00000000000587e1 : ret 0x2b
0x00000000000a6d3a : ret 0x2b48
0x0000000000022b4f : ret 0x2b49
0x0000000000078d28 : ret 0x2b75
0x00000000000990a2 : ret 0x2b77
0x00000000000e11b2 : ret 0x2b7c
0x000000000010dd3b : ret 0x2b8
0x00000000000e337e : ret 0x2b8c
0x0000000000106f49 : ret 0x2c3c
0x0000000000106121 : ret 0x2c6
0x00000000001038a0 : ret 0x2d72
0x000000000002ec95 : ret 0x2e66
0x000000000006263c : ret 0x2ee8
0x000000000009bbe1 : ret 0x2f
0x000000000007d11e : ret 0x2f74
0x0000000000036558 : ret 0x3039
0x0000000000001b88 : ret 0x306a
0x00000000000382a9 : ret 0x30eb
0x00000000000ccde7 : ret 0x30f
0x0000000000003fa0 : ret 0x31
0x0000000000022a2d : ret 0x3101
0x00000000000776bf : ret 0x3110
0x0000000000048452 : ret 0x3145
0x000000000010dfd0 : ret 0x3148
0x000000000010dfaf : ret 0x3149
0x00000000000ea3fe : ret 0x31c3
0x000000000007caca : ret 0x31c6
0x000000000007b1c6 : ret 0x31df
0x00000000000e9c29 : ret 0x31e8
0x000000000007a7b2 : ret 0x31e9
0x0000000000069641 : ret 0x32
0x000000000007dc39 : ret 0x320a
0x0000000000076dca : ret 0x321f
0x000000000006943a : ret 0x32c4
0x000000000006fa39 : ret 0x32ec
0x0000000000153a88 : ret 0x33
0x000000000003061f : ret 0x3325
0x000000000006ab39 : ret 0x333b
0x00000000000648b2 : ret 0x3345
0x000000000010deb0 : ret 0x334c
0x000000000010e0c9 : ret 0x334d
0x00000000000631b2 : ret 0x335c
0x00000000000629b2 : ret 0x3364
0x000000000000a558 : ret 0x34
0x0000000000052f3a : ret 0x3429
0x000000000008f0f9 : ret 0x347c
0x000000000002ee6e : ret 0x348
0x0000000000027096 : ret 0x349
0x000000000000f670 : ret 0x35
0x0000000000037cd8 : ret 0x357e
0x000000000002e8a2 : ret 0x36
0x00000000000db3df : ret 0x3675
0x000000000008f454 : ret 0x36e8
0x000000000002ba3a : ret 0x36ee
0x0000000000022030 : ret 0x37
0x00000000000294ba : ret 0x370f
0x00000000000bd8da : ret 0x375
0x0000000000030e86 : ret 0x3774
0x00000000000410a6 : ret 0x3775
0x000000000004bdaa : ret 0x380
0x00000000000bcbda : ret 0x382
0x000000000015a1fa : ret 0x3827
0x00000000000a8710 : ret 0x3840
0x00000000000838f5 : ret 0x3876
0x00000000000749fb : ret 0x389
0x0000000000158886 : ret 0x38ae
0x0000000000067da6 : ret 0x38b
0x0000000000010021 : ret 0x39
0x00000000001313da : ret 0x390
0x000000000002e83d : ret 0x3901
0x0000000000102e3b : ret 0x3904
0x00000000000a8cf9 : ret 0x3907
0x00000000000c5514 : ret 0x3920
0x000000000008eab6 : ret 0x3941
0x000000000004423c : ret 0x3944
0x00000000000c45b6 : ret 0x3945
0x000000000002aba3 : ret 0x3948
0x0000000000023f8f : ret 0x3949
0x00000000000899df : ret 0x394c
0x0000000000031c9d : ret 0x394d
0x00000000000988f2 : ret 0x3a01
0x000000000014552b : ret 0x3a73
0x00000000000d1545 : ret 0x3ae9
0x00000000000f16ee : ret 0x3b01
0x0000000000084081 : ret 0x3b48
0x00000000000ab655 : ret 0x3b8
0x0000000000024966 : ret 0x3b89
0x00000000000a8b1a : ret 0x3bba
0x00000000000e736d : ret 0x3be
0x000000000003225b : ret 0x3be9
0x000000000007e851 : ret 0x3c75
0x0000000000040d5f : ret 0x3ce9
0x0000000000022102 : ret 0x3d83
0x0000000000040f57 : ret 0x3dbe
0x0000000000043187 : ret 0x3e74
0x0000000000067ae2 : ret 0x3f75
0x00000000000009f5 : ret 0x4021
0x00000000000f7c0d : ret 0x4075
0x0000000000100503 : ret 0x4078
0x000000000009b098 : ret 0x408d
0x000000000003ced2 : ret 0x4101
0x0000000000104492 : ret 0x4102
0x000000000009d19c : ret 0x4104
0x00000000000477a1 : ret 0x4108
0x0000000000047c25 : ret 0x4110
0x000000000007990e : ret 0x4117
0x000000000004a970 : ret 0x4120
0x000000000008e9a3 : ret 0x4153
0x000000000002320e : ret 0x41c3
0x0000000000010e70 : ret 0x42
0x0000000000106108 : ret 0x4201
0x000000000010c775 : ret 0x4203
0x00000000000a8a63 : ret 0x4240
0x000000000008f70a : ret 0x4266
0x00000000000680b3 : ret 0x4275
0x00000000000a8ca9 : ret 0x428d
0x000000000006c768 : ret 0x42e8
0x00000000000710aa : ret 0x4376
0x00000000000292b3 : ret 0x4389
0x00000000000de699 : ret 0x43f6
0x000000000004007f : ret 0x4401
0x0000000000000888 : ret 0x440c
0x0000000000000456 : ret 0x4412
0x000000000002a4c9 : ret 0x4476
0x00000000000c4641 : ret 0x4489
0x00000000000e0a52 : ret 0x448b
0x0000000000008080 : ret 0x45
0x000000000009932a : ret 0x4504
0x000000000002ee9f : ret 0x4508
0x00000000000f1d36 : ret 0x4528
0x0000000000033f2e : ret 0x4577
0x0000000000106292 : ret 0x4589
0x00000000000d52b6 : ret 0x458b
0x0000000000040dc9 : ret 0x45e9
0x000000000008bb3a : ret 0x4601
0x000000000004e773 : ret 0x4675
0x00000000000f61cc : ret 0x468d
0x000000000010769f : ret 0x46c7
0x000000000008eb14 : ret 0x474
0x0000000000159384 : ret 0x474c
0x00000000000db713 : ret 0x47e8
0x00000000000207f9 : ret 0x4801
0x00000000000ec422 : ret 0x4802
0x000000000004f734 : ret 0x4803
0x0000000000024a82 : ret 0x4804
0x00000000000ec822 : ret 0x4805
0x00000000000ec722 : ret 0x4806
0x00000000000ec6a2 : ret 0x4807
0x0000000000042bac : ret 0x4808
0x000000000002ab9c : ret 0x4809
0x00000000000ec7a2 : ret 0x480a
0x00000000000ec3a2 : ret 0x480b
0x000000000003fe87 : ret 0x4810
0x000000000001f9b1 : ret 0x4811
0x0000000000114961 : ret 0x4812
0x00000000000ea81d : ret 0x4814
0x00000000000bc659 : ret 0x481e
0x000000000007cc80 : ret 0x4820
0x00000000000f078c : ret 0x4830
0x0000000000063a5c : ret 0x4840
0x00000000000f3bbb : ret 0x4864
0x000000000002767e : ret 0x4890
0x0000000000038187 : ret 0x48b
0x0000000000080688 : ret 0x48c3
0x000000000003644e : ret 0x48d
0x00000000000e4422 : ret 0x48e8
0x00000000000e6d34 : ret 0x48eb
0x000000000015ab46 : ret 0x48f
0x0000000000010540 : ret 0x49
0x0000000000020749 : ret 0x4901
0x0000000000026aaf : ret 0x4902
0x0000000000031edc : ret 0x4903
0x000000000002584f : ret 0x4904
0x00000000000ab1eb : ret 0x4909
0x00000000000bab2a : ret 0x4910
0x0000000000044c47 : ret 0x491e
0x000000000007cd3e : ret 0x4920
0x00000000000323a4 : ret 0x4975
0x0000000000003903 : ret 0x49ec
0x00000000000da4a2 : ret 0x4a07
0x0000000000050eaa : ret 0x4a7
0x00000000000c655d : ret 0x4a8b
0x00000000000da45f : ret 0x4b01
0x00000000000648a1 : ret 0x4b8
0x000000000010f5a2 : ret 0x4b89
0x00000000000d4e04 : ret 0x4be9
0x000000000002585a : ret 0x4c01
0x0000000000104287 : ret 0x4c02
0x00000000000c7c72 : ret 0x4c04
0x00000000000b879c : ret 0x4c08
0x0000000000103e52 : ret 0x4c0c
0x00000000000cf635 : ret 0x4c10
0x00000000000c7221 : ret 0x4c20
0x00000000000b3107 : ret 0x4c48
0x00000000000ac77e : ret 0x4c80
0x00000000000c6258 : ret 0x4d01
0x00000000000eaa19 : ret 0x4d02
0x00000000000c3f66 : ret 0x4d08
0x0000000000094802 : ret 0x4d10
0x0000000000022020 : ret 0x4d74
0x0000000000005b60 : ret 0x4e
0x000000000015a5a7 : ret 0x4e27
0x000000000003037a : ret 0x4e8
0x00000000000aa9ad : ret 0x4eb
0x00000000000cc6d7 : ret 0x4f02
0x0000000000033dd4 : ret 0x4f77
0x00000000000d9d4a : ret 0x50e8
0x0000000000010fd8 : ret 0x51
0x0000000000145514 : ret 0x5173
0x00000000000d9f09 : ret 0x51e8
0x000000000005267c : ret 0x51ff
0x000000000000319e : ret 0x52c0
0x00000000000667f6 : ret 0x5389
0x00000000000661b1 : ret 0x538b
0x0000000000040bc7 : ret 0x5422
0x000000000010d6fa : ret 0x543
0x000000000008f0d9 : ret 0x547c
0x00000000000dc30d : ret 0x5488
0x0000000000032b29 : ret 0x5489
0x000000000010cdfa : ret 0x54c
0x000000000015880c : ret 0x5508
0x0000000000041078 : ret 0x5574
0x0000000000002466 : ret 0x5576
0x00000000000c382e : ret 0x5589
0x000000000006c08e : ret 0x5590
0x000000000007e837 : ret 0x5675
0x00000000000f79e2 : ret 0x577
0x000000000002af60 : ret 0x578b
0x000000000015aad8 : ret 0x5803
0x0000000000024c19 : ret 0x5841
0x000000000003502b : ret 0x589
0x00000000001584e0 : ret 0x591c
0x0000000000027372 : ret 0x5941
0x0000000000003279 : ret 0x5a51
0x0000000000073b33 : ret 0x5a76
0x0000000000159247 : ret 0x5ae4
0x0000000000064490 : ret 0x5ba
0x0000000000002faf : ret 0x5bdb
0x0000000000003065 : ret 0x5cbe
0x000000000007da0e : ret 0x5ce8
0x00000000000f08bd : ret 0x5ce9
0x00000000000f1a46 : ret 0x5d5b
0x00000000000e588e : ret 0x5f74
0x000000000008b1bb : ret 0x5fe8
0x00000000000004b9 : ret 0x6080
0x000000000007d114 : ret 0x6174
0x000000000000272d : ret 0x617e
0x00000000000ea4f9 : ret 0x61e8
0x000000000015af72 : ret 0x62c1
0x000000000004bac8 : ret 0x62e8
0x000000000004e7a3 : ret 0x6348
0x0000000000070a92 : ret 0x6349
0x000000000008b7a8 : ret 0x634c
0x00000000000c7682 : ret 0x634d
0x000000000009942a : ret 0x6375
0x000000000008280f : ret 0x63be
0x0000000000067788 : ret 0x6411
0x00000000000b3819 : ret 0x6474
0x000000000008f0c9 : ret 0x647c
0x000000000008bbc1 : ret 0x64e9
0x00000000000f7f0c : ret 0x6601
0x0000000000118669 : ret 0x6604
0x000000000008f17a : ret 0x6610
0x0000000000083882 : ret 0x6620
0x000000000000282f : ret 0x6642
0x0000000000058d00 : ret 0x6673
0x000000000007bd00 : ret 0x66c3
0x0000000000082b2a : ret 0x672
0x00000000001584ff : ret 0x67b2
0x00000000000a8a60 : ret 0x6948
0x0000000000032ad4 : ret 0x6974
0x00000000000649a0 : ret 0x6ae8
0x00000000000b9e9f : ret 0x6b8
0x0000000000003cf2 : ret 0x6bba
0x0000000000027258 : ret 0x6be9
0x000000000009abd1 : ret 0x6c74
0x000000000008bd2b : ret 0x6ce9
0x0000000000169613 : ret 0x6e1f
0x00000000000afa98 : ret 0x6eb8
0x00000000000f9189 : ret 0x6ee9
0x000000000015b101 : ret 0x6f9
0x00000000000f4304 : ret 0x700
0x00000000000a6264 : ret 0x7173
0x0000000000074f71 : ret 0x7401
0x0000000000079a0e : ret 0x7402
0x0000000000079025 : ret 0x7404
0x000000000006c373 : ret 0x7408
0x000000000006a27d : ret 0x7420
0x000000000004a97c : ret 0x7440
0x000000000004a961 : ret 0x7450
0x000000000008bf73 : ret 0x74e9
0x00000000000b6687 : ret 0x7500
0x000000000003792f : ret 0x7501
0x0000000000079a28 : ret 0x7502
0x000000000008fa41 : ret 0x7504
0x000000000010381f : ret 0x7507
0x000000000008fa46 : ret 0x7508
0x0000000000076855 : ret 0x750f
0x000000000014760b : ret 0x7510
0x0000000000147618 : ret 0x7520
0x00000000000c511b : ret 0x7540
0x00000000000c2547 : ret 0x7580
0x0000000000106c9d : ret 0x75df
0x00000000000de807 : ret 0x7673
0x0000000000144402 : ret 0x7677
0x0000000000022b43 : ret 0x774
0x0000000000042592 : ret 0x777
0x0000000000098f1b : ret 0x78e9
0x0000000000002efc : ret 0x793b
0x00000000000b9789 : ret 0x7974
0x00000000000328d5 : ret 0x7c7
0x0000000000083812 : ret 0x7e20
0x00000000000dbf53 : ret 0x7e8
0x000000000007ee1c : ret 0x7f10
0x000000000005444c : ret 0x7f3c
0x000000000013165e : ret 0x80
0x000000000007fff9 : ret 0x8000
0x0000000000038f82 : ret 0x8001
0x00000000000ab392 : ret 0x8010
0x00000000000e2722 : ret 0x8041
0x0000000000094c3d : ret 0x8072
0x00000000000fed59 : ret 0x8080
0x00000000000038c0 : ret 0x80fc
0x00000000001024d2 : ret 0x8103
0x00000000000c9b99 : ret 0x813b
0x00000000000a8059 : ret 0x8141
0x000000000003fc96 : ret 0x8148
0x00000000000adeff : ret 0x8166
0x0000000000094c57 : ret 0x820f
0x0000000000070121 : ret 0x82eb
0x000000000001ff83 : ret 0x8301
0x0000000000102809 : ret 0x8303
0x00000000000cc512 : ret 0x8304
0x000000000008c675 : ret 0x8305
0x00000000000ca642 : ret 0x8308
0x0000000000055735 : ret 0x830f
0x000000000001fd0e : ret 0x8341
0x00000000000235bc : ret 0x8348
0x000000000003c21a : ret 0x8349
0x000000000011eb62 : ret 0x8380
0x0000000000068c74 : ret 0x8389
0x00000000000ba927 : ret 0x8401
0x000000000002ab85 : ret 0x840f
0x0000000000098e86 : ret 0x8444
0x00000000000ccfdb : ret 0x84c6
0x000000000004e795 : ret 0x8504
0x000000000002ac9d : ret 0x850f
0x000000000003f7b1 : ret 0x8539
0x000000000003787d : ret 0x8545
0x000000000005849d : ret 0x8548
0x000000000004165e : ret 0x854d
0x00000000000b3894 : ret 0x8575
0x00000000000d39eb : ret 0x8589
0x00000000000db388 : ret 0x85b8
0x00000000000f413a : ret 0x85c7
0x0000000000028432 : ret 0x860f
0x00000000000d4486 : ret 0x8675
0x0000000000024b05 : ret 0x86e9
0x0000000000033166 : ret 0x870f
0x0000000000157e1e : ret 0x871e
0x000000000004cc08 : ret 0x875
0x0000000000083925 : ret 0x876
0x00000000000e10d3 : ret 0x87e8
0x00000000000230a6 : ret 0x8801
0x000000000010c766 : ret 0x8802
0x00000000000236c6 : ret 0x8804
0x000000000008ca55 : ret 0x880f
0x000000000008d6ca : ret 0x8840
0x00000000000025bc : ret 0x88ad
0x0000000000023fba : ret 0x8901
0x00000000000559db : ret 0x8908
0x00000000000eba15 : ret 0x8940
0x000000000008bea2 : ret 0x8941
0x000000000007ac3f : ret 0x8944
0x000000000009e75b : ret 0x8945
0x0000000000022d52 : ret 0x8948
0x000000000002471a : ret 0x8949
0x000000000001fea1 : ret 0x894c
0x0000000000037c43 : ret 0x894d
0x0000000000042e2b : ret 0x894e
0x0000000000036c10 : ret 0x8966
0x000000000008348a : ret 0x8a04
0x000000000000255b : ret 0x8a4c
0x0000000000100579 : ret 0x8aeb
0x000000000009ab07 : ret 0x8b04
0x000000000002bcce : ret 0x8b05
0x00000000000c7238 : ret 0x8b10
0x000000000015a64e : ret 0x8b36
0x00000000000caebf : ret 0x8b43
0x00000000000406cd : ret 0x8b44
0x0000000000024b29 : ret 0x8b48
0x000000000006d68e : ret 0x8b49
0x0000000000042dae : ret 0x8b4a
0x000000000002c77b : ret 0x8b4c
0x00000000000d0ba3 : ret 0x8b4d
0x0000000000067ca8 : ret 0x8b64
0x00000000000777fe : ret 0x8b90
0x000000000008dd5b : ret 0x8beb
0x00000000000ad71c : ret 0x8c0f
0x00000000000037c6 : ret 0x8cba
0x000000000008da6b : ret 0x8d01
0x00000000000656a7 : ret 0x8d04
0x000000000004bb9a : ret 0x8d0f
0x00000000000a80c5 : ret 0x8d41
0x00000000000226d2 : ret 0x8d48
0x000000000002e052 : ret 0x8d49
0x0000000000042379 : ret 0x8d4a
0x000000000002ac25 : ret 0x8d4b
0x000000000002299f : ret 0x8d4c
0x000000000007689c : ret 0x8d4d
0x0000000000079970 : ret 0x8d4e
0x0000000000032510 : ret 0x8d74
0x0000000000044b5f : ret 0x8d89
0x000000000002708d : ret 0x8e0f
0x000000000005d07a : ret 0x8ee
0x00000000000d1535 : ret 0x8ee9
0x0000000000052b89 : ret 0x8f0f
0x00000000000c1a0b : ret 0x8feb
0x0000000000174828 : ret 0x900e
0x000000000002622c : ret 0x901
0x000000000002bb9d : ret 0x90c3
0x000000000008b33a : ret 0x90e9
0x00000000000d0109 : ret 0x91e8
0x0000000000116d07 : ret 0x91eb
0x00000000000726bb : ret 0x938b
0x000000000007d3c8 : ret 0x93be
0x0000000000106587 : ret 0x93c
0x000000000004ce50 : ret 0x940f
0x00000000000390ad : ret 0x941
0x0000000000032497 : ret 0x948
0x00000000000824f8 : ret 0x94c
0x000000000005ee87 : ret 0x94e9
0x000000000003c06f : ret 0x950f
0x00000000000f4b39 : ret 0x952b
0x000000000002e68c : ret 0x953d
0x0000000000159473 : ret 0x9576
0x00000000000bea75 : ret 0x9589
0x000000000008c9b9 : ret 0x95eb
0x00000000000dd17f : ret 0x970f
0x00000000000037a8 : ret 0x975
0x00000000000df8c3 : ret 0x97e8
0x000000000003db90 : ret 0x9848
0x000000000007e885 : ret 0x9874
0x00000000000768e3 : ret 0x9a75
0x0000000000094c20 : ret 0x9d72
0x000000000003ef03 : ret 0x9d74
0x000000000006ad01 : ret 0x9deb
0x000000000011c808 : ret 0x9e0f
0x000000000002214a : ret 0x9e9
0x00000000000a8ff8 : ret 0x9eb
0x00000000000b44ef : ret 0x9ee9
0x0000000000040cc1 : ret 0x9fe9
0x000000000006ab78 : ret 0x9feb
0x00000000000a02ef : ret 0xa
0x000000000006efec : ret 0xa0eb
0x00000000000ee8ea : ret 0xa375
0x00000000000cd710 : ret 0xa3eb
0x0000000000159163 : ret 0xa514
0x00000000000fb7c0 : ret 0xa575
0x000000000010969f : ret 0xa74
0x00000000000fa156 : ret 0xa775
0x00000000000cc5b2 : ret 0xa7c
0x00000000000e99b3 : ret 0xa7e8
0x000000000007c719 : ret 0xa7e9
0x00000000000e6d4f : ret 0xabe
0x00000000001595e7 : ret 0xac65
0x0000000000159fa4 : ret 0xacfc
0x00000000000b2c5f : ret 0xaed
0x00000000000dea3b : ret 0xafe9
0x000000000010aa1a : ret 0xb0
0x00000000000ecef5 : ret 0xb075
0x000000000002bec7 : ret 0xb0e9
0x000000000010c06a : ret 0xb2
0x0000000000055513 : ret 0xb373
0x00000000001089bc : ret 0xb374
0x00000000000b4f72 : ret 0xb375
0x00000000000b4de1 : ret 0xb475
0x000000000004c886 : ret 0xb5e9
0x000000000002d283 : ret 0xb60f
0x00000000000ac6a7 : ret 0xb67d
0x000000000009c7c8 : ret 0xb6e9
0x0000000000032a45 : ret 0xb70f
0x00000000000dd72c : ret 0xb74
0x000000000007114c : ret 0xb76
0x00000000000dc0a3 : ret 0xb7e8
0x00000000000326e3 : ret 0xb8
0x0000000000032311 : ret 0xb848
0x0000000000080381 : ret 0xb8c3
0x000000000008df76 : ret 0xb901
0x00000000000b89b0 : ret 0xb941
0x00000000001594ae : ret 0xb9b9
0x0000000000003199 : ret 0xba88
0x00000000000b4e97 : ret 0xbb
0x00000000000d7a04 : ret 0xbc41
0x000000000004d169 : ret 0xbcd9
0x0000000000002488 : ret 0xbd07
0x0000000000044b6f : ret 0xbd89
0x000000000005ab59 : ret 0xbe08
0x0000000000159204 : ret 0xbe57
0x00000000000f1c0f : ret 0xbeb
0x000000000005b158 : ret 0xbf08
0x000000000003581a : ret 0xbfc
0x000000000009d572 : ret 0xc
0x000000000007feb9 : ret 0xc000
0x000000000004ba73 : ret 0xc031
0x0000000000044b3c : ret 0xc041
0x00000000001868a4 : ret 0xc044
0x0000000000041cd5 : ret 0xc07f
0x000000000008453a : ret 0xc083
0x00000000000e4c38 : ret 0xc084
0x00000000000824c5 : ret 0xc085
0x00000000000c456c : ret 0xc141
0x00000000000200d6 : ret 0xc148
0x0000000000023fa1 : ret 0xc149
0x000000000004cf2e : ret 0xc166
0x000000000002f1b4 : ret 0xc189
0x0000000000002e0e : ret 0xc1bb
0x00000000000e1199 : ret 0xc1e8
0x00000000000de1ad : ret 0xc1eb
0x0000000000041552 : ret 0xc221
0x0000000000036454 : ret 0xc229
0x00000000000365f0 : ret 0xc269
0x00000000000af500 : ret 0xc26b
0x000000000007ac7b : ret 0xc275
0x00000000000da091 : ret 0xc283
0x00000000001453e4 : ret 0xc2b2
0x000000000006c6e8 : ret 0xc2e8
0x0000000000035f98 : ret 0xc35b
0x0000000000028855 : ret 0xc389
0x000000000007ac7d : ret 0xc3f3
0x00000000000ddcbc : ret 0xc3f6
0x00000000001570a2 : ret 0xc4c3
0x0000000000158db8 : ret 0xc4ff
0x00000000000e296d : ret 0xc6
0x00000000000b8d65 : ret 0xc610
0x00000000000c9844 : ret 0xc6e8
0x000000000010dcb6 : ret 0xc707
0x0000000000052e22 : ret 0xc71e
0x00000000001044cb : ret 0xc741
0x0000000000034621 : ret 0xc748
0x0000000000099481 : ret 0xc75
0x000000000004fc83 : ret 0xc789
0x00000000000c221e : ret 0xc790
0x00000000000b8293 : ret 0xc7e8
0x000000000004c8b3 : ret 0xc7e9
0x00000000000d4de9 : ret 0xc889
0x0000000000118662 : ret 0xc89
0x0000000000038017 : ret 0xc8b
0x00000000000ca1f7 : ret 0xc931
0x0000000000040300 : ret 0xc985
0x000000000007e8f6 : ret 0xc9ff
0x000000000001fed8 : ret 0xca21
0x0000000000125d00 : ret 0xca39
0x000000000007cff1 : ret 0xcb8
0x00000000000e439f : ret 0xcbe8
0x00000000000e01a5 : ret 0xcc80
0x000000000015884a : ret 0xcca7
0x000000000015a92d : ret 0xcd11
0x0000000000094bf0 : ret 0xcd72
0x00000000000db1e6 : ret 0xcd77
0x00000000000e4d4c : ret 0xcdbb
0x00000000000aea42 : ret 0xcdeb
0x000000000002fce8 : ret 0xce80
0x00000000000445c1 : ret 0xce89
0x00000000000f2e2c : ret 0xcee8
0x000000000003b57a : ret 0xd
0x00000000000be310 : ret 0xd008
0x00000000000a9a33 : ret 0xd009
0x00000000000b959a : ret 0xd029
0x000000000003062f : ret 0xd089
0x00000000000d3411 : ret 0xd101
0x00000000000cec26 : ret 0xd108
0x00000000000d4c50 : ret 0xd120
0x00000000000a6d8e : ret 0xd121
0x00000000000a84f7 : ret 0xd138
0x00000000000c4573 : ret 0xd141
0x0000000000032743 : ret 0xd189
0x00000000000e9e89 : ret 0xd1e8
0x00000000000c645d : ret 0xd201
0x00000000000319a5 : ret 0xd231
0x000000000006126b : ret 0xd274
0x000000000002031e : ret 0xd284
0x000000000008e9b0 : ret 0xd308
0x0000000000056702 : ret 0xd329
0x00000000000379fd : ret 0xd348
0x00000000000d3718 : ret 0xd4e9
0x0000000000033d42 : ret 0xd521
0x000000000000089a : ret 0xd5a4
0x00000000000b2241 : ret 0xd629
0x00000000000398c1 : ret 0xd689
0x0000000000034e64 : ret 0xd6e8
0x00000000000e72a6 : ret 0xd74
0x00000000000ae527 : ret 0xd889
0x000000000015a3c5 : ret 0xd8f
0x00000000000dbd00 : ret 0xd8f7
0x00000000000f5714 : ret 0xd975
0x00000000000f57e3 : ret 0xda75
0x0000000000098f0a : ret 0xda89
0x00000000000a6eb1 : ret 0xdae9
0x0000000000032a41 : ret 0xdaf7
0x00000000000a78a1 : ret 0xdc00
0x000000000015a4a6 : ret 0xdcd9
0x0000000000159422 : ret 0xde5d
0x000000000003fc6d : ret 0xde8
0x00000000001581b1 : ret 0xde9e
0x000000000011309e : ret 0xdf75
0x0000000000116d8e : ret 0xdf89
0x0000000000004939 : ret 0xe
0x000000000007fd79 : ret 0xe000
0x00000000001475c9 : ret 0xe074
0x0000000000103e76 : ret 0xe075
0x00000000001109a5 : ret 0xe078
0x000000000002581e : ret 0xe083
0x000000000006db65 : ret 0xe174
0x00000000000d5216 : ret 0xe1e9
0x00000000000f09b4 : ret 0xe1ff
0x0000000000031744 : ret 0xe281
0x00000000000262bd : ret 0xe283
0x0000000000061b88 : ret 0xe2e8
0x00000000000aeb6e : ret 0xe2ff
0x00000000000c8d0a : ret 0xe375
0x00000000000c3460 : ret 0xe574
0x000000000008ab10 : ret 0xe575
0x00000000000cc575 : ret 0xe5e8
0x000000000004cc87 : ret 0xe680
0x000000000004cced : ret 0xe683
0x000000000015a5c6 : ret 0xe71f
0x000000000008dfcf : ret 0xe775
0x000000000004eb56 : ret 0xe783
0x00000000000e1073 : ret 0xe7e8
0x0000000000030573 : ret 0xe801
0x000000000010214a : ret 0xe841
0x000000000004cf15 : ret 0xe875
0x000000000004ba95 : ret 0xe87f
0x000000000009b772 : ret 0xe883
0x00000000000ca024 : ret 0xe8c0
0x00000000000e7776 : ret 0xe8c1
0x000000000002d6c2 : ret 0xe901
0x000000000002d6d7 : ret 0xe902
0x0000000000041dbd : ret 0xe908
0x0000000000122456 : ret 0xe910
0x00000000000a0ad0 : ret 0xe940
0x0000000000024afc : ret 0xe95b
0x0000000000158927 : ret 0xe970
0x00000000000f6884 : ret 0xe975
0x000000000007cdc2 : ret 0xe99
0x00000000000cada1 : ret 0xea75
0x000000000009909a : ret 0xea81
0x0000000000044b55 : ret 0xeac0
0x00000000000c3792 : ret 0xeac1
0x00000000000d548a : ret 0xead1
0x00000000000a6659 : ret 0xeb01
0x00000000000c7695 : ret 0xeb02
0x000000000002ee83 : ret 0xeb04
0x0000000000041dd5 : ret 0xeb08
0x0000000000120496 : ret 0xeb10
0x00000000000ef532 : ret 0xeb73
0x000000000008df5a : ret 0xeb75
0x000000000008e704 : ret 0xeb77
0x00000000000c7b72 : ret 0xeb7f
0x000000000015b0d8 : ret 0xec2
0x0000000000038f90 : ret 0xed75
0x00000000000d7a7d : ret 0xed85
0x00000000000a668b : ret 0xee72
0x00000000000a54ba : ret 0xee75
0x00000000000d881c : ret 0xee9
0x000000000010c59c : ret 0xeee8
0x000000000015ad7a : ret 0xef32
0x0000000000041f5e : ret 0xef75
0x000000000008d2aa : ret 0xef77
0x000000000006594e : ret 0xf
0x000000000007fc39 : ret 0xf000
0x0000000000026bc2 : ret 0xf01
0x000000000015c004 : ret 0xf018
0x0000000000076799 : ret 0xf02
0x00000000000c29d0 : ret 0xf039
0x0000000000066675 : ret 0xf04
0x000000000003da1d : ret 0xf075
0x00000000000501ae : ret 0xf08
0x0000000000043bc3 : ret 0xf089
0x0000000000113e72 : ret 0xf0ba
0x00000000000786d0 : ret 0xf0f
0x00000000000516d9 : ret 0xf10
0x00000000000a62bd : ret 0xf175
0x000000000007aeb4 : ret 0xf177
0x00000000000c248c : ret 0xf17f
0x000000000008f1dc : ret 0xf188
0x000000000002ae99 : ret 0xf1e8
0x0000000000100d6a : ret 0xf1eb
0x000000000008fa54 : ret 0xf20
0x00000000001037ef : ret 0xf221
0x00000000000c5cf1 : ret 0xf35b
0x000000000010349a : ret 0xf375
0x00000000000501e0 : ret 0xf40
0x0000000000037a2f : ret 0xf41
0x00000000000cbbe1 : ret 0xf44
0x0000000000082bf9 : ret 0xf475
0x0000000000023aff : ret 0xf48
0x000000000001ffdf : ret 0xf4c
0x000000000015e340 : ret 0xf536
0x00000000000c3c72 : ret 0xf5bc
0x0000000000056ac0 : ret 0xf601
0x00000000000802a2 : ret 0xf631
0x000000000004d577 : ret 0xf640
0x000000000007ebd9 : ret 0xf66
0x0000000000025a5a : ret 0xf685
0x000000000004163e : ret 0xf741
0x000000000003050a : ret 0xf748
0x0000000000042578 : ret 0xf749
0x000000000008e46b : ret 0xf76
0x00000000000f0672 : ret 0xf789
0x00000000000a714a : ret 0xf793
0x00000000000f4208 : ret 0xf7e
0x00000000000c5ef7 : ret 0xf80
0x0000000000025053 : ret 0xf800
0x00000000000e354a : ret 0xf835
0x0000000000158090 : ret 0xf869
0x000000000009ba58 : ret 0xf883
0x0000000000075fb3 : ret 0xf8b
0x00000000000e351a : ret 0xf8b9
0x0000000000106f70 : ret 0xf980
0x00000000000552c3 : ret 0xf983
0x00000000000afa60 : ret 0xfa29
0x000000000003941e : ret 0xfa81
0x0000000000069236 : ret 0xfa83
0x00000000000aeb12 : ret 0xfae9
0x00000000000d128a : ret 0xfaf3
0x000000000006fbba : ret 0xfafc
0x0000000000107d6a : ret 0xfb11
0x00000000000626ba : ret 0xfbd1
0x00000000000c5dca : ret 0xfbe0
0x000000000011e9da : ret 0xfbe5
0x000000000007f9b9 : ret 0xfc00
0x00000000000e3a8f : ret 0xfc07
0x00000000000f050b : ret 0xfc3
0x000000000016a954 : ret 0xfc89
0x000000000016a754 : ret 0xfc93
0x000000000016ae5c : ret 0xfcae
0x000000000016ac4c : ret 0xfcba
0x00000000000b083a : ret 0xfd3a
0x0000000000054b0a : ret 0xfd73
0x00000000000732b7 : ret 0xfd81
0x0000000000098de8 : ret 0xfd83
0x000000000007f879 : ret 0xfe00
0x00000000000552e3 : ret 0xfe83
0x00000000000d48b4 : ret 0xfe9
0x0000000000032a4d : ret 0xfeb8
0x000000000010c58c : ret 0xfee8
0x000000000007f739 : ret 0xff00
0x000000000003ee35 : ret 0xff2
0x00000000000a4ed8 : ret 0xff25
0x000000000008f63a : ret 0xff3
0x000000000007e1f5 : ret 0xff31
0x000000000007e834 : ret 0xff48
0x00000000000cca2a : ret 0xff68
0x000000000007f5f9 : ret 0xff80
0x000000000010609d : ret 0xff81
0x000000000005a9b2 : ret 0xffa9
0x000000000008910a : ret 0xffad
0x0000000000061caa : ret 0xffb6
0x000000000006d21c : ret 0xffb8
0x000000000003c759 : ret 0xffbf
0x000000000007f4b9 : ret 0xffc0
0x0000000000079cb9 : ret 0xffdf
0x0000000000062a6b : ret 0xffe0
0x00000000000d7a4a : ret 0xffe7
0x000000000004679c : ret 0xffea
0x00000000000433ca : ret 0xffed
0x0000000000036f92 : ret 0xffef
0x000000000007f239 : ret 0xfff0
0x000000000002f671 : ret 0xfff1
0x00000000000f368e : ret 0xfff2
0x00000000000e36dd : ret 0xfff3
0x000000000004ad2d : ret 0xfff5
0x00000000000312ed : ret 0xfff6
0x00000000000f38cc : ret 0xfff7
0x000000000007f0f9 : ret 0xfff8
0x0000000000077fc3 : ret 0xfff9
0x0000000000030f9a : ret 0xfffa
0x0000000000045059 : ret 0xfffb
0x000000000003121e : ret 0xfffc
0x00000000000308e2 : ret 0xfffd
0x00000000000269e5 : ret 0xfffe
0x000000000002bb95 : ret 0xffff
0x0000000000026215 : ret 1
0x0000000000004ab9 : ret 2
0x00000000000011c8 : ret 3
0x0000000000007600 : ret 4
0x000000000004007a : ret 5
0x0000000000008581 : ret 6
0x00000000000018c4 : ret 7
0x000000000005ff0d : ret 8
0x000000000002befa : ret 9
0x0000000000000766 : retf
0x000000000002f769 : retf -0x10
0x000000000006bfa6 : retf -0x108b
0x00000000000a57af : retf -0x118b
0x000000000011999d : retf -0x1218
0x000000000014996a : retf -0x12a1
0x0000000000032acb : retf -0x12d
0x0000000000108b12 : retf -0x137
0x00000000000a57f9 : retf -0x138e
0x00000000000568de : retf -0x14
0x000000000004e8cc : retf -0x1401
0x000000000015ade1 : retf -0x1441
0x00000000001585ed : retf -0x147d
0x00000000000c60c2 : retf -0x1481
0x000000000003160e : retf -0x14f5
0x00000000000313f6 : retf -0x14f9
0x000000000003140b : retf -0x14fd
0x000000000016b241 : retf -0x15
0x000000000007ed91 : retf -0x152d
0x00000000000f63d2 : retf -0x154
0x000000000011f153 : retf -0x1540
0x000000000015a4cc : retf -0x156f
0x0000000000037eab : retf -0x158b
0x000000000000354c : retf -0x1612
0x00000000000e92a2 : retf -0x1648
0x00000000000f7dec : retf -0x168b
0x0000000000031605 : retf -0x16f3
0x0000000000031544 : retf -0x16f8
0x0000000000031420 : retf -0x16fb
0x00000000000e92db : retf -0x1748
0x000000000004ba5d : retf -0x1781
0x00000000000832d5 : retf -0x178b
0x0000000000089a4b : retf -0x1817
0x0000000000158e86 : retf -0x18d2
0x00000000000f5c86 : retf -0x1948
0x0000000000045b97 : retf -0x1989
0x00000000000ac5d7 : retf -0x198b
0x0000000000039a0f : retf -0x1b
0x000000000015951c : retf -0x1b6a
0x00000000000843fc : retf -0x1b8b
0x0000000000026aa4 : retf -0x1c7d
0x00000000000664c1 : retf -0x1d01
0x00000000000260a8 : retf -0x1d7d
0x000000000010e202 : retf -0x1d7f
0x00000000000c4c82 : retf -0x1e7d
0x0000000000129523 : retf -0x1e8b
0x0000000000158f3e : retf -0x1eae
0x0000000000032c47 : retf -0x1f3
0x00000000000251dd : retf -0x1f7d
0x0000000000159493 : retf -0x2081
0x000000000005f125 : retf -0x2177
0x000000000015ae63 : retf -0x21b1
0x00000000000ea612 : retf -0x2348
0x000000000008d868 : retf -0x238e
0x0000000000079a36 : retf -0x268a
0x00000000001474e6 : retf -0x268b
0x00000000000e4802 : retf -0x2748
0x0000000000110e42 : retf -0x275
0x000000000009c1cd : retf -0x27c7
0x000000000005faa2 : retf -0x28
0x000000000010c6fe : retf -0x2877
0x000000000008d249 : retf -0x288e
0x00000000000aec32 : retf -0x2aa
0x0000000000110aa9 : retf -0x2aff
0x00000000000cfec7 : retf -0x2b1
0x00000000000c7f83 : retf -0x2c17
0x000000000003955a : retf -0x2cb8
0x00000000000c1564 : retf -0x2cc7
0x000000000006214a : retf -0x2d
0x000000000002e717 : retf -0x2d77
0x0000000000036465 : retf -0x2d7b
0x000000000008e723 : retf -0x2dcf
0x00000000001591c6 : retf -0x2e35
0x000000000003224e : retf -0x2e77
0x0000000000003d64 : retf -0x2f76
0x0000000000002cbe : retf -0x2fb1
0x00000000000450ba : retf -0x2fc7
0x00000000000b0b6a : retf -0x3015
0x000000000004a25c : retf -0x30c7
0x000000000006c4dc : retf -0x3118
0x000000000004d140 : retf -0x3177
0x00000000001570aa : retf -0x3335
0x00000000000c4ec2 : retf -0x34
0x000000000016ad38 : retf -0x344
0x000000000016af2c : retf -0x34c
0x000000000016af34 : retf -0x34d
0x000000000016af3c : retf -0x34e
0x000000000016af44 : retf -0x34f
0x000000000016af4c : retf -0x350
0x0000000000144f84 : retf -0x354e
0x00000000000f8a12 : retf -0x36
0x00000000000e50d1 : retf -0x3627
0x000000000016a840 : retf -0x36b
0x0000000000079d92 : retf -0x37
0x0000000000060803 : retf -0x3777
0x000000000011bf42 : retf -0x37a
0x000000000011191e : retf -0x37f1
0x000000000001fea7 : retf -0x3801
0x00000000000e4d83 : retf -0x3c7d
0x00000000000e0774 : retf -0x3d09
0x000000000007da99 : retf -0x3d15
0x000000000011ebea : retf -0x3d7d
0x00000000000ae2d8 : retf -0x3e0a
0x00000000000e7462 : retf -0x3e48
0x00000000000824be : retf -0x3eb7
0x00000000000322db : retf -0x3eb8
0x000000000015a3dd : retf -0x3f02
0x00000000000e7582 : retf -0x3f48
0x00000000000e03f8 : retf -0x3f7b
0x000000000008cb0a : retf -0x3f7d
0x000000000007328b : retf -0x3fcf
0x00000000000e7522 : retf -0x4048
0x000000000015a75d : retf -0x40b5
0x0000000000003a6e : retf -0x40eb
0x00000000000e74f2 : retf -0x4148
0x000000000006d24a : retf -0x418b
0x000000000011d662 : retf -0x41a
0x0000000000001f59 : retf -0x41cb
0x00000000000e7612 : retf -0x4248
0x00000000000e7672 : retf -0x4348
0x000000000015a713 : retf -0x4466
0x000000000000276a : retf -0x4567
0x00000000000615dc : retf -0x46
0x00000000000892af : retf -0x46bf
0x000000000006c345 : retf -0x48
0x000000000011c482 : retf -0x4948
0x0000000000083c12 : retf -0x49f1
0x000000000011c432 : retf -0x4a48
0x0000000000159409 : retf -0x4ae6
0x00000000000e95a2 : retf -0x4c48
0x00000000000e9572 : retf -0x4d48
0x0000000000058619 : retf -0x4e15
0x00000000000e9362 : retf -0x5048
0x0000000000070bf7 : retf -0x513
0x00000000000038ac : retf -0x513c
0x000000000015ac0e : retf -0x51ce
0x00000000000d2153 : retf -0x52d
0x00000000000365eb : retf -0x53f
0x000000000008c9aa : retf -0x5417
0x000000000015a6bc : retf -0x54f3
0x00000000000f3796 : retf -0x5780
0x000000000008dee4 : retf -0x578d
0x000000000011eb56 : retf -0x57d
0x000000000010c708 : retf -0x57f
0x0000000000031180 : retf -0x580
0x00000000000e9482 : retf -0x5a48
0x000000000009d8c2 : retf -0x5b0
0x00000000000033a5 : retf -0x5c0a
0x00000000000cfa32 : retf -0x5d
0x000000000015a5eb : retf -0x5d02
0x0000000000158565 : retf -0x5e15
0x000000000007cc8c : retf -0x5e8b
0x000000000015b005 : retf -0x5fe0
0x00000000000e9542 : retf -0x6248
0x000000000015a6fa : retf -0x6283
0x00000000000635a2 : retf -0x63
0x00000000001260cf : retf -0x63b
0x00000000000326b5 : retf -0x63f
0x00000000000f00ef : retf -0x6418
0x00000000000e8aa2 : retf -0x64d
0x000000000015a38b : retf -0x6620
0x00000000000a6617 : retf -0x668b
0x00000000000d7d35 : retf -0x680
0x00000000000a3424 : retf -0x68c3
0x00000000000efff5 : retf -0x6a18
0x0000000000001e5c : retf -0x6a7e
0x00000000000399a7 : retf -0x6af1
0x00000000000637f2 : retf -0x6b
0x0000000000159fee : retf -0x6c5e
0x0000000000001be0 : retf -0x6c6a
0x0000000000001d41 : retf -0x6dda
0x000000000010efd6 : retf -0x6df1
0x0000000000125edc : retf -0x6f8b
0x000000000003301d : retf -0x6f9a
0x0000000000125e21 : retf -0x70f1
0x000000000008bbab : retf -0x717
0x00000000000251cf : retf -0x71f1
0x000000000008dd4b : retf -0x7217
0x0000000000118dd7 : retf -0x72b3
0x000000000006c112 : retf -0x72b4
0x0000000000121024 : retf -0x72b6
0x000000000004b8ea : retf -0x72b7
0x0000000000032ec8 : retf -0x72b8
0x00000000000a8c57 : retf -0x72bf
0x00000000000c2215 : retf -0x72f1
0x000000000010a828 : retf -0x73f
0x000000000012e3c9 : retf -0x74b4
0x0000000000034b2d : retf -0x74b7
0x0000000000037d28 : retf -0x74b8
0x00000000000bebd2 : retf -0x74bd
0x000000000002301a : retf -0x74bf
0x00000000000ec18a : retf -0x74c0
0x000000000011f7c5 : retf -0x74f8
0x0000000000036606 : retf -0x7573
0x0000000000002460 : retf -0x75c1
0x00000000000dac1e : retf -0x7601
0x00000000000c789c : retf -0x7615
0x0000000000026df9 : retf -0x769a
0x00000000000e445b : retf -0x76b3
0x000000000001fae5 : retf -0x76b4
0x00000000000723e9 : retf -0x76b7
0x000000000002d749 : retf -0x76b8
0x0000000000025cd7 : retf -0x76bb
0x000000000009ffb3 : retf -0x76bc
0x0000000000036611 : retf -0x76bd
0x0000000000024224 : retf -0x76bf
0x000000000006ddff : retf -0x76e0
0x000000000007c988 : retf -0x76fe
0x00000000000c35b3 : retf -0x77bf
0x0000000000040359 : retf -0x77c0
0x00000000000c1b75 : retf -0x77fc
0x00000000000cba16 : retf -0x7817
0x0000000000003517 : retf -0x786e
0x000000000006e320 : retf -0x78f1
0x000000000005b1c3 : retf -0x79f1
0x0000000000041711 : retf -0x7ab8
0x000000000001feda : retf -0x7abb
0x000000000002c4db : retf -0x7af1
0x0000000000020d9b : retf -0x7af8
0x00000000000749f1 : retf -0x7aff
0x00000000000c9f5a : retf -0x7b3a
0x0000000000159690 : retf -0x7b7f
0x0000000000031f06 : retf -0x7bf1
0x000000000001ff5f : retf -0x7c01
0x00000000000ffcb9 : retf -0x7c17
0x0000000000091ba5 : retf -0x7cb7
0x000000000002125b : retf -0x7cb8
0x000000000001ff5c : retf -0x7cbf
0x000000000003e1ef : retf -0x7cf1
0x000000000002ace1 : retf -0x7df1
0x000000000008ac09 : retf -0x7e18
0x000000000000238f : retf -0x7e40
0x00000000000ab5a9 : retf -0x7e9a
0x00000000000fef82 : retf -0x7ea
0x0000000000132daa : retf -0x7eb8
0x000000000010e1af : retf -0x7ebf
0x0000000000125dbc : retf -0x7f8b
0x000000000017a0a2 : retf -0x7ff2
0x00000000000007c7 : retf -0x7ffd
0x00000000000c9c62 : retf -0x88
0x000000000003925f : retf -0x8b8
0x00000000000e6332 : retf -0x973
0x00000000000ff1c2 : retf -0x98a
0x000000000011a382 : retf -0x99e
0x00000000000f1f17 : retf -0x9bf
0x00000000000459f5 : retf -0xa
0x00000000000d16f2 : retf -0xa4f
0x00000000000ca762 : retf -0xaaf
0x000000000015e35c : retf -0xabd
0x000000000005dac4 : retf -0xb
0x000000000008f2a2 : retf -0xb5
0x00000000000f2cf2 : retf -0xc65
0x000000000011289a : retf -0xd
0x00000000000ced12 : retf -0xd6
0x00000000000f1c23 : retf -0xd8b
0x00000000000ffe66 : retf -0xe
0x0000000000125ffd : retf -0xe3b
0x00000000001129f2 : retf -0xe62
0x000000000005abf5 : retf -0xf
0x00000000000cecbd : retf -0xf8e
0x0000000000022e7f : retf -1
0x000000000003b844 : retf -2
0x000000000001ff8c : retf -3
0x0000000000045403 : retf -4
0x00000000000b4932 : retf -5
0x0000000000024bc5 : retf -6
0x000000000016f741 : retf -7
0x000000000003d7ef : retf -8
0x000000000001f34c : retf 0
0x0000000000007279 : retf 0x10
0x000000000010c504 : retf 0x1089
0x0000000000003a8a : retf 0x10bf
0x00000000000056e9 : retf 0x11
0x0000000000047d52 : retf 0x1138
0x000000000004217d : retf 0x114d
0x00000000000d9edb : retf 0x11b8
0x00000000000d9f3b : retf 0x12b8
0x00000000000028a4 : retf 0x12c5
0x0000000000024ccc : retf 0x13
0x000000000007e87a : retf 0x1373
0x000000000008eac0 : retf 0x1374
0x00000000000cdf3e : retf 0x1375
0x00000000000e95db : retf 0x13b8
0x0000000000008b78 : retf 0x14
0x00000000000282b2 : retf 0x140f
0x00000000000274b2 : retf 0x141e
0x000000000006b49a : retf 0x148
0x0000000000023354 : retf 0x1489
0x000000000011b7ef : retf 0x149
0x000000000001a310 : retf 0x14b1
0x00000000000e966b : retf 0x14b8
0x000000000013153c : retf 0x14c
0x000000000008e95f : retf 0x1574
0x00000000000e039b : retf 0x15b8
0x00000000000c0737 : retf 0x15eb
0x0000000000050532 : retf 0x16
0x00000000000d2359 : retf 0x1674
0x000000000010d39c : retf 0x1689
0x00000000000e972b : retf 0x16b8
0x000000000005df7b : retf 0x17
0x0000000000002d56 : retf 0x172
0x00000000000e15db : retf 0x17b8
0x00000000000ca63c : retf 0x17eb
0x000000000000289a : retf 0x182c
0x00000000000ac7be : retf 0x19
0x00000000000438fd : retf 0x194d
0x00000000000e94b2 : retf 0x19b8
0x00000000000ac79c : retf 0x1a74
0x0000000000176aa9 : retf 0x1a9
0x000000000010a759 : retf 0x1b74
0x00000000000b98d7 : retf 0x1b8
0x0000000000082b5c : retf 0x1bb
0x00000000000b549c : retf 0x1be
0x00000000001545c8 : retf 0x1d4
0x0000000000154d68 : retf 0x1d5
0x00000000000c469d : retf 0x1de8
0x0000000000089a09 : retf 0x1deb
0x00000000000e97b2 : retf 0x1eb8
0x0000000000067dea : retf 0x1f0f
0x00000000000b9779 : retf 0x1f74
0x00000000000f5e91 : retf 0x1f8
0x00000000000d48cc : retf 0x1fe9
0x0000000000061e1a : retf 0x20
0x0000000000001eae : retf 0x20f4
0x000000000003e369 : retf 0x21e8
0x0000000000002cc2 : retf 0x2217
0x0000000000002270 : retf 0x2281
0x0000000000047572 : retf 0x23
0x0000000000002349 : retf 0x23c4
0x00000000001535d8 : retf 0x24
0x000000000008dc8d : retf 0x2475
0x0000000000149b02 : retf 0x24fa
0x0000000000067a64 : retf 0x25
0x0000000000149b1a : retf 0x250f
0x000000000007a712 : retf 0x2575
0x000000000005b86c : retf 0x2675
0x000000000011c414 : retf 0x27
0x000000000008d15d : retf 0x2775
0x00000000000e110b : retf 0x27b8
0x000000000012c4a9 : retf 0x280f
0x000000000011b682 : retf 0x2832
0x000000000011b382 : retf 0x2835
0x00000000000dfc02 : retf 0x28b8
0x0000000000010948 : retf 0x29
0x00000000000396ba : retf 0x2948
0x000000000003b6a0 : retf 0x2949
0x000000000003e636 : retf 0x294c
0x0000000000107722 : retf 0x296f
0x00000000000d7a74 : retf 0x2974
0x000000000005e4f7 : retf 0x2a
0x000000000015929c : retf 0x2a91
0x00000000000f5422 : retf 0x2a92
0x00000000000f5122 : retf 0x2a95
0x00000000000eefc2 : retf 0x2ad7
0x00000000000eb30a : retf 0x2b10
0x00000000000ed531 : retf 0x2b11
0x00000000000a5833 : retf 0x2b42
0x00000000000e9b32 : retf 0x2b4b
0x00000000000df6aa : retf 0x2b97
0x0000000000025f63 : retf 0x2bb
0x00000000000cc32c : retf 0x2c
0x000000000015871a : retf 0x2c90
0x00000000000e9e5b : retf 0x2cb8
0x00000000000bf424 : retf 0x2d
0x000000000007e860 : retf 0x2d73
0x000000000008d79f : retf 0x2d75
0x0000000000113c80 : retf 0x2d77
0x00000000000bf962 : retf 0x2d95
0x00000000000e90f2 : retf 0x2db8
0x0000000000035ab5 : retf 0x2e66
0x00000000000e9022 : retf 0x2eb8
0x000000000009b464 : retf 0x2f
0x00000000000a78f2 : retf 0x2f05
0x000000000006ba92 : retf 0x2f4
0x00000000000aac7b : retf 0x2f74
0x00000000000f79a2 : retf 0x2f77
0x00000000000e9842 : retf 0x2fb8
0x000000000008be7d : retf 0x3075
0x000000000007c428 : retf 0x31
0x00000000000bd081 : retf 0x3102
0x00000000000bae8c : retf 0x3145
0x0000000000132dc6 : retf 0x3148
0x000000000010e1d1 : retf 0x314c
0x000000000015a505 : retf 0x3159
0x000000000001fcdd : retf 0x31ff
0x000000000000f760 : retf 0x32
0x00000000000cdece : retf 0x3275
0x000000000015a56d : retf 0x32dd
0x0000000000070331 : retf 0x32e3
0x000000000005c42b : retf 0x33
0x0000000000068a32 : retf 0x332c
0x0000000000066c22 : retf 0x333a
0x000000000010de12 : retf 0x334c
0x000000000010e02a : retf 0x334d
0x00000000000630aa : retf 0x335d
0x0000000000068131 : retf 0x3365
0x00000000000c22a1 : retf 0x337e
0x0000000000158e23 : retf 0x33e6
0x00000000000564e6 : retf 0x348
0x000000000004bbc6 : retf 0x349
0x000000000004c8f6 : retf 0x34ed
0x0000000000028a90 : retf 0x3576
0x00000000000e9f42 : retf 0x35b8
0x000000000003c1aa : retf 0x35cc
0x000000000002c364 : retf 0x36
0x0000000000159351 : retf 0x3617
0x00000000000e9902 : retf 0x36b8
0x000000000002de22 : retf 0x3708
0x0000000000029822 : retf 0x374e
0x0000000000132da2 : retf 0x377
0x00000000000e9932 : retf 0x37b8
0x00000000000021cb : retf 0x3844
0x0000000000002d7a : retf 0x385b
0x0000000000089c03 : retf 0x3941
0x000000000010f38c : retf 0x3944
0x0000000000025fb1 : retf 0x3948
0x00000000000aae25 : retf 0x3949
0x0000000000094c1d : retf 0x394c
0x00000000000947e4 : retf 0x394d
0x00000000000422e4 : retf 0x3973
0x000000000005bee9 : retf 0x3b48
0x00000000000f0462 : retf 0x3b74
0x0000000000157989 : retf 0x3b9a
0x00000000000260b6 : retf 0x3bb
0x0000000000004a68 : retf 0x3c
0x000000000007accd : retf 0x3d83
0x000000000015a966 : retf 0x3d8a
0x00000000000b80a2 : retf 0x3db8
0x000000000011b9e0 : retf 0x3e8
0x00000000001581fb : retf 0x3ec
0x00000000000446c2 : retf 0x3f7
0x0000000000000321 : retf 0x4244
0x000000000008f6ec : retf 0x4266
0x00000000000ea5e2 : retf 0x42b8
0x00000000000a6187 : retf 0x42e9
0x0000000000027623 : retf 0x4408
0x0000000000098a27 : retf 0x4466
0x000000000011fa2f : retf 0x4489
0x00000000000f91a5 : retf 0x44e9
0x000000000002fd4d : retf 0x44f6
0x00000000000d4af4 : retf 0x44ff
0x00000000000ea46b : retf 0x45b8
0x00000000000ea4cb : retf 0x46b8
0x000000000011e2a0 : retf 0x46c
0x000000000007e846 : retf 0x4773
0x0000000000066746 : retf 0x4800
0x00000000000795f6 : retf 0x4801
0x000000000007aee4 : retf 0x4802
0x0000000000031392 : retf 0x4804
0x00000000000313c4 : retf 0x4806
0x00000000000de14c : retf 0x4808
0x00000000000314a4 : retf 0x4809
0x00000000000315cf : retf 0x480a
0x00000000000314e0 : retf 0x480c
0x00000000000e4686 : retf 0x4840
0x00000000000df8f5 : retf 0x4853
0x000000000004a513 : retf 0x4864
0x000000000008377e : retf 0x4890
0x00000000000420f1 : retf 0x48f8
0x00000000000d532f : retf 0x48ff
0x000000000005766f : retf 0x49
0x00000000000736d2 : retf 0x4980
0x0000000000001c27 : retf 0x49f2
0x0000000000002df6 : retf 0x4a9a
0x0000000000116af2 : retf 0x4af
0x00000000000dc9e2 : retf 0x4b8
0x0000000000026348 : retf 0x4bb
0x00000000000a81ac : retf 0x4c01
0x000000000007c982 : retf 0x4c89
0x000000000000ece0 : retf 0x4d
0x000000000010e4b9 : retf 0x4d88
0x0000000000042148 : retf 0x4de8
0x000000000004215a : retf 0x4df0
0x000000000004216c : retf 0x4df8
0x00000000000c1b43 : retf 0x4e8b
0x0000000000010df8 : retf 0x4f
0x00000000000036ac : retf 0x5038
0x00000000000d2cf2 : retf 0x5089
0x00000000000f5ce4 : retf 0x50f
0x00000000000e0378 : retf 0x52e8
0x00000000000e0d84 : retf 0x5389
0x00000000000e1636 : retf 0x5441
0x000000000003eefd : retf 0x5489
0x00000000000026ac : retf 0x54da
0x0000000000002fb4 : retf 0x54f7
0x0000000000001e74 : retf 0x559a
0x000000000007013d : retf 0x55e9
0x00000000000c1b6d : retf 0x5689
0x00000000000f8b42 : retf 0x577
0x000000000009af50 : retf 0x57e9
0x00000000000a6d27 : retf 0x5841
0x00000000000c925c : retf 0x59e9
0x000000000002638f : retf 0x5bb
0x000000000005ca2e : retf 0x5ce8
0x000000000008ad86 : retf 0x5d5b
0x000000000002a322 : retf 0x60
0x000000000007e82c : retf 0x6173
0x000000000008de7d : retf 0x6275
0x000000000008d07b : retf 0x62e9
0x0000000000001f24 : retf 0x6321
0x000000000008d11a : retf 0x6348
0x0000000000115ff1 : retf 0x6349
0x000000000008d8e4 : retf 0x634c
0x0000000000024e31 : retf 0x6411
0x000000000012c593 : retf 0x6601
0x000000000012c6e3 : retf 0x6602
0x000000000012c833 : retf 0x6603
0x000000000012c983 : retf 0x6604
0x000000000012cad3 : retf 0x6605
0x000000000012cc23 : retf 0x6606
0x000000000012cd73 : retf 0x6607
0x000000000012cec3 : retf 0x6608
0x000000000012d013 : retf 0x6609
0x000000000012d163 : retf 0x660a
0x000000000012d2b3 : retf 0x660b
0x000000000012d403 : retf 0x660c
0x000000000012d553 : retf 0x660d
0x000000000012d6a3 : retf 0x660e
0x000000000012d7f3 : retf 0x660f
0x000000000008bf63 : retf 0x66e9
0x0000000000132dc1 : retf 0x676
0x000000000015a885 : retf 0x67ca
0x00000000000a8bf6 : retf 0x694d
0x0000000000026f5a : retf 0x6b8
0x00000000000035f3 : retf 0x6b85
0x0000000000026638 : retf 0x6bb
0x000000000005b91f : retf 0x6be8
0x0000000000027147 : retf 0x6de9
0x0000000000003ae8 : retf 0x6e33
0x0000000000158882 : retf 0x6ee8
0x000000000008dff0 : retf 0x7077
0x0000000000003837 : retf 0x707d
0x0000000000001cac : retf 0x7085
0x000000000008d7f2 : retf 0x7175
0x000000000008c193 : retf 0x71e9
0x000000000015a746 : retf 0x7272
0x0000000000002504 : retf 0x736c
0x000000000008d7d1 : retf 0x7377
0x0000000000041607 : retf 0x74ff
0x0000000000159f1f : retf 0x76a5
0x000000000006d454 : retf 0x775
0x000000000006c321 : retf 0x776
0x000000000009af30 : retf 0x77e9
0x0000000000043836 : retf 0x77f
0x0000000000158da2 : retf 0x79f5
0x00000000000cf615 : retf 0x7a80
0x0000000000089cb0 : retf 0x7ce9
0x000000000008dcb6 : retf 0x7f77
0x00000000000fda12 : retf 0x7f80
0x00000000000e1f4d : retf 0x817
0x00000000000f7a22 : retf 0x877
0x0000000000064d72 : retf 0x8b8
0x000000000003ee4d : retf 0x948
0x000000000007e831 : retf 0x94c
0x00000000000a6679 : retf 0x974
0x000000000004e7b0 : retf 0x97e
0x00000000000dcff2 : retf 0x9b8
0x000000000010af42 : retf 0xa0
0x0000000000129bc2 : retf 0xb
0x000000000002f012 : retf 0xb56
0x0000000000099159 : retf 0xb8
0x00000000000aaa6e : retf 0xb85
0x00000000000dd0b2 : retf 0xbb8
0x00000000000b0c2b : retf 0xbe9
0x000000000000c880 : retf 0xc
0x00000000000a3b42 : retf 0xc51
0x0000000000097f96 : retf 0xc54
0x000000000009b93a : retf 0xc75
0x00000000000a09ce : retf 0xc94
0x000000000009f002 : retf 0xc9c
0x0000000000009559 : retf 0xd
0x000000000015a8d7 : retf 0xd39
0x00000000000fc6c2 : retf 0xd4
0x0000000000117e90 : retf 0xd74
0x000000000002b0b3 : retf 0xd88
0x000000000008c52a : retf 0xda6
0x0000000000004921 : retf 0xe
0x000000000017e6ee : retf 0xe0a
0x0000000000158513 : retf 0xe80
0x000000000008bd1b : retf 0xee9
0x000000000004b6a0 : retf 0xeeb
0x0000000000010930 : retf 0xf
0x0000000000079a54 : retf 0xf01
0x000000000013194c : retf 0xf02
0x0000000000131acc : retf 0xf03
0x00000000000bd03d : retf 0xf04
0x0000000000131dcc : retf 0xf05
0x0000000000131f4c : retf 0xf06
0x00000000001320cc : retf 0xf07
0x000000000013224c : retf 0xf08
0x00000000001323cc : retf 0xf09
0x000000000013254c : retf 0xf0a
0x00000000001326cc : retf 0xf0b
0x000000000013284c : retf 0xf0c
0x00000000001329cc : retf 0xf0d
0x0000000000132b4c : retf 0xf0e
0x0000000000132ccc : retf 0xf0f
0x000000000003bc84 : retf 0xf41
0x000000000007bd28 : retf 0xf44
0x00000000000375ee : retf 0xf45
0x000000000006e266 : retf 0xf48
0x000000000004cbd8 : retf 0xf4c
0x000000000015a428 : retf 0xf64
0x000000000007ec73 : retf 0xf66
0x0000000000028ab6 : retf 0xf72
0x0000000000024ad2 : retf 0xfa7
0x00000000001335f1 : retf 0xff2
0x00000000001335ec : retf 0xff3
0x0000000000010460 : retf 1
0x000000000000c758 : retf 2
0x00000000000011dc : retf 3
0x00000000000013a4 : retf 4
0x0000000000001578 : retf 5
0x0000000000001720 : retf 6
0x0000000000156574 : retf 7
0x000000000005f6a6 : retf 8
0x00000000000c68a6 : retf 9
0x0000000000179cb0 : rol bh, 1 ; out dx, eax ; call qword ptr [rdx]
0x00000000000989b5 : rol bl, 0x48 ; mov eax, edi ; ret
0x0000000000099204 : rol bl, 0x48 ; mov eax, edx ; pop rbx ; ret
0x00000000000e34ac : rol bl, 0x66 ; nop ; mov eax, 1 ; ret
0x000000000008ebbc : rol bl, 0x66 ; nop ; mov rax, rdi ; ret
0x000000000008f07d : rol bl, 0x90 ; bsr eax, eax ; add rax, rdi ; ret
0x000000000009bf6b : rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000080399 : rol bl, 0xf3 ; ret
0x000000000006c20c : rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000083a7d : rol bl, 1 ; nop ; xor eax, eax ; ret
0x0000000000056312 : rol byte ptr [r11 - 0x78f0f608], 1 ; retf
0x00000000000840cd : rol byte ptr [r9 + 0xf], 1 ; adc dword ptr [rbx], esp ; ret
0x0000000000035f67 : rol byte ptr [rax + 0x375003f], 0x5b ; ret
0x00000000000f06ec : rol byte ptr [rax + 0x38], 0xd6 ; cmovne eax, ecx ; ret
0x000000000008f612 : rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x0000000000080932 : rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x000000000007c05f : rol byte ptr [rax + 0x755f067b], 1 ; retf -0x76b8
0x00000000000c6456 : rol byte ptr [rax + 0xf00657b], cl ; xchg eax, ebp ; ret 0xd201
0x0000000000155f60 : rol byte ptr [rax + rax], 0 ; ret 4
0x0000000000061247 : rol byte ptr [rax + rcx*2], 0x39 ; ret
0x0000000000023fc0 : rol byte ptr [rax + rcx*2], 0x83 ; ret
0x00000000001865a0 : rol byte ptr [rax - 0xa], 1 ; jmp qword ptr [rcx]
0x000000000009ae2d : rol byte ptr [rax*4 + 0x751089d2], 0xf3 ; ret
0x00000000000d9d36 : rol byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000011ec0b : rol byte ptr [rax], 0 ; add byte ptr [rbx - 0x78f0c008], al ; retf -3
0x000000000014430d : rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000a8a77 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x000000000006500f : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; mov eax, esi ; pop rbx ; ret
0x00000000000e6967 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a8ae0 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000003324c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x000000000017dafd : rol byte ptr [rax], 1 ; add byte ptr [rax], dh ; movsxd rsi, edx ; call qword ptr [rax]
0x000000000002f133 : rol byte ptr [rbp + 0x1148bff], 0x74 ; add cl, byte ptr [rdi] ; retf -0x76bf
0x00000000000cdf61 : rol byte ptr [rbp + 0x38], cl ; ret
0x000000000008a682 : rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x00000000000561f9 : rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x0000000000037a29 : rol byte ptr [rbp - 0x6af0be13], cl ; ret 0xf41
0x00000000000fe505 : rol byte ptr [rbp - 0x6bf0be40], cl ; ret 0x8945
0x00000000000e5bb2 : rol byte ptr [rbp - 0x77], 0xf7 ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000000a853b : rol byte ptr [rbp - 0x7b], cl ; in al, 0xf ; xchg eax, esp ; ret 0xca21
0x00000000000d4dfd : rol byte ptr [rbx + 0xf4104f8], cl ; xchg eax, esp ; ret 0x4be9
0x00000000000d52c7 : rol byte ptr [rbx + 0xf4104f8], cl ; xchg eax, esp ; ret 0x8341
0x00000000000d4601 : rol byte ptr [rbx + 0xf4104f8], cl ; xchg eax, esp ; ret 0x8944
0x000000000003fa7a : rol byte ptr [rbx - 0x248adb07], 1 ; ret
0x00000000000bf8f8 : rol byte ptr [rbx - 0x3876fe20], 0x89 ; ret
0x00000000000c5c27 : rol byte ptr [rbx - 0x3f7cfd20], 8 ; ret
0x00000000000fda07 : rol byte ptr [rbx - 0x47ca817], 1 ; or dword ptr [rdi], ecx ; retf
0x00000000000ebcbc : rol byte ptr [rbx - 0x69f0f601], 0xc0 ; ret
0x000000000006c378 : rol byte ptr [rbx - 0x6af00002], 0xc0 ; neg eax ; ret
0x000000000002c1c1 : rol byte ptr [rbx - 0x6bf07f19], 0xc0 ; ret
0x00000000000bd084 : rol byte ptr [rbx - 0x6bf0fe06], 0xc0 ; ret
0x00000000000d475c : rol byte ptr [rbx - 0x76b7f507], cl ; ret
0x00000000000d584d : rol byte ptr [rbx - 0x76b7f708], 1 ; ret 0x830f
0x0000000000024fe7 : rol byte ptr [rbx - 0x76befb08], 1 ; ret
0x0000000000056313 : rol byte ptr [rbx - 0x78f0f608], 1 ; retf
0x000000000015d15c : rol byte ptr [rbx - 0x7c2f000d], 0xf3 ; jmp rax
0x000000000009a4b2 : rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x000000000010320e : rol byte ptr [rbx], 0x25 ; cld ; inc dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret
0x000000000010c4e1 : rol byte ptr [rbx], 0x83 ; ret 0x8303
0x000000000007a7f1 : rol byte ptr [rcx + 0x5e], 1 ; pop r15 ; ret
0x0000000000099091 : rol byte ptr [rcx + 0xbeff], cl ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x00000000000fe507 : rol byte ptr [rcx + 0xf], 0x94 ; ret 0x8945
0x000000000008b22b : rol byte ptr [rcx + 0xf], 0x95 ; ret
0x00000000000840ce : rol byte ptr [rcx + 0xf], 1 ; adc dword ptr [rbx], esp ; ret
0x000000000008eab2 : rol byte ptr [rcx + 0xf], 1 ; xchg eax, ebp ; ret 0x3941
0x000000000008eb6b : rol byte ptr [rcx + 0xf], 1 ; xchg eax, esp ; ret 0x3941
0x000000000002842e : rol byte ptr [rcx + rcx*2], 0x39 ; ret 0x860f
0x000000000009a56e : rol byte ptr [rcx + rcx*4 + 0x41], 4 ; jne 0x9a540 ; ret
0x000000000003fb5f : rol byte ptr [rcx + rcx*4 - 0x10], 0xf ; ret
0x000000000001fed5 : rol byte ptr [rcx + rcx*4 - 0x3e], 0x21 ; retf -0x7abb
0x0000000000104382 : rol byte ptr [rcx + rcx*4 - 0x40], cl ; mov byte ptr [rdi + rdx], 0 ; ret
0x000000000003df0c : rol byte ptr [rcx - 0x7d], cl ; clc ; adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8348
0x000000000015d0e8 : rol byte ptr [rcx - 0x7e2f000d], 0xf3 ; jmp rax
0x000000000009a492 : rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x000000000008eb02 : rol byte ptr [rcx], 0x38 ; adc al, 7 ; je 0x8eb08 ; ret
0x00000000000c7de0 : rol byte ptr [rcx], 0x39 ; ret
0x0000000000041cd2 : rol byte ptr [rcx], 0x39 ; ret 0xc07f
0x00000000000c2489 : rol byte ptr [rcx], 0x39 ; ret 0xf17f
0x00000000000c60bf : rol byte ptr [rcx], 0x39 ; retf -0x1481
0x0000000000041f5a : rol byte ptr [rcx], 0x48 ; cmp edx, eax ; jne 0x41f59 ; xor eax, eax ; ret
0x000000000004203a : rol byte ptr [rcx], 0x48 ; cmp edx, eax ; jne 0x42039 ; xor eax, eax ; ret
0x0000000000021166 : rol byte ptr [rcx], 0x50 ; call rbx
0x00000000000eb2c4 : rol byte ptr [rcx], 0x66 ; mov dword ptr [rdx], eax ; ret
0x00000000000c0864 : rol byte ptr [rcx], 0x83 ; ret
0x00000000000d10e2 : rol byte ptr [rcx], 0x83 ; ret 0x4101
0x0000000000029652 : rol byte ptr [rcx], 0x83 ; ret 0x4801
0x00000000000bbab6 : rol byte ptr [rcx], 0x88 ; push rax ; dec dword ptr [rax + 0x39] ; retf
0x00000000000eb2f0 : rol byte ptr [rcx], 0x89 ; add al, bl ; nop dword ptr [rax] ; ret
0x00000000000c5bf4 : rol byte ptr [rcx], 0xc0 ; ret
0x0000000000040922 : rol byte ptr [rcx], 0xc6 ; jmp qword ptr [rax]
0x0000000000040df2 : rol byte ptr [rcx], 0xe9 ; retf
0x0000000000098f06 : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0xda89
0x00000000000db0ec : rol byte ptr [rcx], cl ; ror byte ptr [rax + 0x39], 1 ; div dword ptr [rdi - 0x14] ; ret
0x00000000000ec08d : rol byte ptr [rdi + rcx], 0xb7 ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x000000000009a4f2 : rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x000000000009a4a2 : rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x00000000000ab52d : rol byte ptr [rip + 0x16d], 0xf3 ; ret
0x00000000000ebf5d : rol byte ptr [rip + 0x48c0b70f], 0x8b ; push rsp ; ret 0x8940
0x0000000000169f68 : rol byte ptr [rsi - 0x778f0005], 1 ; sti ; call qword ptr [rax]
0x000000000009a4e2 : rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x000000000013aa7d : rol byte ptr [rsi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001261b5 : rol ch, 1 ; jns 0x126194 ; retf -0x152d
0x0000000000126305 : rol ch, 1 ; jns 0x1262e4 ; retf -0x152d
0x0000000000126455 : rol ch, 1 ; jns 0x126434 ; retf -0x152d
0x00000000001265a5 : rol ch, 1 ; jns 0x126584 ; retf -0x152d
0x00000000001266f5 : rol ch, 1 ; jns 0x1266d4 ; retf -0x152d
0x0000000000126845 : rol ch, 1 ; jns 0x126824 ; retf -0x152d
0x0000000000126995 : rol ch, 1 ; jns 0x126974 ; retf -0x152d
0x0000000000126ae5 : rol ch, 1 ; jns 0x126ac4 ; retf -0x152d
0x0000000000126c35 : rol ch, 1 ; jns 0x126c14 ; retf -0x152d
0x0000000000126d85 : rol ch, 1 ; jns 0x126d64 ; retf -0x152d
0x0000000000126ed5 : rol ch, 1 ; jns 0x126eb4 ; retf -0x152d
0x0000000000127025 : rol ch, 1 ; jns 0x127004 ; retf -0x152d
0x0000000000127175 : rol ch, 1 ; jns 0x127154 ; retf -0x152d
0x00000000001272c5 : rol ch, 1 ; jns 0x1272a4 ; retf -0x152d
0x0000000000127415 : rol ch, 1 ; jns 0x1273f4 ; retf -0x152d
0x0000000000127885 : rol ch, 1 ; jns 0x127864 ; retf -0x152d
0x0000000000127a05 : rol ch, 1 ; jns 0x1279e4 ; retf -0x152d
0x0000000000127b85 : rol ch, 1 ; jns 0x127b64 ; retf -0x152d
0x0000000000127d05 : rol ch, 1 ; jns 0x127ce4 ; retf -0x152d
0x0000000000127e85 : rol ch, 1 ; jns 0x127e64 ; retf -0x152d
0x0000000000128005 : rol ch, 1 ; jns 0x127fe4 ; retf -0x152d
0x0000000000128185 : rol ch, 1 ; jns 0x128164 ; retf -0x152d
0x0000000000128305 : rol ch, 1 ; jns 0x1282e4 ; retf -0x152d
0x0000000000128485 : rol ch, 1 ; jns 0x128464 ; retf -0x152d
0x0000000000128605 : rol ch, 1 ; jns 0x1285e4 ; retf -0x152d
0x0000000000128785 : rol ch, 1 ; jns 0x128764 ; retf -0x152d
0x0000000000128905 : rol ch, 1 ; jns 0x1288e4 ; retf -0x152d
0x0000000000128a85 : rol ch, 1 ; jns 0x128a64 ; retf -0x152d
0x0000000000128c05 : rol ch, 1 ; jns 0x128be4 ; retf -0x152d
0x0000000000128d85 : rol ch, 1 ; jns 0x128d64 ; retf -0x152d
0x00000000001570a0 : rol cl, 0xc2 ; ret
0x00000000000abd17 : rol cl, cl ; clc ; add eax, 0x2907f9c1 ; ret 0x8944
0x00000000000fdd27 : rol dh, 2 ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x000000000015ffa0 : rol dl, 0xfa ; push rax ; ret 0xfffa
0x000000000015ff9c : rol dl, 1 ; cli ; inc eax ; ret 0xfffa
0x000000000009a43c : rol dword ptr [rax + 0x1e740fe1], 1 ; ret
0x00000000000009ef : rol dword ptr [rax + 0x4260a120], cl ; ret 0x4021
0x000000000012951c : rol dword ptr [rax + 0x48000000], 0x39 ; retf -0x1e8b
0x00000000000843f8 : rol dword ptr [rax + 0x48], 0x39 ; retf -0x1b8b
0x00000000001041b2 : rol dword ptr [rax - 0x69f0fe07], cl ; ret 0x8341
0x0000000000135890 : rol dword ptr [rax], 0 ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x000000000017db15 : rol dword ptr [rax], 1 ; add byte ptr [rax], ch ; movsxd rsi, edx ; call qword ptr [rax]
0x00000000000656d8 : rol dword ptr [rax], 1 ; ret
0x000000000008f077 : rol dword ptr [rbp + 0x317475c0], -0x40 ; ret
0x000000000009d440 : rol dword ptr [rcx - 0x77], 1 ; retf
0x000000000001fd0b : rol dword ptr [rcx - 0x77], cl ; ret 0x8341
0x0000000000047767 : rol dword ptr [rcx], -0x17 ; ret 0xfffc
0x000000000018db2d : rol dword ptr [rcx], 1 ; add al, al ; xor edi, eax ; call qword ptr [rdx]
0x000000000016eefd : rol dword ptr [rcx], 1 ; add byte ptr [rbx - 8], dh ; jmp rsp
0x000000000002aba0 : rol dword ptr [rcx], 1 ; ret 0x3948
0x000000000018ddcd : rol dword ptr [rcx], cl ; add byte ptr [rax], dh ; cmp eax, edi ; call rdx
0x0000000000096609 : rol dword ptr [rdi], cl ; add byte ptr [rax], al ; ret
0x00000000001882f6 : rol dword ptr [rdx + 0xe], 8 ; retf 0
0x0000000000103155 : rol dword ptr [rdx], 0 ; add byte ptr [rax + 0x39], cl ; ret
0x000000000003614b : rol dword ptr [rip + 0x39480036], 1 ; ret
0x0000000000033a55 : rol eax, cl ; and qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000009ee : rol qword ptr [rax + 0x4260a120], cl ; ret 0x4021
0x0000000000033a54 : rol rax, cl ; and qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000f96d2 : ror ax, 8 ; ret
0x0000000000187f80 : ror bh, 0xf6 ; jmp qword ptr [rsi]
0x00000000000a6671 : ror byte ptr [r8 - 0x7d], 0xc1 ; add dword ptr [rax + 0x39], ecx ; retf 0x974
0x0000000000033924 : ror byte ptr [rax + 0x21], 1 ; add al, 0xd7 ; xor eax, eax ; ret
0x0000000000033a56 : ror byte ptr [rax + 0x21], 7 ; xor eax, eax ; ret
0x00000000000c4e0a : ror byte ptr [rax + 0x21], cl ; ret 0xf748
0x000000000007e43f : ror byte ptr [rax + 0x21], cl ; retf 0x3948
0x00000000000838f2 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x83939 ; add rax, rdi ; ret
0x00000000000807e7 : ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x000000000008fa2e : ror byte ptr [rax + 0x29], 1 ; enter -0x2d7c, 0x74 ; cmp dh, dh ; ret 0x7501
0x000000000006d921 : ror byte ptr [rax + 0x29], 1 ; ret
0x000000000003b3c2 : ror byte ptr [rax + 0x29], 1 ; ror dword ptr [rax - 0x77], 1 ; retf -0x76b8
0x00000000000bebb5 : ror byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000005b1cc : ror byte ptr [rax + 0x29], cl ; retf 0x2948
0x000000000010d1be : ror byte ptr [rax + 0x29], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0xc031
0x0000000000117e8d : ror byte ptr [rax + 0x39], 0xca ; je 0x117ea7 ; ret
0x00000000000e0eff : ror byte ptr [rax + 0x39], 0xd7 ; ja 0xe0f37 ; ret
0x00000000000f4ed8 : ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x00000000000db0ee : ror byte ptr [rax + 0x39], 1 ; div dword ptr [rdi - 0x14] ; ret
0x00000000000db0be : ror byte ptr [rax + 0x39], 1 ; div dword ptr [rdi - 0x6c] ; pop rbx ; ret
0x000000000011f1c8 : ror byte ptr [rax + 0x39], 1 ; retf
0x00000000000cecba : ror byte ptr [rax + 0x39], 1 ; retf -0xf8e
0x0000000000038ac9 : ror byte ptr [rax + 0x39], cl ; fmul dword ptr [rdi] ; xchg eax, edx ; ret 0x2948
0x000000000003d495 : ror byte ptr [rax + 0x39], cl ; ret 0xf48
0x00000000000a89f9 : ror byte ptr [rax + 0x3d], 1 ; ret 0x10
0x0000000000105c76 : ror byte ptr [rax + 0x41c57511], 0x83 ; ret 0x4101
0x00000000000f4df8 : ror byte ptr [rax + 0x48], 0x39 ; sal byte ptr [rdx - 0xf], 1 ; xor eax, eax ; ret
0x000000000010f4ff : ror byte ptr [rax + 0x63], cl ; ret 0x1378
0x00000000000c1bfd : ror byte ptr [rax + 0x63], cl ; retf -0x71f1
0x000000000007e43c : ror byte ptr [rax + 0x63], cl ; ror byte ptr [rax + 0x21], cl ; retf 0x3948
0x0000000000040f75 : ror byte ptr [rax + 0xf], 0x44 ; ret
0x00000000000a8870 : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8348
0x00000000000f5e12 : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8948
0x000000000010826c : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8b4c
0x000000000008d116 : ror byte ptr [rax + 0xf], 0x45 ; retf 0x6348
0x000000000008d8e0 : ror byte ptr [rax + 0xf], 0x45 ; retf 0x634c
0x000000000002af69 : ror byte ptr [rax + 0xf], 1 ; ret 0x3949
0x000000000002af5c : ror byte ptr [rax + 0xf], 1 ; ret 0x578b
0x00000000000e6d17 : ror byte ptr [rax + 0xf], cl ; ret 0xc148
0x0000000000106099 : ror byte ptr [rax + 0xf], cl ; ret 0xff81
0x000000000008f1c3 : ror byte ptr [rax + 1], 0xf8 ; add rax, r8 ; ret
0x000000000008a55c : ror byte ptr [rax + 1], 0xf8 ; add rax, rcx ; ret
0x0000000000082389 : ror byte ptr [rax + 1], 0xf8 ; ret
0x0000000000030603 : ror byte ptr [rax + 1], 1 ; ret
0x00000000000c0870 : ror byte ptr [rax + 1], 1 ; retf -0x49f1
0x0000000000037d25 : ror byte ptr [rax + 1], 1 ; retf -0x74b8
0x000000000005adba : ror byte ptr [rax + 1], 1 ; shr cl, cl ; insb byte ptr [rdi], dx ; ret 0xffff
0x00000000000eb645 : ror byte ptr [rax + 1], cl ; ret
0x00000000000db090 : ror byte ptr [rax + 1], cl ; retf -0x76b8
0x00000000000807e4 : ror byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x0000000000035f3a : ror byte ptr [rax + 9], 0xd0 ; ret
0x0000000000152368 : ror byte ptr [rax + rax], 0 ; ret
0x00000000000f688c : ror byte ptr [rax + rax], 1 ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000083a75 : ror byte ptr [rax - 0x2d], 0xfa ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000098d6c : ror byte ptr [rax - 0x2f], 1 ; call 0xffffffffc30e1ac8
0x000000000011b280 : ror byte ptr [rax - 0x39], 1 ; ret
0x000000000002bb92 : ror byte ptr [rax - 0x39], 1 ; ret 0xffff
0x00000000000e1f49 : ror byte ptr [rax - 0x73], 0x15 ; retf 0x817
0x00000000000838b2 : ror byte ptr [rax - 0x73], 0x44 ; cmp al, dh ; ret
0x00000000000838e2 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], ah ; ret
0x000000000008f0b2 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dh ; ret
0x00000000000838d2 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dl ; ret
0x00000000000eba11 : ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x00000000000b1a42 : ror byte ptr [rax - 0x75], 0x7c ; ret
0x00000000000c4fc9 : ror byte ptr [rax - 0x75], 4 ; ret
0x00000000001142f4 : ror byte ptr [rax - 0x75], cl ; sub ebp, eax ; ret
0x00000000001038c5 : ror byte ptr [rax - 0x77], 0x37 ; ret
0x000000000008e8d9 : ror byte ptr [rax - 0x77], 0xa ; ret
0x000000000010cac9 : ror byte ptr [rax - 0x77], 0xc3 ; jne 0x10ca6b ; xor eax, eax ; pop rbx ; ret
0x0000000000110ef8 : ror byte ptr [rax - 0x77], 0xd6 ; add rdi, 0x10 ; jmp rcx
0x000000000008b594 : ror byte ptr [rax - 0x77], 0xd8 ; pop rbx ; cmovne rax, rdx ; ret
0x00000000000f5d02 : ror byte ptr [rax - 0x77], 0xe5 ; pop rbp ; ret
0x00000000000e7359 : ror byte ptr [rax - 0x77], 0xee ; syscall
0x0000000000082816 : ror byte ptr [rax - 0x77], 0xef ; call 0x4f246
0x000000000006d5fc : ror byte ptr [rax - 0x77], 1 ; ret
0x0000000000072a61 : ror byte ptr [rax - 0x77], 1 ; ret 0x8b48
0x000000000004bbae : ror byte ptr [rax - 0x77], 1 ; ret 0x8d48
0x000000000010d1c1 : ror byte ptr [rax - 0x77], 1 ; ret 0xc031
0x00000000000200d3 : ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x0000000000031741 : ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x00000000000ae09c : ror byte ptr [rax - 0x77], 1 ; retf -0x3eb8
0x00000000001104f9 : ror byte ptr [rax - 0x77], 2 ; mov eax, 1 ; ret
0x00000000000e546a : ror byte ptr [rax - 0x7d], 0x3e ; add byte ptr [rdi + rax - 0xd], dh ; ret
0x0000000000070812 : ror byte ptr [rax - 0x7d], 0x7f ; sbb byte ptr [rax], al ; setne al ; ret
0x00000000000a6672 : ror byte ptr [rax - 0x7d], 0xc1 ; add dword ptr [rax + 0x39], ecx ; retf 0x974
0x0000000000089841 : ror byte ptr [rax - 0x7d], 0xc1 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000006cabf : ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000114654 : ror byte ptr [rax - 0x7d], 0xc4 ; cmp byte ptr [rbx + 0x5d], bl ; ret
0x00000000000dcfb0 : ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x000000000011d589 : ror byte ptr [rax - 0x7d], 0xc4 ; or bl, dh ; ret
0x00000000000359dd : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000003f4a4 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000004119a : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000001183aa : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000008f112 : ror byte ptr [rax - 0x7d], 0xea ; adc byte ptr [rax + 1], cl ; ret 0x147c
0x000000000008f0f2 : ror byte ptr [rax - 0x7d], 0xea ; and byte ptr [rax + 1], cl ; ret 0x347c
0x000000000008f0d2 : ror byte ptr [rax - 0x7d], 0xea ; xor byte ptr [rax + 1], cl ; ret 0x547c
0x00000000000db51e : ror byte ptr [rax - 0x7d], 0xec ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000038e57 : ror byte ptr [rax - 0x7d], 1 ; ret
0x00000000000cf289 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x000000000006403e : ror byte ptr [rax - 0x7d], 1 ; ret 0xbe08
0x00000000000e1b45 : ror byte ptr [rax - 0x7d], cl ; clc ; add al, 0xf ; xchg eax, ebp ; ret 0xdaf7
0x000000000006f39a : ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00000000000aea11 : ror byte ptr [rax - 0x7d], cl ; ret
0x000000000002e83a : ror byte ptr [rax - 0x7d], cl ; ret 0x3901
0x0000000000094c16 : ror byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000026503 : ror byte ptr [rax - 0x7d], cl ; ret 0x4901
0x00000000000aac9e : ror byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x00000000000b97d8 : ror byte ptr [rax - 9], 0xd8 ; or rax, 0x20 ; ret
0x00000000000b96a8 : ror byte ptr [rax - 9], 0xd8 ; or rax, 0x7f ; ret
0x00000000000b98b8 : ror byte ptr [rax - 9], 0xd8 ; or rax, 1 ; ret
0x000000000003e1d0 : ror byte ptr [rax - 9], cl ; fimul dword ptr [rax + 0x39] ; ret 0xf48
0x00000000000826e4 : ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x000000000009b541 : ror byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x20 ; call rbx
0x000000000016a934 : ror byte ptr [rbp - 0x72ad0004], cl ; cld ; call rdx
0x000000000010dead : ror byte ptr [rbp - 0x77], 1 ; ret 0x334c
0x000000000010e0c6 : ror byte ptr [rbp - 0x77], 1 ; ret 0x334d
0x0000000000026749 : ror byte ptr [rbp - 0x77], cl ; ret
0x000000000016a5f4 : ror byte ptr [rbp - 4], 1 ; jmp qword ptr [rax]
0x000000000010efd0 : ror byte ptr [rbx + 0x39411448], 1 ; retf -0x6df1
0x00000000000d6821 : ror byte ptr [rbx + 0xf48246c], cl ; xchg eax, ebp ; ret
0x00000000000e9d02 : ror byte ptr [rbx - 0x2f], 0xb8 ; sub al, 0 ; add byte ptr [rax], al ; syscall
0x00000000000f793f : ror byte ptr [rbx - 0x367ab7ed], 0x74 ; adc al, 0xf6 ; ret 0x7420
0x000000000016a944 : ror byte ptr [rbx - 0x74ad0004], cl ; cld ; call rdx
0x00000000000db3dc : ror byte ptr [rcx + 0x39], 1 ; ret 0x3675
0x00000000000aeb67 : ror byte ptr [rcx + 0x63], 1 ; adc al, 0x90 ; add rdx, r8 ; jmp rdx
0x000000000003119c : ror byte ptr [rcx + 0x63], cl ; adc al, 0x92 ; add rdx, r10 ; jmp rdx
0x0000000000032a3f : ror byte ptr [rcx + 0x9daf7c2], 1 ; ret 0xb70f
0x00000000000c8437 : ror byte ptr [rcx + 0xf782444], 0x85 ; ret
0x000000000008a017 : ror byte ptr [rcx + 0xf], 0x47 ; ret
0x0000000000043649 : ror byte ptr [rcx + 3], cl ; add byte ptr [r15], r9b ; xchg eax, edx ; ret 0x8949
0x0000000000044200 : ror byte ptr [rcx + rax - 0x38], 1 ; add rsp, 0x28 ; ret
0x000000000010e001 : ror byte ptr [rcx + rcx*4 + 7], 1 ; mov qword ptr [rdi + 8], rax ; pop rbx ; ret
0x00000000000b803f : ror byte ptr [rcx + rcx*4 - 0x1a], cl ; mov eax, 0x3d ; syscall
0x0000000000068a9f : ror byte ptr [rcx + rcx*4 - 0x32], cl ; mov eax, r8d ; syscall
0x0000000000058614 : ror byte ptr [rcx + rcx*4 - 0x38], 0x74 ; retf -0x4e15
0x000000000002ecf4 : ror byte ptr [rcx + rcx*4 - 0x39], cl ; mov eax, 3 ; syscall
0x00000000000be2fd : ror byte ptr [rcx + rdi - 0x3a], 0xf ; xchg eax, esp ; ret 0xd009
0x0000000000032a84 : ror byte ptr [rcx - 0x24efdbbc], 1 ; insb byte ptr [rdi], dx ; and al, 8 ; ret
0x00000000000892d6 : ror byte ptr [rcx - 0x39], cl ; ret
0x000000000010dfa8 : ror byte ptr [rcx - 0x3f], 0xe0 ; or byte ptr [rax - 0x77], cl ; ret 0x3149
0x00000000000a8132 : ror byte ptr [rcx - 0x73], 1 ; add al, 0x80 ; ret
0x000000000010390e : ror byte ptr [rcx - 0x76b7f3a9], 0x3e ; ret
0x00000000000c37ce : ror byte ptr [rcx - 0x76bb79ec], 1 ; ret 0xeac1
0x0000000000098d64 : ror byte ptr [rcx - 0x77], 1 ; ret 0x2276
0x00000000000f7fb9 : ror byte ptr [rcx - 0x77], 1 ; retf -0x7cb7
0x0000000000089318 : ror byte ptr [rcx - 0x7d], 1 ; ret
0x00000000000947ff : ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x0000000000022142 : ror byte ptr [rcx - 0x7d], cl ; cmp al, 0x24 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9e9
0x00000000000b8a06 : ror byte ptr [rcx - 0x7d], cl ; ret 0xeb08
0x00000000000566f9 : ror byte ptr [rcx - 0x7d], cl ; vpand ymm9, ymm15, ymmword ptr [r15] ; lahf ; ret 0xd329
0x000000000009ae30 : ror byte ptr [rcx - 0xc0c8af0], cl ; ret
0x00000000000a7a10 : ror byte ptr [rcx - 0xd8af1ec], cl ; ret
0x00000000000c14f7 : ror byte ptr [rcx], 0xf0 ; jne 0xc1506 ; ret
0x00000000000e8e5c : ror byte ptr [rcx], 0xf8 ; ret
0x000000000011ebe8 : ror byte ptr [rcx], cl ; retf -0x3d7d
0x0000000000023f9d : ror byte ptr [rdi + rcx + 0x49], cl ; ret 0xc149
0x0000000000033062 : ror byte ptr [rdi], 0 ; add byte ptr [rax], al ; syscall
0x000000000013a17d : ror byte ptr [rdi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000e7450 : ror byte ptr [rdi], 0x44 ; ret 0x66c3
0x00000000000e4c35 : ror byte ptr [rdi], 0x45 ; ret 0xc084
0x00000000000d2070 : ror byte ptr [rdi], 0x47 ; ret 0x90c3
0x0000000000035f95 : ror byte ptr [rdi], 0x48 ; ret 0xc35b
0x00000000000a8cbc : ror byte ptr [rdi], 0x48 ; ret 0xfd83
0x00000000000e0e0c : ror byte ptr [rdi], 0x49 ; ret 0xfc3
0x000000000006eb4c : ror byte ptr [rdi], 0x84 ; movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000011bec5 : ror byte ptr [rdi], 0x84 ; push rbp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x0000000000044836 : ror byte ptr [rdi], 0x84 ; ret
0x000000000003b577 : ror byte ptr [rdi], 0x84 ; ret 0xd
0x00000000000f365b : ror byte ptr [rdi], 0x84 ; ret 0xfffb
0x000000000003533d : ror byte ptr [rdi], 0x84 ; ret 1
0x0000000000053ebf : ror byte ptr [rdi], 0x84 ; retf
0x00000000000213ed : ror byte ptr [rdi], 0x84 ; retf 0
0x0000000000043127 : ror byte ptr [rdi], 0x84 ; retf 1
0x00000000000a20d5 : ror byte ptr [rdi], 0x84 ; sahf ; or al, byte ptr [rax] ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x000000000006f79c : ror byte ptr [rdi], 0x84 ; xchg eax, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000013b34a : ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x000000000008f03c : ror byte ptr [rdi], 0x85 ; jge 0x8f04a ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000093461 : ror byte ptr [rdi], 0x85 ; pop rax ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000003a932 : ror byte ptr [rdi], 0x85 ; ret
0x000000000008c54e : ror byte ptr [rdi], 0x85 ; ret 0
0x000000000008fda7 : ror byte ptr [rdi], 0x85 ; ret 0x13
0x00000000000f9b7e : ror byte ptr [rdi], 0x85 ; ret 0xfffe
0x00000000000cd9dd : ror byte ptr [rdi], 0x85 ; ret 1
0x00000000000ea7c3 : ror byte ptr [rdi], 0x85 ; retf
0x000000000014301f : ror byte ptr [rdi], 0x85 ; retf -0xa
0x000000000005dac1 : ror byte ptr [rdi], 0x85 ; retf -0xb
0x00000000000dcd57 : ror byte ptr [rdi], 0x88 ; ret 1
0x0000000000033177 : ror byte ptr [rdi], 0x88 ; retf
0x000000000011de27 : ror byte ptr [rdi], 0x88 ; retf 3
0x000000000002ece3 : ror byte ptr [rdi], 0x8e ; imul edi, esp, 0x148ffff ; ret
0x00000000000c2046 : ror byte ptr [rdi], 0x8e ; ret
0x000000000006e0a6 : ror byte ptr [rdi], 0x8e ; retf
0x00000000000f761f : ror byte ptr [rdi], 0x8e ; retf 0
0x000000000003dabc : ror byte ptr [rdi], 0x92 ; ret 0x294c
0x00000000000b9597 : ror byte ptr [rdi], 0x92 ; ret 0xd029
0x000000000007d81d : ror byte ptr [rdi], 0x94 ; ret
0x00000000000d27a8 : ror byte ptr [rdi], 0x94 ; ret 0x1589
0x00000000000a870d : ror byte ptr [rdi], 0x94 ; ret 0x3840
0x0000000000114437 : ror byte ptr [rdi], 0x94 ; ret 0x3d83
0x0000000000054449 : ror byte ptr [rdi], 0x94 ; ret 0x7f3c
0x00000000000ae5ed : ror byte ptr [rdi], 0x94 ; ret 0x8d4c
0x000000000006986b : ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x00000000000d6938 : ror byte ptr [rdi], 0x95 ; ret
0x00000000000a6d8b : ror byte ptr [rdi], 0x95 ; ret 0xd121
0x00000000000a6eae : ror byte ptr [rdi], 0x95 ; ret 0xdae9
0x000000000006703f : ror byte ptr [rdi], 0x95 ; ret 0xdaf7
0x000000000009b76f : ror byte ptr [rdi], 0x95 ; ret 0xe883
0x000000000009ba55 : ror byte ptr [rdi], 0x95 ; ret 0xf883
0x000000000011d586 : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x7d], 0xc4 ; or bl, dh ; ret
0x00000000000d206d : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rdi], 0x47 ; ret 0x90c3
0x00000000000422ac : ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; or eax, 1 ; ret
0x0000000000064d2b : ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; pop rbx ; ret
0x00000000000dd19a : ror byte ptr [rdi], 0xb6 ; shr byte ptr [rcx], cl ; sal bl, 1 ; ret
0x0000000000084015 : ror byte ptr [rdi], 1 ; adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x0000000000031756 : ror byte ptr [rdi], 1 ; mov dh, 0x17 ; test dl, dl ; jne 0x31740 ; ret
0x00000000000c29cd : ror byte ptr [rdi], 1 ; ret 0xf039
0x000000000002504b : ror byte ptr [rdi], cl ; mov byte ptr [rdx], cl ; add eax, dword ptr [rax] ; add bh, dh ; ret 0xf800
0x0000000000025634 : ror byte ptr [rdi], cl ; mov ch, dl ; add byte ptr [rax], al ; add bh, dh ; ret 0xf800
0x000000000008f15d : ror byte ptr [rdi], cl ; mov ebp, 0xf80148c0 ; ret
0x000000000003822c : ror byte ptr [rdi], cl ; test byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x00000000000a4cbe : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x00000000000a84f4 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd138
0x000000000016a92c : ror byte ptr [rsi - 0x71ad0004], cl ; cld ; call rdx
0x000000000016a93c : ror byte ptr [rsp + rdi*8 - 0x373ad01], cl ; call rdx
0x000000000016a008 : ror dh, 0xfb ; call qword ptr [rax]
0x0000000000169ffc : ror dl, 1 ; sti ; jmp qword ptr [rax]
0x0000000000132da7 : ror dword ptr [rax + 0x29], 1 ; retf -0x7eb8
0x000000000003b284 : ror dword ptr [rax + 0x29], cl ; ret
0x00000000000b90a1 : ror dword ptr [rax + 0x63], cl ; ret
0x0000000000125d75 : ror dword ptr [rax + 1], -8 ; ret
0x0000000000125c39 : ror dword ptr [rax + 1], -8 ; sub rax, r8 ; ret
0x0000000000125e8e : ror dword ptr [rax + 1], -8 ; sub rax, rdx ; ret
0x000000000011f18a : ror dword ptr [rax + 3], 1 ; or byte ptr [rax + 0x39], cl ; retf
0x00000000000c7232 : ror dword ptr [rax + 3], 1 ; or ecx, dword ptr [rcx - 0x7d] ; ret 0x8b10
0x00000000000f7b50 : ror dword ptr [rax + 9], cl ; retf -0x76b7
0x000000000010e4b2 : ror dword ptr [rax - 0x3f], -0x17 ; adc byte ptr [rcx - 0x77], al ; retf 0x4d88
0x00000000000806b4 : ror dword ptr [rax - 0x3f], -0x1f ; and byte ptr [rax + 9], cl ; retf -0x76b8
0x00000000000807d9 : ror dword ptr [rax - 0x3f], -0x1f ; and byte ptr [rax + 9], cl ; retf 0xf48
0x000000000008099a : ror dword ptr [rax - 0x3f], -0x1f ; and byte ptr [rax + 9], cl ; retf 0xf4c
0x00000000000cdf95 : ror dword ptr [rax - 0x3f], -0x20 ; or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000006e319 : ror dword ptr [rax - 0x3f], -7 ; add cl, byte ptr [rax + 0x39] ; retf -0x78f1
0x000000000007d1f5 : ror dword ptr [rax - 0x73], 0x41 ; add dword ptr [rax - 0x77], ecx ; retf
0x00000000000ca6ca : ror dword ptr [rax - 0x75], 4 ; ret
0x00000000000cb88f : ror dword ptr [rax - 0x75], 4 ; ret 0x8548
0x000000000010a73d : ror dword ptr [rax - 0x75], 5 ; retf
0x0000000000042bdb : ror dword ptr [rax - 0x77], 0x34 ; ret 0x8348
0x00000000000e72cd : ror dword ptr [rax - 0x77], 1 ; fadd st(6) ; add al, byte ptr [rax] ; pop rbx ; ret
0x000000000004c8b0 : ror dword ptr [rax - 0x77], 1 ; ret 0xc7e9
0x0000000000038ba2 : ror dword ptr [rax - 0x77], 1 ; retf -0x76b8
0x00000000000c17f2 : ror dword ptr [rax - 0x77], cl ; fimul word ptr [rax - 0x77] ; out dx, eax ; call r12
0x000000000006b58d : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x6b587 ; ret
0x000000000007441d : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x74417 ; ret
0x00000000000435bf : ror dword ptr [rax - 0x7d], -0x40 ; add dword ptr [rax + 0x39], ecx ; ret
0x0000000000042037 : ror dword ptr [rax - 0x7d], -0x40 ; add dword ptr [rax + 0x39], ecx ; ret 0xef75
0x00000000000c60bc : ror dword ptr [rax - 0x7d], -0x40 ; add dword ptr [rcx], edi ; retf -0x1481
0x0000000000038f25 : ror dword ptr [rax - 0x7d], 1 ; ret
0x0000000000035ac8 : ror dword ptr [rax - 0x7d], 1 ; ret 0x4801
0x00000000000ad927 : ror dword ptr [rax - 0x7d], cl ; ret 0xf601
0x000000000010c3bd : ror dword ptr [rbx - 0x76b7fbb0], 1 ; or ecx, dword ptr [rdi] ; retf -0x2d7b
0x000000000010c21d : ror dword ptr [rcx + 0x63], 0x14 ; mov byte ptr [rcx + rax - 0x3e], cl ; jmp rdx
0x00000000000ced3b : ror dword ptr [rcx + 0x63], 1 ; adc al, 0x94 ; add rdx, r12 ; jmp rdx
0x000000000011bd1b : ror dword ptr [rcx + rcx*4 - 0x12], -0x77 ; fisttp word ptr [rax - 0x77] ; retf -0x76b8
0x00000000000a8d3a : ror dword ptr [rcx - 0x76b7d789], 0x4f ; and bl, dh ; ret
0x000000000004ba83 : ror dword ptr [rcx - 0x77], 0x14 ; ret 0x8b48
0x0000000000041dba : ror dword ptr [rcx - 0x7d], 1 ; ret 0xe908
0x0000000000041dd2 : ror dword ptr [rcx - 0x7d], 1 ; ret 0xeb08
0x00000000001475c7 : ror dword ptr [rcx], cl ; ret 0xe074
0x000000000008efd5 : ror dword ptr [rdi], -0x43 ; ror byte ptr [rax + 1], 0xf8 ; ret
0x0000000000098f18 : ror dword ptr [rdi], -0x51 ; ret 0x78e9
0x00000000000e01a2 : ror dword ptr [rdi], -0x6e ; ret 0xcc80
0x00000000000c6d1f : ror dword ptr [rdi], -0x6e ; ret 0xd138
0x0000000000144b78 : ror dword ptr [rdi], -0x7b ; adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000145284 : ror dword ptr [rdi], -0x7b ; add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000145056 : ror dword ptr [rdi], -0x7b ; add eax, 0xc0310000 ; ret
0x0000000000146180 : ror dword ptr [rdi], -0x7b ; cmp al, 2 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000144fd6 : ror dword ptr [rdi], -0x7b ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x0000000000145314 : ror dword ptr [rdi], -0x7b ; je 0x145324 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000144e0b : ror dword ptr [rdi], -0x7b ; jno 0x144e20 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000144ed3 : ror dword ptr [rdi], -0x7b ; mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000fb337 : ror dword ptr [rdi], -0x7b ; ret
0x00000000000505a5 : ror dword ptr [rdi], -0x7b ; ret 0xfffd
0x0000000000144b50 : ror dword ptr [rdi], -0x7b ; sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000052e76 : ror dword ptr [rdi], -0x7c ; ret
0x00000000000b3c07 : ror dword ptr [rdi], -0x7e ; retf 0
0x0000000000149a2b : ror dword ptr [rdi], 0x25 ; add byte ptr [rax + 0x39], cl ; ret
0x000000000009a6a1 : ror dword ptr [rdi], 0x4f ; ret 0x66c3
0x00000000000dd17c : ror dword ptr [rdi], 1 ; xchg eax, edx ; ret 0x970f
0x000000000008e9a7 : ror dword ptr [rdi], 1 ; xchg eax, esp ; ret
0x000000000002e737 : ror dword ptr [rdi], cl ; retf
0x00000000000f96d3 : ror eax, 8 ; ret
0x000000000006b58c : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x6b588 ; ret
0x000000000007441c : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x74418 ; ret
0x00000000000a855e : sahf ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x148
0x000000000008bb18 : sahf ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000017e291 : sahf ; call rdi
0x000000000016ee31 : sahf ; clc ; jmp rsp
0x0000000000157145 : sahf ; in eax, dx ; call rax
0x0000000000157141 : sahf ; in eax, dx ; inc dword ptr [rax - 0x62] ; in eax, dx ; call rax
0x00000000000025ea : sahf ; jl 0x257f ; loop 0x25ca ; ret 0x23cb
0x00000000000025e9 : sahf ; jl 0x2580 ; loop 0x25cb ; ret 0x23cb
0x000000000015e7a0 : sahf ; mov esp, 0xbbf4fff5 ; cmc ; jmp rbx
0x00000000000a20d8 : sahf ; or al, byte ptr [rax] ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x0000000000126bbe : sahf ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011c80a : sahf ; ret
0x00000000000abcdc : sahf ; ret 0x2941
0x0000000000158885 : sahf ; ret 0x38ae
0x00000000001593bc : sahf ; retf
0x000000000005e9ee : sahf ; retf 3
0x0000000000068a3e : sahf ; retf 8
0x0000000000002463 : sahf ; sbb byte ptr [rax], cl ; ret 0x5576
0x00000000001902f1 : sahf ; sti ; jmp qword ptr [rdx]
0x00000000001144c2 : sal bh, 0xd8 ; add rsp, 0x18 ; ret
0x00000000001147e9 : sal bh, 0xd8 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000d2053 : sal bh, 0xd8 ; cmp dword ptr [rdi + 0x10], ecx ; cmovb eax, edx ; ret
0x000000000009a69c : sal bh, 0xd8 ; cmp ecx, r8d ; cmovg eax, edx ; ret
0x00000000000422af : sal bh, 0xd8 ; or eax, 1 ; ret
0x00000000000dd1f6 : sal bh, 0xd8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000064d2e : sal bh, 0xd8 ; pop rbx ; ret
0x0000000000064cfb : sal bh, 0xd8 ; ret
0x0000000000184c70 : sal bh, 0xf5 ; call qword ptr [rdx]
0x000000000007fff7 : sal bh, 1 ; ret 0x8000
0x000000000007feb7 : sal bh, 1 ; ret 0xc000
0x000000000007fd77 : sal bh, 1 ; ret 0xe000
0x000000000007fc37 : sal bh, 1 ; ret 0xf000
0x000000000007faf7 : sal bh, 1 ; ret 0xf800
0x000000000007f9b7 : sal bh, 1 ; ret 0xfc00
0x000000000007f877 : sal bh, 1 ; ret 0xfe00
0x000000000007f737 : sal bh, 1 ; ret 0xff00
0x000000000007f5f7 : sal bh, 1 ; ret 0xff80
0x000000000007f4b7 : sal bh, 1 ; ret 0xffc0
0x000000000007f377 : sal bh, 1 ; ret 0xffe0
0x000000000007f237 : sal bh, 1 ; ret 0xfff0
0x000000000007f0f7 : sal bh, 1 ; ret 0xfff8
0x000000000007efb7 : sal bh, 1 ; ret 0xfffc
0x000000000007ee77 : sal bh, 1 ; ret 0xfffe
0x000000000004a26c : sal bh, cl ; int1 ; add r8d, eax ; mov eax, r8d ; ret
0x00000000001043b6 : sal bl, 0x48 ; stosd dword ptr [rdi], eax ; mov eax, r8d ; ret
0x0000000000041cd7 : sal bl, 0xc3 ; ret
0x000000000009bf5f : sal bl, 1 ; ret
0x00000000000f58f6 : sal byte ptr [rax + rdi*2 + 0x41], 0xb9 ; retf 0
0x000000000010b0ed : sal byte ptr [rax + rdx*2 - 0x75], 0x50 ; adc dh, dh ; ret 0x7401
0x000000000002315d : sal byte ptr [rax + rsi + 0x48], 0x83 ; ret
0x000000000015cd24 : sal byte ptr [rax], 0xf2 ; inc dword ptr [rax] ; xor dh, dl ; jmp rax
0x00000000001044bf : sal byte ptr [rbp + 0x1e], 0x83 ; ret 0x8401
0x00000000000b4bf7 : sal byte ptr [rbp + 0x2e], 0xb8 ; je 0xb4c05 ; add byte ptr [rax], al ; syscall
0x00000000000a96b1 : sal byte ptr [rbp + 0x44], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000838a8 : sal byte ptr [rbp + 0x55], 0x48 ; xor eax, eax ; ret
0x000000000008b25a : sal byte ptr [rbp + 0x63], 0x48 ; mov eax, edi ; ret
0x000000000004a978 : sal byte ptr [rbp + 0x6b], 0xf6 ; ret 0x7440
0x00000000000738c2 : sal byte ptr [rbp + 0xb], cl ; xor eax, eax ; ret
0x00000000001184d1 : sal byte ptr [rbp + 0xc], cl ; mov eax, 1 ; ret
0x0000000000082760 : sal byte ptr [rbp + 0xd], 0x48 ; add esp, 8 ; ret
0x00000000000646b0 : sal byte ptr [rbp + 0xd], 0x48 ; mov eax, ebx ; pop rbx ; ret
0x000000000014a580 : sal byte ptr [rbp + 5], 0x5b ; ret
0x000000000004ab8c : sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x00000000000f4ee7 : sal byte ptr [rbp + 6], 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000032e57 : sal byte ptr [rbp + 6], 0xf3 ; ret
0x00000000000f54c1 : sal byte ptr [rbp + 7], 1 ; mov eax, 0xca ; syscall
0x000000000010c9c4 : sal byte ptr [rbp + 9], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000f55c4 : sal byte ptr [rbp + 9], 0xf3 ; ret
0x000000000002039c : sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x000000000007cff9 : sal byte ptr [rbp + rax + 0x48], cl ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x000000000010c721 : sal byte ptr [rbp + rax + 0x48], cl ; mov edi, ebp ; call rdx
0x000000000011206f : sal byte ptr [rbp + rax + 0x4c], 0x89 ; out dx, eax ; call rax
0x0000000000115099 : sal byte ptr [rbp + rax*4 + 0x64], 0x48 ; mov dword ptr [rbx], eax ; pop rbx ; ret
0x0000000000125d70 : sal byte ptr [rbp + rbx*8 + 0x48], cl ; movsxd rax, ecx ; add rax, rdi ; ret
0x00000000000f2137 : sal byte ptr [rbp + rdx + 0x48], 0x83 ; ret
0x0000000000075be5 : sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x000000000008ea35 : sal byte ptr [rbp - 0x10], cl ; ret
0x000000000009932e : sal byte ptr [rbp - 0x11], 0xf3 ; ret
0x00000000000f581e : sal byte ptr [rbp - 0x11], cl ; ret
0x000000000007e510 : sal byte ptr [rbp - 0x13], 0xf3 ; ret
0x0000000000098b20 : sal byte ptr [rbp - 0x13], cl ; lea rax, qword ptr [rcx - 1] ; ret
0x000000000006b590 : sal byte ptr [rbp - 0x13], cl ; ret
0x000000000008e96a : sal byte ptr [rbp - 0x15], cl ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x000000000008c6a3 : sal byte ptr [rbp - 0x16], cl ; or byte ptr [rdi], sil ; ret
0x0000000000115c16 : sal byte ptr [rbp - 0x19], 0x5b ; ret
0x000000000009a686 : sal byte ptr [rbp - 0x19], 1 ; xor eax, eax ; ret
0x00000000000c1829 : sal byte ptr [rbp - 0x1c], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008f7bb : sal byte ptr [rbp - 0x1e], 0x31 ; shr byte ptr [rcx], 0xc8 ; ret
0x000000000010d7e1 : sal byte ptr [rbp - 0x24], 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000009ac33 : sal byte ptr [rbp - 0x26], 0x48 ; mov eax, edi ; ret
0x000000000008ead3 : sal byte ptr [rbp - 0x26], 0xf3 ; ret
0x000000000003175b : sal byte ptr [rbp - 0x27], cl ; ret
0x00000000000e20f5 : sal byte ptr [rbp - 0x28], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000e2156 : sal byte ptr [rbp - 0x29], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000ba64f : sal byte ptr [rbp - 0x2b], cl ; xor eax, eax ; ret
0x000000000009ab22 : sal byte ptr [rbp - 0x35], 0xf3 ; ret
0x00000000000f596e : sal byte ptr [rbp - 0x69], 0x48 ; mov ebx, dword ptr [rbp - 8] ; leave ; ret
0x000000000007e5ba : sal byte ptr [rbp - 0xd], cl ; ret
0x000000000009bf9b : sal byte ptr [rbp - 0xe], cl ; ret
0x00000000000f54d0 : sal byte ptr [rbp - 0xf], 0x5a ; pop r10 ; ret
0x0000000000075fcc : sal byte ptr [rbx + 0x21], 1 ; movzx eax, byte ptr [rax] ; ret
0x00000000000e2f92 : sal byte ptr [rbx + rax + 0x48], 0x89 ; adc bl, dh ; ret
0x00000000000e2ca3 : sal byte ptr [rbx + rbx + 0x48], 0x39 ; ret
0x000000000010c112 : sal byte ptr [rbx + rcx + 0x31], 0xc0 ; ret
0x00000000000f4204 : sal byte ptr [rbx + rcx + 0x39], cl ; ret 0xf7e
0x00000000000e3728 : sal byte ptr [rbx + rcx + 0x48], 0x83 ; ret 0x4808
0x00000000001150c2 : sal byte ptr [rbx + rcx + 0x48], 1 ; add esp, 8 ; ret
0x000000000010b5d2 : sal byte ptr [rbx + rdi + 0x48], 0x8b ; sbb ecx, dword ptr [rax - 0x7d] ; ret
0x000000000006755f : sal byte ptr [rbx + rdi*2 + 0x48], 0x89 ; ret
0x000000000010c75e : sal byte ptr [rbx + rdx + 0xf], cl ; mov dh, 0x40 ; or dh, dh ; ret 0x8802
0x00000000000e2123 : sal byte ptr [rbx + rsi + 0x48], 0x89 ; ret
0x000000000004e76e : sal byte ptr [rbx + rsi*2 + 0x41], 0x39 ; ret 0x4675
0x000000000018db30 : sal byte ptr [rbx], 0xf8 ; call qword ptr [rdx]
0x000000000008e99e : sal byte ptr [rcx + 0x44], 0x38 ; ret 0x4153
0x00000000000c3454 : sal byte ptr [rcx + 0x48], 0x89 ; ret
0x0000000000054ea4 : sal byte ptr [rcx + rbp + 0x48], 0x8b ; adc byte ptr [r8 - 0x77], cl ; ret 0x348
0x00000000000f7eec : sal byte ptr [rcx + rbx + 0x4c], 0x89 ; retf -0x76b7
0x000000000008072c : sal byte ptr [rcx + rdx + 0x48], cl ; bsf eax, edx ; ret
0x0000000000021162 : sal byte ptr [rcx], 0xd2 ; add eax, 1 ; push rax ; call rbx
0x00000000000f4ed6 : sal byte ptr [rcx], 1 ; ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x00000000000dfc8c : sal byte ptr [rcx], cl ; idiv byte ptr [rax + 0x118] ; syscall
0x0000000000068a9d : sal byte ptr [rcx], cl ; ror byte ptr [rcx + rcx*4 - 0x32], cl ; mov eax, r8d ; syscall
0x00000000000db187 : sal byte ptr [rcx], cl ; test byte ptr [rax - 0x77], 0xdf ; call rax
0x000000000003344c : sal byte ptr [rcx], cl ; test byte ptr [rcx + rcx*4 - 0x39], 0x44 ; mov eax, ecx ; syscall
0x00000000000b5ec8 : sal byte ptr [rdi + rax - 0x3a], 3 ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000002ee7e : sal byte ptr [rdi + rbp + 0x48], 0x83 ; ret 0xeb04
0x00000000000808fb : sal byte ptr [rdx + 0x48], cl ; bsf eax, edx ; ret
0x00000000000e277d : sal byte ptr [rdx + rbx*2 + 0x41], 0x80 ; clc ; and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8041
0x000000000008fa33 : sal byte ptr [rdx + rdi - 0xa], cl ; ret 0x7501
0x000000000007e993 : sal byte ptr [rdx + rdx + 0x48], 0xff ; ret 0x2288
0x00000000000c2e96 : sal byte ptr [rdx + rdx + 0x48], cl ; mov edi, dword ptr [rdx + 8] ; call 0x1f941
0x00000000000c17d3 : sal byte ptr [rdx + rdx*8 + 0x5b], 0x5d ; pop r12 ; ret
0x000000000008f15b : sal byte ptr [rdx + rdx*8 + 0xf], 0xbd ; ror byte ptr [rax + 1], 0xf8 ; ret
0x00000000000e20c3 : sal byte ptr [rdx + rsi + 0x48], 0x89 ; ret
0x00000000000f4dfc : sal byte ptr [rdx - 0xf], 1 ; xor eax, eax ; ret
0x0000000000185b40 : sal byte ptr [rdx], 0xf6 ; jmp qword ptr [rcx]
0x0000000000119e17 : sal byte ptr [rsi + rax + 0x31], 0xc0 ; ret
0x0000000000110f5a : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x110f78 ; call rax
0x0000000000115c9a : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x115cb8 ; call rax
0x00000000001162e3 : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x116301 ; call rax
0x0000000000112bee : sal byte ptr [rsi + rax + 0x48], 0x8d ; jnp 0x112c64 ; call rax
0x000000000011364e : sal byte ptr [rsi + rax + 0x48], 0x8d ; jnp 0x1136b4 ; call rax
0x00000000000f7de7 : sal byte ptr [rsi + rdx + 0x48], 0x39 ; retf -0x168b
0x00000000000e3701 : sal byte ptr [rsi + rsi + 0x48], 0x83 ; ret 0x4808
0x00000000000e727c : sal byte ptr [rsi + rsi*2 + 0x48], 0x39 ; ret
0x000000000015e3c0 : sal byte ptr [rsi - 0x48ef000b], 0xf5 ; jmp qword ptr [rax]
0x000000000015e3bc : sal byte ptr [rsi - 0x493f000b], 1 ; cmc ; call qword ptr [rax]
0x00000000000d4482 : sal byte ptr [rsp + rax + 0x39], cl ; ret 0x8675
0x0000000000107a79 : sal byte ptr [rsp + rbx + 0x48], 0x83 ; ret
0x0000000000080451 : sal byte ptr [rsp + rcx + 0x5b], 0x5d ; pop r12 ; ret
0x00000000000a9659 : sal byte ptr [rsp + rcx - 0x7b], 0xff ; jne 0xa966f ; ret
0x00000000000ea722 : sal byte ptr [rsp + rdx + 0x48], 0x89 ; ret
0x00000000001841a1 : sal ch, cl ; jmp qword ptr [rdx]
0x000000000017abf0 : sal cl, 0xfc ; call qword ptr [rdx]
0x000000000017ced9 : sal cl, cl ; jmp qword ptr [rbx]
0x0000000000187fc9 : sal dh, 1 ; jmp qword ptr [rsi]
0x000000000017e9f9 : sal dl, cl ; call qword ptr [rdx]
0x000000000004a974 : sal dword ptr [rbp + 4], -0x7c ; sal byte ptr [rbp + 0x6b], 0xf6 ; ret 0x7440
0x000000000007bd76 : sal dword ptr [rbp - 0x19], 0x48 ; sub eax, 0x10 ; ret
0x0000000000089e0a : sal dword ptr [rbp - 0xd], 1 ; ret
0x0000000000117fa4 : sal dword ptr [rbx + 9], 1 ; xor eax, eax ; ret
0x000000000009ab02 : sal dword ptr [rbx + rdx + 0x48], -0x7d ; ret 0x8b04
0x00000000000a8264 : sal dword ptr [rcx + rcx + 0x5b], 1 ; ret
0x0000000000117e8b : sal dword ptr [rcx], -0x40 ; cmp rdx, rcx ; je 0x117ea9 ; ret
0x000000000008e8d7 : sal dword ptr [rcx], -0x40 ; mov qword ptr [rdx], rcx ; ret
0x00000000001043b4 : sal dword ptr [rcx], -0x40 ; rep stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x0000000000025ac6 : sal dword ptr [rsi - 0x29], 0x2d ; ret 0
0x000000000002d744 : sal dword ptr [rsi], cl ; add byte ptr [rax + 1], cl ; retf -0x76b8
0x000000000008eb29 : sal dword ptr [rsp + rsi*8 + 0x39], 1 ; int1 ; je 0x8eb28 ; ret
0x0000000000184201 : sal ebp, cl ; jmp qword ptr [rcx]
0x0000000000083f73 : sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000016e669 : sal edi, -1 ; add al, 0xa7 ; add dword ptr [rax], eax ; xchg eax, esp ; ret 0xfff7
0x00000000001882e1 : sal esi, 1 ; jmp qword ptr [rdi]
0x00000000001881f1 : sal esi, 1 ; jmp qword ptr [rsi]
0x000000000017e075 : salc ; add byte ptr [rax], al ; js 0x17e02f ; cld ; jmp qword ptr [rbx]
0x000000000018e06d : salc ; add dword ptr [rax], eax ; add byte ptr [rax - 8], 0xff ; retf
0x0000000000147606 : salc ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x00000000001922a0 : salc ; add eax, 0x2a60000 ; add byte ptr [rax], al ; retf 2
0x0000000000110efb : salc ; add rdi, 0x10 ; jmp rcx
0x000000000012bf86 : salc ; add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000149bb1 : salc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f3e69 : salc ; call rax
0x0000000000146c3a : salc ; clc ; ret
0x00000000000f06ef : salc ; cmovne eax, ecx ; ret
0x00000000000038fd : salc ; jb 0x397f ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x00000000000bba16 : salc ; jnp 0xbba1b ; dec dword ptr [rax - 0x77] ; ret
0x00000000000db28d : salc ; mov eax, 4 ; syscall
0x00000000000db32d : salc ; mov eax, 6 ; syscall
0x0000000000001bf0 : salc ; mov ebp, dword ptr [rsi + rbx*8 + 0x6d] ; ret 0x1bb7
0x00000000000ea8df : salc ; mov rdi, r12 ; mov eax, 0x14 ; syscall
0x00000000000eaa43 : salc ; mov rdi, r12 ; mov eax, ebx ; syscall
0x000000000001fab0 : salc ; mov rdi, r8 ; mov eax, r13d ; syscall
0x00000000000dab57 : salc ; mov rdi, r9 ; mov eax, r8d ; syscall
0x00000000000a8155 : salc ; mov rdi, rbp ; sub rsp, 8 ; call r12
0x000000000001fae8 : salc ; mov rdi, rbx ; mov eax, r12d ; syscall
0x00000000000aeaf9 : salc ; movsxd rax, dword ptr [rcx + rdx*4] ; add rax, rcx ; jmp rax
0x00000000000b3f9c : salc ; nop dword ptr [rax] ; mov eax, dword ptr [rdi] ; ret
0x00000000000022e8 : salc ; ret
0x00000000000025ee : salc ; ret 0x23cb
0x000000000009ad66 : salc ; retf
0x0000000000024cd2 : salc ; retf 0x13
0x0000000000001e72 : salc ; retf 0x559a
0x000000000015c244 : salc ; sub eax, esi ; call rsi
0x00000000000db2df : salc ; syscall
0x000000000016f141 : sar al, 1 ; call rsp
0x0000000000043b30 : sar bh, 0xff ; mov eax, 1 ; ret
0x000000000005b00b : sar bh, cl ; dec dword ptr [rax - 0x7d] ; ret 0xbe08
0x000000000005e325 : sar bl, 0xff ; dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000101770 : sar bl, 0xff ; dec dword ptr [rax - 0x7d] ; ret
0x000000000016a230 : sar bpl, 0xff ; ret 0xfffd
0x00000000000db621 : sar byte ptr [rax + 0x10c], cl ; syscall
0x00000000000dbb32 : sar byte ptr [rax + 0x10d], cl ; syscall
0x00000000000ea91f : sar byte ptr [rax + 0x14], cl ; syscall
0x00000000000dafc7 : sar byte ptr [rax + 0x1c], cl ; syscall
0x00000000000e9dbf : sar byte ptr [rax + 0x2e], cl ; syscall
0x00000000000e9c5f : sar byte ptr [rax + 0x2f], cl ; syscall
0x00000000000b7ff2 : sar byte ptr [rax + 0x3d], cl ; syscall
0x00000000001025b3 : sar byte ptr [rax + 0x5e], 0x89 ; ret
0x0000000000102221 : sar byte ptr [rax + 0x64], 0x89 ; ret
0x00000000000b926f : sar byte ptr [rax + 0x75], cl ; syscall
0x00000000000b92ef : sar byte ptr [rax + 0x77], cl ; syscall
0x000000000011ca42 : sar byte ptr [rax + 0xb], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000292ab : sar byte ptr [rax + 1], 0xf ; ret 0x4389
0x000000000002047a : sar byte ptr [rax + 2], cl ; syscall
0x000000000007c367 : sar byte ptr [rax + 6], 0xf3 ; ret
0x000000000006eeec : sar byte ptr [rax + 9], 0xf3 ; ret
0x00000000000e468f : sar byte ptr [rax + 9], cl ; syscall
0x000000000015e7e8 : sar byte ptr [rbp + rsi*8 - 0xa431f01], 1 ; call rax
0x00000000000cc60a : sar byte ptr [rbp - 0x58], 0x38 ; retf
0x00000000000e8d03 : sar byte ptr [rcx + rdx + 0x74], 1 ; ret
0x0000000000125eda : sar byte ptr [rcx], 1 ; retf -0x6f8b
0x0000000000125c96 : sar byte ptr [rcx], 1 ; retf -0x7af1
0x0000000000125dba : sar byte ptr [rcx], 1 ; retf -0x7f8b
0x000000000015d08c : sar byte ptr [rdi - 0xd], 0xff ; loopne 0x15d118 ; call qword ptr [rax]
0x00000000000c5d05 : sar byte ptr [rdx], 0xe ; je 0xc5c9f ; ret
0x0000000000002b8d : sar byte ptr [rdx], cl ; adc al, 0xe7 ; ret
0x00000000000f5930 : sar byte ptr [rsi + 0x80], cl ; mov eax, r9d ; syscall
0x000000000015921f : sar byte ptr [rsi + rax*2], 0xf8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x000000000016a1a1 : sar ch, 0xff ; ret 0xfffd
0x0000000000184d20 : sar cl, 0xf5 ; jmp qword ptr [rcx]
0x0000000000182b49 : sar cl, 1 ; call qword ptr [rax]
0x000000000015ef44 : sar dh, 0xf6 ; call rdi
0x0000000000024c99 : sar dh, 0xff ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000182040 : sar dh, 1 ; hlt ; jmp qword ptr [rcx]
0x00000000001701b1 : sar dl, cl ; jmp rsp
0x00000000000dfc3a : sar dword ptr [rax + 0x118], 1 ; syscall
0x00000000000e8eb8 : sar dword ptr [rax + 0x119], 1 ; syscall
0x00000000000ea1af : sar dword ptr [rax + 0x120], 1 ; syscall
0x00000000000ea251 : sar dword ptr [rax + 0x12b], 1 ; syscall
0x00000000000ea301 : sar dword ptr [rax + 0x133], 1 ; syscall
0x00000000000e9d05 : sar dword ptr [rax + 0x2c], 1 ; syscall
0x00000000000e9b45 : sar dword ptr [rax + 0x2d], 1 ; syscall
0x00000000000df9e5 : sar dword ptr [rax + 0xdd], 1 ; syscall
0x0000000000032fd5 : sar dword ptr [rax + 0xea], cl ; syscall
0x00000000000b80e3 : sar dword ptr [rax + 0xf7], 1 ; syscall
0x0000000000073342 : sar dword ptr [rax + 2], 1 ; syscall
0x00000000001464b3 : sar dword ptr [rax + rcx*2 + 0x11], 1 ; jns 0x1464be ; ret
0x0000000000129229 : sar dword ptr [rsi + 0x7f], 0x23 ; vzeroupper ; ret
0x000000000015e598 : sar dword ptr [rsi - 0x4132000b], -0xb ; call rdi
0x000000000016f061 : sar eax, -1 ; pop rsp ; fld dword ptr [rcx] ; add ah, dh ; ret 0xfff8
0x0000000000032a55 : sar eax, 0x10 ; ret
0x00000000000326cb : sar eax, 0x1f ; not eax ; and eax, ecx ; ret
0x00000000000e0ddd : sar eax, 0x1f ; ret
0x0000000000032a07 : sar eax, 0x1f ; sub ecx, edx ; not eax ; and eax, ecx ; ret
0x00000000000322ed : sar eax, 0x3f ; not eax ; and eax, ecx ; ret
0x0000000000003b05 : sar eax, 1 ; cmp eax, ecx ; mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x000000000006c14c : sar eax, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000006ea6c : sar eax, 2 ; mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x000000000006c859 : sar eax, 2 ; ret
0x00000000000f939d : sar eax, 6 ; ret
0x000000000016a211 : sar ebp, -1 ; ret 0xfffd
0x0000000000158f83 : sar ecx, 1 ; jnp 0x158f44 ; ret
0x0000000000035ee4 : sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x0000000000035ef7 : sar edx, 0x3f ; xor rax, rdx ; sub rax, rdx ; ret
0x0000000000105739 : sar edx, 4 ; add rdx, 1 ; syscall
0x0000000000083a77 : sar edx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000147103 : sar esi, 1 ; jg 0x147133 ; vzeroupper ; ret
0x000000000014729c : sar esi, 1 ; jg 0x1472cc ; vzeroupper ; ret
0x000000000006c14b : sar r8, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x00000000000322ec : sar rax, 0x3f ; not eax ; and eax, ecx ; ret
0x000000000006c858 : sar rax, 2 ; ret
0x00000000000f939c : sar rax, 6 ; ret
0x0000000000105738 : sar rdx, 4 ; add rdx, 1 ; syscall
0x0000000000083a76 : sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000183eb8 : sbb ah, cl ; cmc ; jmp qword ptr [rcx]
0x00000000000026c1 : sbb ah, cl ; mov ah, 0xf4 ; out -0x21, eax ; syscall
0x0000000000180ab1 : sbb ah, dh ; call rdi
0x000000000007d1c6 : sbb ah, dh ; xor dword ptr [rax], eax ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000058f52 : sbb al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000191974 : sbb al, 0 ; add byte ptr [rax], al ; jle 0x191988 ; add byte ptr [rax], al ; retf
0x0000000000183da8 : sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; xor eax, dword ptr [rcx] ; add al, dh ; retf -0xb
0x00000000000dafc9 : sbb al, 0 ; add byte ptr [rax], al ; syscall
0x0000000000123f6a : sbb al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000123ec3 : sbb al, 0 ; add byte ptr [rcx + 0x29], cl ; retf
0x0000000000181a24 : sbb al, 0x10 ; add dword ptr [rax], eax ; js 0x1819fe ; hlt ; jmp rbx
0x00000000000f3e6e : sbb al, 0x20 ; je 0xf3ed6 ; xor eax, eax ; pop rbx ; ret
0x00000000000f3e6d : sbb al, 0x20 ; je 0xf3ed7 ; xor eax, eax ; pop rbx ; ret
0x0000000000001f20 : sbb al, 0x3a ; jrcxz 0x1fa1 ; retf 0x6321
0x0000000000174524 : sbb al, 0x3b ; add byte ptr [rax], al ; sbb byte ptr [rcx - 0x14], ah ; jmp qword ptr [rcx]
0x0000000000184924 : sbb al, 0x3f ; add dword ptr [rax], eax ; fsub st(7) ; cmc ; call qword ptr [rsi]
0x0000000000002fac : sbb al, 0x44 ; nop ; ret 0x5bdb
0x00000000000e3a03 : sbb al, 0x83 ; ret
0x000000000015a282 : sbb al, 0x8c ; retf
0x000000000015be8c : sbb al, 0xae ; out dx, eax ; jmp rdx
0x000000000015be88 : sbb al, 0xae ; out dx, eax ; lcall ptr [rsi + rbp*4] ; out dx, eax ; jmp rdx
0x0000000000003a83 : sbb al, 0xb ; push rbp ; jg 0x3af8 ; xchg eax, ebp ; retf 0x10bf
0x00000000000c1273 : sbb al, 0xb8 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000015e490 : sbb al, 0xbc ; cmc ; jmp qword ptr [rsi]
0x0000000000000454 : sbb al, 0xc ; ret 0x4412
0x000000000017e324 : sbb al, 0xd9 ; add byte ptr [rax], al ; test al, 0x9f ; jmp rdi
0x0000000000185891 : sbb al, 0xf6 ; jmp qword ptr [rcx]
0x00000000000e1b0b : sbb al, 8 ; add byte ptr [rax + 2], bh ; syscall
0x0000000000184408 : sbb al, bl ; cmc ; jmp qword ptr [rcx]
0x00000000000e474a : sbb al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000012414a : sbb al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000104280 : sbb al, byte ptr [rbp - 0x78] ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4c02
0x0000000000124149 : sbb al, byte ptr fs:[rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000b36c5 : sbb al, ch ; insd dword ptr [rdi], dx ; ret 0xfff6
0x00000000000f0def : sbb al, ch ; retf
0x00000000000d16f0 : sbb al, ch ; retf -0xa4f
0x00000000000392ba : sbb al, ch ; sub al, 0xff ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c122f : sbb bh, byte ptr [rax + 2] ; ret
0x0000000000176661 : sbb bh, ch ; call qword ptr [rcx]
0x0000000000161085 : sbb bl, bh ; inc eax ; sbb bl, bh ; jmp rax
0x0000000000161089 : sbb bl, bh ; jmp rax
0x0000000000159012 : sbb bl, byte ptr [rip + 0x30565c9] ; in eax, dx ; retf
0x0000000000157d05 : sbb bl, byte ptr [rsi] ; ret
0x00000000000f05fa : sbb byte ptr [r11 + 0x39481846], r9b ; retf -0x7bf1
0x00000000000319a1 : sbb byte ptr [r15], r9b ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x000000000011f31f : sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x0000000000117f01 : sbb byte ptr [r8 + 1], r15b ; ret
0x00000000000b5172 : sbb byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000098604 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x0000000000098626 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x0000000000098664 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x000000000007d495 : sbb byte ptr [rax + 0x31], cl ; retf -0x76b8
0x00000000000775f3 : sbb byte ptr [rax + 0x39], cl ; ret
0x0000000000027e57 : sbb byte ptr [rax + 0x39], cl ; ret 0x8e0f
0x00000000000efd2e : sbb byte ptr [rax + 0x39], cl ; ret 0x8f0f
0x00000000000f05fe : sbb byte ptr [rax + 0x39], cl ; retf -0x7bf1
0x00000000000f05fd : sbb byte ptr [rax + 0x39], r9b ; retf -0x7bf1
0x000000000011f320 : sbb byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x0000000000117f02 : sbb byte ptr [rax + 1], bh ; ret
0x00000000000f3dd4 : sbb byte ptr [rax + 1], cl ; ret 0x8949
0x00000000000eafb9 : sbb byte ptr [rax + 1], cl ; retf -0x76b8
0x00000000000f3dd3 : sbb byte ptr [rax + 1], r9b ; ret 0x8949
0x00000000000dc593 : sbb byte ptr [rax + 3], bh ; syscall
0x000000000010c530 : sbb byte ptr [rax - 0x73], cl ; and byte ptr [rdi], cl ; retf 0x5089
0x0000000000105893 : sbb byte ptr [rax - 0x73], cl ; je 0x1058c3 ; or al, 0xe8 ; ret 0xfffe
0x000000000008312a : sbb byte ptr [rax - 0x73], cl ; je 0x8313c ; add byte ptr [rax - 0x77], cl ; ret 0x14c
0x000000000006c33f : sbb byte ptr [rax - 0x75], cl ; adc byte ptr [rax + 0x39], cl ; retf -0x48
0x00000000000a858d : sbb byte ptr [rax - 0x75], cl ; and al, 8 ; call rax
0x000000000006d243 : sbb byte ptr [rax - 0x75], cl ; and byte ptr [rax + 0x39], cl ; retf -0x418b
0x00000000000c5577 : sbb byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000000000002c874 : sbb byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000076aa7 : sbb byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000f7d2d : sbb byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000069223 : sbb byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x5d] ; jmp rax
0x0000000000074641 : sbb byte ptr [rax - 0x77], cl ; push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x000000000003954a : sbb byte ptr [rax - 0x77], cl ; ret
0x00000000000e6d31 : sbb byte ptr [rax - 0x77], cl ; ret 0x48eb
0x000000000008a2b6 : sbb byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000010cb7e : sbb byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000026450 : sbb byte ptr [rax - 0x77], cl ; retf
0x00000000000a9a17 : sbb byte ptr [rax - 0x77], cl ; sub byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x0000000000020399 : sbb byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x00000000000726b3 : sbb byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x938b
0x0000000000027dac : sbb byte ptr [rax - 0x7d], cl ; ret
0x00000000000c791f : sbb byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000007b156 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000000ceb2a : sbb byte ptr [rax - 0x7f], cl ; retf 0
0x0000000000071990 : sbb byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000180ab0 : sbb byte ptr [rax], 0xf4 ; call rdi
0x000000000003d45b : sbb byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf -0x74b8
0x0000000000052e1d : sbb byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xc71e
0x00000000000d1eb1 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000012432a : sbb byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000070816 : sbb byte ptr [rax], al ; setne al ; ret
0x00000000000c2f2b : sbb byte ptr [rax], bl ; call 0x1f93c
0x0000000000002464 : sbb byte ptr [rax], cl ; ret 0x5576
0x0000000000098605 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x0000000000098627 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x0000000000098665 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x000000000011aa86 : sbb byte ptr [rbp + 0x39], cl ; retf
0x000000000009ffac : sbb byte ptr [rbp + rcx*4 + 0x43], cl ; dec byte ptr [rax - 0x77] ; retf -0x76bc
0x00000000000210e1 : sbb byte ptr [rbp - 0x77], cl ; int1 ; call rbx
0x000000000010deb4 : sbb byte ptr [rbp - 0x77], cl ; ret
0x000000000009d8e5 : sbb byte ptr [rbp - 0x7b], al ; dec dword ptr [rcx - 0x77] ; fmul qword ptr [rax - 0x77] ; ret
0x00000000000f05fb : sbb byte ptr [rbx + 0x39481846], cl ; retf -0x7bf1
0x0000000000119e5f : sbb byte ptr [rbx + 0x5c71840], cl ; ret
0x00000000000db522 : sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000006ff46 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000446e9 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000006fff7 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000010b424 : sbb byte ptr [rbx + 0x5d], bl ; pop r13 ; pop r14 ; ret
0x0000000000036a27 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000170c40 : sbb byte ptr [rbx + 0xa970203], al ; ret
0x0000000000075c27 : sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000118360 : sbb byte ptr [rbx - 0x77], 0xc0 ; ret
0x00000000000c7cae : sbb byte ptr [rcx + 0x39], al ; retf
0x000000000008eaaf : sbb byte ptr [rcx + 0x39], al ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, ebp ; ret 0x3941
0x000000000010eadc : sbb byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; pop r13 ; ret
0x000000000006bb9b : sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x000000000003e3ae : sbb byte ptr [rcx + 0x63], cl ; retf
0x000000000009b890 : sbb byte ptr [rcx + rcx*4 - 0x16], cl ; mov rdi, rbp ; call rbx
0x000000000006e523 : sbb byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x0000000000070df5 : sbb byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009bb50 : sbb byte ptr [rcx + rcx*4 - 0xe], cl ; mov rdi, rbp ; call rbx
0x0000000000174528 : sbb byte ptr [rcx - 0x14], ah ; jmp qword ptr [rcx]
0x00000000000c7caa : sbb byte ptr [rcx - 0x3f], al ; sti ; sbb byte ptr [rcx + 0x39], al ; retf
0x00000000000c32de : sbb byte ptr [rcx - 0x3fcec7ba], cl ; ret
0x00000000000f437b : sbb byte ptr [rcx - 0x76b37fab], cl ; call rax
0x000000000010e02e : sbb byte ptr [rcx - 0x77], cl ; retf
0x000000000018e248 : sbb byte ptr [rcx - 8], cl ; jmp qword ptr [rax]
0x000000000016cf7d : sbb byte ptr [rcx], al ; add byte ptr [rax + rcx*8], al ; call rsp
0x00000000000dfc3c : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x000000000011b103 : sbb byte ptr [rcx], al ; je 0x11b116 ; xor eax, eax ; ret
0x00000000000c0828 : sbb byte ptr [rcx], bh ; ret 0x850f
0x000000000006e577 : sbb byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000001391bd : sbb byte ptr [rdi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000064cf8 : sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x00000000001173fc : sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x00000000001183ae : sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000002e74b : sbb byte ptr [rdi], cl ; retf -0x2d77
0x000000000003224c : sbb byte ptr [rdi], cl ; retf -0x2e77
0x000000000010c408 : sbb byte ptr [rdi], cl ; retf 0x5389
0x00000000000319a2 : sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x000000000010efe2 : sbb byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000016a2e0 : sbb byte ptr [rdi], dh ; cld ; jmp rax
0x000000000000205b : sbb byte ptr [rdx - 0x1a], dl ; ret
0x0000000000173b68 : sbb byte ptr [rdx], ah ; in al, dx ; call qword ptr [rcx]
0x000000000007ad98 : sbb byte ptr [rdx], cl ; xor al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000004525e : sbb byte ptr [rip - 0x76b80000], dl ; retf -0x76b8
0x00000000000b3be1 : sbb byte ptr [rsi + 0x19], dh ; lea rdi, qword ptr [rbx + 0x13] ; call 0x80659
0x00000000001858a8 : sbb byte ptr [rsi + rsi*8], bl ; jmp qword ptr [rcx]
0x00000000000eb2da : sbb byte ptr [rsi - 0x7d], ah ; add byte ptr [rcx], al ; ret
0x00000000000eb2d9 : sbb byte ptr [rsi - 0x7d], spl ; add byte ptr [rcx], al ; ret
0x000000000016bb21 : sbb ch, ch ; jmp rsp
0x0000000000184550 : sbb cl, 0xf5 ; jmp rdx
0x00000000000c0825 : sbb cl, al ; cli ; sbb byte ptr [rcx], bh ; ret 0x850f
0x000000000007e42e : sbb cl, byte ptr [rax + 0x63] ; xor byte ptr [r8 - 0x77], cl ; retf -0x72b7
0x0000000000082b2f : sbb cl, byte ptr [rcx + rcx*4 - 0x30] ; pop rbx ; ret
0x000000000009505f : sbb cl, byte ptr [rdi] ; test dword ptr [rdx + 5], ebp ; add byte ptr [rax], al ; ret
0x0000000000120e3d : sbb cl, byte ptr [rdi] ; xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000122fad : sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000120a2d : sbb cl, byte ptr [rdi] ; xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x0000000000120539 : sbb cl, byte ptr [rdi] ; xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000120d49 : sbb cl, byte ptr [rdi] ; xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000126f5a : sbb cl, byte ptr [rdi] ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000012677a : sbb cl, byte ptr [rdi] ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x0000000000126b6a : sbb cl, byte ptr [rdi] ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000012638a : sbb cl, byte ptr [rdi] ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000123b0d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001232ed : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x00000000001207bd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000122acd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x0000000000120afd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x0000000000120e19 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000126529 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000120ee9 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000012362d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000122e0d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001225ed : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x00000000001237cd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x0000000000120c9d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000012048d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x000000000012088d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x0000000000126a1a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000012623a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000012734a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000120d6d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x000000000012055d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000012292d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001205ff : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000012095d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x0000000000122a63 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000123763 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000123283 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000012691b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000012724b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000120bcd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000123aa3 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000122da3 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x00000000001228c3 : sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001235c3 : sbb cl, byte ptr [rdi] ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x0000000000126a6b : sbb cl, byte ptr [rdi] ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000012628b : sbb cl, byte ptr [rdi] ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000120623 : sbb cl, byte ptr [rdi] ; xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000a3888 : sbb cl, ch ; retf
0x0000000000190c78 : sbb dh, cl ; clc ; call rbx
0x00000000000f1c47 : sbb dh, dh ; ret 0x7504
0x00000000000f269b : sbb dh, dh ; ret 0x7508
0x000000000017d821 : sbb dh, dl ; call qword ptr [rdx]
0x00000000000034de : sbb dl, 0xcd ; retf
0x000000000014abe4 : sbb dl, bh ; in eax, dx ; call rax
0x0000000000124268 : sbb dword ptr [r8], r8d ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000c27db : sbb dword ptr [rax + 0x39], ecx ; ret 0x870f
0x0000000000119828 : sbb dword ptr [rax + 1], ecx ; ret
0x00000000000c120b : sbb dword ptr [rax + 1], edi ; ret
0x00000000000b3be3 : sbb dword ptr [rax - 0x73], ecx ; jnp 0xb3c02 ; call 0x80657
0x00000000000b35d3 : sbb dword ptr [rax - 0x77], ecx ; ret 0x894c
0x000000000011c264 : sbb dword ptr [rax - 0x7d], ecx ; ret
0x00000000001241f1 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000124269 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000e94b4 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000008770e : sbb dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000005ff05 : sbb dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 1], al ; call 0xec118
0x00000000000b96d5 : sbb dword ptr [rbp + rsi*2 - 0x7e], edx ; mov eax, 0x7d00 ; ret
0x000000000009924e : sbb dword ptr [rbx + 0xc7402f8], eax ; xor eax, eax ; ret
0x00000000000cf7aa : sbb dword ptr [rbx - 0x1f3efe20], eax ; add al, 0x89 ; ret 0xb60f
0x00000000000454ef : sbb dword ptr [rbx - 0x48743], eax ; call qword ptr [rax]
0x000000000015a5bd : sbb dword ptr [rbx], edx ; mov ch, 0x99 ; in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x000000000010448a : sbb dword ptr [rcx + 0xf], eax ; mov dh, 0x52 ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x0000000000116d03 : sbb dword ptr [rcx + 0xf], eax ; ret 0x91eb
0x00000000000e8eba : sbb dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x000000000009677e : sbb dword ptr [rdi], ecx ; test dword ptr [rbx + 6], ebx ; add byte ptr [rax], al ; ret
0x0000000000001cb7 : sbb dword ptr [rdx + 0x55], esp ; je 0x1ce9 ; ret
0x000000000004cec3 : sbb dword ptr [rdx - 1], esi ; dec dword ptr [rcx - 0x77] ; ret 0x8d48
0x0000000000149da2 : sbb dword ptr [rip + 0x5be17500], esp ; ret
0x000000000002ec7b : sbb dword ptr [rip - 0x387cb700], eax ; or byte ptr [rax + 1], cl ; ret
0x000000000014275c : sbb eax, -1 ; ret
0x00000000000f5e94 : sbb eax, 0 ; leave ; ret
0x0000000000028b4c : sbb eax, 0x1480037 ; ret
0x000000000016fa15 : sbb eax, 0x1f440002 ; cli ; jmp rsp
0x0000000000149da0 : sbb eax, 0x25197b ; jne 0x149d90 ; pop rbx ; ret
0x00000000000eaea1 : sbb eax, 0x2ae37a ; pop rbx ; ret
0x0000000000159013 : sbb eax, 0x30565c9 ; in eax, dx ; retf
0x00000000000dfbbb : sbb eax, 0x48000001 ; mov edx, esi ; xor esi, esi ; syscall
0x000000000010af9b : sbb eax, 0x4800292e ; add esp, 8 ; ret
0x00000000000950e9 : sbb eax, 0x4e0850f ; add byte ptr [rax], al ; ret
0x00000000000f3e62 : sbb eax, 0x507a8b48 ; mov rsi, rdx ; call rax
0x000000000009683d : sbb eax, 0x59c850f ; add byte ptr [rax], al ; ret
0x000000000005154d : sbb eax, 0x83ffffee ; ret
0x000000000003625f : sbb eax, 0x89000004 ; ret 0x3d83
0x0000000000123dcd : sbb eax, 0x894d0000 ; retf
0x0000000000002e09 : sbb eax, 0x8d468ae2 ; ret 0xc1bb
0x000000000010224a : sbb eax, 0xb8fb6348 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000002cb6 : sbb eax, 0xe9a3d0b9 ; rcl byte ptr [rbx - 0x7a], 1 ; retf -0x2fb1
0x0000000000106f6a : sbb eax, dword ptr [rax - 0x6af0dc07] ; ret 0xf980
0x000000000003e1ea : sbb eax, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; retf -0x7cf1
0x0000000000124011 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000124089 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000e47d1 : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000874be : sbb eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000149514 : sbb eax, dword ptr [rbx - 0x7bf0ff07] ; retf 0
0x000000000008d7db : sbb eax, dword ptr [rcx + 0x38] ; retf
0x00000000000e9781 : sbb eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x0000000000170885 : sbb eax, dword ptr [rcx] ; add byte ptr [rbx + rax*8 - 3], dl ; call rsp
0x00000000000c5c26 : sbb eax, eax ; and eax, 2 ; add eax, 8 ; ret
0x0000000000148fd5 : sbb eax, eax ; sbb eax, -1 ; ret
0x00000000000289e3 : sbb eax, ecx ; adc eax, dword ptr [rax] ; mov eax, ecx ; syscall
0x000000000015bf7d : sbb eax, esi ; call qword ptr [rax]
0x000000000015c23d : sbb eax, esi ; push qword ptr [rax] ; sub dh, al ; call rsi
0x000000000015bfa1 : sbb eax, esi ; push qword ptr [rbx] ; sbb eax, esi ; call qword ptr [rax]
0x000000000015a128 : sbb ebp, ebx ; retf
0x00000000000b8da1 : sbb ebp, edi ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x000000000016d149 : sbb ebx, esi ; jmp rsp
0x00000000000e2ca5 : sbb ecx, dword ptr [rax + 0x39] ; ret
0x000000000004e7a0 : sbb ecx, dword ptr [rax - 0x77] ; ret 0x6348
0x00000000000ad62d : sbb ecx, dword ptr [rax - 0x7d] ; ret
0x000000000000382f : sbb ecx, dword ptr [rdi - 0x7229c81] ; mov gs, word ptr [rbx] ; retf 0x707d
0x000000000016ebe1 : sbb edi, eax ; call rsp
0x0000000000159eb9 : sbb edi, ebp ; retf
0x0000000000188379 : sbb edi, esp ; jmp qword ptr [rsi]
0x00000000000656e1 : sbb edx, 3 ; sub rdx, r12 ; syscall
0x00000000000025e7 : sbb esi, dword ptr [rdx] ; sahf ; jl 0x2582 ; loop 0x25cd ; ret 0x23cb
0x00000000000f5c0e : sbb esi, ebx ; ret
0x000000000014275b : sbb rax, -1 ; ret
0x00000000000656e0 : sbb rdx, 3 ; sub rdx, r12 ; syscall
0x0000000000127eaf : scasb al, byte ptr [rdi] ; adc byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000127baf : scasb al, byte ptr [rdi] ; adc eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000128aaf : scasb al, byte ptr [rdi] ; add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000121f92 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017b8d5 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; cwde ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cli ; call qword ptr [rax]
0x0000000000128daf : scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000126fae : scasb al, byte ptr [rdi] ; add eax, 0x83480000 ; ret 0xe910
0x00000000000cbe0c : scasb al, byte ptr [rdi] ; add rax, rsi ; jmp rax
0x000000000016af61 : scasb al, byte ptr [rdi] ; cld ; call rax
0x000000000016af9d : scasb al, byte ptr [rdi] ; cld ; jmp qword ptr [rax]
0x000000000016afdd : scasb al, byte ptr [rdi] ; cld ; jmp rax
0x000000000016aee1 : scasb al, byte ptr [rdi] ; cld ; jmp rsp
0x000000000016af5d : scasb al, byte ptr [rdi] ; cld ; ljmp ptr [rdx] ; scasb al, byte ptr [rdi] ; cld ; call rax
0x00000000001284af : scasb al, byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000015a569 : scasb al, byte ptr [rdi] ; or dh, byte ptr [rbp + 0x23] ; retf 0x32dd
0x00000000001281af : scasb al, byte ptr [rdi] ; or eax, 0x894d0000 ; retf
0x000000000015be8d : scasb al, byte ptr [rdi] ; out dx, eax ; jmp rdx
0x000000000015be89 : scasb al, byte ptr [rdi] ; out dx, eax ; lcall ptr [rsi + rbp*4] ; out dx, eax ; jmp rdx
0x0000000000001d40 : scasb al, byte ptr [rdi] ; retf -0x6dda
0x000000000005ff04 : scasb al, byte ptr [rdi] ; sbb dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 1], al ; call 0xec119
0x000000000016a0b1 : scasb al, byte ptr [rdi] ; std ; call rcx
0x0000000000169fc1 : scasb al, byte ptr [rdi] ; sti ; jmp qword ptr [rax]
0x0000000000002faa : scasb al, byte ptr [rdi] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00000000001270ad : scasd eax, dword ptr [rdi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017b9c5 : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; cwde ; mov al, 0xf0 ; call qword ptr [rax]
0x000000000017b965 : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; test al, 0x82 ; cli ; call qword ptr [rax]
0x000000000018b935 : scasd eax, dword ptr [rdi] ; add dword ptr [rax], eax ; out -5, eax ; jmp qword ptr [rdx]
0x000000000016af99 : scasd eax, dword ptr [rdi] ; cld ; call qword ptr [rax + 0x20fffcae]
0x000000000016afd5 : scasd eax, dword ptr [rdi] ; cld ; call qword ptr [rax]
0x000000000016af95 : scasd eax, dword ptr [rdi] ; cld ; jmp qword ptr [rax]
0x000000000017e079 : scasd eax, dword ptr [rdi] ; cld ; jmp qword ptr [rbx]
0x000000000006cb79 : scasd eax, dword ptr [rdi] ; cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf -0x7df1
0x000000000004734d : scasd eax, dword ptr [rdi] ; in eax, 0x34 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000015f768 : scasd eax, dword ptr [rdi] ; mov edi, dr0 ; call rax
0x000000000010611e : scasd eax, dword ptr [rdi] ; mov rdx, rax ; mov byte ptr [rdx], 0 ; ret
0x0000000000084591 : scasd eax, dword ptr [rdi] ; or eax, dword ptr [rax] ; ret
0x0000000000179239 : scasd eax, dword ptr [rdi] ; out dx, eax ; call qword ptr [rdx]
0x000000000015bca9 : scasd eax, dword ptr [rdi] ; out dx, eax ; dec dword ptr [rsi] ; mov al, 0xef ; call rdi
0x000000000007cc7b : scasd eax, dword ptr [rdi] ; push rdx ; or byte ptr [rcx - 0x7d], cl ; ret 0x4820
0x000000000006d5f5 : scasd eax, dword ptr [rdi] ; ret
0x0000000000119892 : scasd eax, dword ptr [rdi] ; ret 0x148
0x000000000006d4eb : scasd eax, dword ptr [rdi] ; ret 0x2948
0x0000000000098f1a : scasd eax, dword ptr [rdi] ; ret 0x78e9
0x000000000007cc69 : scasd eax, dword ptr [rdi] ; ret 0x8949
0x0000000000034620 : scasd eax, dword ptr [rdi] ; ret 0xc748
0x00000000000319a4 : scasd eax, dword ptr [rdi] ; ret 0xd231
0x0000000000098f09 : scasd eax, dword ptr [rdi] ; ret 0xda89
0x0000000000098f17 : scasd eax, dword ptr [rdi] ; ror dword ptr [rdi], -0x51 ; ret 0x78e9
0x000000000016a0b9 : scasd eax, dword ptr [rdi] ; std ; call rcx
0x0000000000002bd7 : scasd eax, dword ptr [rdi] ; xbegin 0xfffffffff8c6efd9 ; ret
0x0000000000159294 : scasd eax, dword ptr [rdi] ; xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, -0x1b ; retf 0x2a91
0x00000000000025b4 : scasd eax, dword ptr [rdi] ; xchg eax, esi ; add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x000000000015850f : scasd eax, dword ptr [rdi] ; xlatb ; out 0xb3, al ; retf 0xe80
0x00000000000dd198 : seta al ; movzx edx, dl ; sub eax, edx ; ret
0x00000000000f4edc : setae al ; ret
0x00000000000b2e58 : setbe al ; movzx eax, al ; pop rbx ; ret
0x00000000000ebcc0 : setbe al ; ret
0x00000000000ab52b : sete al ; add eax, 0x16d ; ret
0x0000000000109a88 : sete al ; add rsp, 8 ; ret
0x000000000009b249 : sete al ; movzx eax, al ; ret
0x000000000002c1c5 : sete al ; ret
0x0000000000032d8a : sete dh ; mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x00000000000da21a : setg al ; pop rbx ; ret
0x00000000000c5bf2 : setne al ; add eax, eax ; ret
0x0000000000114522 : setne al ; add rsp, 0x78 ; ret
0x00000000000d2f40 : setne al ; lea eax, dword ptr [rax + rax*8 + 5] ; ret
0x00000000000d206b : setne al ; movzx eax, al ; cmova eax, edx ; ret
0x0000000000064d29 : setne al ; movzx eax, al ; neg eax ; pop rbx ; ret
0x00000000000e54f2 : setne al ; movzx eax, al ; pop rbx ; ret
0x00000000000338e6 : setne al ; movzx eax, al ; ret
0x00000000001144c0 : setne al ; neg eax ; add rsp, 0x18 ; ret
0x000000000006c37c : setne al ; neg eax ; ret
0x0000000000070818 : setne al ; ret
0x0000000000181985 : sgdt ptr [rax] ; pop rax ; retf
0x000000000007e7e1 : sgdt ptr [rax] ; ret
0x000000000018ea00 : shl byte ptr [rbp - 8], 1 ; call qword ptr [rcx]
0x0000000000002cb8 : shl byte ptr [rbx - 0x79ac2f17], 1 ; retf -0x2fb1
0x0000000000138f7d : shl byte ptr [rcx], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000016a428 : shl byte ptr [rcx], 1 ; cld ; jmp qword ptr [rax]
0x0000000000098a3f : shl byte ptr [rsi + 0x44], 0xf ; out dx, eax ; ret 0xf66
0x00000000000323b7 : shl byte ptr [rsi + 0x48], 1 ; movd mm0, eax ; ret
0x000000000007ec6b : shl byte ptr [rsi + 0xf], 0x74 ; shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x00000000001475c3 : shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x000000000007ebd5 : shl byte ptr [rsi + 0xf], 0xeb ; ret 0xf66
0x000000000014550b : shl byte ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x0000000000145522 : shl byte ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x0000000000082496 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x00000000000824a7 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x000000000008ef98 : shl byte ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x0000000000145401 : shl byte ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000012bfc4 : shl byte ptr [rsi], cl ; add byte ptr [rax + 0x39], cl ; retf -0x76b7
0x0000000000153590 : shl dword ptr [rax + rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x0000000000158e1d : shl dword ptr [rax - 0x6a5aa279], 1 ; retf 0x33e6
0x0000000000114a6c : shl dword ptr [rcx], 1 ; retf -0x1d7f
0x0000000000159108 : shl dword ptr [rdi - 5], 1 ; ret
0x0000000000098a22 : shl dword ptr [rsi + 0x44], 0xf ; out dx, eax ; retf 0x4466
0x0000000000145486 : shl dword ptr [rsi + 0xf], -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000009889b : shl dword ptr [rsi + 0xf], -0x26 ; ret
0x000000000009a7f9 : shl dword ptr [rsi + 0xf], -0x29 ; retf 0xf66
0x0000000000082492 : shl dword ptr [rsi + 0xf], -0x29 ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000007ec6f : shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x000000000009958b : shl dword ptr [rsi + 0xf], 0x76 ; retf 0xf66
0x000000000014553d : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x0000000000145526 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000014550f : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x0000000000143fcb : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001454a1 : shl dword ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000836cc : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x000000000008f1d8 : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xf188
0x0000000000145361 : shl dword ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000062c99 : shl dword ptr [rsi - 0x7cb70001], cl ; ret 0xbe08
0x000000000012c025 : shl dword ptr [rsi], 1 ; add byte ptr [rax + 0x39], cl ; retf -0x76b7
0x00000000001046da : shl eax, 3 ; cdqe ; shr rax, 4 ; ret
0x0000000000033a13 : shl eax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000004282c : shl ecx, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x00000000000427b7 : shl ecx, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000042786 : shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000035f36 : shl edx, 0x20 ; mov eax, eax ; or rax, rdx ; ret
0x000000000004282b : shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x00000000000427b6 : shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000042785 : shl r9, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000033a12 : shl rax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000035f35 : shl rdx, 0x20 ; mov eax, eax ; or rax, rdx ; ret
0x0000000000112930 : shr al, 0x2a ; retf -0xd
0x0000000000112897 : shr al, 0xc3 ; retf -0xd
0x00000000000e6174 : shr al, 0xf6 ; push rsp ; sti ; dec dword ptr [rax + 0x39] ; ret
0x000000000008f2a0 : shr al, 1 ; retf -0xb5
0x0000000000112953 : shr al, 7 ; retf -0xd
0x00000000001586c4 : shr al, cl ; add al, 0x3d ; retf
0x00000000000edb12 : shr al, cl ; clc ; ret
0x00000000000f4e56 : shr ax, 0xe ; and eax, 1 ; ret
0x0000000000179ef9 : shr bh, 1 ; call rax
0x00000000000e5ae3 : shr bl, 0x8d ; xor eax, eax ; ret
0x000000000011fb11 : shr bl, 0xe5 ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000186f60 : shr byte ptr [rax - 0xa], 1 ; call rsi
0x000000000016a47c : shr byte ptr [rax], 1 ; cld ; jmp qword ptr [rax]
0x000000000016a078 : shr byte ptr [rbp + rdi*8 - 0x2523f01], 1 ; jmp rsi
0x00000000000b4b5a : shr byte ptr [rbp - 0x76b7000a], cl ; ret 0x8948
0x000000000008f7bf : shr byte ptr [rcx], 0xc8 ; ret
0x0000000000173eb0 : shr byte ptr [rcx], 1 ; in al, dx ; jmp qword ptr [rbx]
0x00000000000a680f : shr byte ptr [rcx], 1 ; ret
0x0000000000028658 : shr byte ptr [rcx], cl ; ret
0x0000000000083a7b : shr byte ptr [rcx], cl ; rol bl, 1 ; nop ; xor eax, eax ; ret
0x00000000000dd19d : shr byte ptr [rcx], cl ; sal bl, 1 ; ret
0x000000000015a4c7 : shr byte ptr [rdx], 0x43 ; add cl, bl ; retf -0x156f
0x000000000003f1fc : shr cl, 1 ; retf
0x0000000000024a02 : shr cl, 1 ; retf -3
0x000000000005adbd : shr cl, cl ; insb byte ptr [rdi], dx ; ret 0xffff
0x000000000011ae91 : shr cl, cl ; ret
0x00000000000f9126 : shr dword ptr [rbx], 0x4b ; adc byte ptr [rax + 1], cl ; retf 0x3948
0x00000000001002c7 : shr dword ptr [rcx], cl ; add byte ptr [rcx], al ; pop rbx ; ret
0x00000000000ae294 : shr dword ptr [rcx], cl ; ret
0x000000000016a0bc : shr dword ptr [rdi - 0x4fae0003], 1 ; std ; call rcx
0x000000000016a0b4 : shr dword ptr [rsi - 0x50ae0003], 1 ; std ; call rcx
0x00000000000f9768 : shr eax, 0x18 ; ret
0x00000000000326f1 : shr eax, 0x1f ; ret
0x00000000001463cc : shr eax, 0x20 ; cmp ecx, eax ; jne 0x1463df ; xor eax, eax ; ret
0x0000000000032320 : shr eax, 0x3f ; ret
0x00000000000e8e58 : shr eax, 0xc ; xor al, al ; or eax, edi ; ret
0x000000000009911a : shr eax, 0xe ; and eax, 0x3fc00 ; pop rbx ; ret
0x00000000000f4e57 : shr eax, 0xe ; and eax, 1 ; ret
0x00000000000713e2 : shr eax, 4 ; and eax, 1 ; ret
0x00000000001046e0 : shr eax, 4 ; ret
0x00000000000713f2 : shr eax, 5 ; and eax, 1 ; ret
0x00000000000338ff : shr eax, 6 ; or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x00000000000eba5b : shr eax, cl ; and eax, 1 ; ret
0x000000000010611c : shr ebx, 1 ; scasd eax, dword ptr [rdi] ; mov rdx, rax ; mov byte ptr [rdx], 0 ; ret
0x000000000011ed41 : shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x0000000000033957 : shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x000000000004293c : shr ecx, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x00000000000428c1 : shr ecx, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000042890 : shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000000a8260 : shr edx, 0x3f ; cmp cl, dl ; je 0xa8278 ; pop rbx ; ret
0x000000000006c1f3 : shr edx, 2 ; sub eax, edx ; ret
0x000000000011873a : shr edx, 3 ; add rax, rcx ; jmp rax
0x000000000006edc0 : shr edx, 4 ; and edx, 1 ; mov eax, edx ; ret
0x000000000006eeb0 : shr edx, 5 ; and edx, 1 ; mov eax, edx ; ret
0x000000000002bd09 : shr edx, cl ; cmp edx, dword ptr [rdi + 4] ; jb 0x2bd20 ; ret
0x000000000008f29f : shr r8b, 1 ; retf -0xb5
0x000000000004293b : shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x00000000000428c0 : shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x000000000004288f : shr r9, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000003231f : shr rax, 0x3f ; ret
0x00000000000e8e57 : shr rax, 0xc ; xor al, al ; or eax, edi ; ret
0x00000000001046df : shr rax, 4 ; ret
0x00000000000a825f : shr rdx, 0x3f ; cmp cl, dl ; je 0xa8279 ; pop rbx ; ret
0x000000000006c1f2 : shr rdx, 2 ; sub eax, edx ; ret
0x0000000000118739 : shr rdx, 3 ; add rax, rcx ; jmp rax
0x000000000008ee01 : shufps xmm0, xmmword ptr [rdi + 4], 0 ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000008ed71 : shufps xmm0, xmmword ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x00000000000d2e9e : sldt word ptr [rax] ; add byte ptr [rsp + rbx*2 - 0xd], dh ; ret
0x00000000000e8e43 : sldt word ptr [rax] ; or eax, edi ; ret
0x0000000000152769 : sldt word ptr [rax] ; ret
0x0000000000121f47 : stc ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000005099e : stc ; add cl, byte ptr [rax + 0x29] ; retf
0x000000000009aea8 : stc ; add cl, byte ptr [rax + 0x29] ; retf -0x7ab8
0x000000000009af4c : stc ; add cl, byte ptr [rax + 0x29] ; retf 0x57e9
0x000000000009af2c : stc ; add cl, byte ptr [rax + 0x29] ; retf 0x77e9
0x000000000006e31c : stc ; add cl, byte ptr [rax + 0x39] ; retf -0x78f1
0x00000000001041b4 : stc ; add dword ptr [rdi], ecx ; xchg eax, esi ; ret 0x8341
0x0000000000040cbd : stc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x9fe9
0x000000000003fa7c : stc ; and al, 0x75 ; fcomi st(3) ; ret
0x0000000000106f6c : stc ; and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xf980
0x0000000000182b4a : stc ; call qword ptr [rax]
0x000000000016f2f2 : stc ; call rsp
0x0000000000184d21 : stc ; cmc ; jmp qword ptr [rcx]
0x00000000000e2343 : stc ; dec dword ptr [rax - 0x73] ; adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x0000000000089db0 : stc ; dec dword ptr [rax - 0x77] ; ret
0x000000000008ae25 : stc ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x00000000000e7278 : stc ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rsi + rsi*2 + 0x48], 0x39 ; ret
0x000000000002b0af : stc ; dec dword ptr [rdi] ; retf 0xd88
0x000000000016f61a : stc ; dec esp ; inc byte ptr [rcx] ; add byte ptr [rsp + rdx*4], ah ; stc ; jmp rsp
0x000000000016f5e2 : stc ; dec esp ; std ; add dword ptr [rax], eax ; xor al, 0x8e ; stc ; jmp rsp
0x00000000000e3a49 : stc ; inc dword ptr [rbp - 0x7cee8b40] ; ret
0x000000000016f6da : stc ; inc dword ptr [rbx + rax - 0x4d6bfffe] ; stc ; call rsp
0x000000000000367f : stc ; insb byte ptr [rdi], dx ; mov ebx, 0x952a6c41 ; ret
0x0000000000126062 : stc ; je 0x12602e ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000001276f2 : stc ; je 0x1276be ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000001880ba : stc ; jmp qword ptr [rsi]
0x000000000016f3a2 : stc ; jmp rsp
0x0000000000158f84 : stc ; jnp 0x158f43 ; ret
0x000000000016f4c2 : stc ; ljmp ptr [rsi + rsi*8 + 0x58c40001] ; stc ; jmp rsp
0x000000000012e768 : stc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000118e55 : stc ; mov eax, 3 ; syscall
0x00000000001071f2 : stc ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d475e : stc ; or cl, byte ptr [rax - 0x77] ; ret
0x00000000000d20ad : stc ; or dh, byte ptr [rax + rdx*2 - 0xd] ; ret
0x000000000012b527 : stc ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001151b7 : stc ; pop rbx ; mov qword ptr [r12], rcx ; pop rbp ; pop r12 ; ret
0x000000000004297d : stc ; push qword ptr [rbp - 0x11] ; mov rax, rdx ; ret
0x000000000009aecd : stc ; push qword ptr [rbp - 0x11] ; sub rax, 4 ; ret
0x000000000009c423 : stc ; ret
0x000000000012d6e3 : stc ; retf
0x0000000000146c39 : stc ; salc ; clc ; ret
0x00000000000c7ca9 : stc ; sbb byte ptr [rcx - 0x3f], al ; sti ; sbb byte ptr [rcx + 0x39], al ; retf
0x00000000000eba5a : stc ; shr eax, cl ; and eax, 1 ; ret
0x00000000001469b4 : stc ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x00000000000b968e : std ; add byte ptr [rax], al ; jne 0xb9661 ; ret
0x000000000016cad5 : std ; add byte ptr [rax], al ; push rsp ; xor ecx, esi ; call rsp
0x000000000016f5e5 : std ; add dword ptr [rax], eax ; xor al, 0x8e ; stc ; jmp rsp
0x00000000000dfa63 : std ; call 0xdbd63
0x000000000016a186 : std ; call qword ptr [rax]
0x000000000016a06e : std ; call qword ptr [rcx]
0x000000000016a076 : std ; call rax
0x000000000016a0b2 : std ; call rcx
0x000000000016a10a : std ; call rsi
0x00000000001707fa : std ; call rsp
0x000000000015cf76 : std ; dec dword ptr [rax - 0x37000238] ; retf -3
0x000000000014966d : std ; dec dword ptr [rax - 0x77] ; out dx, eax ; add rdi, qword ptr [r13 + 0x10] ; call rbx
0x00000000000b8da2 : std ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x000000000010d0f9 : std ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x00000000000dac1a : std ; dec dword ptr [rax - 0x7d] ; retf -0x7601
0x000000000006fe87 : std ; dec dword ptr [rax - 0x7f] ; ret
0x000000000016a19e : std ; dec dword ptr [rip + 0x41fffdc0] ; ret 0xfffd
0x000000000015cf7a : std ; dec eax ; retf -3
0x000000000016a21e : std ; dec esi ; sar ebp, -1 ; ret 0xfffd
0x00000000000038a5 : std ; fld xword ptr [rsi + 0x7a697efd] ; retf -0x513c
0x0000000000032bcd : std ; fstp st(1) ; ret
0x000000000018cd31 : std ; idiv edi ; retf 1
0x000000000016a2aa : std ; inc dword ptr [rcx - 0x3e] ; std ; call qword ptr [rax]
0x000000000016a1ba : std ; inc dword ptr [rcx - 0x3e] ; std ; call rsi
0x000000000016a2a6 : std ; inc dword ptr [rcx - 0x3e] ; std ; inc dword ptr [rcx - 0x3e] ; std ; call qword ptr [rax]
0x000000000016a1b6 : std ; inc dword ptr [rcx - 0x3e] ; std ; inc dword ptr [rcx - 0x3e] ; std ; call rsi
0x000000000016a1f6 : std ; inc dword ptr [rcx - 0x3e] ; std ; inc dword ptr [rcx - 0x3e] ; std ; jmp rcx
0x000000000016a1fa : std ; inc dword ptr [rcx - 0x3e] ; std ; jmp rcx
0x000000000016a1ae : std ; inc dword ptr [rcx] ; sar ch, 0xff ; ret 0xfffd
0x000000000016a106 : std ; inc dword ptr [rsi - 0x4f] ; std ; call rsi
0x000000000016a07a : std ; inc eax ; lodsd eax, dword ptr [rsi] ; std ; jmp rsi
0x000000000016a23e : std ; inc esi ; sar ch, 0xff ; ret 0xfffd
0x000000000010012b : std ; jbe 0x100133 ; ret
0x0000000000068e9e : std ; je 0x68eb2 ; mov eax, esi ; syscall
0x000000000017087a : std ; jmp qword ptr [rbx + rbx - 0x3cebffff]
0x0000000000171b1a : std ; jmp qword ptr [rdi]
0x00000000001710c2 : std ; jmp qword ptr [rdx]
0x000000000016a06a : std ; jmp rax
0x000000000016a1fe : std ; jmp rcx
0x0000000000179dca : std ; jmp rdi
0x000000000016a07e : std ; jmp rsi
0x0000000000170862 : std ; jmp rsp
0x000000000016a27e : std ; ljmp ptr [rbx + 0x41fffdc0] ; ret 0xfffd
0x000000000016a26e : std ; ljmp ptr [rbx] ; sar ch, 0xff ; ret 0xfffd
0x000000000016a28e : std ; ljmp ptr [rbx] ; sar ebp, -1 ; ret 0xfffd
0x0000000000068dc4 : std ; mov eax, 3 ; syscall
0x0000000000033fd8 : std ; mov rdx, rsp ; mov eax, 0x81 ; syscall
0x000000000012df8b : std ; mov word ptr [rdi - 2], cx ; ret
0x000000000016a25e : std ; push qword ptr [rdi + 0x41fffdc1] ; ret 0xfffd
0x000000000016a102 : std ; push qword ptr [rsi + 0x46fffdb0] ; mov cl, 0xfd ; call rsi
0x000000000017094a : std ; push rsp ; xor al, 1 ; add byte ptr [rsi + rbp*8], al ; std ; call rsp
0x0000000000083ef3 : std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x0000000000159eba : std ; retf
0x000000000006d5f1 : sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x0000000000027889 : sti ; add dword ptr [rax + 0x63], ecx ; retf
0x0000000000037b1b : sti ; add dword ptr [rax], 0x840f0000 ; ret
0x00000000000abcd9 : sti ; add dword ptr [rdi], ecx ; sahf ; ret 0x2941
0x0000000000100d18 : sti ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret
0x0000000000169fea : sti ; call qword ptr [rax - 0x1f00043b]
0x0000000000169f1a : sti ; call qword ptr [rax - 0x2f00049c]
0x00000000001614ea : sti ; call qword ptr [rax]
0x0000000000169f0e : sti ; call rax
0x00000000000c9063 : sti ; call rcx
0x00000000001702ba : sti ; call rsp
0x0000000000184e91 : sti ; cmc ; call rdx
0x0000000000184e59 : sti ; cmc ; jmp qword ptr [rdx]
0x00000000000e6178 : sti ; dec dword ptr [rax + 0x39] ; ret
0x000000000006755b : sti ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rdi*2 + 0x48], 0x89 ; ret
0x000000000011ba90 : sti ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000066c40 : sti ; dec dword ptr [rcx + 0x415d5be8] ; pop rsp ; ret
0x0000000000170492 : sti ; dec esp ; pop rsi ; add al, byte ptr [rax] ; adc al, 0x3c ; sti ; jmp rsp
0x000000000017033a : sti ; dec esp ; push rsi ; add al, byte ptr [rax] ; je 0x17035f ; sti ; jmp rsp
0x0000000000169f42 : sti ; inc dword ptr [rax + 0x7b] ; sti ; push qword ptr [rax] ; jl 0x169f4f ; jmp qword ptr [rax]
0x0000000000169ff6 : sti ; inc dword ptr [rax - 0x2f000437] ; retf -5
0x0000000000169fe6 : sti ; inc dword ptr [rax - 0x3c] ; sti ; call qword ptr [rax - 0x1f00043b]
0x0000000000169fbe : sti ; inc dword ptr [rax - 0x52] ; sti ; jmp qword ptr [rax]
0x00000000001614e2 : sti ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], cl ; jae 0x1614ef ; call qword ptr [rax]
0x0000000000169f52 : sti ; inc dword ptr [rax] ; jg 0x169f5b ; push rax ; jg 0x169f5f ; jmp qword ptr [rax]
0x0000000000169fc6 : sti ; inc dword ptr [rax] ; mov dl, 0xfb ; jmp rax
0x0000000000169f0a : sti ; inc dword ptr [rax] ; outsb dx, byte ptr [rsi] ; sti ; call rax
0x00000000001702b2 : sti ; inc dword ptr [rbx + rdx*2 + 0x3540002] ; sti ; call rsp
0x0000000000105315 : sti ; inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret
0x0000000000161082 : sti ; inc eax ; sbb bl, bh ; inc eax ; sbb bl, bh ; jmp rax
0x0000000000161086 : sti ; inc eax ; sbb bl, bh ; jmp rax
0x000000000015f458 : sti ; inc ebx ; add dh, bh ; jmp rdi
0x0000000000170462 : sti ; inc esp ; pop rbp ; add al, byte ptr [rax] ; sti ; jmp rsp
0x0000000000169ef2 : sti ; jmp qword ptr [rax]
0x000000000018b93a : sti ; jmp qword ptr [rdx]
0x000000000016108a : sti ; jmp rax
0x0000000000170342 : sti ; jmp rsp
0x000000000016109a : sti ; lcall ptr [rax + 0x18] ; sti ; inc eax ; sbb bl, bh ; jmp rax
0x000000000017052a : sti ; ljmp ptr [rcx + 0x43c40002] ; sti ; call rsp
0x00000000001703c2 : sti ; ljmp ptr [rcx + rbx*2 + 0x1de40002] ; sti ; call rsp
0x0000000000170622 : sti ; ljmp ptr [rdi + rcx + 2] ; add ah, al ; push rcx ; sti ; call rsp
0x000000000012e368 : sti ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000102271 : sti ; mov eax, 3 ; mov esi, dword ptr fs:[rdx] ; syscall
0x000000000002e679 : sti ; mov eax, 3 ; syscall
0x00000000001025cf : sti ; mov edx, eax ; mov eax, 3 ; syscall
0x00000000000f5bd7 : sti ; mov rsi, rbp ; mov eax, ecx ; syscall
0x00000000000d06c9 : sti ; or byte ptr [rcx - 0x9ce8c28], cl ; ret
0x00000000000fda0c : sti ; or dword ptr [rdi], ecx ; retf
0x000000000016a052 : sti ; push qword ptr [rax + 0x30fffbeb] ; in eax, dx ; sti ; jmp rax
0x0000000000169f16 : sti ; push qword ptr [rax + 0x70] ; sti ; call qword ptr [rax - 0x2f00049c]
0x0000000000169f8a : sti ; push qword ptr [rax - 0x6b] ; sti ; call qword ptr [rax]
0x0000000000169f6a : sti ; push qword ptr [rax - 0x78] ; sti ; call qword ptr [rax]
0x0000000000169ff2 : sti ; push qword ptr [rax] ; enter -5, -0x80 ; leave ; sti ; call rax
0x000000000016a056 : sti ; push qword ptr [rax] ; in eax, dx ; sti ; jmp rax
0x0000000000169f06 : sti ; push qword ptr [rax] ; insd dword ptr [rdi], dx ; sti ; inc dword ptr [rax] ; outsb dx, byte ptr [rsi] ; sti ; call rax
0x0000000000169f46 : sti ; push qword ptr [rax] ; jl 0x169f4b ; jmp qword ptr [rax]
0x0000000000169f62 : sti ; push qword ptr [rax] ; test edi, ebx ; call rax
0x0000000000169f82 : sti ; push qword ptr [rax] ; xchg eax, edx ; sti ; call rax
0x0000000000169f56 : sti ; push rax ; jg 0x169f5b ; jmp qword ptr [rax]
0x0000000000169fe2 : sti ; push rax ; ret 0xfffb
0x00000000000f6741 : sti ; push rdi ; add eax, dword ptr [rax] ; ret
0x000000000015910a : sti ; ret
0x000000000003c758 : sti ; ret 0xffbf
0x00000000000c7cad : sti ; sbb byte ptr [rcx + 0x39], al ; retf
0x000000000003f3b0 : sti ; syscall
0x000000000002aa57 : sti ; test rax, rax ; je 0x2aa65 ; call rax
0x0000000000002318 : stosb byte ptr [rdi], al ; add al, 0xaa ; ret
0x0000000000103bc2 : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000c40f2 : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rbp - 0x9d18b37], al ; ret
0x000000000017b455 : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; pop rax ; jne 0x17b451 ; jmp qword ptr [rdx]
0x000000000017b454 : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; pop rax ; jne 0x17b452 ; jmp qword ptr [rdx]
0x00000000001595e4 : stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x000000000007d242 : stosb byte ptr [rdi], al ; in eax, 0x31 ; add byte ptr [rax + 1], cl ; ret
0x000000000008433b : stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x0000000000083e59 : stosb byte ptr [rdi], al ; or al, byte ptr [rax] ; ret
0x000000000000f6f1 : stosb byte ptr [rdi], al ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x000000000000231b : stosb byte ptr [rdi], al ; ret
0x000000000000367e : stosb byte ptr [rdi], al ; stc ; insb byte ptr [rdi], dx ; mov ebx, 0x952a6c41 ; ret
0x000000000007e4c9 : stosb byte ptr [rdi], al ; xor dword ptr [rax], eax ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x000000000016beb5 : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; je 0x16be55 ; out dx, eax ; jmp rsp
0x000000000017b565 : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; pop rax ; jle 0x17b561 ; jmp qword ptr [rcx]
0x000000000016e795 : stosd dword ptr [rdi], eax ; add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; fcompi st(7) ; call rsp
0x000000000016ff21 : stosd dword ptr [rdi], eax ; cli ; call rsp
0x00000000001043b9 : stosd dword ptr [rdi], eax ; mov eax, r8d ; ret
0x000000000003395c : stosd dword ptr [rdi], eax ; ret
0x000000000002e8d1 : stosd dword ptr [rdi], eax ; ret 0x36
0x0000000000101a21 : stosd dword ptr [rdi], eax ; retf
0x000000000015a5ea : stosd dword ptr [rdi], eax ; retf -0x5d02
0x000000000010b909 : stosd dword ptr [rdi], eax ; retf 5
0x000000000016a280 : stosd dword ptr [rdi], eax ; sar ch, 0xff ; ret 0xfffd
0x000000000016a075 : stosd dword ptr [rdi], eax ; std ; call rax
0x000000000016a071 : stosd dword ptr [rdi], eax ; std ; jmp rax
0x000000000007e364 : stosd dword ptr [rdi], eax ; xor dword ptr [rax], eax ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x00000000001043b8 : stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x000000000003395b : stosq qword ptr [rdi], rax ; ret
0x00000000000664b9 : str word ptr [rax + 0x63] ; adc al, 0x91 ; add rdx, rcx ; jmp rdx
0x00000000000663fc : str word ptr [rax + 0x63] ; adc al, 0x96 ; add rdx, rsi ; jmp rdx
0x000000000005d161 : str word ptr [rax + 0x63] ; add al, 0x81 ; add rax, rcx ; jmp rax
0x0000000000065662 : str word ptr [rax + 0x63] ; add al, 0x82 ; add rax, rdx ; jmp rax
0x000000000005d625 : str word ptr [rax + 0x63] ; add al, 0x91 ; add rax, rcx ; jmp rax
0x000000000006563f : str word ptr [rax - 0x77] ; ret 0x8948
0x0000000000021ace : str word ptr [rcx + rcx*4 - 0x19] ; mov rcx, qword ptr [rbp - 0x60] ; call rcx
0x000000000015aad1 : sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000016a47d : sub ah, bh ; jmp qword ptr [rax]
0x0000000000180ef9 : sub ah, dh ; jmp rdx
0x000000000018b768 : sub al, 0 ; add byte ptr [rax], al ; lodsd eax, dword ptr fs:[rsi] ; add dword ptr [rax], eax ; ret
0x00000000001804c0 : sub al, 0 ; add byte ptr [rax], al ; mov esp, 0xc80000fa ; retf
0x00000000000e9d07 : sub al, 0 ; add byte ptr [rax], al ; syscall
0x00000000000d1d25 : sub al, 0 ; mov dword ptr [rdx], ecx ; pop rdx ; pop rcx ; pop rbx ; ret
0x00000000000cf815 : sub al, 0 ; mov rax, qword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x000000000015e338 : sub al, 0x2b ; cmc ; jmp qword ptr [rax]
0x0000000000174234 : sub al, 0x38 ; add byte ptr [rax], al ; clc ; xor ebp, esp ; call qword ptr [rax]
0x000000000009a122 : sub al, 0x3b ; sub al, 0x75 ; pop rax ; ret
0x0000000000184d34 : sub al, 0x43 ; add dword ptr [rax], eax ; fdivr st(1) ; cmc ; jmp qword ptr [rcx]
0x0000000000185a34 : sub al, 0x50 ; add dword ptr [rax], eax ; clc ; xor esi, esi ; jmp qword ptr [rcx]
0x0000000000003cd5 : sub al, 0x58 ; mov esi, 0xcf8cb236 ; retf
0x00000000000c8800 : sub al, 0x71 ; cmc ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000129542 : sub al, 0x72 ; add cl, byte ptr [rax + 0x77f8c50f] ; ret
0x000000000009a125 : sub al, 0x75 ; pop rax ; ret
0x0000000000188234 : sub al, 0x78 ; add dword ptr [rax], eax ; pop rax ; sal esi, 1 ; jmp qword ptr [rsi]
0x00000000000c640b : sub al, 0x89 ; ret 0x8348
0x00000000000c60ba : sub al, 0x89 ; ror dword ptr [rax - 0x7d], -0x40 ; add dword ptr [rcx], edi ; retf -0x1481
0x0000000000144b53 : sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000018b934 : sub al, 0xaf ; add dword ptr [rax], eax ; out -5, eax ; jmp qword ptr [rdx]
0x000000000017d534 : sub al, 0xcb ; add byte ptr [rax], al ; sub bl, ch ; int1 ; call qword ptr [rax]
0x00000000000eaef0 : sub al, 0xe3 ; sub al, byte ptr [rax] ; je 0xeaeff ; pop rbp ; ret
0x000000000010741b : sub al, 0xf ; xchg eax, ebp ; ret 0x233c
0x000000000016a489 : sub al, 0xfc ; call qword ptr [rax]
0x0000000000190934 : sub al, 0xff ; add dword ptr [rax], eax ; pop rax ; ret 0xfff8
0x00000000000392bc : sub al, 0xff ; dec dword ptr [rax - 0x77] ; ret
0x00000000000e4b07 : sub al, 0xff ; xor byte ptr [rdi], cl ; lahf ; ret 0xe883
0x00000000000e9811 : sub al, 1 ; add byte ptr [rax], al ; syscall
0x000000000016fc4d : sub al, 2 ; add byte ptr [rsp - 6], al ; jmp rsp
0x000000000010164b : sub al, bh ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000eaf73 : sub al, byte ptr [rax] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000000fd262 : sub al, byte ptr [rax] ; add byte ptr [rax + rax], al ; add al, ch ; ret
0x00000000000eaf66 : sub al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000000319f2 : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rax, rcx ; ret
0x00000000000e9a1a : sub al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000f5632 : sub al, byte ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000f57df : sub al, byte ptr [rax] ; cmp rdx, rax ; jne 0xf57c8 ; ret
0x00000000000eaef2 : sub al, byte ptr [rax] ; je 0xeaefd ; pop rbp ; ret
0x00000000000eb925 : sub al, byte ptr [rax] ; mov eax, dword ptr [rax + 0x38] ; ret
0x00000000000f5e1c : sub al, byte ptr [rax] ; pop rbp ; ret
0x00000000000eaea4 : sub al, byte ptr [rax] ; pop rbx ; ret
0x00000000000f4f14 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf4f28 ; xor eax, eax ; ret
0x00000000000f4f44 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf4f58 ; xor eax, eax ; ret
0x00000000000f4f74 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf4f88 ; xor eax, eax ; ret
0x00000000000f4fa4 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf4fb8 ; xor eax, eax ; ret
0x00000000000f4fd4 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf4fe8 ; xor eax, eax ; ret
0x00000000000f5004 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf5018 ; xor eax, eax ; ret
0x00000000000f5034 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf5048 ; xor eax, eax ; ret
0x00000000000f5064 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf5078 ; xor eax, eax ; ret
0x00000000000f5094 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf50a8 ; xor eax, eax ; ret
0x00000000000f50c4 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf50d8 ; xor eax, eax ; ret
0x00000000000f50f4 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf5108 ; xor eax, eax ; ret
0x00000000000f5124 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf5138 ; xor eax, eax ; ret
0x00000000000f5154 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf5168 ; xor eax, eax ; ret
0x00000000000f5184 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf5198 ; xor eax, eax ; ret
0x00000000000f51b4 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf51c8 ; xor eax, eax ; ret
0x00000000000f51e4 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf51f8 ; xor eax, eax ; ret
0x00000000000f5214 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf5228 ; xor eax, eax ; ret
0x00000000000f5244 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf5258 ; xor eax, eax ; ret
0x00000000000f5274 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf5288 ; xor eax, eax ; ret
0x00000000000f52a4 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf52b8 ; xor eax, eax ; ret
0x00000000000f5304 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf5318 ; xor eax, eax ; ret
0x00000000000f5334 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf5348 ; xor eax, eax ; ret
0x00000000000f5364 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf5378 ; xor eax, eax ; ret
0x00000000000f5394 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf53a8 ; xor eax, eax ; ret
0x00000000000f53c4 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf53d8 ; xor eax, eax ; ret
0x00000000000f53f4 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf5408 ; xor eax, eax ; ret
0x00000000000f5424 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf5438 ; xor eax, eax ; ret
0x00000000000f5454 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf5468 ; xor eax, eax ; ret
0x00000000000f5484 : sub al, byte ptr [rax] ; test eax, eax ; jne 0xf5498 ; xor eax, eax ; ret
0x00000000000f59b5 : sub al, byte ptr [rax] ; test rax, rax ; je 0xf59c7 ; ret
0x00000000001834dd : sub al, byte ptr [rcx] ; add al, dh ; xchg eax, edi ; cmc ; call rax
0x00000000000a8bed : sub al, byte ptr [rdi + rcx - 0x49] ; dec byte ptr [r13 - 0x77] ; retf 0x694d
0x00000000000df5b8 : sub al, ch ; retf
0x00000000000cfa30 : sub al, ch ; retf -0x5d
0x0000000000179ef8 : sub al, dl ; out dx, eax ; call rax
0x0000000000182b88 : sub al, dl ; stc ; call qword ptr [rax]
0x00000000001769a1 : sub bh, ch ; jmp qword ptr [rdi]
0x0000000000175e18 : sub bh, ch ; out dx, al ; jmp qword ptr [rcx]
0x0000000000184c08 : sub bh, dh ; cmc ; call qword ptr [rax]
0x0000000000172ac0 : sub bl, 0xeb ; jmp rax
0x0000000000179998 : sub bl, al ; out dx, eax ; jmp qword ptr [rdx]
0x0000000000157104 : sub bl, byte ptr [rcx - 0x13] ; call rcx
0x000000000000302e : sub bl, byte ptr [rdi - 0x73d19408] ; int1 ; mov dr0, word ptr [rax] ; retf
0x000000000017d478 : sub bl, ch ; int1 ; call qword ptr [rax]
0x00000000000a9a1a : sub byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x000000000009a116 : sub byte ptr [r11], r15b ; sub byte ptr [rbp + 0x63], r14b ; ret
0x00000000001181e1 : sub byte ptr [r8 + r15*4], r8b ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000011eb39 : sub byte ptr [r8 - 0x77], r9b ; ret 0x8948
0x000000000009bca2 : sub byte ptr [r8 - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000119e13 : sub byte ptr [r8], al ; test eax, eax ; je 0x119e29 ; xor eax, eax ; ret
0x0000000000117fa1 : sub byte ptr [r9], r15b ; sal dword ptr [rbx + 9], 1 ; xor eax, eax ; ret
0x000000000008bdcb : sub byte ptr [rax + 0x29], cl ; ret 0x6348
0x000000000008b7a5 : sub byte ptr [rax + 0x29], cl ; ret 0x634c
0x000000000001fbf3 : sub byte ptr [rax + 0x39], cl ; ret
0x000000000004d001 : sub byte ptr [rax + 0xf], cl ; retf -0x76b4
0x000000000011353e : sub byte ptr [rax + 1], bh ; ret
0x000000000003f66d : sub byte ptr [rax + 1], cl ; ret
0x0000000000043184 : sub byte ptr [rax + 1], cl ; ret 0x3e74
0x00000000000e45ca : sub byte ptr [rax + 3], bh ; syscall
0x00000000001181e2 : sub byte ptr [rax + rdi*4], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000c2a6e : sub byte ptr [rax - 0x75], cl ; cmp eax, dword ptr [rcx] ; ret 0xc083
0x00000000000a8d3d : sub byte ptr [rax - 0x77], cl ; and r11b, r14b ; ret
0x000000000009ba1d : sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x00000000000a24a1 : sub byte ptr [rax - 0x77], cl ; ret
0x000000000011eb3a : sub byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000dd597 : sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x000000000007e3ee : sub byte ptr [rax - 0x77], cl ; retf -0x72b8
0x000000000008ad83 : sub byte ptr [rax - 0x77], cl ; retf 0x5d5b
0x000000000006ad78 : sub byte ptr [rax - 0x78], al ; cmp al, byte ptr [rax + 0xf] ; mov dh, 0xc7 ; ret
0x000000000009bca3 : sub byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x00000000000c2bf3 : sub byte ptr [rax - 0x7d], cl ; in al, dx ; or al, ch ; ret
0x000000000011835c : sub byte ptr [rax - 0x7d], cl ; in al, dx ; sbb byte ptr [rbx - 0x77], 0xc0 ; ret
0x0000000000056389 : sub byte ptr [rax - 0x7d], cl ; ret
0x000000000003753a : sub byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000001864f8 : sub byte ptr [rax - 0xa], al ; jmp qword ptr [rcx]
0x00000000000022e5 : sub byte ptr [rax], 0x10 ; salc ; ret
0x00000000001732a5 : sub byte ptr [rax], al ; add byte ptr [rax + 5], cl ; in al, dx ; jmp qword ptr [rcx]
0x00000000000dfc04 : sub byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x00000000001150d5 : sub byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000115bb5 : sub byte ptr [rax], al ; cmp dword ptr fs:[rax], 0x18 ; je 0x115bc8 ; ret
0x000000000011f3b7 : sub byte ptr [rax], al ; jne 0x11f3c8 ; add rsp, 0x38 ; ret
0x0000000000114ffc : sub byte ptr [rax], al ; mov qword ptr fs:[rax], rdx ; ret
0x0000000000119e14 : sub byte ptr [rax], al ; test eax, eax ; je 0x119e28 ; xor eax, eax ; ret
0x000000000011d8ba : sub byte ptr [rax], al ; xor eax, eax ; syscall
0x00000000000022e6 : sub byte ptr [rax], dl ; salc ; ret
0x000000000009a11a : sub byte ptr [rbp + 0x63], dh ; ret
0x000000000009a119 : sub byte ptr [rbp + 0x63], r14b ; ret
0x00000000000c1292 : sub byte ptr [rbp - 0xf], dh ; or byte ptr [rsi + 0x32], 8 ; xor eax, eax ; ret
0x0000000000171b18 : sub byte ptr [rbp - 3], bh ; jmp qword ptr [rdi]
0x000000000002016c : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000054ec2 : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000003ed87 : sub byte ptr [rbx + 0x5d], bl ; ret
0x000000000018a0a2 : sub byte ptr [rbx + 0xab10205], al ; ret
0x00000000000fc3d3 : sub byte ptr [rbx + rcx*4 + 0x3d], cl ; popfq ; retf 0x29
0x000000000011f263 : sub byte ptr [rbx - 0x26], dh ; mov eax, 1 ; ret
0x000000000011f262 : sub byte ptr [rbx - 0x26], sil ; mov eax, 1 ; ret
0x0000000000117ef3 : sub byte ptr [rbx - 0x3f7cb7ea], cl ; add al, 0xf ; retf 0x5089
0x0000000000117f23 : sub byte ptr [rbx - 0x3f7cb7f0], cl ; add al, 0xf ; retf 0x1689
0x000000000017db18 : sub byte ptr [rbx - 0xe], ah ; call qword ptr [rax]
0x000000000009a117 : sub byte ptr [rbx], bh ; sub byte ptr [rbp + 0x63], r14b ; ret
0x000000000009c7c5 : sub byte ptr [rcx + 1], cl ; ret 0xb6e9
0x0000000000118267 : sub byte ptr [rcx + rcx*4 + 0x63], cl ; and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000007bba4 : sub byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x00000000000c7a32 : sub byte ptr [rcx - 0x17cfdbbc], cl ; hlt ; ret
0x0000000000032e45 : sub byte ptr [rcx - 0x3b76b310], cl ; mov rbp, r9 ; jmp rdx
0x0000000000183245 : sub byte ptr [rcx], al ; add byte ptr [rax - 0x73], ch ; cmc ; jmp qword ptr [rcx]
0x000000000018322d : sub byte ptr [rcx], al ; add byte ptr [rax - 0x73], dl ; cmc ; jmp qword ptr [rcx]
0x00000000000e116d : sub byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x00000000001832d5 : sub byte ptr [rcx], al ; add byte ptr [rax], ch ; mov dr0, ebp ; jmp qword ptr [rcx]
0x00000000001832bd : sub byte ptr [rcx], al ; add byte ptr [rax], dl ; mov dr0, ebp ; jmp qword ptr [rcx]
0x000000000006f702 : sub byte ptr [rcx], al ; jmp 0x6f6d4
0x0000000000117fa2 : sub byte ptr [rcx], bh ; sal dword ptr [rbx + 9], 1 ; xor eax, eax ; ret
0x0000000000115e31 : sub byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000561f7 : sub byte ptr [rcx], dh ; rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x00000000000f3a7f : sub byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000010d00c : sub byte ptr [rdi - 0x17], dh ; mov qword ptr [rdx + 0x20], rsi ; ret
0x00000000000f3194 : sub byte ptr [rdi - 0x76b7000d], dl ; ret
0x000000000010c546 : sub byte ptr [rdi], cl ; retf 0x5089
0x00000000000ccef2 : sub byte ptr [rdi], cl ; xchg eax, esp ; ret 0x854d
0x000000000017dce2 : sub byte ptr [rsi + 0x300e4405], al ; add dword ptr [rsi], 0x77 ; ret
0x0000000000002c14 : sub byte ptr [rsi], cl ; and byte ptr [rsi - 0x32], dh ; clc ; ret
0x00000000001150d4 : sub byte ptr ds:[rax], al ; add rsp, 8 ; ret
0x0000000000173fd1 : sub ch, ah ; call qword ptr [rsi]
0x0000000000173f11 : sub ch, ah ; jmp qword ptr [rdx]
0x0000000000161040 : sub ch, dh ; cli ; dec eax ; cli ; jmp rax
0x0000000000184358 : sub ch, dl ; cmc ; jmp qword ptr [rcx]
0x00000000000324a2 : sub cl, al ; ret
0x0000000000089e07 : sub cl, byte ptr [rax + 0x39] ; sal dword ptr [rbp - 0xd], 1 ; ret
0x0000000000188ca0 : sub dh, 0xf6 ; call qword ptr [rdi]
0x00000000000e627d : sub dh, al ; add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000015c231 : sub dh, al ; call rsi
0x000000000015c22d : sub dh, al ; push qword ptr [rax] ; sub dh, al ; call rsi
0x00000000001908e8 : sub dl, al ; clc ; jmp qword ptr [rcx]
0x000000000014abe0 : sub dl, bh ; in eax, dx ; lcall ptr [rax] ; cli ; in eax, dx ; call rax
0x000000000015948d : sub dword ptr [rax + 0x1e], eax ; cli ; test dl, bh ; retf -0x2081
0x00000000000da08e : sub dword ptr [rax + 0x63], ecx ; ret 0xc283
0x000000000010d413 : sub dword ptr [rax + 0x68], 4 ; mov eax, 1 ; ret
0x000000000003aa66 : sub dword ptr [rax + 1], 0x89490000 ; ret
0x00000000000844a4 : sub dword ptr [rax + rax], ecx ; ret
0x0000000000054ea6 : sub dword ptr [rax - 0x75], ecx ; adc byte ptr [r8 - 0x77], cl ; ret 0x348
0x0000000000173405 : sub dword ptr [rax], eax ; add byte ptr [rax + 7], cl ; in al, dx ; jmp qword ptr [rsi]
0x00000000000e9f11 : sub dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x0000000000100d73 : sub dword ptr [rax], eax ; add rsp, 8 ; ret
0x0000000000100df5 : sub dword ptr [rax], eax ; call rax
0x0000000000107ab5 : sub dword ptr [rax], eax ; mov eax, dword ptr [rax + 0x18] ; test eax, eax ; jne 0x107ac9 ; ret
0x0000000000107d35 : sub dword ptr [rax], eax ; mov rax, qword ptr fs:[rax] ; ret
0x00000000001017d5 : sub dword ptr [rax], eax ; ret
0x000000000010772e : sub dword ptr [rax], eax ; test eax, eax ; je 0x10773e ; ret
0x000000000010af84 : sub dword ptr [rax], eax ; test eax, eax ; je 0x10af96 ; ret
0x0000000000083de3 : sub dword ptr [rax], esi ; or al, 0 ; ret
0x000000000006f700 : sub dword ptr [rbx + 0x28], 1 ; jmp 0x6f6d6
0x000000000015a122 : sub dword ptr [rbx + 0x5c347ebb], edx ; sbb ebp, ebx ; retf
0x000000000013e643 : sub dword ptr [rbx], eax ; add byte ptr [rax], al ; ret
0x000000000016d1b5 : sub dword ptr [rcx], eax ; add ah, dl ; mov esi, ebx ; call rsp
0x00000000001833cd : sub dword ptr [rcx], eax ; add al, ah ; xchg eax, ebp ; cmc ; jmp qword ptr [rcx]
0x00000000001833b5 : sub dword ptr [rcx], eax ; add al, cl ; xchg eax, ebp ; cmc ; jmp qword ptr [rcx]
0x000000000012c5b7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12c5cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012c707 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12c71d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012c857 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12c86d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012c9a7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12c9bd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012caf7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12cb0d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012cc47 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12cc5d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012cd97 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12cdad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012cee7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12cefd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012d037 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12d04d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012d187 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12d19d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012d2d7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12d2ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012d427 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12d43d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012d577 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12d58d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012d6c7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12d6dd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012d817 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12d82d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012ef87 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12ef9d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012f0d7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12f0ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012f227 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12f23d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012f377 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12f38d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012f4c7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12f4dd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012f617 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12f62d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012f767 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12f77d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012f8b7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12f8cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012fa07 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12fa1d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012fb57 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12fb6d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012fca7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12fcbd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012fdf7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12fe0d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012ff47 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12ff5d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000130097 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1300ad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001301e7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1301fd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000011b101 : sub dword ptr [rdi + 0x18], 1 ; je 0x11b118 ; xor eax, eax ; ret
0x000000000012c513 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012c50f : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000000bb726 : sub dword ptr [rdi], ecx ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x000000000012c5bd : sub dword ptr [rdi], esp ; jmp r9
0x0000000000157214 : sub dword ptr [rdx - 0x5bed0013], esp ; in eax, dx ; call qword ptr [rdx]
0x000000000016fbdd : sub dword ptr [rdx], eax ; add ah, dl ; pop rcx ; cli ; call rsp
0x00000000001461a9 : sub dword ptr [rdx], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000121317 : sub dword ptr [rip - 0x76b30000], ecx ; retf
0x000000000010de0c : sub dword ptr [rip - 0x76b67000], eax ; retf 0x334c
0x0000000000145336 : sub dword ptr [rip - 0xcfffffe], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret
0x00000000001211d1 : sub dword ptr [rsi + 0xe], 0 ; add byte ptr [rcx + 0x29], cl ; retf
0x00000000000571b7 : sub dword ptr [rsi + 0xf], -0x7c ; retf
0x000000000015a9da : sub dword ptr [rsi], 0x76 ; retf
0x000000000010af9c : sub dword ptr cs:[rax], eax ; add rsp, 8 ; ret
0x000000000010af83 : sub dword ptr cs:[rax], eax ; test eax, eax ; je 0x10af97 ; ret
0x000000000010af82 : sub dword ptr cs:[rax], eax ; test eax, eax ; je 0x10af98 ; ret
0x00000000001150f6 : sub eax, -0x80 ; add rsp, 8 ; ret
0x000000000007bd7a : sub eax, 0x10 ; ret
0x000000000011807a : sub eax, 0x10c48348 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000032709 : sub eax, 0x7f800000 ; shr eax, 0x1f ; ret
0x000000000004cd78 : sub eax, 0x83000000 ; ret
0x0000000000052b44 : sub eax, 0x89480034 ; ret 0x2948
0x0000000000111754 : sub eax, 0x8948f631 ; out -0x77, eax ; ret
0x0000000000183775 : sub eax, 0xa9780001 ; cmc ; jmp rcx
0x0000000000158126 : sub eax, 0xea4ca798 ; retf
0x0000000000002895 : sub eax, 0xeeef33a1 ; retf 0x182c
0x0000000000098c74 : sub eax, 1 ; ret
0x0000000000043e96 : sub eax, 4 ; cmp rdi, r8 ; jbe 0x43e99 ; ret
0x000000000009aed2 : sub eax, 4 ; ret
0x000000000007bce4 : sub eax, 8 ; ret
0x00000000000e998a : sub eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000e4f43 : sub eax, dword ptr [rax] ; add rsp, 0x18 ; ret
0x00000000000e21b3 : sub eax, dword ptr [rax] ; add rsp, 8 ; ret
0x00000000000eb048 : sub eax, dword ptr [rax] ; add word ptr [rdx + rax*2], 1 ; ret
0x00000000000e1fe4 : sub eax, dword ptr [rax] ; jne 0xe1ff9 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000e5555 : sub eax, dword ptr [rax] ; mov dword ptr fs:[rax], 0x16 ; ret
0x00000000000eb27d : sub eax, dword ptr [rax] ; mov rax, qword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x00000000000e4eef : sub eax, dword ptr [rax] ; pop rbp ; pop r12 ; ret
0x00000000000e3576 : sub eax, dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000e496c : sub eax, dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e4eb9 : sub eax, dword ptr [rax] ; pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e370d : sub eax, dword ptr [rax] ; ret
0x000000000002cb1f : sub eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000992e1 : sub eax, dword ptr [rcx + r8*4] ; je 0x992c7 ; ret
0x00000000000992e2 : sub eax, dword ptr [rcx + rax*4] ; je 0x992c6 ; ret
0x0000000000183545 : sub eax, dword ptr [rcx] ; add byte ptr [rax - 0x66], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001835ed : sub eax, dword ptr [rcx] ; add byte ptr [rax], ah ; wait ; cmc ; jmp qword ptr [rcx]
0x00000000000ea253 : sub eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x0000000000183605 : sub eax, dword ptr [rcx] ; add byte ptr [rax], bh ; wait ; cmc ; jmp qword ptr [rcx]
0x00000000001835d5 : sub eax, dword ptr [rcx] ; add byte ptr [rax], cl ; wait ; cmc ; jmp qword ptr [rcx]
0x000000000007648e : sub eax, dword ptr [rdi + 0x18] ; ret
0x0000000000070905 : sub eax, dword ptr [rdi + 0x20] ; ret
0x00000000000707f5 : sub eax, dword ptr [rdi + 0x38] ; ret
0x000000000006c855 : sub eax, dword ptr [rdx + 0x10] ; sar rax, 2 ; ret
0x00000000000708f6 : sub eax, dword ptr [rdx + 0x18] ; sar rax, 2 ; ret
0x00000000000707e6 : sub eax, dword ptr [rdx + 0x30] ; sar rax, 2 ; ret
0x00000000000f0833 : sub eax, dword ptr [rdx + 8] ; ret
0x000000000009929a : sub eax, dword ptr [rdx + rcx*4] ; je 0x99286 ; ret
0x000000000016fc2d : sub eax, dword ptr [rdx] ; add byte ptr [rcx], al ; cli ; jmp rsp
0x0000000000075c03 : sub eax, dword ptr [rsi + 0x10] ; ret
0x00000000000f06eb : sub eax, eax ; cmp sil, dl ; cmovne eax, ecx ; ret
0x0000000000125c3e : sub eax, eax ; ret
0x0000000000074d76 : sub eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000075329 : sub eax, ecx ; lea eax, dword ptr [r8 - 1] ; ret
0x0000000000043b0d : sub eax, ecx ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000008005c : sub eax, ecx ; ret
0x00000000000807e9 : sub eax, edi ; ret
0x00000000000f06b7 : sub eax, edx ; cmp dil, cl ; cmovne eax, esi ; ret
0x00000000000a8131 : sub eax, edx ; lea rax, qword ptr [r8 + rax*4] ; ret
0x0000000000035ee9 : sub eax, edx ; ret
0x0000000000032a53 : sub eax, edx ; sar eax, 0x10 ; ret
0x00000000000326ef : sub eax, edx ; shr eax, 0x1f ; ret
0x000000000003231d : sub eax, edx ; shr rax, 0x3f ; ret
0x00000000000abd91 : sub eax, edx ; sub ecx, eax ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000015c245 : sub eax, esi ; call rsi
0x00000000000f0681 : sub eax, esi ; cmp dil, dl ; cmovne eax, ecx ; ret
0x000000000006bffd : sub eax, esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000009b61c : sub eax, esp ; pop r12 ; ret
0x00000000000f06ea : sub eax, r8d ; cmp sil, dl ; cmovne eax, ecx ; ret
0x000000000015937e : sub ebp, eax ; fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x0000000000072cd1 : sub ebp, eax ; mov rax, rbp ; pop rbp ; pop r12 ; ret
0x00000000001142f7 : sub ebp, eax ; ret
0x000000000016d871 : sub ebp, esi ; call rsp
0x00000000001740c1 : sub ebp, esp ; call qword ptr [rax]
0x00000000001740d9 : sub ebp, esp ; call qword ptr [rdx]
0x000000000006a296 : sub ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000104422 : sub ebx, dword ptr [rbx + 0x5d] ; ret
0x0000000000157e15 : sub ebx, dword ptr [rbx - 0xb] ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000002fab : sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00000000000a66dc : sub ebx, eax ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000033954 : sub ecx, -0x80 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x0000000000077bde : sub ecx, dword ptr [rax + 0x39] ; ret
0x0000000000042ea5 : sub ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000094da1 : sub ecx, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000abd93 : sub ecx, eax ; mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000032a0a : sub ecx, edx ; not eax ; and eax, ecx ; ret
0x00000000000994ac : sub edi, 0x10 ; add rax, rdi ; ret
0x000000000008ea56 : sub edi, dword ptr [rcx] ; ret 0x2774
0x0000000000002fb2 : sub edi, esi ; retf 0x54f7
0x000000000016a485 : sub edi, esp ; inc eax ; sub al, 0xfc ; call qword ptr [rax]
0x000000000009a762 : sub edx, 1 ; mov dword ptr [rcx], r8d ; jne 0x9a759 ; ret
0x0000000000075c30 : sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000075c25 : sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000015df9c : sub edx, dword ptr [rax] ; cmc ; call rsp
0x00000000000838f4 : sub edx, eax ; jbe 0x83937 ; add rax, rdi ; ret
0x0000000000083904 : sub edx, eax ; jbe 0x83939 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x0000000000083914 : sub edx, eax ; jbe 0x83939 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x0000000000083924 : sub edx, eax ; jbe 0x83939 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000000036a8 : sub edx, eax ; loope 0x36d2 ; retf 0x5038
0x00000000000e0e09 : sub edx, eax ; test eax, eax ; cmovns eax, edx ; ret
0x000000000016fab9 : sub edx, edi ; jmp rsp
0x0000000000071fe0 : sub edx, esi ; mov qword ptr [rsp], rcx ; mov rdi, rbx ; call rax
0x00000000000e6caa : sub edx, esi ; xor eax, eax ; syscall
0x00000000000656e5 : sub edx, esp ; syscall
0x000000000010418e : sub esi, 1 ; mov byte ptr [rdi + 1], sil ; ret
0x000000000011e99a : sub esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000077010 : sub esi, dword ptr [rdx] ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000015c1b1 : sub esi, eax ; call qword ptr [rax]
0x000000000015c129 : sub esi, eax ; call qword ptr [rdx]
0x000000000016c2f1 : sub esi, eax ; call rsp
0x000000000015e38d : sub esi, ebp ; call qword ptr [rsi]
0x000000000015e339 : sub esi, ebp ; jmp qword ptr [rax]
0x000000000015e335 : sub esi, ebp ; ljmp ptr [rbx + rbp] ; cmc ; jmp qword ptr [rax]
0x00000000000e0f04 : sub esi, ebx ; ret
0x00000000000c40fe : sub esi, esi ; ret
0x000000000011835e : sub esp, -0x80 ; pop rbx ; mov eax, eax ; ret
0x00000000000db520 : sub esp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011d15a : sub esp, 0x178 ; syscall
0x00000000000e0802 : sub esp, 0x30 ; mov rdx, rsp ; syscall
0x00000000000e732f : sub esp, 0x68 ; syscall
0x00000000001089ed : sub esp, 0x80 ; call 0xf54b8
0x0000000000068a37 : sub esp, 0x80 ; call 0xf54e8
0x00000000000e190e : sub esp, 0xa8 ; syscall
0x00000000000e92ed : sub esp, 8 ; call 0xf5505
0x00000000000a815a : sub esp, 8 ; call r12
0x0000000000108fcf : sub esp, 8 ; mov rcx, rdx ; xor edx, edx ; call rax
0x00000000000b3f26 : sub esp, 8 ; syscall
0x000000000015deec : sub esp, dword ptr [rdx] ; cmc ; call rsp
0x0000000000173ec9 : sub esp, ebp ; jmp qword ptr [rax]
0x0000000000173eb1 : sub esp, ebp ; jmp qword ptr [rbx]
0x0000000000173ee1 : sub esp, ebp ; jmp qword ptr [rdx]
0x00000000000844a3 : sub qword ptr [r8 + rax], rcx ; ret
0x000000000006f6ff : sub qword ptr [rbx + 0x28], 1 ; jmp 0x6f6d7
0x000000000007700f : sub r14d, dword ptr [r10] ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000000e443d : sub r8, qword ptr [r8] ; ret
0x0000000000075328 : sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x00000000000a8130 : sub r8, rdx ; lea rax, qword ptr [r8 + rax*4] ; ret
0x00000000001150f5 : sub rax, -0x80 ; add rsp, 8 ; ret
0x000000000007bd79 : sub rax, 0x10 ; ret
0x0000000000098c73 : sub rax, 1 ; ret
0x000000000009aed1 : sub rax, 4 ; ret
0x000000000007bce3 : sub rax, 8 ; ret
0x000000000007648d : sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000070904 : sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000707f4 : sub rax, qword ptr [rdi + 0x38] ; ret
0x000000000006c854 : sub rax, qword ptr [rdx + 0x10] ; sar rax, 2 ; ret
0x00000000000708f5 : sub rax, qword ptr [rdx + 0x18] ; sar rax, 2 ; ret
0x00000000000707e5 : sub rax, qword ptr [rdx + 0x30] ; sar rax, 2 ; ret
0x000000000009b61b : sub rax, r12 ; pop r12 ; ret
0x0000000000125c3d : sub rax, r8 ; ret
0x00000000000807e8 : sub rax, rdi ; ret
0x0000000000035efd : sub rax, rdx ; ret
0x000000000003231c : sub rax, rdx ; shr rax, 0x3f ; ret
0x0000000000072cd0 : sub rbp, rax ; mov rax, rbp ; pop rbp ; pop r12 ; ret
0x00000000000994ab : sub rdi, 0x10 ; add rax, rdi ; ret
0x00000000000656e4 : sub rdx, r12 ; syscall
0x00000000000838f3 : sub rdx, rax ; jbe 0x83938 ; add rax, rdi ; ret
0x00000000000e6ca9 : sub rdx, rsi ; xor eax, eax ; syscall
0x000000000011835d : sub rsp, -0x80 ; pop rbx ; mov eax, eax ; ret
0x00000000000db51f : sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011d159 : sub rsp, 0x178 ; syscall
0x00000000000e0801 : sub rsp, 0x30 ; mov rdx, rsp ; syscall
0x00000000000e732e : sub rsp, 0x68 ; syscall
0x00000000001089ec : sub rsp, 0x80 ; call 0xf54b9
0x0000000000068a36 : sub rsp, 0x80 ; call 0xf54e9
0x00000000000e190d : sub rsp, 0xa8 ; syscall
0x00000000000e92ec : sub rsp, 8 ; call 0xf5506
0x00000000000a8159 : sub rsp, 8 ; call r12
0x0000000000108fce : sub rsp, 8 ; mov rcx, rdx ; xor edx, edx ; call rax
0x00000000000b3f25 : sub rsp, 8 ; syscall
0x0000000000180ef8 : sub spl, sil ; jmp rdx
0x0000000000032400 : subps xmm0, xmm1 ; ret
0x00000000000323ff : subsd xmm0, xmm1 ; ret
0x0000000000032784 : subss xmm0, xmm1 ; ret
0x00000000000026c7 : syscall
0x0000000000057ecc : sysenter
0x000000000008829c : test ah, al ; or eax, 0x894d0000 ; retf
0x00000000000e2408 : test ah, cl ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000123dcb : test ah, cl ; sbb eax, 0x894d0000 ; retf
0x0000000000115157 : test al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000da5b8 : test al, 0 ; add byte ptr [rax], al ; mov eax, 0xe ; syscall
0x0000000000110512 : test al, 0 ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x0000000000114276 : test al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000002b260 : test al, 0 ; add byte ptr [rax], al ; ret
0x00000000000e1910 : test al, 0 ; add byte ptr [rax], al ; syscall
0x0000000000176458 : test al, 0x12 ; out dx, eax ; call qword ptr [rax]
0x000000000012e99f : test al, 0x26 ; add byte ptr [rax + 0x39], cl ; retf -0x76b7
0x000000000009be74 : test al, 0x2f ; add byte ptr [rax + 0x39], cl ; ret
0x000000000004e868 : test al, 0x34 ; add byte ptr [rax + 0x63], cl ; ret 0x8948
0x0000000000003cea : test al, 0x35 ; push rbx ; or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x00000000000cc60c : test al, 0x38 ; retf
0x0000000000021829 : test al, 0x39 ; ret
0x000000000017c8f8 : test al, 0x7e ; int1 ; call rsp
0x000000000017b968 : test al, 0x82 ; cli ; call qword ptr [rax]
0x00000000001586d7 : test al, 0x97 ; xchg eax, esp ; ret
0x0000000000183578 : test al, 0x9a ; cmc ; jmp qword ptr [rcx]
0x000000000017e328 : test al, 0x9f ; jmp rdi
0x00000000001580be : test al, 0xa7 ; mov bx, 0xf32d ; retf
0x00000000000038a3 : test al, 0xc6 ; std ; fld xword ptr [rsi + 0x7a697efd] ; retf -0x513c
0x000000000012c024 : test al, 0xd1 ; add byte ptr es:[rax + 0x39], cl ; retf -0x76b7
0x000000000017e9f8 : test al, 0xd2 ; call qword ptr [rdx]
0x0000000000179099 : test al, 0xef ; jmp qword ptr [rsi]
0x000000000009aa49 : test al, 0xf0 ; jne 0x9aaa8 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x000000000009aa48 : test al, 0xf0 ; jne 0x9aaa9 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x000000000016f6a1 : test al, 0xf9 ; jmp rsp
0x000000000005b58d : test al, 0xff ; dec dword ptr [rax - 0x7d] ; ret 0x4108
0x000000000005b396 : test al, 0xff ; dec dword ptr [rax - 0x7d] ; ret 0xbe08
0x0000000000108e0d : test al, 5 ; add al, ch ; retf
0x000000000018d1c8 : test al, 6 ; clc ; jmp rsi
0x0000000000138f7c : test al, al ; and dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000008b259 : test al, al ; jne 0x8b2c7 ; mov rax, rdi ; ret
0x000000000008ead2 : test al, al ; jne 0x8eab5 ; ret
0x000000000008ec10 : test al, al ; jne 0x8ebf6 ; xor eax, eax ; ret
0x000000000008f7ba : test al, al ; jne 0x8f7a8 ; xor eax, eax ; sub eax, ecx ; ret
0x000000000013987c : test al, al ; sbb byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000874bc : test al, al ; sbb eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000016bff8 : test al, dh ; out dx, eax ; call rsp
0x00000000000376f0 : test bh, bh ; cmove eax, ecx ; ret
0x0000000000037730 : test bh, bh ; cmovne eax, ecx ; ret
0x0000000000121f46 : test bh, cl ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000012b526 : test bh, cl ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000da458 : test bh, dl ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret 0x4b01
0x000000000016fd71 : test bh, dl ; jmp rsp
0x000000000017e28c : test bl, al ; add byte ptr [rax], al ; mov al, 0x9e ; call rdi
0x00000000000fe15e : test bl, ch ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x2e66
0x0000000000121d66 : test bl, cl ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000012b246 : test bl, cl ; or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000102d16 : test bl, dh ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x000000000002c186 : test byte ptr [rax + 0x200], bh ; ret
0x00000000000f5b22 : test byte ptr [rax + 0x63], 0xfa ; syscall
0x00000000000e03ff : test byte ptr [rax + 0x63], 0xff ; mov eax, 0x11d ; syscall
0x00000000000dbcc7 : test byte ptr [rax + 0x63], 0xff ; mov eax, 0x48 ; syscall
0x00000000001103e5 : test byte ptr [rax + 0x63], 4 ; mov bh, 0x48 ; add eax, edi ; jmp rax
0x0000000000112c35 : test byte ptr [rax + 0x63], 4 ; mov cl, 0x48 ; add eax, ecx ; jmp rax
0x00000000000b99da : test byte ptr [rax + 0x63], 4 ; mov dl, 0x48 ; add eax, edx ; jmp rax
0x000000000000075e : test byte ptr [rax + 0xa], cl ; add byte ptr [rdx], dl ; retf
0x000000000006e25f : test byte ptr [rax + rax + 0x39480000], dl ; retf 0xf48
0x00000000000f0785 : test byte ptr [rax + rax - 0x7cb80000], bh ; ret 0x4830
0x000000000010e3e6 : test byte ptr [rax + rax*2], ah ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x39], cl ; ret
0x00000000000d9d34 : test byte ptr [rax + rax*8], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000124328 : test byte ptr [rax + rbx - 0x76b30000], al ; retf
0x00000000000688b1 : test byte ptr [rax + rbx*8], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x00000000000ce223 : test byte ptr [rax + rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000016bf84 : test byte ptr [rax - 0x47ec0000], dh ; out dx, eax ; call rsp
0x000000000016b8a4 : test byte ptr [rax - 0x58fc0000], cl ; in al, dx ; jmp rsp
0x00000000000e6d81 : test byte ptr [rax - 0x75], 0x7c ; and al, 8 ; xor eax, eax ; syscall
0x0000000000101adc : test byte ptr [rax - 0x77000000], ah ; retf -0x72b8
0x00000000000db189 : test byte ptr [rax - 0x77], 0xdf ; call rax
0x00000000000db1d3 : test byte ptr [rax - 0x77], 0xdf ; mov eax, 0x135 ; syscall
0x00000000000f7889 : test byte ptr [rax - 0x77], 0xf0 ; ret
0x000000000002ce73 : test byte ptr [rax - 0x7d], 0xeb ; add eax, ebp ; ret
0x00000000001800a5 : test byte ptr [rax], 0 ; cwde ; nop ; jmp qword ptr [rcx]
0x00000000000f63cb : test byte ptr [rax], ah ; add byte ptr [rax], al ; add al, ch ; retf -0x154
0x00000000000fef7b : test byte ptr [rax], ah ; add byte ptr [rax], al ; add al, ch ; retf -0x7ea
0x0000000000001d96 : test byte ptr [rax], ah ; mov al, 0x72 ; retf
0x0000000000139f3c : test byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000713ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; and dword ptr [rdi], 0xffffffcf ; ret
0x000000000007489a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x71368
0x000000000011f6da : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000010372a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x1f940
0x000000000014779a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x000000000013e7da : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x00000000000944ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000009549a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x000000000013e80a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x00000000000954ba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x00000000000954ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x00000000000ee5aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, edx ; ret
0x000000000013e84a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x000000000009550a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x0000000000075eba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000013e7ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x00000000000954aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x00000000000f64c8 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x0000000000118369 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; xor eax, eax ; ret
0x000000000002003a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000dfbda : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000003666a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000008f12a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000017cd68 : test byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000db1f1 : test byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000013a83c : test byte ptr [rax], al ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000013963c : test byte ptr [rax], al ; sbb eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000018328c : test byte ptr [rax], ch ; add dword ptr [rax], eax ; mov al, 0x8d ; cmc ; jmp qword ptr [rcx]
0x000000000008804c : test byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000f4202 : test byte ptr [rbp + 0x390b74d2], al ; ret 0xf7e
0x0000000000124e58 : test byte ptr [rbp + rcx], dl ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000e5602 : test byte ptr [rbp - 0x576feb6], 0x29 ; retf 0xf66
0x00000000000f3e6c : test byte ptr [rbx + 0x1c], 0x20 ; je 0xf3ed8 ; xor eax, eax ; pop rbx ; ret
0x000000000010be48 : test byte ptr [rbx + 0x48fffffe], dl ; mov edi, ebx ; call rax
0x0000000000185d8c : test byte ptr [rbx + 1], dl ; add al, ah ; xor al, 0xf6 ; jmp qword ptr [rcx]
0x00000000001702b4 : test byte ptr [rbx + 2], dl ; add byte ptr [rbx + rax - 5], dl ; call rsp
0x0000000000125038 : test byte ptr [rbx + rcx], dh ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000f1c40 : test byte ptr [rbx - 0x74fffffd], bl ; push rbx ; sbb dh, dh ; ret 0x7504
0x00000000000751a6 : test byte ptr [rbx], 0x80 ; jne 0x751b6 ; pop rbx ; ret
0x000000000016f6dc : test byte ptr [rbx], al ; add al, byte ptr [rax] ; xchg eax, esp ; mov dl, 0xf9 ; call rsp
0x0000000000192134 : test byte ptr [rbx], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x000000000016cdc4 : test byte ptr [rbx], cl ; add dword ptr [rax], eax ; mov ah, 0xf1 ; int1 ; call rsp
0x000000000005f5b4 : test byte ptr [rbx], dh ; adc byte ptr [rax], al ; add al, ch ; retf 3
0x00000000000c40e8 : test byte ptr [rbx], dl ; add dword ptr [rax], eax ; add dh, dh ; ret
0x00000000000f7e9c : test byte ptr [rcx + 0x480e7430], 0x39 ; retf -0x158b
0x000000000010482d : test byte ptr [rcx + 0x63], 0xff ; mov eax, 3 ; syscall
0x00000000000416a0 : test byte ptr [rcx + 0x8000002], dh ; retf -0x7af1
0x0000000000188e8c : test byte ptr [rcx + rax - 0x90d3000], al ; jmp rdi
0x0000000000184e8c : test byte ptr [rcx + rax], al ; cmp bl, 0xf5 ; call rdx
0x00000000000f759f : test byte ptr [rcx + rax], bh ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000125218 : test byte ptr [rcx + rcx - 0x76b30000], dl ; retf
0x00000000000a0aeb : test byte ptr [rcx + rcx*4 + 0x4c], 0x24 ; adc byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000009e2ca : test byte ptr [rcx + rcx*4 + 0x4c], 0x24 ; or byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000c4722 : test byte ptr [rcx + rcx*4 - 0x19], 0x89 ; ret
0x000000000003344e : test byte ptr [rcx + rcx*4 - 0x39], 0x44 ; mov eax, ecx ; syscall
0x0000000000031b24 : test byte ptr [rcx + rcx*4 - 1], 0xb8 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000007a475 : test byte ptr [rcx + rcx*4 - 1], 0xe8 ; ret 0xffff
0x00000000000d95c5 : test byte ptr [rcx + rcx*4 - 9], 0xe8 ; xchg eax, edx ; retf
0x000000000003b83d : test byte ptr [rcx + rcx], cl ; add byte ptr [rax - 0x48], cl ; retf -2
0x00000000000f0504 : test byte ptr [rcx + rsi*2 + 1], 0x40 ; cmovne eax, edx ; ret
0x00000000000f5c83 : test byte ptr [rcx - 0x77], 0xca ; mov eax, 0xe6 ; syscall
0x00000000000b2f93 : test byte ptr [rcx - 0x7d], 0xc6 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000025065 : test byte ptr [rcx - 0x8fffffc], bh ; ret 0
0x0000000000076f42 : test byte ptr [rcx - 0xa000000], cl ; ret
0x0000000000120626 : test byte ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000c14f5 : test byte ptr [rcx], 0xc0 ; or eax, esi ; jne 0xc1508 ; ret
0x000000000012bae6 : test byte ptr [rcx], bh ; add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000121406 : test byte ptr [rcx], bh ; or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000012adf6 : test byte ptr [rcx], ch ; adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000121316 : test byte ptr [rcx], ch ; or eax, 0x894d0000 ; retf
0x000000000012ab16 : test byte ptr [rcx], cl ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000007b3f6 : test byte ptr [rcx], cl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x000000000002ee98 : test byte ptr [rcx], dh ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4508
0x00000000000203e3 : test byte ptr [rcx], dl ; adc al, 0 ; ret
0x000000000018818c : test byte ptr [rdi + 1], dh ; add al, ah ; sal dh, 1 ; jmp qword ptr [rsi]
0x00000000001253f8 : test byte ptr [rdi + rax - 0x76b30000], dh ; retf
0x00000000000bd13e : test byte ptr [rdi + rdi*8 - 1], bl ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000f066c : test byte ptr [rdi - 0x76ffffff], bh ; ret 0xf789
0x000000000011524c : test byte ptr [rdi - 0x7d000000], al ; ret 0x3901
0x00000000000ca90c : test byte ptr [rdi*8 - 0x76b70001], cl ; ret
0x00000000000c078e : test byte ptr [rdi], 0x84 ; ret
0x00000000000a4817 : test byte ptr [rdi], 0x84 ; retf
0x0000000000104d12 : test byte ptr [rdi], 0x85 ; retf
0x00000000000d548f : test byte ptr [rdi], 0x94 ; ret
0x0000000000070842 : test byte ptr [rdi], 4 ; sete al ; ret
0x0000000000070852 : test byte ptr [rdi], 8 ; sete al ; ret
0x0000000000094e48 : test byte ptr [rdi], al ; add byte ptr [rax], al ; ret
0x0000000000078d4e : test byte ptr [rdi], bh ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8548
0x000000000002c114 : test byte ptr [rdx + 0x200], al ; ret
0x0000000000124148 : test byte ptr [rdx + rbx], ah ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000077d4d : test byte ptr [rdx + rdi*8 - 0x76b30001], bh ; ret 0x8d48
0x000000000016c5a8 : test byte ptr [rdx - 0x10], ch ; jmp rsp
0x0000000000025059 : test byte ptr [rdx - 0x8fffffc], dh ; ret 0
0x000000000016db70 : test byte ptr [rdx - 0xa], bl ; call rsp
0x000000000007b0af : test byte ptr [rdx], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000194674 : test byte ptr [rdx], al ; add byte ptr [rax], al ; retf
0x000000000016b450 : test byte ptr [rdx], dl ; in al, dx ; jmp rsp
0x000000000010c6f6 : test byte ptr [rip - 0x74ffffff], dh ; adc byte ptr [rdi], cl ; retf -0x2877
0x000000000005154c : test byte ptr [rip - 0x7c000012], bl ; ret
0x000000000016ea74 : test byte ptr [rsi + 0x1640001], dh ; clc ; call rsp
0x000000000008088d : test byte ptr [rsi + 0x48000000], bl ; bsf eax, edx ; ret
0x000000000018588c : test byte ptr [rsi + 1], cl ; add byte ptr [rax], al ; sbb al, 0xf6 ; jmp qword ptr [rcx]
0x000000000018608c : test byte ptr [rsi + 1], dl ; add al, dl ; cmp dh, dh ; call qword ptr [rsi]
0x00000000001244f8 : test byte ptr [rsi + rdx - 0x76b30000], dh ; retf
0x000000000002b4e5 : test byte ptr [rsi - 0x7c000002], dl ; ret
0x000000000003822e : test byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x000000000016f3a0 : test byte ptr [rsi], ah ; stc ; jmp rsp
0x00000000000806cd : test byte ptr [rsi], bh ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x0000000000127d2e : test byte ptr [rsi], ch ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000127a2e : test byte ptr [rsi], ch ; adc eax, 0x894d0000 ; retf
0x0000000000128c2e : test byte ptr [rsi], ch ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000012832e : test byte ptr [rsi], ch ; or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000012862e : test byte ptr [rsi], ch ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000123f68 : test byte ptr [rsp + rbx], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000016b711 : test ch, ah ; call rsp
0x000000000015afe4 : test ch, bh ; cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x0000000000080de6 : test ch, cl ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000810e6 : test ch, cl ; adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000081fe6 : test ch, cl ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000121e56 : test ch, cl ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000081ce6 : test ch, cl ; add eax, 0x894d0000 ; retf
0x00000000000819e6 : test ch, cl ; or byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000816e6 : test ch, cl ; or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000010cb68 : test ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x00000000001035c9 : test cl, bh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3904
0x0000000000105a0c : test cl, bh ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; retf
0x000000000016ed9c : test cl, bl ; add dword ptr [rax], eax ; jo 0x16eda2 ; call rsp
0x0000000000025642 : test cl, cl ; add al, byte ptr [rax] ; add bh, dh ; ret 0
0x000000000012bc56 : test cl, cl ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000016c2ec : test cl, cl ; add byte ptr [rax], al ; sub esi, eax ; call rsp
0x000000000016ed64 : test cl, cl ; add dword ptr [rax], eax ; adc al, 0x63 ; clc ; call rsp
0x0000000000121c76 : test cl, cl ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000010606b : test cl, cl ; jne 0x106051 ; ret
0x000000000008ea78 : test cl, cl ; jne 0x8ea6d ; ret
0x000000000008ebb7 : test cl, cl ; jne 0x8ebae ; xor eax, eax ; ret
0x00000000000988ff : test cl, cl ; jne 0x988f4 ; ret
0x00000000000989af : test cl, cl ; jne 0x989a4 ; ret
0x0000000000098c6f : test cl, cl ; jne 0x98c68 ; sub rax, 1 ; ret
0x00000000000f0592 : test cl, cl ; jne 0xf0585 ; ret
0x00000000000e24bb : test cl, dl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000017d48c : test cl, dl ; add byte ptr [rax], al ; and bl, ch ; int1 ; call qword ptr [rdx]
0x000000000016f0d0 : test cl, dl ; clc ; inc dword ptr [rsp + rbx*8] ; add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; retf -8
0x00000000001248b8 : test dh, ah ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001257b8 : test dh, ah ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000689e4 : test dh, bh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000100017 : test dh, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x000000000015d16d : test dh, bl ; call qword ptr [rax]
0x000000000015d171 : test dh, bl ; jmp qword ptr [rax]
0x000000000017fd11 : test dh, bl ; jmp qword ptr [rcx]
0x0000000000182dc1 : test dh, ch ; jmp qword ptr [rcx]
0x0000000000182dd9 : test dh, ch ; jmp qword ptr [rsi]
0x000000000008e8bd : test dh, dh ; jne 0x8e8b7 ; mov qword ptr [rdx], rcx ; ret
0x00000000000376ef : test dil, dil ; cmove eax, ecx ; ret
0x000000000003772f : test dil, dil ; cmovne eax, ecx ; ret
0x0000000000147624 : test dl, 0x40 ; jne 0x1475e9 ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000147652 : test dl, 4 ; jne 0x1475e9 ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000001246d8 : test dl, ah ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001255d8 : test dl, ah ; add eax, 0x894d0000 ; retf
0x0000000000087bac : test dl, al ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000159491 : test dl, bh ; retf -0x2081
0x000000000002564e : test dl, cl ; add al, byte ptr [rax] ; add bh, dh ; ret 0
0x000000000003771c : test dl, dl ; cmovne eax, ecx ; ret
0x000000000003175a : test dl, dl ; jne 0x3173c ; ret
0x000000000008ea34 : test dl, dl ; jne 0x8ea2d ; ret
0x0000000000098b1f : test dl, dl ; jne 0x98b18 ; lea rax, qword ptr [rcx - 1] ; ret
0x00000000000ba64e : test dl, dl ; jne 0xba62d ; xor eax, eax ; ret
0x000000000009517b : test dword ptr [rax + 4], edx ; add byte ptr [rax], al ; ret
0x000000000009668b : test dword ptr [rax + 7], edx ; add byte ptr [rax], al ; ret
0x000000000009658b : test dword ptr [rax + 8], edx ; add byte ptr [rax], al ; ret
0x00000000000631c8 : test dword ptr [rax - 0x16000005], esi ; cdq ; ret
0x00000000000591a4 : test dword ptr [rax - 0x16000005], esi ; ret 0xfffe
0x000000000005f1b3 : test dword ptr [rax - 0x17000006], ebp ; xchg eax, ebx ; retf 0
0x00000000000260b0 : test dword ptr [rax - 0x76fffffe], ecx ; retf 0x3bb
0x00000000000da9ca : test dword ptr [rax - 0x7c000002], ecx ; ret
0x0000000000063ba3 : test dword ptr [rax - 0x7c000006], ebp ; retf
0x00000000000f40a0 : test dword ptr [rax - 0x9000002], ebx ; ret
0x00000000000689e5 : test dword ptr [rax], 0x89480000 ; ret 0x8b48
0x000000000018011d : test dword ptr [rax], 0xf390b000 ; jmp qword ptr [rcx]
0x0000000000180135 : test dword ptr [rax], 0xf390c800 ; jmp qword ptr [rcx]
0x000000000018014d : test dword ptr [rax], 0xf390e000 ; jmp qword ptr [rcx]
0x00000000000bebc9 : test dword ptr [rax], eax ; add byte ptr [rax], al ; add bl, ch ; cmovns eax, dword ptr [rcx] ; retf -0x74bd
0x000000000004f7ff : test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000db38a : test dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000016b845 : test dword ptr [rax], eax ; add byte ptr [rdx + rdx*4], dh ; in al, dx ; jmp rsp
0x00000000000b57d7 : test dword ptr [rbp - 0x16000002], ecx ; retf
0x000000000008f03e : test dword ptr [rbp], edi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000001b12 : test dword ptr [rbx + 0x59e7c8ee], esi ; pop rbx ; ret 0x2a63
0x000000000009a030 : test dword ptr [rbx + 1], ecx ; add byte ptr [rax], al ; ret
0x000000000009a938 : test dword ptr [rbx + 1], esp ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0x10] ; ret
0x000000000013e728 : test dword ptr [rbx + 2], eax ; add byte ptr [rax], al ; ret
0x000000000013e708 : test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x000000000013e620 : test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x0000000000096780 : test dword ptr [rbx + 6], ebx ; add byte ptr [rax], al ; ret
0x0000000000144e37 : test dword ptr [rbx + 7], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000145286 : test dword ptr [rbx + rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000007a729 : test dword ptr [rbx + rax], ebx ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000002b8b : test dword ptr [rbx - 0x2e], ebp ; cmp dl, byte ptr [rdi] ; ret
0x0000000000026389 : test dword ptr [rbx - 0x76fffffe], ebx ; retf 0x5bb
0x000000000003af8f : test dword ptr [rbx], eax ; add byte ptr [rax], al ; add cl, ch ; syscall
0x000000000008efa8 : test dword ptr [rbx], eax ; add dword ptr [rax], eax ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000e2248 : test dword ptr [rbx], ebp ; add byte ptr [rax - 0x77], cl ; ret 0x8feb
0x00000000000e3c33 : test dword ptr [rbx], ebp ; add byte ptr [rcx], al ; add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000001aca : test dword ptr [rbx], ebx ; movsd dword ptr [rdi], dword ptr [rsi] ; jb 0x1b4f ; out dx, eax ; fidiv word ptr [rbx] ; retf
0x000000000008386a : test dword ptr [rcx + 0x48000000], esi ; xor eax, eax ; ret
0x000000000013e42a : test dword ptr [rcx + 5], eax ; add byte ptr [rax], al ; ret
0x0000000000144e0d : test dword ptr [rcx + 7], esi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000094d62 : test dword ptr [rcx + 8], ebp ; add byte ptr [rax], al ; ret
0x0000000000144d1d : test dword ptr [rcx + 8], esp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000144c2d : test dword ptr [rcx + 9], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000009a077 : test dword ptr [rcx + rax], eax ; add byte ptr [rax], al ; ret
0x00000000001494d7 : test dword ptr [rcx + rax], edx ; add byte ptr [rax], al ; ret
0x000000000009a047 : test dword ptr [rcx + rax], esi ; add byte ptr [rax], al ; ret
0x000000000013e7ca : test dword ptr [rcx - 0x3cffffff], esp ; ret
0x00000000000dfee2 : test dword ptr [rcx - 0x7cffffff], esi ; retf
0x0000000000190145 : test dword ptr [rcx], 0xfba06800 ; jmp qword ptr [rdx]
0x000000000002641f : test dword ptr [rcx], eax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000017e4c9 : test dword ptr [rcx], eax ; ret
0x0000000000094ec7 : test dword ptr [rdi + rax], eax ; add byte ptr [rax], al ; ret
0x0000000000094ea7 : test dword ptr [rdi + rax], esp ; add byte ptr [rax], al ; ret
0x00000000000338e3 : test dword ptr [rdi + rcx*8], eax ; setne al ; movzx eax, al ; ret
0x00000000000f24f5 : test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rax]
0x00000000000f298c : test dword ptr [rdi + rdi*8 - 1], edi ; jmp qword ptr [rax]
0x00000000000aeb0b : test dword ptr [rdi + rdi*8 - 1], edx ; inc dword ptr [rcx - 0x77] ; ret 0xfae9
0x00000000000b0c24 : test dword ptr [rdi + rdi*8 - 1], esp ; inc dword ptr [rcx - 0x77] ; retf 0xbe9
0x0000000000033a96 : test dword ptr [rdi], eax ; setne al ; movzx eax, al ; ret
0x0000000000095061 : test dword ptr [rdx + 5], ebp ; add byte ptr [rax], al ; ret
0x0000000000096469 : test dword ptr [rdx + 9], esi ; add byte ptr [rax], al ; ret
0x0000000000146182 : test dword ptr [rdx + rax], edi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000144b52 : test dword ptr [rdx + rcx], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000005b7fb : test dword ptr [rdx + rdi*8 - 0x76b70001], edi ; retf -0x76b8
0x00000000000fe753 : test dword ptr [rdx - 0x16000002], ecx ; retf
0x000000000013e6e7 : test dword ptr [rdx], eax ; add byte ptr [rax], al ; ret
0x000000000003f618 : test dword ptr [rdx], ebp ; add eax, dword ptr [rax] ; add byte ptr [rax + 0x29], cl ; retf
0x0000000000001d3e : test dword ptr [rdx], ebx ; scasb al, byte ptr [rdi] ; retf -0x6dda
0x000000000009a9dd : test dword ptr [rsi + 0x48000000], edi ; lea eax, dword ptr [rdi - 0x10] ; ret
0x0000000000148e62 : test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000094e85 : test dword ptr [rsi + 7], eax ; add byte ptr [rax], al ; ret
0x0000000000094e65 : test dword ptr [rsi + 7], esp ; add byte ptr [rax], al ; ret
0x0000000000094d7d : test dword ptr [rsi + 8], ecx ; add byte ptr [rax], al ; ret
0x000000000007c129 : test dword ptr [rsi - 0x16000002], esi ; ret 0xfffe
0x00000000000037ea : test dword ptr [rsi - 0x5b], esi ; outsb dx, byte ptr [rsi] ; retf
0x0000000000073285 : test dword ptr [rsi - 0x77000000], esi ; retf -0x3fcf
0x0000000000145058 : test dword ptr [rsi], esp ; add eax, 0xc0310000 ; ret
0x0000000000058f50 : test dword ptr [rsp + rbx - 0x76b80000], esp ; ret
0x000000000016be5d : test eax, 0x1d340000 ; out dx, eax ; call rsp
0x000000000015956d : test eax, 0x35eea9cd ; outsb dx, byte ptr [rsi] ; retf
0x00000000000b90c3 : test eax, 0x39fffffe ; ret
0x000000000007e2ab : test eax, 0x480031ac ; mov dword ptr [rsp + 8], eax ; call qword ptr [rdx]
0x000000000015a3c0 : test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000131656 : test eax, 0x7f0f41f3 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000004cf29 : test eax, 0x950f7ff0 ; ret 0xc166
0x000000000015f456 : test eax, 0xc3fffb00 ; add dh, bh ; jmp rdi
0x0000000000113673 : test eax, 0xebfffc88 ; retf
0x00000000000e744f : test eax, eax ; cmove eax, edx ; ret
0x00000000000e0e0b : test eax, eax ; cmovns eax, edx ; ret
0x0000000000035f94 : test eax, eax ; cmovs eax, edx ; pop rbx ; ret
0x0000000000100144 : test eax, eax ; je 0x100154 ; mov rdi, rbx ; call rax
0x0000000000107730 : test eax, eax ; je 0x10773c ; ret
0x000000000010a311 : test eax, eax ; je 0x10a321 ; mov rdi, rsp ; call rax
0x000000000010abf7 : test eax, eax ; je 0x10ac07 ; mov rdi, rbp ; call rax
0x000000000010af86 : test eax, eax ; je 0x10af94 ; ret
0x000000000010bbca : test eax, eax ; je 0x10bbda ; mov rdi, rbx ; call rax
0x000000000010bf3c : test eax, eax ; je 0x10bf4c ; mov rdi, rbx ; call rax
0x000000000010c111 : test eax, eax ; je 0x10c126 ; xor eax, eax ; ret
0x0000000000110d88 : test eax, eax ; je 0x110d98 ; mov rdi, r12 ; call rax
0x0000000000110f59 : test eax, eax ; je 0x110f6b ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000111faf : test eax, eax ; je 0x111fbf ; mov rdi, rbp ; call rax
0x000000000011206e : test eax, eax ; je 0x11207e ; mov rdi, r13 ; call rax
0x0000000000112bed : test eax, eax ; je 0x112bff ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x00000000001132d9 : test eax, eax ; je 0x1132e9 ; mov rdi, r12 ; call rax
0x000000000011364d : test eax, eax ; je 0x11365f ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x0000000000115098 : test eax, eax ; je 0x11502a ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x000000000011501d : test eax, eax ; je 0x11502d ; pop rbx ; ret
0x0000000000115c99 : test eax, eax ; je 0x115cab ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x00000000001162e2 : test eax, eax ; je 0x1162f4 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000119e16 : test eax, eax ; je 0x119e26 ; xor eax, eax ; ret
0x0000000000121033 : test eax, eax ; je 0x12103f ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000122018 : test eax, eax ; je 0x122024 ; xchg eax, edx ; sub eax, edx ; ret
0x00000000001499ec : test eax, eax ; je 0x1499fb ; call rax
0x000000000002039b : test eax, eax ; je 0x203ab ; mov rdi, rbp ; call rax
0x000000000002995c : test eax, eax ; je 0x29966 ; call rax
0x0000000000029ae6 : test eax, eax ; je 0x29af0 ; call rax
0x000000000002aa59 : test eax, eax ; je 0x2aa63 ; call rax
0x000000000003fba3 : test eax, eax ; je 0x3fbb5 ; pop rbx ; ret
0x0000000000064e2f : test eax, eax ; je 0x64e49 ; mov eax, 0x10 ; ret
0x0000000000071acd : test eax, eax ; je 0x71add ; pop rbx ; ret
0x00000000000770ae : test eax, eax ; je 0x770b8 ; call rax
0x000000000007c0b9 : test eax, eax ; je 0x7c0c3 ; call rax
0x0000000000080450 : test eax, eax ; je 0x80468 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a9658 : test eax, eax ; je 0xa9670 ; test edi, edi ; jne 0xa9670 ; ret
0x00000000000b2e2e : test eax, eax ; je 0xb2e50 ; mov rsi, rdi ; xor edi, edi ; call rax
0x00000000000b832f : test eax, eax ; je 0xb8339 ; call rax
0x00000000000b84b1 : test eax, eax ; je 0xb84be ; call rax
0x00000000000c17d2 : test eax, eax ; je 0xc17b0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e140c : test eax, eax ; je 0xe1417 ; ret
0x00000000000e2f91 : test eax, eax ; je 0xe2fa0 ; mov qword ptr [rax], rdx ; ret
0x00000000000e68fc : test eax, eax ; je 0xe69a0 ; call rax
0x00000000000e6a73 : test eax, eax ; je 0xe6b78 ; call rax
0x00000000000f59b8 : test eax, eax ; je 0xf59c4 ; ret
0x00000000000f5ba0 : test eax, eax ; je 0xf5bd4 ; call rax
0x00000000000f7ada : test eax, eax ; je 0xf7af0 ; add rsp, 8 ; ret
0x00000000000e8d02 : test eax, eax ; jl 0xe8d1d ; je 0xe8d0f ; ret
0x0000000000107aba : test eax, eax ; jne 0x107ac4 ; ret
0x000000000010d780 : test eax, eax ; jne 0x10d767 ; xor eax, eax ; pop rbx ; ret
0x0000000000111186 : test eax, eax ; jne 0x111194 ; ret
0x0000000000115c15 : test eax, eax ; jne 0x115c05 ; pop rbx ; ret
0x0000000000115ea6 : test eax, eax ; jne 0x115eb4 ; ret
0x000000000011cc5a : test eax, eax ; jne 0x11cc6f ; xor eax, eax ; pop rbx ; ret
0x00000000001200a6 : test eax, eax ; jne 0x1200b6 ; xor eax, eax ; ret
0x00000000001200d6 : test eax, eax ; jne 0x1200e6 ; xor eax, eax ; ret
0x0000000000120106 : test eax, eax ; jne 0x120116 ; xor eax, eax ; ret
0x0000000000120136 : test eax, eax ; jne 0x120146 ; xor eax, eax ; ret
0x0000000000120166 : test eax, eax ; jne 0x120176 ; xor eax, eax ; ret
0x0000000000120196 : test eax, eax ; jne 0x1201a6 ; xor eax, eax ; ret
0x00000000001201cd : test eax, eax ; jne 0x1201f0 ; mov eax, 0x27 ; syscall
0x0000000000149f16 : test eax, eax ; jne 0x149f25 ; ret
0x000000000014a57f : test eax, eax ; jne 0x14a58d ; pop rbx ; ret
0x0000000000032e56 : test eax, eax ; jne 0x32e65 ; ret
0x00000000000646af : test eax, eax ; jne 0x646c8 ; mov rax, rbx ; pop rbx ; ret
0x0000000000075be4 : test eax, eax ; jne 0x75bdd ; ret
0x0000000000076d85 : test eax, eax ; jne 0x76db9 ; xor edi, edi ; call qword ptr [r14]
0x000000000007e50f : test eax, eax ; jne 0x7e505 ; ret
0x000000000008275f : test eax, eax ; jne 0x82778 ; add rsp, 8 ; ret
0x00000000000838a7 : test eax, eax ; jne 0x83907 ; xor rax, rax ; ret
0x000000000008f078 : test eax, eax ; jne 0x8f0f6 ; xor eax, eax ; ret
0x000000000009932d : test eax, eax ; jne 0x99325 ; ret
0x000000000009ab21 : test eax, eax ; jne 0x9aaf5 ; ret
0x000000000009abda : test eax, eax ; jne 0x9abd6 ; xor eax, eax ; ret
0x000000000009ac32 : test eax, eax ; jne 0x9ac18 ; mov rax, rdi ; ret
0x00000000000b4bf6 : test eax, eax ; jne 0xb4c31 ; mov eax, 0x74 ; syscall
0x00000000000f4ee6 : test eax, eax ; jne 0xf4ef9 ; mov eax, 1 ; ret
0x00000000000f4f16 : test eax, eax ; jne 0xf4f26 ; xor eax, eax ; ret
0x00000000000f4f46 : test eax, eax ; jne 0xf4f56 ; xor eax, eax ; ret
0x00000000000f4f76 : test eax, eax ; jne 0xf4f86 ; xor eax, eax ; ret
0x00000000000f4fa6 : test eax, eax ; jne 0xf4fb6 ; xor eax, eax ; ret
0x00000000000f4fd6 : test eax, eax ; jne 0xf4fe6 ; xor eax, eax ; ret
0x00000000000f5006 : test eax, eax ; jne 0xf5016 ; xor eax, eax ; ret
0x00000000000f5036 : test eax, eax ; jne 0xf5046 ; xor eax, eax ; ret
0x00000000000f5066 : test eax, eax ; jne 0xf5076 ; xor eax, eax ; ret
0x00000000000f5096 : test eax, eax ; jne 0xf50a6 ; xor eax, eax ; ret
0x00000000000f50c6 : test eax, eax ; jne 0xf50d6 ; xor eax, eax ; ret
0x00000000000f50f6 : test eax, eax ; jne 0xf5106 ; xor eax, eax ; ret
0x00000000000f5126 : test eax, eax ; jne 0xf5136 ; xor eax, eax ; ret
0x00000000000f5156 : test eax, eax ; jne 0xf5166 ; xor eax, eax ; ret
0x00000000000f5186 : test eax, eax ; jne 0xf5196 ; xor eax, eax ; ret
0x00000000000f51b6 : test eax, eax ; jne 0xf51c6 ; xor eax, eax ; ret
0x00000000000f51e6 : test eax, eax ; jne 0xf51f6 ; xor eax, eax ; ret
0x00000000000f5216 : test eax, eax ; jne 0xf5226 ; xor eax, eax ; ret
0x00000000000f5246 : test eax, eax ; jne 0xf5256 ; xor eax, eax ; ret
0x00000000000f5276 : test eax, eax ; jne 0xf5286 ; xor eax, eax ; ret
0x00000000000f52a6 : test eax, eax ; jne 0xf52b6 ; xor eax, eax ; ret
0x00000000000f5306 : test eax, eax ; jne 0xf5316 ; xor eax, eax ; ret
0x00000000000f5336 : test eax, eax ; jne 0xf5346 ; xor eax, eax ; ret
0x00000000000f5366 : test eax, eax ; jne 0xf5376 ; xor eax, eax ; ret
0x00000000000f5396 : test eax, eax ; jne 0xf53a6 ; xor eax, eax ; ret
0x00000000000f53c6 : test eax, eax ; jne 0xf53d6 ; xor eax, eax ; ret
0x00000000000f53f6 : test eax, eax ; jne 0xf5406 ; xor eax, eax ; ret
0x00000000000f5426 : test eax, eax ; jne 0xf5436 ; xor eax, eax ; ret
0x00000000000f5456 : test eax, eax ; jne 0xf5466 ; xor eax, eax ; ret
0x00000000000f5486 : test eax, eax ; jne 0xf5496 ; xor eax, eax ; ret
0x00000000000f54cf : test eax, eax ; jne 0xf54cb ; pop rdx ; pop r10 ; ret
0x00000000000f55c3 : test eax, eax ; jne 0xf55d5 ; ret
0x000000000006eeeb : test eax, eax ; js 0x6eefd ; ret
0x000000000007c366 : test eax, eax ; js 0x7c375 ; ret
0x000000000009a56d : test eax, eax ; mov dword ptr [rcx + 4], r8d ; jne 0x9a541 ; ret
0x0000000000109a86 : test eax, eax ; sete al ; add rsp, 8 ; ret
0x000000000009b247 : test eax, eax ; sete al ; movzx eax, al ; ret
0x00000000000d3016 : test eax, ebp ; add dword ptr [rax], eax ; add dh, dh ; ret 0xf01
0x00000000000837d0 : test ebp, ebx ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x000000000007b2ce : test ebx, ebp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000000c6598 : test ebx, ebx ; je 0xc6550 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000149ff4 : test ebx, ebx ; mov rdx, rbx ; jne 0x149ff1 ; pop rbx ; ret
0x0000000000147612 : test ebx, ecx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x000000000004df41 : test ebx, edx ; idiv bh ; inc dword ptr [rcx] ; ret
0x000000000014761f : test ebx, esp ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x000000000009ab0b : test ecx, ecx ; jne 0x9ab05 ; ret
0x000000000009bf59 : test ecx, ecx ; jne 0x9bf18 ; mov rax, rdx ; ret
0x0000000000169f65 : test edi, ebx ; call rax
0x000000000007d010 : test edi, edi ; je 0x7d029 ; mov eax, 0x16 ; ret
0x00000000000b2eb4 : test edi, edi ; je 0xb2ecb ; call 0x1f93e
0x0000000000149cda : test edi, edi ; jne 0x149cd5 ; ret
0x0000000000149cfc : test edi, edi ; jne 0x149cf8 ; pop rbx ; ret
0x00000000000a965c : test edi, edi ; jne 0xa966c ; ret
0x0000000000106e47 : test edi, edi ; js 0x106e6c ; mov eax, 3 ; syscall
0x000000000011da57 : test edi, edi ; js 0x11da76 ; mov eax, 3 ; syscall
0x00000000000f9762 : test edi, edi ; js 0xf9779 ; mov eax, edi ; shr eax, 0x18 ; ret
0x000000000004411d : test edi, edi ; mov byte ptr [rsi], al ; jne 0x44111 ; mov rax, rsi ; ret
0x00000000000327c0 : test edx, 0x7fffff ; je 0x327ba ; ret
0x000000000010c720 : test edx, edx ; je 0x10c730 ; mov rdi, rbp ; call rdx
0x00000000001498d4 : test edx, edx ; je 0x1498de ; call rdx
0x0000000000070c5a : test edx, edx ; je 0x70c71 ; mov eax, 0xffffffff ; ret
0x0000000000070fda : test edx, edx ; je 0x70ff1 ; mov eax, 0xffffffff ; ret
0x0000000000080682 : test edx, edx ; je 0x80691 ; bsf eax, edx ; ret
0x000000000008072b : test edx, edx ; je 0x80748 ; bsf rax, rdx ; ret
0x00000000000808fa : test edx, edx ; je 0x80928 ; bsf rax, rdx ; ret
0x00000000000b8440 : test edx, edx ; je 0xb844d ; call rdx
0x00000000001184d0 : test edx, edx ; jne 0x1184e9 ; mov eax, 1 ; ret
0x0000000000118510 : test edx, edx ; jne 0x118529 ; mov eax, 1 ; ret
0x000000000006b58f : test edx, edx ; jne 0x6b585 ; ret
0x00000000000738c1 : test edx, edx ; jne 0x738d6 ; xor eax, eax ; ret
0x000000000007441f : test edx, edx ; jne 0x74415 ; ret
0x000000000007e5b9 : test edx, edx ; jne 0x7e5b5 ; ret
0x000000000008c6a2 : test edx, edx ; jne 0x8c697 ; or byte ptr [rdi], sil ; ret
0x000000000009bf9a : test edx, edx ; jne 0x9bf95 ; ret
0x00000000000c1828 : test edx, edx ; jne 0xc1818 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f581d : test edx, edx ; jne 0xf5815 ; ret
0x000000000009ae2f : test edx, edx ; mov dword ptr [rax], edx ; jne 0x9ae2f ; ret
0x00000000000a7a0f : test edx, edx ; mov dword ptr [rsi + rcx], edx ; jne 0xa7a10 ; ret
0x00000000000f4e94 : test edx, edx ; sete al ; ret
0x0000000000147605 : test edx, esi ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000182e99 : test esi, ebp ; jmp qword ptr [rcx]
0x00000000000290f0 : test esi, esi ; je 0x29109 ; cmp esi, 3 ; je 0x29109 ; ret
0x000000000011864d : test esi, esi ; jle 0x118686 ; call 0x115116
0x00000000000807f1 : test esi, esi ; jne 0x80800 ; xor rax, rax ; ret
0x000000000005a62a : test esi, esp ; ret
0x0000000000033a95 : test qword ptr [rdi], rax ; setne al ; movzx eax, al ; ret
0x000000000011864c : test r14d, r14d ; jle 0x118687 ; call 0x115117
0x000000000008ead1 : test r8b, r8b ; jne 0x8eab6 ; ret
0x000000000008ec0f : test r8b, r8b ; jne 0x8ebf7 ; xor eax, eax ; ret
0x0000000000121032 : test r8d, r8d ; je 0x121040 ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000122017 : test r8d, r8d ; je 0x122025 ; xchg eax, edx ; sub eax, edx ; ret
0x00000000000a9657 : test r8d, r8d ; je 0xa9671 ; test edi, edi ; jne 0xa9671 ; ret
0x000000000009932c : test r8d, r8d ; jne 0x99326 ; ret
0x000000000009ab20 : test r8d, r8d ; jne 0x9aaf6 ; ret
0x000000000009bf58 : test r9d, r9d ; jne 0x9bf19 ; mov rax, rdx ; ret
0x0000000000100143 : test rax, rax ; je 0x100155 ; mov rdi, rbx ; call rax
0x000000000010a310 : test rax, rax ; je 0x10a322 ; mov rdi, rsp ; call rax
0x000000000010abf6 : test rax, rax ; je 0x10ac08 ; mov rdi, rbp ; call rax
0x000000000010bbc9 : test rax, rax ; je 0x10bbdb ; mov rdi, rbx ; call rax
0x000000000010bf3b : test rax, rax ; je 0x10bf4d ; mov rdi, rbx ; call rax
0x0000000000110d87 : test rax, rax ; je 0x110d99 ; mov rdi, r12 ; call rax
0x0000000000110f58 : test rax, rax ; je 0x110f6c ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000111fae : test rax, rax ; je 0x111fc0 ; mov rdi, rbp ; call rax
0x000000000011206d : test rax, rax ; je 0x11207f ; mov rdi, r13 ; call rax
0x0000000000112bec : test rax, rax ; je 0x112c00 ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x00000000001132d8 : test rax, rax ; je 0x1132ea ; mov rdi, r12 ; call rax
0x000000000011364c : test rax, rax ; je 0x113660 ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x000000000011501c : test rax, rax ; je 0x11502e ; pop rbx ; ret
0x0000000000115c98 : test rax, rax ; je 0x115cac ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x00000000001162e1 : test rax, rax ; je 0x1162f5 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x00000000001499eb : test rax, rax ; je 0x1499fc ; call rax
0x000000000002039a : test rax, rax ; je 0x203ac ; mov rdi, rbp ; call rax
0x000000000002995b : test rax, rax ; je 0x29967 ; call rax
0x0000000000029ae5 : test rax, rax ; je 0x29af1 ; call rax
0x000000000002aa58 : test rax, rax ; je 0x2aa64 ; call rax
0x0000000000071acc : test rax, rax ; je 0x71ade ; pop rbx ; ret
0x00000000000770ad : test rax, rax ; je 0x770b9 ; call rax
0x000000000007c0b8 : test rax, rax ; je 0x7c0c4 ; call rax
0x000000000008044f : test rax, rax ; je 0x80469 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b832e : test rax, rax ; je 0xb833a ; call rax
0x00000000000b84b0 : test rax, rax ; je 0xb84bf ; call rax
0x00000000000e140b : test rax, rax ; je 0xe1418 ; ret
0x00000000000e2f90 : test rax, rax ; je 0xe2fa1 ; mov qword ptr [rax], rdx ; ret
0x00000000000e68fb : test rax, rax ; je 0xe69a1 ; call rax
0x00000000000e6a72 : test rax, rax ; je 0xe6b79 ; call rax
0x00000000000f59b7 : test rax, rax ; je 0xf59c5 ; ret
0x00000000000f5b9f : test rax, rax ; je 0xf5bd5 ; call rax
0x00000000000f7ad9 : test rax, rax ; je 0xf7af1 ; add rsp, 8 ; ret
0x00000000000e8d01 : test rax, rax ; jl 0xe8d1e ; je 0xe8d10 ; ret
0x0000000000115c14 : test rax, rax ; jne 0x115c06 ; pop rbx ; ret
0x0000000000075be3 : test rax, rax ; jne 0x75bde ; ret
0x0000000000076d84 : test rax, rax ; jne 0x76dba ; xor edi, edi ; call qword ptr [r14]
0x000000000007e50e : test rax, rax ; jne 0x7e506 ; ret
0x00000000000b2eb3 : test rdi, rdi ; je 0xb2ecc ; call 0x1f93f
0x0000000000149cd9 : test rdi, rdi ; jne 0x149cd6 ; ret
0x0000000000149cfb : test rdi, rdi ; jne 0x149cf9 ; pop rbx ; ret
0x000000000010c71f : test rdx, rdx ; je 0x10c731 ; mov rdi, rbp ; call rdx
0x00000000001498d3 : test rdx, rdx ; je 0x1498df ; call rdx
0x000000000008072a : test rdx, rdx ; je 0x80749 ; bsf rax, rdx ; ret
0x00000000000808f9 : test rdx, rdx ; je 0x80929 ; bsf rax, rdx ; ret
0x00000000000b843f : test rdx, rdx ; je 0xb844e ; call rdx
0x000000000006b58e : test rdx, rdx ; jne 0x6b586 ; ret
0x00000000000738c0 : test rdx, rdx ; jne 0x738d7 ; xor eax, eax ; ret
0x000000000007441e : test rdx, rdx ; jne 0x74416 ; ret
0x000000000007e5b8 : test rdx, rdx ; jne 0x7e5b6 ; ret
0x00000000000c1827 : test rdx, rdx ; jne 0xc1819 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f581c : test rdx, rdx ; jne 0xf5816 ; ret
0x00000000000807f0 : test rsi, rsi ; jne 0x80801 ; xor rax, rax ; ret
0x0000000000182dd8 : test sil, bpl ; jmp qword ptr [rsi]
0x000000000008e8bc : test sil, sil ; jne 0x8e8b8 ; mov qword ptr [rdx], rcx ; ret
0x0000000000002b8a : test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x0000000000073c5d : vminsd xmm8, xmm4, qword ptr [rcx + 0x5c] ; ret
0x000000000014654a : vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000012909c : vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000146c25 : vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000129551 : vmovdqu xmmword ptr [rdi], xmm0 ; vzeroupper ; ret
0x0000000000146c29 : vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000129228 : vmovdqu ymmword ptr [r11], ymm4 ; vzeroupper ; ret
0x00000000001292cf : vmovdqu ymmword ptr [r11], ymm8 ; vzeroupper ; ret
0x0000000000146536 : vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x000000000014651d : vmovdqu ymmword ptr [r9 - 0x20], ymm3 ; ret
0x0000000000128fe5 : vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm1 ; vzeroupper ; ret
0x00000000001294bb : vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm0 ; vzeroupper ; ret
0x0000000000129173 : vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm3 ; vzeroupper ; ret
0x0000000000129145 : vmovdqu ymmword ptr [rdi + rdx - 0x80], ymm7 ; vzeroupper ; ret
0x0000000000129432 : vmovdqu ymmword ptr [rdi], ymm0 ; vzeroupper ; ret
0x0000000000146c1b : vmovdqu ymmword ptr [rdi], ymm2 ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x0000000000146c1f : vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x0000000000147102 : vmovdqu64 zmmword ptr [r11], zmm4 ; vzeroupper ; ret
0x00000000001471c8 : vmovdqu64 zmmword ptr [r11], zmm8 ; vzeroupper ; ret
0x00000000001473c1 : vmovdqu64 zmmword ptr [rdi], zmm0 ; vzeroupper ; ret
0x0000000000146c34 : vmovq qword ptr [rdi], xmm0 ; vmovq qword ptr [rsi - 8], xmm0 ; ret
0x0000000000146c38 : vmovq qword ptr [rsi - 8], xmm0 ; ret
0x0000000000146853 : vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x00000000001466ec : vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x00000000001464ee : vmovups zmmword ptr [r9 - 0x40], zmm3 ; ret
0x00000000001464b2 : vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x00000000001469b5 : vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x0000000000146dd8 : vmovups zmmword ptr [rsi + 0x1c0], zmm2 ; ret
0x0000000000146d3b : vmovups zmmword ptr [rsi + 0xc0], zmm2 ; ret
0x0000000000146bda : vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x00000000000566fc : vpand ymm9, ymm15, ymmword ptr [r15] ; lahf ; ret 0xd329
0x0000000000126061 : vpcmpeqb xmm0, xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000128feb : vzeroupper ; ret
0x00000000000a30c1 : wait ; add eax, dword ptr [rax] ; add byte ptr [rbx - 0x71f0e706], al ; ret
0x00000000001835d9 : wait ; cmc ; jmp qword ptr [rcx]
0x00000000000c9061 : wait ; mov dl, 0xfb ; call rcx
0x000000000003f0e1 : wait ; ret
0x00000000000675d1 : wait ; retf
0x000000000009853d : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000985bf : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000986c1 : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x0000000000002bdc : xabort -0xd ; ret
0x0000000000002bd8 : xbegin 0xfffffffff8c6efd8 ; ret
0x00000000000c7c05 : xchg ah, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x0000000000120e3f : xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000121663 : xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000122faf : xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000120a2f : xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x000000000016b749 : xchg ah, ch ; call rsp
0x0000000000121753 : xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000121573 : xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000016d4b9 : xchg ah, dh ; jmp rsp
0x000000000012053b : xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018fe49 : xchg al, bh ; call qword ptr [rdx]
0x000000000016edc9 : xchg al, bh ; call rsp
0x000000000018fe91 : xchg al, bh ; jmp qword ptr [rcx]
0x0000000000074bee : xchg al, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x0000000000120d4b : xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000126f5c : xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000012677c : xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x0000000000038044 : xchg bh, ch ; add eax, 0x83410000 ; call qword ptr [rax]
0x0000000000178681 : xchg bh, ch ; call rsi
0x0000000000126b6c : xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000012638c : xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000128e8d : xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000169f69 : xchg bl, bh ; push qword ptr [rax - 0x78] ; sti ; call qword ptr [rax]
0x0000000000127991 : xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x0000000000128b91 : xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000128291 : xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000128591 : xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000127c89 : xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000182f50 : xchg bpl, sil ; jmp qword ptr [rcx]
0x00000000000990f2 : xchg byte ptr [rax + 1], cl ; int1 ; jmp rcx
0x0000000000121fbb : xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x0000000000123b0f : xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001232ef : xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x00000000001207bf : xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000122acf : xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x0000000000089a87 : xchg byte ptr [rax - 0x73], cl ; add dword ptr [r9 + 0x39], ecx ; ret 0x8949
0x0000000000120aff : xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x0000000000121b13 : xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x00000000000a63fb : xchg byte ptr [rax - 0x7d], cl ; ret
0x00000000000cfafd : xchg byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x39 ; ret
0x0000000000120e1b : xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000e96f1 : xchg byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x0000000000179095 : xchg byte ptr [rax], al ; add byte ptr [rax], ch ; test al, 0xef ; jmp qword ptr [rsi]
0x000000000004525d : xchg byte ptr [rax], bl ; adc eax, 0x89480000 ; retf -0x76b8
0x000000000012652b : xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000120eeb : xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000012362f : xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001212a3 : xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x0000000000122e0f : xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001225ef : xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x00000000001237cf : xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x0000000000120c9f : xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000121cf3 : xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000121483 : xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000012048f : xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x000000000017bee9 : xchg byte ptr [rbx], al ; mov word ptr [rdx], es ; push rdx ; ret
0x0000000000048794 : xchg byte ptr [rbx], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; retf -0x76b8
0x000000000011b97c : xchg byte ptr [rcx + 0x63], cl ; cld ; mov eax, 3 ; syscall
0x000000000007c096 : xchg byte ptr [rcx + rax - 0x10], cl ; jmp rax
0x0000000000121ed3 : xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000e288a : xchg byte ptr [rcx], bl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000012088f : xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x0000000000159295 : xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, -0x1b ; retf 0x2a91
0x0000000000126a1c : xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000012623c : xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000003a864 : xchg byte ptr [rdi], bl ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x000000000015dd08 : xchg byte ptr [rdi], bl ; cmc ; jmp qword ptr [rsi]
0x000000000012734c : xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000023352 : xchg byte ptr [rdi], cl ; retf 0x1489
0x0000000000120d6f : xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x0000000000121de3 : xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000012055f : xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000012292f : xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000120601 : xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000121725 : xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000121815 : xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000121635 : xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000012095f : xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x0000000000127f36 : xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000122a65 : xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000123765 : xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000128e36 : xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000128536 : xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000128236 : xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x0000000000123285 : xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000012691d : xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000127c2e : xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000012724d : xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000120bcf : xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000121393 : xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x00000000001710c1 : xchg ch, bh ; jmp qword ptr [rdx]
0x00000000001252bf : xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001250df : xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000125ab7 : xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000182eb1 : xchg ch, dh ; jmp qword ptr [rcx]
0x00000000001249d7 : xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001258d7 : xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000103154 : xchg cl, al ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000013588f : xchg cl, al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x00000000000e282a : xchg cl, ch ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00000000000a5003 : xchg cl, ch ; retf -2
0x0000000000123aa5 : xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000122da5 : xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x00000000001228c5 : xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001235c5 : xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x00000000000b1bc3 : xchg dh, bh ; dec dword ptr [rax - 0x77] ; ret
0x0000000000126a6d : xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000025b9 : xchg dh, ch ; ret 0x88ad
0x000000000012628d : xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000120625 : xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000121545 : xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000121365 : xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000121455 : xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000121275 : xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x0000000000002cbd : xchg dl, cl ; rcr byte ptr [r10], 1 ; retf 0x2217
0x000000000005273f : xchg dword ptr [rax - 0x76ffffdf], ebx ; ret 0x349
0x000000000000ecd8 : xchg dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x4d
0x00000000000e9051 : xchg dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x0000000000159298 : xchg dword ptr [rax], edi ; in eax, -0x1b ; retf 0x2a91
0x0000000000021c6d : xchg dword ptr [rbp + rcx*4 + 0x34], ecx ; ret
0x0000000000158e1f : xchg dword ptr [rbp - 0x5b], ebx ; xchg eax, ebp ; retf 0x33e6
0x000000000006244e : xchg dword ptr [rbp - 0x77000000], ebx ; ret 0x348
0x0000000000063903 : xchg dword ptr [rbp - 0x77000000], ecx ; ret 0x348
0x000000000009ab1f : xchg dword ptr [rbp - 0x7b], eax ; sal byte ptr [rbp - 0x35], 0xf3 ; ret
0x000000000005fff3 : xchg dword ptr [rbx - 0x76ffffdc], ebx ; retf 0x348
0x0000000000062b9a : xchg dword ptr [rbx - 0x77000000], ecx ; ret 0x348
0x00000000000e3a89 : xchg dword ptr [rbx], ebp ; add byte ptr [rax + rcx - 9], dh ; ret 0xfc07
0x000000000002be22 : xchg dword ptr [rbx], ecx ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000044fca : xchg dword ptr [rbx], ecx ; add byte ptr [rax], al ; add rax, rcx ; jmp rax
0x000000000015808c : xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x00000000000daeb1 : xchg dword ptr [rcx + rax], ecx ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x0000000000063175 : xchg dword ptr [rcx - 0x76fffffe], ebx ; ret 0x348
0x00000000000f54cd : xchg dword ptr [rdi], eax ; test eax, eax ; jne 0xf54cd ; pop rdx ; pop r10 ; ret
0x0000000000062b32 : xchg dword ptr [rsi - 0x76ffffff], eax ; ret 0x348
0x000000000005b471 : xchg dword ptr [rsi - 0x77000000], eax ; ret 0x348
0x000000000005cb6c : xchg dword ptr [rsi - 0x77000000], edi ; ret 0x348
0x0000000000062d9a : xchg dword ptr [rsi - 0x77000000], edx ; ret 0x348
0x000000000007a511 : xchg dword ptr [rsi], ecx ; add byte ptr [rcx + rcx*4 - 6], cl ; call 0x76f28
0x000000000015822b : xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x0000000000124618 : xchg eax, ebp ; adc eax, 0x83480000 ; ret 0xe910
0x000000000006bf9e : xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000006f79f : xchg eax, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000016bb1d : xchg eax, ebp ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; sbb ch, ch ; jmp rsp
0x000000000015d27d : xchg eax, ebp ; call qword ptr [rax]
0x000000000016a745 : xchg eax, ebp ; cld ; call qword ptr [rdx]
0x000000000016a689 : xchg eax, ebp ; cld ; call rax
0x000000000016a685 : xchg eax, ebp ; cld ; inc dword ptr [rax - 0x6b] ; cld ; call rax
0x000000000016a6c5 : xchg eax, ebp ; cld ; jmp qword ptr [rsi]
0x000000000016a885 : xchg eax, ebp ; cld ; jmp rax
0x00000000001833a1 : xchg eax, ebp ; cmc ; jmp qword ptr [rcx]
0x0000000000158569 : xchg eax, ebp ; jge 0x15854c ; push r8 ; xor byte ptr [rcx], ah ; retf
0x0000000000062330 : xchg eax, ebp ; jmp 0xffffffffcb8a233a
0x000000000017df39 : xchg eax, ebp ; jmp qword ptr [rcx]
0x000000000015d279 : xchg eax, ebp ; jmp rax
0x0000000000001eb7 : xchg eax, ebp ; mov esp, 0xf69e7650 ; xchg eax, r11d ; retf
0x000000000016beb9 : xchg eax, ebp ; out dx, eax ; jmp rsp
0x000000000004d897 : xchg eax, ebp ; outsb dx, byte ptr [rsi] ; add al, byte ptr [rax] ; jmp 0x4d865
0x0000000000062adb : xchg eax, ebp ; push -0x14000005 ; retf
0x00000000000020d7 : xchg eax, ebp ; ret
0x00000000000a6d23 : xchg eax, ebp ; ret 0x205f
0x000000000010741d : xchg eax, ebp ; ret 0x233c
0x000000000009e587 : xchg eax, ebp ; ret 0x2941
0x00000000000a0741 : xchg eax, ebp ; ret 0x2945
0x0000000000106f48 : xchg eax, ebp ; ret 0x2c3c
0x000000000008eab5 : xchg eax, ebp ; ret 0x3941
0x00000000000dc2fd : xchg eax, ebp ; ret 0x3948
0x00000000000667f5 : xchg eax, ebp ; ret 0x5389
0x00000000000337b5 : xchg eax, ebp ; ret 0x5489
0x0000000000109695 : xchg eax, ebp ; ret 0x8041
0x000000000003787c : xchg eax, ebp ; ret 0x8545
0x000000000004165d : xchg eax, ebp ; ret 0x854d
0x00000000000390ac : xchg eax, ebp ; ret 0x941
0x000000000002e68b : xchg eax, ebp ; ret 0x953d
0x00000000000a4cc0 : xchg eax, ebp ; ret 0xb60f
0x000000000004cf2d : xchg eax, ebp ; ret 0xc166
0x0000000000041551 : xchg eax, ebp ; ret 0xc221
0x00000000000d4c4f : xchg eax, ebp ; ret 0xd120
0x00000000000a6d8d : xchg eax, ebp ; ret 0xd121
0x00000000000a84f6 : xchg eax, ebp ; ret 0xd138
0x00000000000c645c : xchg eax, ebp ; ret 0xd201
0x00000000000379fc : xchg eax, ebp ; ret 0xd348
0x0000000000033d41 : xchg eax, ebp ; ret 0xd521
0x00000000000a6eb0 : xchg eax, ebp ; ret 0xdae9
0x0000000000067041 : xchg eax, ebp ; ret 0xdaf7
0x000000000009b771 : xchg eax, ebp ; ret 0xe883
0x0000000000037a2e : xchg eax, ebp ; ret 0xf41
0x000000000009ba57 : xchg eax, ebp ; ret 0xf883
0x0000000000106f6f : xchg eax, ebp ; ret 0xf980
0x0000000000003a89 : xchg eax, ebp ; retf 0x10bf
0x0000000000158e22 : xchg eax, ebp ; retf 0x33e6
0x00000000000c5bf3 : xchg eax, ebp ; rol byte ptr [rcx], 0xc0 ; ret
0x00000000000e2062 : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000000d206c : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rdi], 0x47 ; ret 0x90c3
0x0000000000064d2a : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; pop rbx ; ret
0x00000000001144c1 : xchg eax, ebp ; sal bh, 0xd8 ; add rsp, 0x18 ; ret
0x000000000006c37d : xchg eax, ebp ; sal bh, 0xd8 ; ret
0x0000000000169f8d : xchg eax, ebp ; sti ; call qword ptr [rax]
0x00000000000f50f3 : xchg eax, ebp ; sub al, byte ptr [rax] ; test eax, eax ; jne 0xf5109 ; xor eax, eax ; ret
0x00000000000f5123 : xchg eax, ebp ; sub al, byte ptr [rax] ; test eax, eax ; jne 0xf5139 ; xor eax, eax ; ret
0x00000000000f5153 : xchg eax, ebp ; sub al, byte ptr [rax] ; test eax, eax ; jne 0xf5169 ; xor eax, eax ; ret
0x00000000000f5183 : xchg eax, ebp ; sub al, byte ptr [rax] ; test eax, eax ; jne 0xf5199 ; xor eax, eax ; ret
0x00000000000f51b3 : xchg eax, ebp ; sub al, byte ptr [rax] ; test eax, eax ; jne 0xf51c9 ; xor eax, eax ; ret
0x00000000000f51e3 : xchg eax, ebp ; sub al, byte ptr [rax] ; test eax, eax ; jne 0xf51f9 ; xor eax, eax ; ret
0x0000000000002b89 : xchg eax, ebp ; test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x000000000015a27c : xchg eax, ebp ; xor byte ptr [rsi - 0x73e34314], ch ; retf
0x000000000006d433 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x00000000000786c7 : xchg eax, ebx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x0000000000143fa0 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x0000000000003969 : xchg eax, ebx ; and cl, ah ; ret
0x000000000016a699 : xchg eax, ebx ; cld ; call qword ptr [rax]
0x000000000016a895 : xchg eax, ebx ; cld ; jmp qword ptr [rax]
0x000000000016a69d : xchg eax, ebx ; cld ; jmp qword ptr [rsi + 0x16fffc92]
0x000000000016a759 : xchg eax, ebx ; cld ; jmp rdx
0x000000000017c9d1 : xchg eax, ebx ; cli ; jmp qword ptr [rdi]
0x0000000000187a09 : xchg eax, ebx ; idiv bh ; ret
0x000000000015ac0c : xchg eax, ebx ; in al, dx ; retf -0x51ce
0x000000000015d249 : xchg eax, ebx ; inc eax ; xchg eax, ebx ; jmp rax
0x000000000015d24d : xchg eax, ebx ; jmp rax
0x000000000009438c : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000012c0c2 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015a123 : xchg eax, ebx ; mov ebx, 0x1b5c347e ; jmp 0x15a0fd
0x00000000000b8ce3 : xchg eax, ebx ; mov ecx, dword ptr [rdx] ; add al, ch ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000f69d4 : xchg eax, ebx ; mov rax, rdi ; ret
0x0000000000001ebe : xchg eax, ebx ; retf
0x000000000005f1b9 : xchg eax, ebx ; retf 0
0x0000000000003a82 : xchg eax, ebx ; sbb al, 0xb ; push rbp ; jg 0x3af9 ; xchg eax, ebp ; retf 0x10bf
0x0000000000169f89 : xchg eax, ebx ; sti ; push qword ptr [rax - 0x6b] ; sti ; call qword ptr [rax]
0x00000000000f5303 : xchg eax, ebx ; sub al, byte ptr [rax] ; test eax, eax ; jne 0xf5319 ; xor eax, eax ; ret
0x00000000000f5333 : xchg eax, ebx ; sub al, byte ptr [rax] ; test eax, eax ; jne 0xf5349 ; xor eax, eax ; ret
0x00000000000f5363 : xchg eax, ebx ; sub al, byte ptr [rax] ; test eax, eax ; jne 0xf5379 ; xor eax, eax ; ret
0x00000000000f5393 : xchg eax, ebx ; sub al, byte ptr [rax] ; test eax, eax ; jne 0xf53a9 ; xor eax, eax ; ret
0x00000000000f53c3 : xchg eax, ebx ; sub al, byte ptr [rax] ; test eax, eax ; jne 0xf53d9 ; xor eax, eax ; ret
0x000000000010cace : xchg eax, ebx ; xor eax, eax ; pop rbx ; ret
0x000000000016ba9d : xchg eax, ecx ; add byte ptr [rax], al ; in al, -0x3b ; in al, dx ; jmp rsp
0x000000000005d62a : xchg eax, ecx ; add rax, rcx ; jmp rax
0x00000000000664be : xchg eax, ecx ; add rdx, rcx ; jmp rdx
0x000000000016bd31 : xchg eax, ecx ; in eax, dx ; call rsp
0x0000000000175721 : xchg eax, ecx ; in eax, dx ; jmp rsp
0x000000000015d219 : xchg eax, ecx ; inc dword ptr [rax] ; xchg eax, edx ; jmp qword ptr [rax]
0x000000000015d211 : xchg eax, ecx ; inc eax ; xchg eax, ecx ; jmp rax
0x000000000015d215 : xchg eax, ecx ; jmp rax
0x0000000000123bb1 : xchg eax, ecx ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00000000000cc7c4 : xchg eax, ecx ; mov qword ptr [rsp + 0x30], rdi ; add rax, rcx ; jmp rax
0x0000000000116d09 : xchg eax, ecx ; nop word ptr [rax + rax] ; ret
0x000000000004af83 : xchg eax, ecx ; retf
0x00000000001222df : xchg eax, ecx ; sub eax, edx ; ret
0x000000000006750f : xchg eax, ecx ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x0000000000082747 : xchg eax, ecx ; xor dword ptr [rax], eax ; add rsp, 8 ; ret
0x0000000000082705 : xchg eax, ecx ; xor dword ptr [rax], eax ; ret
0x000000000003fc64 : xchg eax, ecx ; xor eax, 0x8b486400 ; add byte ptr [rax - 0x77], cl ; ret 0xde8
0x00000000000daf7c : xchg eax, edi ; add byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x0000000000030eb9 : xchg eax, edi ; add rdx, rdi ; jmp rdx
0x000000000015d2d5 : xchg eax, edi ; call qword ptr [rax]
0x000000000016a679 : xchg eax, edi ; cld ; call qword ptr [rax + 0x20fffc96]
0x000000000016a871 : xchg eax, edi ; cld ; call qword ptr [rax]
0x000000000016a735 : xchg eax, edi ; cld ; call rdx
0x000000000016a731 : xchg eax, edi ; cld ; inc dword ptr [rdx - 0x69] ; cld ; call rdx
0x000000000016a6b5 : xchg eax, edi ; cld ; jmp rsi
0x000000000015e398 : xchg eax, edi ; cmc ; call qword ptr [rax + 0x10fff534]
0x00000000001834e1 : xchg eax, edi ; cmc ; call rax
0x00000000001585d5 : xchg eax, edi ; cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x1585a3 ; mov ecx, 0x5b92ac50 ; retf
0x00000000000f3195 : xchg eax, edi ; dec dword ptr [rax - 0x77] ; ret
0x000000000015d2c9 : xchg eax, edi ; inc eax ; xchg eax, edi ; jmp rax
0x000000000015d2b5 : xchg eax, edi ; jmp qword ptr [rax]
0x000000000015d2cd : xchg eax, edi ; jmp rax
0x0000000000158807 : xchg eax, edi ; jo 0x158874 ; salc ; retf
0x00000000000f5970 : xchg eax, edi ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00000000000c5c12 : xchg eax, edi ; nop dword ptr [rax + rax] ; mov eax, dword ptr [rdi + 0x4c] ; ret
0x000000000009a1bf : xchg eax, edi ; or al, byte ptr [rax] ; ret
0x000000000015d2d1 : xchg eax, edi ; push rax ; xchg eax, edi ; call qword ptr [rax]
0x00000000001052f2 : xchg eax, edi ; ret
0x00000000000a63f7 : xchg eax, edi ; ret 0x1489
0x000000000003df33 : xchg eax, edi ; ret 0xd284
0x00000000000f8db5 : xchg eax, edi ; ret 0xfff7
0x0000000000158f3d : xchg eax, edi ; retf -0x1eae
0x0000000000001ead : xchg eax, edi ; retf 0x20f4
0x00000000000b9596 : xchg eax, edi ; ror byte ptr [rdi], 0x92 ; ret 0xd029
0x00000000000dd199 : xchg eax, edi ; ror byte ptr [rdi], 0xb6 ; shr byte ptr [rcx], cl ; sal bl, 1 ; ret
0x00000000000e01a1 : xchg eax, edi ; ror dword ptr [rdi], -0x6e ; ret 0xcc80
0x00000000000c6d1e : xchg eax, edi ; ror dword ptr [rdi], -0x6e ; ret 0xd138
0x00000000000cf814 : xchg eax, edi ; sub al, 0 ; mov rax, qword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x00000000000f4f13 : xchg eax, edi ; sub al, byte ptr [rax] ; test eax, eax ; jne 0xf4f29 ; xor eax, eax ; ret
0x00000000000f4f43 : xchg eax, edi ; sub al, byte ptr [rax] ; test eax, eax ; jne 0xf4f59 ; xor eax, eax ; ret
0x00000000000f4f73 : xchg eax, edi ; sub al, byte ptr [rax] ; test eax, eax ; jne 0xf4f89 ; xor eax, eax ; ret
0x00000000000f4fa3 : xchg eax, edi ; sub al, byte ptr [rax] ; test eax, eax ; jne 0xf4fb9 ; xor eax, eax ; ret
0x00000000000f4fd3 : xchg eax, edi ; sub al, byte ptr [rax] ; test eax, eax ; jne 0xf4fe9 ; xor eax, eax ; ret
0x000000000015a27b : xchg eax, edi ; xchg eax, ebp ; xor byte ptr [rsi - 0x73e34314], ch ; retf
0x00000000001586d8 : xchg eax, edi ; xchg eax, esp ; ret
0x000000000015f808 : xchg eax, edi ; xchg edi, esi ; call qword ptr [rax]
0x0000000000053d88 : xchg eax, edx ; add al, byte ptr [rax] ; add byte ptr [rcx + 0x63], cl ; ret
0x0000000000179cad : xchg eax, edx ; add byte ptr [rax], al ; rol bh, 1 ; out dx, eax ; call qword ptr [rdx]
0x000000000003030a : xchg eax, edx ; add byte ptr ss:[rax - 0x77], cl ; ret
0x00000000000311a0 : xchg eax, edx ; add rdx, r10 ; jmp rdx
0x000000000015d239 : xchg eax, edx ; call qword ptr [rax]
0x000000000016a6a1 : xchg eax, edx ; cld ; call qword ptr [rsi]
0x000000000016a861 : xchg eax, edx ; cld ; call rax
0x000000000016a7e1 : xchg eax, edx ; cld ; jmp rsp
0x000000000016a7dd : xchg eax, edx ; cld ; push qword ptr [rdx + rdx*4 - 4] ; jmp rsp
0x000000000016a728 : xchg eax, edx ; cwde ; cld ; jmp qword ptr [rdx]
0x000000000016b849 : xchg eax, edx ; in al, dx ; jmp rsp
0x000000000016ccd1 : xchg eax, edx ; int1 ; call rsp
0x0000000000159f9d : xchg eax, edx ; jae 0x159f7a ; push rsi ; pop rdx ; je 0x159f6f ; ret 0xacfc
0x000000000015d21d : xchg eax, edx ; jmp qword ptr [rax]
0x000000000015ac06 : xchg eax, edx ; mov esi, dr1 ; jrcxz 0x15abf0 ; cmp al, 0x93 ; in al, dx ; retf -0x51ce
0x00000000001585dc : xchg eax, edx ; pop rbx ; retf
0x000000000015d235 : xchg eax, edx ; push rax ; xchg eax, edx ; call qword ptr [rax]
0x00000000000b8df5 : xchg eax, edx ; ret 0x148
0x0000000000038ace : xchg eax, edx ; ret 0x2948
0x000000000003b2ee : xchg eax, edx ; ret 0x294c
0x000000000010efd8 : xchg eax, edx ; ret 0x3941
0x00000000000a9ef3 : xchg eax, edx ; ret 0x3948
0x00000000000bc34c : xchg eax, edx ; ret 0x830f
0x0000000000042c7c : xchg eax, edx ; ret 0x8949
0x0000000000037c42 : xchg eax, edx ; ret 0x894d
0x00000000000dd17e : xchg eax, edx ; ret 0x970f
0x00000000000e01a4 : xchg eax, edx ; ret 0xcc80
0x00000000000b9599 : xchg eax, edx ; ret 0xd029
0x00000000000c6d21 : xchg eax, edx ; ret 0xd138
0x000000000010efe4 : xchg eax, edx ; ret 0xd284
0x0000000000125c2d : xchg eax, edx ; ret 0xf40
0x000000000015808f : xchg eax, edx ; ret 0xf869
0x00000000000d95ca : xchg eax, edx ; retf
0x00000000000ab54a : xchg eax, edx ; retf -1
0x0000000000169f85 : xchg eax, edx ; sti ; call rax
0x00000000000f53f3 : xchg eax, edx ; sub al, byte ptr [rax] ; test eax, eax ; jne 0xf5409 ; xor eax, eax ; ret
0x00000000000f5423 : xchg eax, edx ; sub al, byte ptr [rax] ; test eax, eax ; jne 0xf5439 ; xor eax, eax ; ret
0x00000000000f5453 : xchg eax, edx ; sub al, byte ptr [rax] ; test eax, eax ; jne 0xf5469 ; xor eax, eax ; ret
0x00000000000f5483 : xchg eax, edx ; sub al, byte ptr [rax] ; test eax, eax ; jne 0xf5499 ; xor eax, eax ; ret
0x0000000000121037 : xchg eax, edx ; sub eax, edx ; ret
0x00000000001442a0 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000132e53 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000000025b6 : xchg eax, esi ; add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x000000000009918a : xchg eax, esi ; add rax, rsi ; jmp rax
0x0000000000066401 : xchg eax, esi ; add rdx, rsi ; jmp rdx
0x000000000016a6c1 : xchg eax, esi ; cld ; call qword ptr [rsi + 0x26fffc95]
0x000000000016a7fd : xchg eax, esi ; cld ; call rsp
0x000000000016a7f9 : xchg eax, esi ; cld ; inc dword ptr [rsi + rdx*4 - 4] ; call rsp
0x000000000016a67d : xchg eax, esi ; cld ; jmp qword ptr [rax]
0x000000000016fdf1 : xchg eax, esi ; cli ; call rsp
0x000000000015d2b1 : xchg eax, esi ; inc dword ptr [rax] ; xchg eax, edi ; jmp qword ptr [rax]
0x000000000015d2a5 : xchg eax, esi ; inc eax ; xchg eax, esi ; jmp rax
0x000000000015d2a9 : xchg eax, esi ; jmp rax
0x000000000015a388 : xchg eax, esi ; jnp 0x15a3d7 ; retf -0x6620
0x00000000000dc536 : xchg eax, esi ; jo 0xdc54a ; add byte ptr [rax + 0x101], bh ; syscall
0x000000000014435d : xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001442bb : xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000fd9d7 : xchg eax, esi ; ret
0x00000000000802fb : xchg eax, esi ; ret 0x3145
0x00000000001041b7 : xchg eax, esi ; ret 0x8341
0x000000000015a92c : xchg eax, esi ; ret 0xcd11
0x00000000000802a1 : xchg eax, esi ; ret 0xf631
0x00000000000c2e9e : xchg eax, esi ; retf -0xb
0x000000000014430c : xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000002e08 : xchg eax, esi ; sbb eax, 0x8d468ae2 ; ret 0xc1bb
0x00000000000f5003 : xchg eax, esi ; sub al, byte ptr [rax] ; test eax, eax ; jne 0xf5019 ; xor eax, eax ; ret
0x00000000000f5033 : xchg eax, esi ; sub al, byte ptr [rax] ; test eax, eax ; jne 0xf5049 ; xor eax, eax ; ret
0x00000000000f5063 : xchg eax, esi ; sub al, byte ptr [rax] ; test eax, eax ; jne 0xf5079 ; xor eax, eax ; ret
0x00000000000f5093 : xchg eax, esi ; sub al, byte ptr [rax] ; test eax, eax ; jne 0xf50a9 ; xor eax, eax ; ret
0x00000000000f50c3 : xchg eax, esi ; sub al, byte ptr [rax] ; test eax, eax ; jne 0xf50d9 ; xor eax, eax ; ret
0x000000000016a6c4 : xchg eax, esi ; xchg eax, ebp ; cld ; jmp qword ptr [rsi]
0x000000000016ff4c : xchg eax, esp ; add al, byte ptr ds:[rax] ; in al, -0x53 ; cli ; jmp rsp
0x000000000006e260 : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0xf48
0x000000000017fc9c : xchg eax, esp ; add byte ptr [rax], al ; loopne 0x17fc2c ; call qword ptr [rdx]
0x0000000000179ef5 : xchg eax, esp ; add byte ptr [rax], al ; sub al, dl ; out dx, eax ; call rax
0x000000000016d840 : xchg eax, esp ; add ch, dh ; call rsp
0x000000000016f69c : xchg eax, esp ; add dword ptr [rdx], eax ; add byte ptr [rax + rbp*4], dl ; stc ; jmp rsp
0x00000000000ced3f : xchg eax, esp ; add rdx, r12 ; jmp rdx
0x00000000000c9e3f : xchg eax, esp ; and al, 0 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000cd6ad : xchg eax, esp ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x6348
0x00000000000a4b85 : xchg eax, esp ; and al, 0xac ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x000000000006b1e7 : xchg eax, esp ; and al, 0xe0 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x000000000016fab4 : xchg eax, esp ; and dword ptr [rdx], eax ; add ah, ah ; sub edx, edi ; jmp rsp
0x000000000016e018 : xchg eax, esp ; and edi, esi ; jmp rsp
0x000000000016a891 : xchg eax, esp ; cld ; call qword ptr [rax + 0x20fffc93]
0x000000000016a6d1 : xchg eax, esp ; cld ; call rsi
0x000000000016a6cd : xchg eax, esp ; cld ; inc dword ptr [rsi - 0x6c] ; cld ; call rsi
0x000000000017c9e9 : xchg eax, esp ; cli ; call qword ptr [rdi]
0x000000000016fb90 : xchg eax, esp ; cli ; call rsp
0x000000000016fb70 : xchg eax, esp ; cli ; jmp rsp
0x000000000016d4b4 : xchg eax, esp ; cmp al, 1 ; add byte ptr [rsi + rax*4], ah ; hlt ; jmp rsp
0x000000000016ceb8 : xchg eax, esp ; cmp edx, esi ; jmp rsp
0x000000000016da18 : xchg eax, esp ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cmc ; jmp rsp
0x000000000016db6c : xchg eax, esp ; insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; test byte ptr [rdx - 0xa], bl ; call rsp
0x000000000018809c : xchg eax, esp ; jbe 0x1880a7 ; add al, ah ; sal dh, 1 ; jmp qword ptr [rsi]
0x0000000000131550 : xchg eax, esp ; jl 0x13157f ; add byte ptr [rax + 0x39], cl ; retf -0x7cf1
0x000000000015d269 : xchg eax, esp ; jmp qword ptr [rax]
0x000000000017859c : xchg eax, esp ; jnp 0x1785a6 ; add byte ptr [rax - 0x7d], dh ; out dx, eax ; jmp qword ptr [rbx]
0x000000000016b57c : xchg eax, esp ; jp 0x16b586 ; add byte ptr [rcx + rbp*2], al ; in al, dx ; call rsp
0x000000000016fe58 : xchg eax, esp ; lahf ; cli ; call rsp
0x000000000016f3ec : xchg eax, esp ; lock add dword ptr [rax], eax ; stc ; jmp rsp
0x000000000016bfa4 : xchg eax, esp ; mov cl, 0 ; add byte ptr [rdi + rdi*4 - 0x11], dh ; call rsp
0x000000000016f6e0 : xchg eax, esp ; mov dl, 0xf9 ; call rsp
0x0000000000170690 : xchg eax, esp ; mov edi, ebx ; jmp rsp
0x000000000016c13c : xchg eax, esp ; mov esi, 0xf7a40000 ; out dx, eax ; jmp rsp
0x00000000000ba68b : xchg eax, esp ; nop dword ptr [rax] ; mov rax, rdi ; ret
0x000000000016f7e4 : xchg eax, esp ; or al, 2 ; add byte ptr [rsp - 7], dl ; jmp rsp
0x0000000000125219 : xchg eax, esp ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000018659c : xchg eax, esp ; pop rbx ; add dword ptr [rax], eax ; rol byte ptr [rax - 0xa], 1 ; jmp qword ptr [rcx]
0x00000000000db0c3 : xchg eax, esp ; pop rbx ; ret
0x000000000017699c : xchg eax, esp ; pop rdi ; add byte ptr [rax], al ; add byte ptr [rax], ch ; out dx, eax ; jmp qword ptr [rdi]
0x000000000017649c : xchg eax, esp ; pop rdx ; add byte ptr [rax], al ; xor byte ptr [rbx], dl ; out dx, eax ; call rdi
0x000000000016d924 : xchg eax, esp ; pop rdx ; add dword ptr [rax], eax ; jp 0x16d927 ; jmp rsp
0x000000000015d265 : xchg eax, esp ; push rax ; xchg eax, esp ; jmp qword ptr [rax]
0x0000000000185c9c : xchg eax, esp ; push rdx ; add dword ptr [rax], eax ; adc byte ptr [rsi + rsi*8], dh ; jmp qword ptr [rcx]
0x000000000015ab3f : xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x15aad0 ; ret 0x48f
0x000000000007d81f : xchg eax, esp ; ret
0x000000000017cc9c : xchg eax, esp ; ret 0
0x00000000000d27aa : xchg eax, esp ; ret 0x1589
0x00000000000dc3e6 : xchg eax, esp ; ret 0x2040
0x000000000009fbeb : xchg eax, esp ; ret 0x2948
0x000000000009d5f3 : xchg eax, esp ; ret 0x294c
0x00000000000a870f : xchg eax, esp ; ret 0x3840
0x000000000008eb6e : xchg eax, esp ; ret 0x3941
0x0000000000040d5e : xchg eax, esp ; ret 0x3ce9
0x0000000000114439 : xchg eax, esp ; ret 0x3d83
0x00000000000d4e03 : xchg eax, esp ; ret 0x4be9
0x0000000000040bc6 : xchg eax, esp ; ret 0x5422
0x000000000005444b : xchg eax, esp ; ret 0x7f3c
0x00000000000e2721 : xchg eax, esp ; ret 0x8041
0x0000000000040da6 : xchg eax, esp ; ret 0x8341
0x000000000003df12 : xchg eax, esp ; ret 0x8348
0x0000000000098e85 : xchg eax, esp ; ret 0x8444
0x00000000000cd379 : xchg eax, esp ; ret 0x8548
0x00000000000ccef4 : xchg eax, esp ; ret 0x854d
0x00000000000d4607 : xchg eax, esp ; ret 0x8944
0x00000000000fe50a : xchg eax, esp ; ret 0x8945
0x00000000000d2d18 : xchg eax, esp ; ret 0x8948
0x0000000000040b9f : xchg eax, esp ; ret 0x8b44
0x00000000000fa5c9 : xchg eax, esp ; ret 0x8b48
0x00000000000ae5ef : xchg eax, esp ; ret 0x8d4c
0x0000000000106586 : xchg eax, esp ; ret 0x93c
0x0000000000022149 : xchg eax, esp ; ret 0x9e9
0x0000000000040cc0 : xchg eax, esp ; ret 0x9fe9
0x000000000002d282 : xchg eax, esp ; ret 0xb60f
0x00000000000a8540 : xchg eax, esp ; ret 0xca21
0x00000000000be30f : xchg eax, esp ; ret 0xd008
0x00000000000be302 : xchg eax, esp ; ret 0xd009
0x00000000000cec25 : xchg eax, esp ; ret 0xd108
0x0000000000053b2e : xchg eax, esp ; ret 0xd189
0x000000000002031d : xchg eax, esp ; ret 0xd284
0x000000000008e9af : xchg eax, esp ; ret 0xd308
0x000000000006986d : xchg eax, esp ; ret 0xdaf7
0x000000000009d437 : xchg eax, esp ; ret 0xf883
0x0000000000098de7 : xchg eax, esp ; ret 0xfd83
0x0000000000098e08 : xchg eax, esp ; ret 0xfe83
0x000000000016e670 : xchg eax, esp ; ret 0xfff7
0x000000000016f748 : xchg eax, esp ; retf -7
0x000000000001fed4 : xchg eax, esp ; rol byte ptr [rcx + rcx*4 - 0x3e], 0x21 ; retf -0x7abb
0x00000000000ab52c : xchg eax, esp ; rol byte ptr [rip + 0x16d], 0xf3 ; ret
0x0000000000089840 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc1 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000dcfaf : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x000000000003f4a3 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000001183a9 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000000be2fc : xchg eax, esp ; ror byte ptr [rcx + rdi - 0x3a], 0xf ; xchg eax, esp ; ret 0xd009
0x000000000016ee30 : xchg eax, esp ; sahf ; clc ; jmp rsp
0x000000000016f621 : xchg eax, esp ; stc ; jmp rsp
0x00000000000f5213 : xchg eax, esp ; sub al, byte ptr [rax] ; test eax, eax ; jne 0xf5229 ; xor eax, eax ; ret
0x00000000000f5243 : xchg eax, esp ; sub al, byte ptr [rax] ; test eax, eax ; jne 0xf5259 ; xor eax, eax ; ret
0x00000000000f5273 : xchg eax, esp ; sub al, byte ptr [rax] ; test eax, eax ; jne 0xf5289 ; xor eax, eax ; ret
0x00000000000f52a3 : xchg eax, esp ; sub al, byte ptr [rax] ; test eax, eax ; jne 0xf52b9 ; xor eax, eax ; ret
0x000000000016be5c : xchg eax, esp ; test eax, 0x1d340000 ; out dx, eax ; call rsp
0x000000000016bd30 : xchg eax, esp ; xchg eax, ecx ; in eax, dx ; call rsp
0x0000000000158563 : xchg eax, esp ; xlatb ; retf -0x5e15
0x000000000016fd94 : xchg eax, esp ; xor al, 2 ; add byte ptr [rax + rdx*4], al ; cli ; jmp rsp
0x0000000000173c9c : xchg eax, esp ; xor al, byte ptr [rax] ; add byte ptr [rax + 0x23], ah ; in al, dx ; jmp qword ptr [rsi]
0x0000000000001ebd : xchg eax, r11d ; retf
0x000000000017fdc1 : xchg ebx, esi ; jmp qword ptr [rdx]
0x000000000008be9a : xchg ecx, ebp ; ret
0x00000000000e502c : xchg edi, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000015f809 : xchg edi, esi ; call qword ptr [rax]
0x000000000016e431 : xchg edi, esi ; jmp rsp
0x00000000000e4ac4 : xchg edi, esp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000004fd80 : xchg edx, ebp ; adc eax, 0x83480000 ; ret 0x491e
0x000000000015f878 : xchg r15, rsi ; call qword ptr [rax]
0x000000000016bb1c : xchg rax, rbp ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; sbb ch, ch ; jmp rsp
0x00000000000eb0cd : xlatb ; adc ch, byte ptr [rbx] ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000001555b9 : xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000012bf89 : xlatb ; add r9, r11 ; jmp r9
0x00000000001843c1 : xlatb ; cmc ; jmp rdx
0x00000000000f0685 : xlatb ; cmovne eax, ecx ; ret
0x0000000000002d4f : xlatb ; cmp ecx, dword ptr [rip + 0x1954b385] ; retf 0x172
0x00000000000026bf : xlatb ; enter -0x1ee6, -0x4c ; hlt ; out -0x21, eax ; syscall
0x0000000000047898 : xlatb ; inc dword ptr [rax - 0x4e743] ; jmp qword ptr [rax]
0x000000000017cfa1 : xlatb ; int1 ; call rsi
0x00000000000e0f02 : xlatb ; ja 0xe0f34 ; ret
0x0000000000083ee3 : xlatb ; jb 0x83eee ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000f55d9 : xlatb ; jmp rax
0x00000000000e76d6 : xlatb ; jne 0xe76cf ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000159103 : xlatb ; jo 0x15917f ; mov ebp, 0xfb67d10d ; ret
0x00000000000441a2 : xlatb ; mov byte ptr [rsi], al ; jne 0x44188 ; mov rax, rsi ; ret
0x000000000011d427 : xlatb ; mov eax, 2 ; syscall
0x00000000000e06e1 : xlatb ; mov eax, ebx ; mov r12d, dword ptr fs:[r8] ; syscall
0x000000000011ddd4 : xlatb ; mov eax, ebx ; syscall
0x00000000000b8602 : xlatb ; mov eax, esi ; syscall
0x00000000000b8612 : xlatb ; mov eax, r8d ; syscall
0x0000000000032817 : xlatb ; movd xmm1, edi ; movaps xmm0, xmm1 ; ret
0x0000000000158510 : xlatb ; out 0xb3, al ; retf 0xe80
0x0000000000079c9b : xlatb ; pop rbx ; pop rbp ; jmp 0x766c5
0x00000000000e2158 : xlatb ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000007eb29 : xlatb ; ret
0x000000000015a5a6 : xlatb ; ret 0x4e27
0x0000000000003278 : xlatb ; ret 0x5a51
0x00000000000824f7 : xlatb ; ret 0x94c
0x00000000000836cf : xlatb ; ret 0xc085
0x000000000007eb20 : xlatb ; ret 0xc148
0x000000000008f1db : xlatb ; ret 0xf188
0x00000000000806a4 : xlatb ; ret 0xf66
0x000000000007ebbd : xlatb ; retf
0x000000000007ed90 : xlatb ; retf -0x152d
0x0000000000159492 : xlatb ; retf -0x2081
0x00000000000825d4 : xlatb ; retf -0x3eb8
0x0000000000158564 : xlatb ; retf -0x5e15
0x000000000009a952 : xlatb ; retf -0x7ab8
0x000000000009a7fc : xlatb ; retf 0xf66
0x000000000008a681 : xlatb ; rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x000000000008f076 : xlatb ; rol dword ptr [rbp + 0x317475c0], -0x40 ; ret
0x00000000000947fe : xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000001475c6 : xlatb ; ror dword ptr [rcx], cl ; ret 0xe074
0x000000000008efd4 : xlatb ; ror dword ptr [rdi], -0x43 ; ror byte ptr [rax + 1], 0xf8 ; ret
0x000000000007fff6 : xlatb ; sal bh, 1 ; ret 0x8000
0x000000000007feb6 : xlatb ; sal bh, 1 ; ret 0xc000
0x000000000007fd76 : xlatb ; sal bh, 1 ; ret 0xe000
0x000000000007fc36 : xlatb ; sal bh, 1 ; ret 0xf000
0x000000000007faf6 : xlatb ; sal bh, 1 ; ret 0xf800
0x000000000007f9b6 : xlatb ; sal bh, 1 ; ret 0xfc00
0x000000000007f876 : xlatb ; sal bh, 1 ; ret 0xfe00
0x000000000007f736 : xlatb ; sal bh, 1 ; ret 0xff00
0x000000000007f5f6 : xlatb ; sal bh, 1 ; ret 0xff80
0x000000000007f4b6 : xlatb ; sal bh, 1 ; ret 0xffc0
0x000000000007f376 : xlatb ; sal bh, 1 ; ret 0xffe0
0x000000000007f236 : xlatb ; sal bh, 1 ; ret 0xfff0
0x000000000007f0f6 : xlatb ; sal bh, 1 ; ret 0xfff8
0x000000000007efb6 : xlatb ; sal bh, 1 ; ret 0xfffc
0x000000000007ee76 : xlatb ; sal bh, 1 ; ret 0xfffe
0x00000000001475c2 : xlatb ; shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000082495 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x00000000000824a6 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x00000000000dac29 : xlatb ; syscall
0x000000000015ac05 : xlatb ; xchg eax, edx ; mov esi, dr1 ; jrcxz 0x15abf1 ; cmp al, 0x93 ; in al, dx ; retf -0x51ce
0x0000000000033928 : xlatb ; xor eax, eax ; ret
0x0000000000093ff8 : xor ah, ah ; mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x0000000000093f8e : xor ah, ah ; mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x000000000016a455 : xor ah, bh ; call qword ptr [rax - 0x1f0003cf]
0x00000000000bb928 : xor ah, bh ; dec dword ptr [rax - 0x77] ; ret 0x16eb
0x00000000000025e8 : xor ah, byte ptr [rsi] ; sahf ; jl 0x2581 ; loop 0x25cc ; ret 0x23cb
0x0000000000183ed0 : xor ah, cl ; cmc ; jmp qword ptr [rcx]
0x0000000000173ec5 : xor al, 0 ; add al, ch ; sub esp, ebp ; jmp qword ptr [rax]
0x0000000000173edd : xor al, 0 ; add al, dh ; sub esp, ebp ; jmp qword ptr [rdx]
0x0000000000173ead : xor al, 0 ; add al, dl ; sub esp, ebp ; jmp qword ptr [rbx]
0x000000000018d500 : xor al, 0 ; add byte ptr [rax], al ; cld ; retf 1
0x000000000018cc70 : xor al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret 1
0x000000000018cca8 : xor al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 1
0x0000000000179958 : xor al, 0 ; add byte ptr [rax], al ; push rsp ; pop qword ptr [rax] ; add al, ah ; ret 0xffef
0x000000000018d458 : xor al, 0 ; add byte ptr [rax], al ; push rsp ; retf 1
0x0000000000190930 : xor al, 0 ; add byte ptr [rax], al ; sub al, 0xff ; add dword ptr [rax], eax ; pop rax ; ret 0xfff8
0x00000000000e9a71 : xor al, 0 ; add byte ptr [rax], al ; syscall
0x0000000000049def : xor al, 0 ; call rax
0x000000000018203c : xor al, 0x16 ; add dword ptr [rax], eax ; sar dh, 1 ; hlt ; jmp qword ptr [rcx]
0x000000000015808a : xor al, 0x19 ; xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x000000000016be60 : xor al, 0x1d ; out dx, eax ; call rsp
0x00000000000321dc : xor al, 0x20 ; mov eax, r8d ; syscall
0x000000000007b59a : xor al, 0x24 ; jmp rax
0x0000000000043c24 : xor al, 0x24 ; mov rbx, rdx ; call 0x80657
0x00000000000c18a2 : xor al, 0x31 ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000002055 : xor al, 0x39 ; push rbx ; cmp byte ptr [rdi - 0x19ade7f3], dl ; ret
0x000000000008f0fb : xor al, 0x48 ; lea eax, dword ptr [rdi + rax + 0x20] ; ret
0x0000000000185b3c : xor al, 0x51 ; add dword ptr [rax], eax ; sal byte ptr [rdx], 0xf6 ; jmp qword ptr [rcx]
0x00000000000833d8 : xor al, 0x54 ; add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x000000000015a126 : xor al, 0x5c ; sbb ebp, ebx ; retf
0x000000000010772c : xor al, 0x63 ; sub dword ptr [rax], eax ; test eax, eax ; je 0x107740 ; ret
0x000000000018803c : xor al, 0x76 ; add dword ptr [rax], eax ; adc al, 0xf6 ; jmp qword ptr [rsi]
0x000000000016cc08 : xor al, 0x79 ; int1 ; call rsp
0x0000000000084518 : xor al, 0x7a ; or al, byte ptr [rax] ; ret
0x00000000000c1bfb : xor al, 0x85 ; ror byte ptr [rax + 0x63], cl ; retf -0x71f1
0x000000000002a588 : xor al, 0x88 ; add rsi, r8 ; jmp rsi
0x000000000016f5e8 : xor al, 0x8e ; stc ; jmp rsp
0x000000000016b848 : xor al, 0x92 ; in al, dx ; jmp rsp
0x000000000016fe38 : xor al, 0x9d ; cli ; call rsp
0x00000000000660c1 : xor al, 0xbe ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000017c93c : xor al, 0xbf ; add byte ptr [rax], al ; push rax ; cmpsb byte ptr [rsi], byte ptr [rdi] ; int1 ; jmp rbx
0x00000000000e92ea : xor al, 0xc3 ; sub rsp, 8 ; call 0xf5508
0x000000000015926a : xor al, 0xd8 ; ret
0x000000000016d358 : xor al, 0xd9 ; call rsp
0x000000000017e43c : xor al, 0xda ; add byte ptr [rax], al ; movsd dword ptr [rdi], dword ptr [rsi] ; jmp qword ptr [rcx]
0x000000000016c0c0 : xor al, 0xe9 ; out dx, eax ; jmp rsp
0x000000000015e39d : xor al, 0xf5 ; call qword ptr [rax]
0x0000000000185ca1 : xor al, 0xf6 ; jmp qword ptr [rcx]
0x0000000000183efd : xor al, 1 ; add byte ptr [rax - 0x34], ah ; cmc ; call qword ptr [rcx]
0x0000000000183ee5 : xor al, 1 ; add byte ptr [rax - 0x34], cl ; cmc ; jmp qword ptr [rcx]
0x000000000009a048 : xor al, 1 ; add byte ptr [rax], al ; ret
0x00000000000e98d1 : xor al, 1 ; add byte ptr [rax], al ; syscall
0x000000000017094d : xor al, 1 ; add byte ptr [rsi + rbp*8], al ; std ; call rsp
0x000000000016fd95 : xor al, 2 ; add byte ptr [rax + rdx*4], al ; cli ; jmp rsp
0x000000000019103c : xor al, 6 ; add al, byte ptr [rax] ; adc ch, bl ; clc ; call rcx
0x00000000000e8e5b : xor al, al ; or eax, edi ; ret
0x0000000000184420 : xor al, bl ; cmc ; jmp qword ptr [rcx]
0x00000000000776a4 : xor al, byte ptr [r8] ; jae 0x77661 ; ret
0x000000000000075d : xor al, byte ptr [rax + rcx*4 + 0xa] ; add byte ptr [rdx], dl ; retf
0x0000000000173c15 : xor al, byte ptr [rax] ; add al, bh ; and ch, ah ; call qword ptr [rcx]
0x0000000000173ce5 : xor al, byte ptr [rax] ; add al, ch ; and ebp, esp ; jmp qword ptr [rsi]
0x0000000000173c9d : xor al, byte ptr [rax] ; add byte ptr [rax + 0x23], ah ; in al, dx ; jmp qword ptr [rsi]
0x0000000000075f99 : xor al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000e9b01 : xor al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000075f26 : xor al, byte ptr [rax] ; add dword ptr [rip + 0x325815], 1 ; ret
0x00000000000776a5 : xor al, byte ptr [rax] ; jae 0x77660 ; ret
0x0000000000078aad : xor al, byte ptr [rax] ; mov qword ptr [rsp + 8], rdx ; xor edi, edi ; call qword ptr [rax]
0x0000000000075e95 : xor al, byte ptr [rax] ; ret
0x000000000007aefe : xor al, byte ptr [rax] ; xor eax, eax ; ret
0x0000000000078bb5 : xor al, byte ptr [rax] ; xor edi, edi ; call qword ptr [rax]
0x00000000000e1881 : xor al, byte ptr [rcx] ; add byte ptr [rax], al ; syscall
0x00000000000c7a36 : xor al, ch ; hlt ; ret
0x00000000000f09ef : xor al, ch ; retf
0x00000000000c4ec0 : xor al, ch ; retf -0x34
0x00000000000f2cf0 : xor al, ch ; retf -0xc65
0x000000000004cec1 : xor al, ch ; sbb dword ptr [rdx - 1], esi ; dec dword ptr [rcx - 0x77] ; ret 0x8d48
0x0000000000169ff4 : xor al, cl ; sti ; inc dword ptr [rax - 0x2f000437] ; retf -5
0x000000000016c309 : xor al, dh ; inc esp ; retf 0
0x00000000000df718 : xor ax, ax ; ret
0x000000000016a45d : xor bh, ah ; jmp qword ptr [rax]
0x00000000001752d0 : xor bl, 0xec ; jmp rdi
0x000000000008392c : xor bl, al ; nop ; xor rax, rax ; ret
0x0000000000108268 : xor byte ptr [eax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8b4c
0x000000000009a13c : xor byte ptr [r11], r15b ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x00000000000837ed : xor byte ptr [r14 + 0xf], r12b ; xlatb ; ret
0x000000000006d68a : xor byte ptr [r8 + 1], r9b ; ret 0x8b49
0x00000000000203f3 : xor byte ptr [r8 + rax], dl ; ret
0x0000000000041bc7 : xor byte ptr [r8 - 0x75], r9b ; jg 0x41c3d ; xor eax, eax ; ret
0x000000000007e431 : xor byte ptr [r8 - 0x77], cl ; retf -0x72b7
0x00000000000843f4 : xor byte ptr [r8 - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf -0x1b8b
0x0000000000050436 : xor byte ptr [r8], r8b ; add byte ptr [rax], al ; add cl, ch ; ret
0x000000000006fb9b : xor byte ptr [rax + 0x29], cl ; ret
0x00000000000700bd : xor byte ptr [rax + 0x29], cl ; ret 0x3949
0x000000000007d6f6 : xor byte ptr [rax + 0x31], cl ; ret 0x3949
0x00000000000afcd0 : xor byte ptr [rax + 0x63], cl ; ret 0x894c
0x00000000000da12f : xor byte ptr [rax + 0x63], cl ; ret 0xc283
0x000000000007ea31 : xor byte ptr [rax + 0xf], cl ; ret 0x90c3
0x000000000008f0d6 : xor byte ptr [rax + 1], cl ; ret 0x547c
0x000000000006d68b : xor byte ptr [rax + 1], cl ; ret 0x8b49
0x00000000000dec18 : xor byte ptr [rax + 1], cl ; retf -0x76b8
0x0000000000083de4 : xor byte ptr [rax + rax], cl ; ret
0x00000000000203f4 : xor byte ptr [rax + rax], dl ; ret
0x000000000017b180 : xor byte ptr [rax - 0x10], dl ; jmp qword ptr [rdx]
0x000000000016afd0 : xor byte ptr [rax - 0x505f0004], dh ; cld ; call qword ptr [rax]
0x0000000000096ed7 : xor byte ptr [rax - 0x73], cl ; ret
0x0000000000041ef8 : xor byte ptr [rax - 0x75], cl ; jbe 0x41f74 ; xor eax, eax ; ret
0x0000000000041bc8 : xor byte ptr [rax - 0x75], cl ; jg 0x41c3c ; xor eax, eax ; ret
0x0000000000041ef7 : xor byte ptr [rax - 0x75], r9b ; jbe 0x41f75 ; xor eax, eax ; ret
0x000000000007e95f : xor byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x000000000011833a : xor byte ptr [rax - 0x77], cl ; and al, 8 ; xor eax, eax ; call rdx
0x000000000007d3c1 : xor byte ptr [rax - 0x77], cl ; and byte ptr [rax + 0x31], cl ; ret 0x93be
0x000000000006fff3 : xor byte ptr [rax - 0x77], cl ; push rbx ; sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000009d85d : xor byte ptr [rax - 0x77], cl ; ret
0x00000000000f054e : xor byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000000c5bce : xor byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000007e432 : xor byte ptr [rax - 0x77], cl ; retf -0x72b7
0x0000000000108269 : xor byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8b4c
0x000000000002315f : xor byte ptr [rax - 0x7d], cl ; ret
0x000000000008baaf : xor byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000313f3 : xor byte ptr [rax - 0x7d], cl ; retf -0x14f9
0x0000000000031408 : xor byte ptr [rax - 0x7d], cl ; retf -0x14fd
0x0000000000031602 : xor byte ptr [rax - 0x7d], cl ; retf -0x16f3
0x000000000003141d : xor byte ptr [rax - 0x7d], cl ; retf -0x16fb
0x000000000003138f : xor byte ptr [rax - 0x7d], cl ; retf 0x4804
0x00000000000313c1 : xor byte ptr [rax - 0x7d], cl ; retf 0x4806
0x00000000000314dd : xor byte ptr [rax - 0x7d], cl ; retf 0x480c
0x00000000000843f5 : xor byte ptr [rax - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf -0x1b8b
0x000000000011f290 : xor byte ptr [rax], 1 ; add byte ptr [rax], al ; jmp rax
0x000000000006dbfd : xor byte ptr [rax], 1 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000050437 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000020569 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x28 ; jmp rax
0x0000000000082788 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; jmp rax
0x00000000000202ff : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000035912 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x000000000002c6c5 : xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x00000000000da742 : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x0000000000041795 : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov edi, dword ptr [rsp + 0x3c] ; call rax
0x0000000000035ea4 : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr fs:[rbp], rdx ; call rax
0x000000000002d144 : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r14 ; call rax
0x00000000000991cd : xor byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000e9ee1 : xor byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x00000000000f5b9b : xor byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0xf5bd9 ; call rax
0x0000000000046f89 : xor byte ptr [rax], al ; add byte ptr [rax], al ; xor esi, esi ; call rax
0x000000000006bada : xor byte ptr [rax], al ; je 0x6bae4 ; ret
0x00000000000713b1 : xor byte ptr [rax], al ; je 0x713c2 ; add rsp, 0x38 ; ret
0x000000000016a384 : xor byte ptr [rax], bh ; cld ; call qword ptr [rax]
0x0000000000098757 : xor byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x000000000002acde : xor byte ptr [rbp + 0x39], al ; retf -0x7df1
0x000000000009a140 : xor byte ptr [rbp + 0x3d], dh ; ret
0x000000000009a13f : xor byte ptr [rbp + 0x3d], r14b ; ret
0x00000000000d0b7d : xor byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000084155 : xor byte ptr [rbp + 0xf], al ; adc dword ptr [rbx], eax ; ret
0x00000000000751a8 : xor byte ptr [rbp + 5], 0x5b ; ret
0x00000000000e0707 : xor byte ptr [rbp + rax*2 - 0x77], ah ; and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000015e7f8 : xor byte ptr [rbp - 0x42df000b], bh ; cmc ; jmp qword ptr [rax]
0x0000000000169f08 : xor byte ptr [rbp - 5], ch ; inc dword ptr [rax] ; outsb dx, byte ptr [rsi] ; sti ; call rax
0x0000000000070eff : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010225c : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000cf9d5 : xor byte ptr [rbx + 0x634801c3], al ; retf
0x000000000018a49f : xor byte ptr [rbx + 0xace0206], al ; ret
0x0000000000111a42 : xor byte ptr [rbx + 0xf], bl ; mov dh, 0xc0 ; pop rbp ; pop r12 ; ret
0x0000000000169f48 : xor byte ptr [rbx + rdi*8 - 1], bh ; and byte ptr [rbp - 5], bh ; call qword ptr [rax]
0x000000000010a31d : xor byte ptr [rbx - 0x3d], bl ; ret
0x000000000003df2e : xor byte ptr [rbx - 0x68f0f606], al ; ret 0xd284
0x000000000010579c : xor byte ptr [rbx - 0x78f0f608], al ; retf 0
0x0000000000043121 : xor byte ptr [rbx - 0x7ad7dbbc], cl ; ror byte ptr [rdi], 0x84 ; retf 1
0x000000000017db00 : xor byte ptr [rbx - 0xe], ah ; call qword ptr [rax]
0x000000000016a5ac : xor byte ptr [rbx - 4], ah ; jmp qword ptr [rax]
0x000000000009a13d : xor byte ptr [rbx], bh ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x00000000001764a0 : xor byte ptr [rbx], dl ; out dx, eax ; call rdi
0x0000000000001b24 : xor byte ptr [rcx + 0x3a6d4813], ah ; ret
0x00000000000c67dc : xor byte ptr [rcx + 0x63], cl ; add r9b, r13b ; ret
0x0000000000080301 : xor byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xb60f
0x00000000001004fc : xor byte ptr [rcx + rax - 0x763f7b00], ch ; ret 0x4078
0x000000000003cf24 : xor byte ptr [rcx - 0x39], cl ; ret 0xffff
0x0000000000169fa4 : xor byte ptr [rcx - 0x5cef0005], ah ; sti ; jmp rax
0x00000000000555ed : xor byte ptr [rcx - 0x77], cl ; ret
0x0000000000057ced : xor byte ptr [rcx - 0x7d], cl ; ret
0x00000000000e055c : xor byte ptr [rcx], 0xc0 ; ret
0x000000000015856e : xor byte ptr [rcx], ah ; retf
0x000000000011f291 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; jmp rax
0x000000000006dbfe : xor byte ptr [rcx], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000071af7 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000067510 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000000e987a : xor byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x00000000001707f5 : xor byte ptr [rcx], al ; add byte ptr [rdi + rcx*4], al ; std ; call rsp
0x000000000016d2b5 : xor byte ptr [rcx], al ; add byte ptr [rsi + rcx*8 - 0xd], dh ; jmp rsp
0x000000000018ddd0 : xor byte ptr [rcx], bh ; clc ; call rdx
0x00000000000c2b0f : xor byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000ebcba : xor byte ptr [rcx], dh ; rol byte ptr [rbx - 0x69f0f601], 0xc0 ; ret
0x00000000000c1282 : xor byte ptr [rcx], dl ; je 0xc1296 ; xor eax, eax ; ret
0x000000000016aa68 : xor byte ptr [rdi - 0x715f0004], cl ; cld ; jmp qword ptr [rax]
0x00000000000e4b09 : xor byte ptr [rdi], cl ; lahf ; ret 0xe883
0x000000000006b650 : xor byte ptr [rdi], cl ; ret 0x4389
0x000000000010c54e : xor byte ptr [rdi], cl ; retf 0x5089
0x000000000017ccbf : xor byte ptr [rdx], al ; ret
0x000000000014a025 : xor byte ptr [rip], ah ; add bl, dh ; ret
0x000000000014404f : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000008245c : xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00000000000837ee : xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000016ada4 : xor byte ptr [rsi - 0x4a4f0004], dh ; cld ; jmp qword ptr [rax]
0x000000000015a27e : xor byte ptr [rsi - 0x73e34314], ch ; retf
0x000000000016a350 : xor byte ptr [rsi], bh ; cld ; call qword ptr [rax]
0x00000000000984e8 : xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000984fe : xor ch, ch ; mov byte ptr [rdi + 0x11], ch ; ret
0x0000000000098520 : xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x000000000009853e : xor ch, ch ; mov byte ptr [rdi + 0x13], ch ; ret
0x000000000009855e : xor ch, ch ; mov byte ptr [rdi + 0x14], ch ; ret
0x0000000000098584 : xor ch, ch ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000985a0 : xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000985c0 : xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000985e0 : xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x0000000000098606 : xor ch, ch ; mov byte ptr [rdi + 0x19], ch ; ret
0x0000000000098628 : xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x0000000000098646 : xor ch, ch ; mov byte ptr [rdi + 0x1b], ch ; ret
0x0000000000098666 : xor ch, ch ; mov byte ptr [rdi + 0x1c], ch ; ret
0x0000000000098682 : xor ch, ch ; mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000000986a2 : xor ch, ch ; mov byte ptr [rdi + 0x1e], ch ; ret
0x00000000000986c2 : xor ch, ch ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000986e2 : xor ch, ch ; mov byte ptr [rdi + 0x20], ch ; ret
0x0000000000098708 : xor ch, ch ; mov byte ptr [rdi + 0x21], ch ; ret
0x0000000000098758 : xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x000000000009842e : xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x000000000009844c : xor ch, ch ; mov byte ptr [rdi + 0xb], ch ; ret
0x000000000009846c : xor ch, ch ; mov byte ptr [rdi + 0xc], ch ; ret
0x000000000009848e : xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000984ae : xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000984ce : xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x0000000000098364 : xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x0000000000098376 : xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x000000000009838c : xor ch, ch ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000983a4 : xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000983ba : xor ch, ch ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000983cc : xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000983ea : xor ch, ch ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000983f6 : xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x000000000009840c : xor ch, ch ; mov byte ptr [rdi + 9], ch ; ret
0x0000000000098350 : xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x000000000016a058 : xor ch, ch ; sti ; jmp rax
0x00000000000a08f6 : xor cl, byte ptr [rax + 0x63] ; ret
0x000000000011042f : xor cl, byte ptr [rax - 0x77] ; jp 0x110441 ; ret
0x0000000000112c7f : xor cl, byte ptr [rax - 0x77] ; jp 0x112c91 ; ret
0x0000000000112c97 : xor cl, byte ptr [rax - 0x77] ; jp 0x112ca9 ; ret
0x000000000011350f : xor cl, byte ptr [rax - 0x77] ; jp 0x113521 ; ret
0x0000000000113527 : xor cl, byte ptr [rax - 0x77] ; jp 0x113539 ; ret
0x0000000000113557 : xor cl, byte ptr [rax - 0x77] ; jp 0x113569 ; ret
0x00000000000e20c5 : xor cl, byte ptr [rax - 0x77] ; ret
0x00000000000b6229 : xor cl, byte ptr [rax - 0x77] ; retf 0x44f6
0x000000000010f15c : xor cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00000000000c1297 : xor cl, byte ptr [rax] ; xor eax, eax ; ret
0x000000000011d2b5 : xor cl, byte ptr [rcx + rcx*4 - 1] ; mov eax, 3 ; syscall
0x000000000011302c : xor cl, ch ; retf -2
0x0000000000093e70 : xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x0000000000184860 : xor dh, ah ; cmc ; jmp qword ptr [rcx]
0x0000000000185b71 : xor dh, dh ; call qword ptr [rax]
0x0000000000185ab1 : xor dh, dh ; call qword ptr [rcx]
0x0000000000185ac9 : xor dh, dh ; jmp qword ptr [rcx]
0x000000000010dcb4 : xor dh, dh ; ret 0xc707
0x000000000015cd29 : xor dh, dl ; jmp rax
0x0000000000191280 : xor dl, ah ; clc ; jmp qword ptr [rbx]
0x00000000000dd591 : xor dl, bh ; dec dword ptr [rbp + rcx*4 + 0x24] ; sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x000000000015cd25 : xor dl, dh ; inc dword ptr [rax] ; xor dh, dl ; jmp rax
0x000000000002bb8f : xor dword ptr [rax + 0x39], ecx ; ror byte ptr [rax - 0x39], 1 ; ret 0xffff
0x00000000000e6b96 : xor dword ptr [rax + 0x88], edi ; syscall
0x000000000004c8ad : xor dword ptr [rax - 0x77], ecx ; ror dword ptr [rax - 0x77], 1 ; ret 0xc7e9
0x000000000008e8bb : xor dword ptr [rax - 0x7c], eax ; div byte ptr [rbp - 0x11] ; mov qword ptr [rdx], rcx ; ret
0x0000000000159516 : xor dword ptr [rax - 0x7d993651], ebp ; retf -0x1b6a
0x00000000000d4579 : xor dword ptr [rax - 0x7d], ecx ; ret
0x0000000000173bfd : xor dword ptr [rax], eax ; add al, dh ; and ch, ah ; call qword ptr [rcx]
0x00000000000e99e1 : xor dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x0000000000173b65 : xor dword ptr [rax], eax ; add byte ptr [rax], bl ; and ch, ah ; call qword ptr [rcx]
0x000000000007d13c : xor dword ptr [rax], eax ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x000000000007d1c8 : xor dword ptr [rax], eax ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000834cc : xor dword ptr [rax], eax ; add rsp, 0x100 ; ret
0x0000000000082748 : xor dword ptr [rax], eax ; add rsp, 8 ; ret
0x000000000007ae03 : xor dword ptr [rax], eax ; mov qword ptr [rax], rdi ; ret
0x00000000000826ff : xor dword ptr [rax], eax ; mov qword ptr [rip + 0x319180], rax ; ret
0x000000000007e2ad : xor dword ptr [rax], eax ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x0000000000082706 : xor dword ptr [rax], eax ; ret
0x000000000007c364 : xor dword ptr [rax], eax ; test eax, eax ; js 0x7c377 ; ret
0x00000000000776a3 : xor dword ptr [rcx + 0x32], eax ; add byte ptr [rbx - 0x4e], dh ; ret
0x00000000000e91b1 : xor dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x00000000000832a6 : xor dword ptr [rdi], ecx ; mov dh, 0x75 ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000014a034 : xor dword ptr [rip - 0x7cb800], esp ; add dword ptr [rdi + 3], esi ; ret
0x000000000009b8eb : xor dword ptr [rsi + 0x3948002f], ebp ; ret
0x000000000003fada : xor eax, 0x1004c600 ; add bl, dh ; ret
0x000000000003f1d0 : xor eax, 0x1cb ; call rax
0x00000000000e0363 : xor eax, 0x20 ; mov qword ptr [rsi + 0x48], rax ; ret
0x000000000011d8b7 : xor eax, 0x280864 ; xor eax, eax ; syscall
0x0000000000173f0d : xor eax, 0x2a100000 ; in al, dx ; jmp qword ptr [rdx]
0x0000000000173fcd : xor eax, 0x2a700000 ; in al, dx ; call qword ptr [rsi]
0x0000000000068b3b : xor eax, 0x30 ; call rax
0x000000000007aefb : xor eax, 0x3208d8 ; xor eax, eax ; ret
0x000000000005d538 : xor eax, 0x33ba33 ; call rax
0x0000000000055490 : xor eax, 0x343adb ; call rax
0x0000000000054e54 : xor eax, 0x344117 ; call rax
0x00000000000522a0 : xor eax, 0x346ccb ; call rax
0x0000000000049dec : xor eax, 0x34f17f ; call rax
0x0000000000046fc0 : xor eax, 0x351fab ; call rax
0x0000000000071681 : xor eax, 0x39480000 ; ret
0x0000000000146ed3 : xor eax, 0x48000002 ; mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000dadc7 : xor eax, 0x48fffff6 ; add esp, 0x18 ; ret
0x0000000000033c9a : xor eax, 0x53e7058b ; add byte ptr ss:[rcx], bh ; ret 0x237f
0x00000000000eb2c2 : xor eax, 0x6601c083 ; mov dword ptr [rdx], eax ; ret
0x000000000010ce71 : xor eax, 0x8948fff7 ; ret 0x8948
0x0000000000026654 : xor eax, 0x89fffffe ; ret 0xe283
0x000000000010c6f7 : xor eax, 0x8b000001 ; adc byte ptr [rdi], cl ; retf -0x2877
0x000000000003fc65 : xor eax, 0x8b486400 ; add byte ptr [rax - 0x77], cl ; ret 0xde8
0x000000000016fdbd : xor eax, 0x94140002 ; cli ; jmp rsp
0x0000000000183f75 : xor eax, 0xcd680001 ; cmc ; call rdi
0x0000000000183fdd : xor eax, 0xce500001 ; cmc ; jmp qword ptr [rcx]
0x0000000000002481 : xor eax, 0xdd410018 ; out 0xa9, al ; ret 0xbd07
0x000000000003f26d : xor eax, 0xe2d8300 ; ret 0x35
0x0000000000075b35 : xor eax, 0xffffe2d6 ; call rax
0x0000000000075665 : xor eax, 0xffffe7a6 ; call rax
0x00000000000485c9 : xor eax, 0xfffff9d2 ; add rax, rsi ; jmp rax
0x000000000007438b : xor eax, 0xfffffa80 ; call rax
0x0000000000074143 : xor eax, 0xfffffcc8 ; call rax
0x0000000000068e25 : xor eax, 0xfffffd46 ; call rax
0x00000000000202fc : xor eax, dword ptr [0x30] ; call rax
0x000000000002c6c2 : xor eax, dword ptr [0x30] ; jmp rax
0x0000000000046f86 : xor eax, dword ptr [0x30] ; xor esi, esi ; call rax
0x0000000000118d45 : xor eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000e9aa1 : xor eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000173dc5 : xor eax, dword ptr [rax] ; add byte ptr [rax], bh ; in al, dx ; jmp rsp
0x000000000005d53b : xor eax, dword ptr [rax] ; call rax
0x0000000000183dad : xor eax, dword ptr [rcx] ; add al, dh ; retf -0xb
0x0000000000183dcd : xor eax, dword ptr [rcx] ; add byte ptr [rax], al ; retf
0x00000000000ea303 : xor eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x0000000000183de5 : xor eax, dword ptr [rcx] ; add byte ptr [rax], cl ; retf
0x000000000016d355 : xor eax, dword ptr [rcx] ; add byte ptr [rcx + rbx*8], dh ; call rsp
0x000000000016fd6d : xor eax, dword ptr [rdx] ; add byte ptr [rsp + rax*4], ah ; cli ; jmp rsp
0x00000000000b3158 : xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000041199 : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000007c52e : xor eax, eax ; add rsp, 0x18 ; ret
0x00000000000ab5c5 : xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000ff498 : xor eax, eax ; add rsp, 0x28 ; ret
0x0000000000114653 : xor eax, eax ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000011fb08 : xor eax, eax ; add rsp, 0x38 ; ret
0x00000000000359dc : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000033470 : xor eax, eax ; add rsp, 8 ; pop rbx ; ret
0x000000000007bdbf : xor eax, eax ; add rsp, 8 ; ret
0x000000000002c1c0 : xor eax, eax ; and edi, 0xffffff80 ; sete al ; ret
0x0000000000112896 : xor eax, eax ; call 0x4f364
0x000000000006e6fa : xor eax, eax ; call rbx
0x0000000000118340 : xor eax, eax ; call rdx
0x0000000000035f66 : xor eax, eax ; cmp byte ptr [rdi], 0 ; jne 0x35f78 ; pop rbx ; ret
0x00000000000c5d04 : xor eax, eax ; cmp cl, byte ptr [rsi] ; je 0xc5ca0 ; ret
0x00000000000ebcbb : xor eax, eax ; cmp edi, 9 ; setbe al ; ret
0x00000000000bd083 : xor eax, eax ; cmp edx, 1 ; sete al ; ret
0x00000000000c2f73 : xor eax, eax ; cmp edx, dword ptr [rsi + 4] ; je 0xc2f88 ; ret
0x00000000000e5469 : xor eax, eax ; cmp qword ptr [rsi], 0 ; je 0xe5481 ; ret
0x00000000000e0efe : xor eax, eax ; cmp rdi, rdx ; ja 0xe0f38 ; ret
0x0000000000117e8c : xor eax, eax ; cmp rdx, rcx ; je 0x117ea8 ; ret
0x00000000000f4ed7 : xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x00000000000c9df8 : xor eax, eax ; jmp 0xc9dc2
0x000000000010c960 : xor eax, eax ; jmp rcx
0x00000000000f5ea5 : xor eax, eax ; leave ; ret
0x000000000010390d : xor eax, eax ; mov dword ptr [rdi + 0xc], edx ; mov qword ptr [rsi], rdi ; ret
0x00000000000e04f0 : xor eax, eax ; mov dword ptr [rdi + 8], esi ; ret
0x0000000000036532 : xor eax, eax ; mov qword ptr [rdi + 8], rdx ; ret
0x00000000001038c4 : xor eax, eax ; mov qword ptr [rdi], rsi ; ret
0x000000000008e8d8 : xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x00000000000f5d01 : xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x0000000000082815 : xor eax, eax ; mov rdi, rbp ; call 0x4f247
0x00000000000e7358 : xor eax, eax ; mov rsi, rbp ; syscall
0x0000000000110ef7 : xor eax, eax ; mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x0000000000036c20 : xor eax, eax ; mov word ptr [rdi + 2], dx ; ret
0x00000000000ef7bf : xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000890f7 : xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000b90ea : xor eax, eax ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000010a932 : xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x000000000010c07f : xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x000000000002238b : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000a7d25 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000028c0a : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000224d7 : xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000031a36 : xor eax, eax ; pop rbx ; ret
0x00000000001043b5 : xor eax, eax ; rep stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x0000000000033906 : xor eax, eax ; ret
0x000000000008f7be : xor eax, eax ; sub eax, ecx ; ret
0x000000000002a96c : xor eax, eax ; syscall
0x0000000000070840 : xor eax, eax ; test byte ptr [rdi], 4 ; sete al ; ret
0x0000000000070850 : xor eax, eax ; test byte ptr [rdi], 8 ; sete al ; ret
0x00000000000f4e92 : xor eax, eax ; test edx, edx ; sete al ; ret
0x0000000000036878 : xor eax, ecx ; ret
0x0000000000035ee7 : xor eax, edx ; sub eax, edx ; ret
0x0000000000035efb : xor eax, edx ; sub rax, rdx ; ret
0x000000000002c9c0 : xor ebp, ebp ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e8d09 : xor ebp, ebp ; pop rax ; pop rdi ; call rax
0x0000000000002897 : xor ebp, edi ; out dx, al ; retf 0x182c
0x0000000000174239 : xor ebp, esp ; call qword ptr [rax]
0x0000000000174251 : xor ebp, esp ; call qword ptr [rdx]
0x000000000015d0b9 : xor ebx, 0xf38110ff ; jmp qword ptr [rax]
0x000000000015d0a9 : xor ebx, 0xf38130ff ; jmp rax
0x000000000015d0e5 : xor ebx, 0xf381c0ff ; call rax
0x000000000015d0e9 : xor ebx, 0xf381d0ff ; jmp rax
0x000000000015d0f5 : xor ebx, 0xf38200ff ; jmp qword ptr [rax]
0x00000000000677bc : xor ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000089ab9 : xor ebx, dword ptr [rbx - 0x76b70001] ; ret 0xc031
0x000000000007d83a : xor ebx, ebx ; add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x0000000000029336 : xor ebx, ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000646c0 : xor ebx, ebx ; mov rax, rbx ; pop rbx ; ret
0x00000000000e2125 : xor ecx, dword ptr [rax - 0x77] ; ret
0x000000000008ae45 : xor ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000023fbd : xor ecx, dword ptr [rax - 0x7d] ; rol byte ptr [rax + rcx*2], 0x83 ; ret
0x00000000000ce45c : xor ecx, dword ptr [rax - 0x7d] ; rol byte ptr [rcx], 0x83 ; ret 0x4801
0x000000000007e2fc : xor ecx, dword ptr [rcx + rcx*4 - 0x31] ; call rcx
0x00000000000325e0 : xor ecx, ecx ; addsd xmm0, xmm0 ; mov dword ptr [rdi], ecx ; ret
0x000000000002873b : xor ecx, ecx ; call r15
0x00000000000ecc40 : xor ecx, ecx ; mov ecx, 0x400 ; call 0x108e79
0x000000000004721b : xor ecx, ecx ; mov edx, 1 ; jmp rax
0x000000000009b53e : xor ecx, ecx ; xor edx, edx ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x00000000000fc1e9 : xor ecx, ecx ; xor edx, edx ; mov r8d, r13d ; call 0x108ce9
0x000000000016cad9 : xor ecx, esi ; call rsp
0x00000000001083ec : xor edi, dword ptr [0x30] ; call rax
0x00000000000c0124 : xor edi, dword ptr [rcx] ; retf
0x000000000018db31 : xor edi, eax ; call qword ptr [rdx]
0x0000000000076d89 : xor edi, edi ; call qword ptr [r14]
0x0000000000078ab4 : xor edi, edi ; call qword ptr [rax]
0x00000000000b2e35 : xor edi, edi ; call rax
0x00000000000f5bfe : xor edi, edi ; mov eax, 0xe3 ; syscall
0x00000000000b2e4a : xor edi, edi ; mov eax, 0xe4 ; syscall
0x0000000000020350 : xor edi, edi ; mov eax, edx ; syscall
0x0000000000076d5a : xor edi, edi ; mov r13, rdx ; call qword ptr [r14]
0x000000000002c853 : xor edi, edi ; mov rax, rdi ; add rsp, 0x18 ; ret
0x000000000008b28f : xor edi, edi ; mov rax, rdi ; ret
0x000000000003590f : xor edx, dword ptr [0x30] ; call rdx
0x000000000005f5b5 : xor edx, dword ptr [rax] ; add byte ptr [rax], al ; call 0x9c006
0x0000000000001b10 : xor edx, dword ptr [rdx - 0x7b] ; mov bl, 0xee ; enter 0x59e7, 0x5b ; ret 0x2a63
0x0000000000021163 : xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x00000000000abc91 : xor edx, edx ; add rsp, 8 ; mov rax, rdx ; ret
0x0000000000108fd5 : xor edx, edx ; call rax
0x000000000005995e : xor edx, edx ; jmp 0x55c48
0x0000000000074f03 : xor edx, edx ; jmp rax
0x000000000009b540 : xor edx, edx ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x00000000000b7ff1 : xor edx, edx ; mov eax, 0x3d ; syscall
0x0000000000020479 : xor edx, edx ; mov eax, 2 ; syscall
0x00000000000da0ad : xor edx, edx ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000008e96d : xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x00000000000fc1eb : xor edx, edx ; mov r8d, r13d ; call 0x108ce7
0x0000000000067480 : xor edx, edx ; mov rax, rdx ; ret
0x0000000000068a9e : xor edx, edx ; mov rsi, r9 ; mov eax, r8d ; syscall
0x0000000000033e80 : xor edx, edx ; mov rsi, rbx ; mov eax, ecx ; syscall
0x00000000000826e3 : xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x00000000000ee047 : xor edx, edx ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000069464 : xor edx, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x00000000000dfc8b : xor edx, edx ; xor esi, esi ; mov eax, 0x118 ; syscall
0x00000000000db186 : xor edx, edx ; xor esi, esi ; mov rdi, rbx ; call rax
0x000000000005e9eb : xor esi, esi ; call 0x9b494
0x0000000000046f8d : xor esi, esi ; call rax
0x0000000000185a21 : xor esi, esi ; jmp qword ptr [rcx]
0x00000000000524ce : xor esi, esi ; jmp rax
0x00000000000dfc8d : xor esi, esi ; mov eax, 0x118 ; syscall
0x00000000000b9cae : xor esi, esi ; mov eax, 2 ; syscall
0x000000000002e5f5 : xor esi, esi ; mov eax, ebx ; syscall
0x00000000000f7888 : xor esi, esi ; mov rax, rsi ; ret
0x000000000003344d : xor esi, esi ; mov rdi, r8 ; mov eax, r9d ; syscall
0x00000000000db188 : xor esi, esi ; mov rdi, rbx ; call rax
0x00000000000f5b21 : xor esi, esi ; movsxd rdi, edx ; syscall
0x00000000000d06ce : xor esi, esi ; ret
0x00000000000dfbc2 : xor esi, esi ; syscall
0x000000000016a459 : xor esp, edi ; jmp rax
0x0000000000103849 : xor esp, esp ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b7ff0 : xor r10d, r10d ; mov eax, 0x3d ; syscall
0x0000000000075e94 : xor r8b, byte ptr [rax] ; ret
0x0000000000103962 : xor r8d, r8d ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000006e6f9 : xor r8d, r8d ; call rbx
0x000000000011302b : xor r9b, bpl ; retf -2
0x00000000000c1296 : xor r9b, byte ptr [rax] ; xor eax, eax ; ret
0x000000000002873a : xor r9d, r9d ; call r15
0x00000000000e0362 : xor rax, 0x20 ; mov qword ptr [rsi + 0x48], rax ; ret
0x00000000000202fb : xor rax, qword ptr [0x30] ; call rax
0x000000000002c6c1 : xor rax, qword ptr [0x30] ; jmp rax
0x0000000000118d44 : xor rax, qword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000202fa : xor rax, qword ptr fs:[0x30] ; call rax
0x000000000002c6c0 : xor rax, qword ptr fs:[0x30] ; jmp rax
0x00000000000807f5 : xor rax, rax ; ret
0x0000000000035efa : xor rax, rdx ; sub rax, rdx ; ret
0x00000000001083eb : xor rdi, qword ptr [0x30] ; call rax
0x00000000001083ea : xor rdi, qword ptr fs:[0x30] ; call rax
0x000000000003590e : xor rdx, qword ptr [0x30] ; call rdx
0x000000000003590d : xor rdx, qword ptr fs:[0x30] ; call rdx
0x00000000000db185 : xor rdx, rdx ; xor esi, esi ; mov rdi, rbx ; call rax
0x000000000016a454 : xor spl, dil ; call qword ptr [rax - 0x1f0003cf]

Unique gadgets found: 24182
